!function(modules) {
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: !1,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = !0;
        return module.exports;
    }
    var installedModules = {};
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.i = function(value) {
        return value;
    };
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) Object.defineProperty(exports, name, {
            configurable: !1,
            enumerable: !0,
            get: getter
        });
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function() {
            return module["default"];
        } : function() {
            return module;
        };
        __webpack_require__.d(getter, "a", getter);
        return getter;
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    __webpack_require__.p = "";
    __webpack_require__(__webpack_require__.s = 667);
}({
    0: function(module, exports, __webpack_require__) {
        var global = __webpack_require__(1), core = __webpack_require__(33), hide = __webpack_require__(22), redefine = __webpack_require__(26), ctx = __webpack_require__(24), $export = function(type, name, source) {
            var key, own, out, exp, IS_FORCED = type & $export.F, IS_GLOBAL = type & $export.G, IS_STATIC = type & $export.S, IS_PROTO = type & $export.P, IS_BIND = type & $export.B, target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {}).prototype, exports = IS_GLOBAL ? core : core[name] || (core[name] = {}), expProto = exports.prototype || (exports.prototype = {});
            if (IS_GLOBAL) source = name;
            for (key in source) {
                own = !IS_FORCED && target && target[key] !== undefined;
                out = (own ? target : source)[key];
                exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && "function" == typeof out ? ctx(Function.call, out) : out;
                if (target) redefine(target, key, out, type & $export.U);
                if (exports[key] != out) hide(exports, key, exp);
                if (IS_PROTO && expProto[key] != out) expProto[key] = out;
            }
        };
        global.core = core;
        $export.F = 1;
        $export.G = 2;
        $export.S = 4;
        $export.P = 8;
        $export.B = 16;
        $export.W = 32;
        $export.U = 64;
        $export.R = 128;
        module.exports = $export;
    },
    1: function(module, exports) {
        var global = module.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        if ("number" == typeof __g) __g = global;
    },
    10: function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(6), IE8_DOM_DEFINE = __webpack_require__(120), toPrimitive = __webpack_require__(32), dP = Object.defineProperty;
        exports.f = __webpack_require__(7) ? Object.defineProperty : function(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, !0);
            anObject(Attributes);
            if (IE8_DOM_DEFINE) try {
                return dP(O, P, Attributes);
            } catch (e) {}
            if ("get" in Attributes || "set" in Attributes) throw TypeError("Accessors not supported!");
            if ("value" in Attributes) O[P] = Attributes.value;
            return O;
        };
    },
    101: function(module, exports) {
        exports.f = Object.getOwnPropertySymbols;
    },
    102: function(module, exports, __webpack_require__) {
        var global = __webpack_require__(1), store = global["__core-js_shared__"] || (global["__core-js_shared__"] = {});
        module.exports = function(key) {
            return store[key] || (store[key] = {});
        };
    },
    104: function(module, exports, __webpack_require__) {
        var defer, channel, port, ctx = __webpack_require__(24), invoke = __webpack_require__(97), html = __webpack_require__(119), cel = __webpack_require__(94), global = __webpack_require__(1), process = global.process, setTask = global.setImmediate, clearTask = global.clearImmediate, MessageChannel = global.MessageChannel, counter = 0, queue = {}, run = function() {
            var id = +this;
            if (queue.hasOwnProperty(id)) {
                var fn = queue[id];
                delete queue[id];
                fn();
            }
        }, listener = function(event) {
            run.call(event.data);
        };
        if (!setTask || !clearTask) {
            setTask = function(fn) {
                for (var args = [], i = 1; arguments.length > i; ) args.push(arguments[i++]);
                queue[++counter] = function() {
                    invoke("function" == typeof fn ? fn : Function(fn), args);
                };
                defer(counter);
                return counter;
            };
            clearTask = function(id) {
                delete queue[id];
            };
            if ("process" == __webpack_require__(20)(process)) defer = function(id) {
                process.nextTick(ctx(run, id, 1));
            }; else if (MessageChannel) {
                channel = new MessageChannel();
                port = channel.port2;
                channel.port1.onmessage = listener;
                defer = ctx(port.postMessage, port, 1);
            } else if (global.addEventListener && "function" == typeof postMessage && !global.importScripts) {
                defer = function(id) {
                    global.postMessage(id + "", "*");
                };
                global.addEventListener("message", listener, !1);
            } else if ("onreadystatechange" in cel("script")) defer = function(id) {
                html.appendChild(cel("script")).onreadystatechange = function() {
                    html.removeChild(this);
                    run.call(id);
                };
            }; else defer = function(id) {
                setTimeout(ctx(run, id, 1), 0);
            };
        }
        module.exports = {
            set: setTask,
            clear: clearTask
        };
    },
    11: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.WshShell = exports.objShell = undefined;
        var _WshShell = __webpack_require__(77), _WshShell2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_WshShell);
        exports.objShell = new ActiveXObject("Shell.Application");
        exports.WshShell = _WshShell2["default"];
    },
    115: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.wrap = exports.base = undefined;
        var _localFiles = __webpack_require__(15), _fso = __webpack_require__(9), base = exports.base = "http://download.drp.su/updates/beetle";
        exports.wrap = function(download, isAsync) {
            return function(fileName) {
                var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "tools", url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : base + "/" + fileName, seed = Math.random().toString(36).slice(2, 10), filePath = dir + "\\" + seed + ".part", dest = dir + "\\" + fileName, failover = function(err) {
                    if (0 === url.indexOf("http://download.drp.su")) {
                        url = url.replace("http://download.drp.su", "http://download.driverpacks.net");
                        return download(url, filePath);
                    } else throw err;
                }, finalize = function() {
                    if (!0 === _fso.fso.FileExists(dest)) _fso.fso.DeleteFile(dest);
                    _fso.fso.MoveFile(filePath, dest);
                };
                (0, _localFiles.ensurePath)(dir);
                if (isAsync) return download(url, filePath)["catch"](failover).then(finalize); else {
                    try {
                        download(url, filePath);
                    } catch (err) {
                        failover(err);
                    }
                    finalize();
                }
            };
        };
    },
    116: function(module, exports, __webpack_require__) {
        "use strict";
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }
        exports.__esModule = !0;
        exports.getDevicesStatus = exports.getDevicesCount = exports.getHardware = undefined;
        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
            }
            return target;
        }, _wmi = __webpack_require__(13), _iterate = __webpack_require__(68), _iterate2 = _interopRequireDefault(_iterate), _getDeviceProblem = __webpack_require__(134), _getDeviceProblem2 = _interopRequireDefault(_getDeviceProblem), re1 = /^(.*(?:VEN|VID).*(?:DEV|PID).*?)(?=&|\\|$).*?(?=\\|$)/, re2 = /^((?:ACPI\\(?:IO|FUJITSU)|.*?(?!\\(?:IO|FUJITSU)\\))\\.*?)\\.*/, remap = function(_ref) {
            return {
                deviceId: _ref.DeviceID,
                status: _ref.Status,
                statusCode: _ref.ConfigManagerErrorCode,
                classGuid: _ref.ClassGuid
            };
        };
        exports.getHardware = function() {
            var DevicecolItems = _wmi.objWMIService.ExecQuery("SELECT * FROM  Win32_PnPEntity", "WQL"), DeviceenumItems = new Enumerator(DevicecolItems);
            DeviceenumItems.moveFirst();
            for (var DriverPackInstalled = [], i = 0; !1 === DeviceenumItems.atEnd(); i++) !function(i) {
                var deviceItem = DeviceenumItems.item(), hardwareId = [];
                if (deviceItem.HardWareID !== undefined && null !== deviceItem.HardWareID && deviceItem.HardWareID.toArray) for (var h = 0; h < deviceItem.HardWareID.toArray().length; h++) hardwareId.push(deviceItem.HardWareID.toArray()[h].toString().toUpperCase()); else if (deviceItem.DeviceID) {
                    var id = deviceItem.DeviceID.toUpperCase().replace(/^\*\s*/, "ACPI\\").replace(/^ACPI\\VEN_([0-9A-Z]+)&DEV_([0-9A-Z]+)/, "ACPI\\$1$2"), m = re1.exec(id);
                    if (m) {
                        for (var parts = m[0].slice(m[1].length + 1).split("&"), hwid = m[1], p = 0; p < parts.length; p++) {
                            hwid += "&" + parts[p];
                            hardwareId.push(hwid);
                        }
                        parts.forEach(function(part) {
                            hwid += "&" + part;
                            hardwareId.push(hwid);
                        });
                    } else hardwareId.push(id.replace(re2, "$1"));
                }
                DriverPackInstalled.push(_extends({}, remap(deviceItem), {
                    hardwareId: hardwareId
                }));
                DeviceenumItems.moveNext();
            }();
            return DriverPackInstalled;
        }, exports.getDevicesCount = function(_ref2) {
            var status = _ref2.status, errCode = _ref2.errCode, filterBroken = _ref2.filterBroken, query = "SELECT DeviceID FROM Win32_PnPEntity", whereParts = [];
            if (status) whereParts.push('Status = "' + status + '"');
            if (errCode) {
                if (errCode.min) whereParts.push("ConfigManagerErrorCode >= " + errCode.min);
                if (errCode.max) whereParts.push("ConfigManagerErrorCode <= " + errCode.max);
            }
            if (whereParts.length > 0) query = query + " WHERE " + whereParts.join(" AND ");
            var DevicecolItems = _wmi.objWMIService.ExecQuery(query, "WQL");
            if (!filterBroken) return DevicecolItems.Count;
            var res = 0, DeviceenumItems = new Enumerator(DevicecolItems);
            DeviceenumItems.moveFirst();
            for (var i = 0; !1 === DeviceenumItems.atEnd(); i++) {
                var DeviceID = DeviceenumItems.item().DeviceID;
                if (DeviceID && !(0, _getDeviceProblem2["default"])(DeviceID)) res++;
                DeviceenumItems.moveNext();
            }
            return res;
        }, exports.getDevicesStatus = function(hwids) {
            var where = hwids.map(function(deviceId) {
                return "(DeviceID=" + JSON.stringify(deviceId) + ")";
            }).join(" OR "), query = "SELECT * FROM  Win32_PnPEntity" + (where ? " WHERE " + where : ""), res = [];
            (0, _iterate2["default"])(_wmi.objWMIService.ExecQuery(query, "WQL"), function(item) {
                res.push(_extends({}, remap(item)));
            });
            return res;
        };
    },
    117: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var appleNotebooks = __webpack_require__(169), badNotebooks = __webpack_require__(170);
        exports.appleNotebooks = appleNotebooks;
        exports.badNotebooks = badNotebooks;
        exports["default"] = function(_ref) {
            var _ref$Vendor = _ref.Vendor, Vendor = _ref$Vendor === undefined ? "Noname" : _ref$Vendor, _ref$Name = _ref.Name, Name = _ref$Name === undefined ? "Unknown" : _ref$Name, Version = _ref.Version;
            Name = Name.trim();
            Vendor = Vendor.toLowerCase();
            var Models = [];
            switch (Vendor) {
              case "lenovo":
                Version = Version ? Version.trim() : "";
                Models = [ Version.replace(/^lenovo[\s-]*/i, "") ];
                break;

              case "sony":
                Models = [ "VAIO " + Name ];
                break;

              case "samsung":
              case "bangho":
              case "clevo":
              case "quanta":
                Models = Name.split("/");
                break;

              case "msi":
                Models = Name.split("/").map(function(name) {
                    return name.replace(/^msi notebook[\s-]*/i, "");
                });
                break;

              case "apple":
                Models = appleNotebooks[Name] || [ Name ];
                break;

              case "dell":
                Models = [ Name.replace(/^dell system[\s-]*/i, "").replace(/^dell[\s-]*/i, "") ];
                break;

              case "emachines":
                Models = [ Name.replace(/^emachines[\s-]*/i, "") ];
                break;

              case "hp":
                Models = [ Name.replace(/^hp[\s-]*/i, "").replace(/[\s-]*notebook pc/i, "").replace(/notebook[\s-]*$/i, "") ];
                break;

              case "toshiba":
                Models = [ Name.replace(/^toshiba[\s-]*/i, "") ];
                break;

              case "nec":
                Models = [ Name.replace(/^nec[\s-]*/i, "") ];
                break;

              case "hcl":
                Models = [ Name.replace(/^hcl[\s-]*/i, "") ];
                break;

              case "casper":
                Models = [ Name.replace(/^casper[\s-]*/i, "").replace(/[\s-]*notebook$/i, "") ];
                break;

              case "alienware":
                Models = [ Name.replace(/^alienware[\s-]*/i, "") ];
                break;

              case "axioo":
                Models = [ Name.replace(/[\s-]*model$/i, "") ];
                break;

              case "depo":
                Models = [ Name.replace(/^depo[\s-]*/i, "") ];
                break;

              case "fujitsu":
                Models = [ Name.replace(/[\s-]*notebook[\s-]*/i, "") ];
                break;

              case "gateway":
                Models = [ Name.replace(/^gateway[\s-]*/i, "") ];
                break;

              case "positivo":
                Models = [ Name.replace(/^positivo[\s-]*/i, "") ];
                break;

              case "vestel":
                Models = [ Name.replace(/^vestel[\s-]*/i, "") ];
                break;

              case "vit":
                Models = [ Name.replace(/^vit[\s-]*/i, "") ];
                break;

              case "aquarius":
                Models = [ Name.replace(/^aquarius[\s-]*/i, "") ];
                break;

              case "archos":
                Models = [ Name.replace(/^archos[\s-]*/i, "") ];
                break;

              case "zoostorm":
                Models = [ Name.replace(/^zoostorm[\s-]*/i, "") ];
                break;

              case "zyrex":
                Models = [ Name.replace(/^zyrex[\s-]*/i, "") ];
                break;

              default:
                Models = [ Name ];
            }
            Models = Models.map(function(model) {
                if (badNotebooks[Vendor] && badNotebooks[Vendor].includes(model)) return "Unknown"; else return model;
            });
            return Models.join("/");
        };
    },
    118: function(module, exports, __webpack_require__) {
        var MATCH = __webpack_require__(3)("match");
        module.exports = function(KEY) {
            var re = /./;
            try {
                "/./"[KEY](re);
            } catch (e) {
                try {
                    re[MATCH] = !1;
                    return !"/./"[KEY](re);
                } catch (f) {}
            }
            return !0;
        };
    },
    119: function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(1).document && document.documentElement;
    },
    12: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.OSCaption = exports.OSVersionSP = exports.OSName = exports.osVersions = exports.OSArchitecture = exports.OSCSDVersion = exports.OSBuild = exports.OSVersion = exports.OSVersionS = exports.arch = exports.is64 = undefined;
        var _WshShell = __webpack_require__(77), _WshShell2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_WshShell), _wmi = __webpack_require__(13), is64 = exports.is64 = "AMD64" === _WshShell2["default"].ExpandEnvironmentStrings("%PROCESSOR_ARCHITECTURE%") || "%PROCESSOR_ARCHITEW6432%" !== _WshShell2["default"].ExpandEnvironmentStrings("%PROCESSOR_ARCHITEW6432%"), _getWMIObjects = (exports.arch = is64 ? "64" : "86", 
        (0, _wmi.getWMIObjects)([ "Version", "CSDVersion", "Caption", "OSArchitecture" ], "Win32_OperatingSystem")), _getWMIObjects$ = _getWMIObjects[0];
        _getWMIObjects$ = _getWMIObjects$ === undefined ? {} : _getWMIObjects$;
        var _getWMIObjects$$Versi = _getWMIObjects$.Version, Version = _getWMIObjects$$Versi === undefined ? "" : _getWMIObjects$$Versi, _getWMIObjects$$CSDVe = _getWMIObjects$.CSDVersion, CSDVersion = _getWMIObjects$$CSDVe === undefined ? "" : _getWMIObjects$$CSDVe, _getWMIObjects$$Capti = _getWMIObjects$.Caption, Caption = _getWMIObjects$$Capti === undefined ? "" : _getWMIObjects$$Capti, _Version$split = Version.split("."), major = _Version$split[0], minor = _Version$split[1], build = _Version$split[2], OSVersionS = exports.OSVersionS = major + "." + minor, OSArchitecture = (exports.OSVersion = parseFloat(OSVersionS) || 5, 
        exports.OSBuild = parseInt(build), exports.OSCSDVersion = CSDVersion, exports.OSArchitecture = OSArchitecture), osVersions = exports.osVersions = {
            "5.0": "2000",
            "5.1": "XP",
            "5.2": "Server 2003",
            "6.0": "Vista",
            "6.1": "7",
            "6.2": "8",
            "6.3": "8.1",
            "6.4": "9",
            "10.0": "10"
        }, m = (exports.OSName = osVersions[OSVersionS] || OSVersionS, CSDVersion && /^Service Pack (\d+)$/i.exec(CSDVersion));
        exports.OSVersionSP = m ? parseInt(m[1], 10) : 0, exports.OSCaption = Caption.replace(/Microsoft /i, "");
    },
    120: function(module, exports, __webpack_require__) {
        module.exports = !__webpack_require__(7) && !__webpack_require__(4)(function() {
            return 7 != Object.defineProperty(__webpack_require__(94)("div"), "a", {
                get: function() {
                    return 7;
                }
            }).a;
        });
    },
    121: function(module, exports, __webpack_require__) {
        var Iterators = __webpack_require__(58), ITERATOR = __webpack_require__(3)("iterator"), ArrayProto = Array.prototype;
        module.exports = function(it) {
            return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
        };
    },
    122: function(module, exports, __webpack_require__) {
        var cof = __webpack_require__(20);
        module.exports = Array.isArray || function(arg) {
            return "Array" == cof(arg);
        };
    },
    123: function(module, exports, __webpack_require__) {
        var has = __webpack_require__(21), toIObject = __webpack_require__(18), arrayIndexOf = __webpack_require__(82)(!1), IE_PROTO = __webpack_require__(125)("IE_PROTO");
        module.exports = function(object, names) {
            var key, O = toIObject(object), i = 0, result = [];
            for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
            for (;names.length > i; ) if (has(O, key = names[i++])) ~arrayIndexOf(result, key) || result.push(key);
            return result;
        };
    },
    124: function(module, exports, __webpack_require__) {
        var getKeys = __webpack_require__(39), toIObject = __webpack_require__(18), isEnum = __webpack_require__(62).f;
        module.exports = function(isEntries) {
            return function(it) {
                for (var key, O = toIObject(it), keys = getKeys(O), length = keys.length, i = 0, result = []; length > i; ) if (isEnum.call(O, key = keys[i++])) result.push(isEntries ? [ key, O[key] ] : O[key]);
                return result;
            };
        };
    },
    125: function(module, exports, __webpack_require__) {
        var shared = __webpack_require__(102)("keys"), uid = __webpack_require__(43);
        module.exports = function(key) {
            return shared[key] || (shared[key] = uid(key));
        };
    },
    126: function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(6), aFunction = __webpack_require__(23), SPECIES = __webpack_require__(3)("species");
        module.exports = function(O, D) {
            var S, C = anObject(O).constructor;
            return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
        };
    },
    127: function(module, exports, __webpack_require__) {
        var isRegExp = __webpack_require__(98), defined = __webpack_require__(25);
        module.exports = function(that, searchString, NAME) {
            if (isRegExp(searchString)) throw TypeError("String#" + NAME + " doesn't accept regex!");
            return String(defined(that));
        };
    },
    128: function(module, exports, __webpack_require__) {
        var classof = __webpack_require__(69), ITERATOR = __webpack_require__(3)("iterator"), Iterators = __webpack_require__(58);
        module.exports = __webpack_require__(33).getIteratorMethod = function(it) {
            if (it != undefined) return it[ITERATOR] || it["@@iterator"] || Iterators[classof(it)];
        };
    },
    13: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.getWMIObjects = exports.objWMIService = exports.ConnectServer = exports.locator = undefined;
        var _iterate = __webpack_require__(68), _iterate2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_iterate), locator = exports.locator = new ActiveXObject("WbemScripting.SWbemLocator"), _ConnectServer = function(namespace, context) {
            if (context) {
                var set = new ActiveXObject("WbemScripting.SWbemNamedValueSet");
                for (var key in context) set.Add(key, context[key]);
                return locator.ConnectServer(null, namespace, null, null, null, null, null, set);
            } else return locator.ConnectServer(null, namespace);
        }, ConnectServer = exports.ConnectServer = function() {
            var wmi = void 0;
            try {
                wmi = _ConnectServer.apply(undefined, arguments);
            } catch (err) {}
            if (!wmi) {
                new ActiveXObject("WScript.Shell").Run("net start winmgmt", 0, !0);
                wmi = _ConnectServer.apply(undefined, arguments);
            }
            return wmi;
        }, objWMIService = exports.objWMIService = ConnectServer("root\\cimv2");
        exports.getWMIObjects = function(names, source, where) {
            var wmi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : objWMIService;
            try {
                var results = [], query = "SELECT * FROM " + source;
                if (where) query += " WHERE " + where;
                var colItems = wmi.ExecQuery(query, "WQL");
                (0, _iterate2["default"])(colItems, function(objItem) {
                    var obj = {};
                    names.forEach(function(name) {
                        try {
                            if (objItem[name] || objItem[name].toArray) if (objItem[name].toArray) obj[name] = objItem[name].toArray(); else obj[name] = objItem[name];
                        } catch (e) {}
                    });
                    results.push(obj);
                });
                return results;
            } catch (e) {
                return [];
            }
        };
    },
    134: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports["default"] = function() {
            var deviceId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
            if (/FAILURE|UNKNOWN|VID_0000/i.test(deviceId)) return "usb_connection"; else if (/ROOT\\LEGACY_.+/i.test(deviceId)) return "root_legacy"; else if (/TAP.+|PTUN.+|HAMACHI/i.test(deviceId)) return "vpn_no_need_drivers"; else if (/\*6TO4MP|BTH\\MS_.+/i.test(deviceId)) return "damaged_system_driver"; else if (deviceId.includes("WPDBUSENUMROOT\\UMB")) return "usb_unknown_vendor"; else if (deviceId.includes("HDAUDIO\\FUNC_FF&VEN_9FFF&DEV_FFFF&SUBSYS_1FFFFFFF&REV_FFFF")) return "sound_card"; else if (/\*ISATAP|\*TEREDO/i.test(deviceId)) return "unknown_problem"; else return "";
        };
        module.exports = exports["default"];
    },
    135: function(module, exports, __webpack_require__) {
        "use strict";
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }
        function getModel() {
            var _getWMIObjects = (0, _wmi.getWMIObjects)([ "Manufacturer", "Model", "Caption" ], "Win32_ComputerSystem"), _getWMIObjects$ = _getWMIObjects[0], pc = _getWMIObjects$ === undefined ? {} : _getWMIObjects$, _getWMIObjects2 = (0, 
            _wmi.getWMIObjects)([ "Vendor", "Name", "Version" ], "Win32_ComputerSystemProduct"), _getWMIObjects2$ = _getWMIObjects2[0], csp = _getWMIObjects2$ === undefined ? {} : _getWMIObjects2$, _getWMIObjects3 = (0, 
            _wmi.getWMIObjects)([ "Product", "Version", "Manufacturer" ], "Win32_BaseBoard"), _getWMIObjects3$ = _getWMIObjects3[0], bb = _getWMIObjects3$ === undefined ? {} : _getWMIObjects3$, type = (0, 
            _getPCType2["default"])(csp), vendor = "Notebook" === type ? (0, _getNotebookVendor2["default"])(csp.Vendor) : (0, 
            _trimVendorName2["default"])(csp.Vendor, "Noname", !1);
            return {
                type: type,
                vendor: vendor,
                name: "Notebook" === type ? (0, _getNotebookModel2["default"])(Object.assign({}, csp, {
                    Vendor: vendor
                })) : pc.Caption,
                info: {
                    computerSystem: pc,
                    computerSystemProduct: csp,
                    baseBoard: bb
                }
            };
        }
        exports.__esModule = !0;
        exports.getModel = getModel;
        var _wmi = __webpack_require__(13), _trimVendorName = __webpack_require__(76), _trimVendorName2 = _interopRequireDefault(_trimVendorName), _getPCType = __webpack_require__(173), _getPCType2 = _interopRequireDefault(_getPCType), _getNotebookVendor = __webpack_require__(91), _getNotebookVendor2 = _interopRequireDefault(_getNotebookVendor), _getNotebookModel = __webpack_require__(117), _getNotebookModel2 = _interopRequireDefault(_getNotebookModel);
    },
    138: function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(6);
        module.exports = function(iterator, fn, value, entries) {
            try {
                return entries ? fn(anObject(value)[0], value[1]) : fn(value);
            } catch (e) {
                var ret = iterator["return"];
                if (ret !== undefined) anObject(ret.call(iterator));
                throw e;
            }
        };
    },
    139: function(module, exports, __webpack_require__) {
        var global = __webpack_require__(1), macrotask = __webpack_require__(104).set, Observer = global.MutationObserver || global.WebKitMutationObserver, process = global.process, Promise = global.Promise, isNode = "process" == __webpack_require__(20)(process);
        module.exports = function() {
            var head, last, notify, flush = function() {
                var parent, fn;
                if (isNode && (parent = process.domain)) parent.exit();
                for (;head; ) {
                    fn = head.fn;
                    head = head.next;
                    try {
                        fn();
                    } catch (e) {
                        if (head) notify(); else last = undefined;
                        throw e;
                    }
                }
                last = undefined;
                if (parent) parent.enter();
            };
            if (isNode) notify = function() {
                process.nextTick(flush);
            }; else if (Observer) {
                var toggle = !0, node = document.createTextNode("");
                new Observer(flush).observe(node, {
                    characterData: !0
                });
                notify = function() {
                    node.data = toggle = !toggle;
                };
            } else if (Promise && Promise.resolve) {
                var promise = Promise.resolve();
                notify = function() {
                    promise.then(flush);
                };
            } else notify = function() {
                macrotask.call(global, flush);
            };
            return function(fn) {
                var task = {
                    fn: fn,
                    next: undefined
                };
                if (last) last.next = task;
                if (!head) {
                    head = task;
                    notify();
                }
                last = task;
            };
        };
    },
    14: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.ProgramFiles = exports.AppFolder = exports.localAppData = exports.MyDocuments = exports.AppData = undefined;
        var _shell = __webpack_require__(11), _config = __webpack_require__(89), _os = __webpack_require__(12), AppData = exports.AppData = _shell.WshShell.SpecialFolders("AppData");
        exports.MyDocuments = _shell.WshShell.SpecialFolders("MyDocuments"), exports.localAppData = _shell.objShell.NameSpace(28).Self.Path, 
        exports.AppFolder = AppData + "\\" + _config.application.AppFolder, exports.ProgramFiles = _os.is64 ? _shell.WshShell.ExpandEnvironmentStrings("%PROGRAMFILES(x86)%") : _shell.WshShell.ExpandEnvironmentStrings("%PROGRAMFILES%");
    },
    140: function(module, exports, __webpack_require__) {
        var dP = __webpack_require__(10), anObject = __webpack_require__(6), getKeys = __webpack_require__(39);
        module.exports = __webpack_require__(7) ? Object.defineProperties : function(O, Properties) {
            anObject(O);
            for (var P, keys = getKeys(Properties), length = keys.length, i = 0; length > i; ) dP.f(O, P = keys[i++], Properties[P]);
            return O;
        };
    },
    142: function(module, exports, __webpack_require__) {
        var toIObject = __webpack_require__(18), gOPN = __webpack_require__(60).f, toString = {}.toString, windowNames = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], getWindowNames = function(it) {
            try {
                return gOPN(it);
            } catch (e) {
                return windowNames.slice();
            }
        };
        module.exports.f = function(it) {
            return windowNames && "[object Window]" == toString.call(it) ? getWindowNames(it) : gOPN(toIObject(it));
        };
    },
    15: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.ensurePath = exports.isFileOverdue = exports.queryFile = exports.deleteFile = exports.createFile = undefined;
        var _fso = __webpack_require__(9), isFileOverdue = (exports.createFile = function(path, fileName, fileContent) {
            ensurePath(path);
            var FSfile = _fso.fso.OpenTextFile(path + fileName, 2, !0, -1);
            FSfile.WriteLine(fileContent);
            FSfile.Close();
        }, exports.deleteFile = function(fullPath) {
            if (!0 === _fso.fso.FileExists(fullPath)) _fso.fso.DeleteFile(fullPath);
        }, exports.queryFile = function(fullPath, overdueInterval) {
            if (_fso.fso.FileExists(fullPath) && _fso.fso.GetFile(fullPath).Size > 0) if (overdueInterval && isFileOverdue(fullPath, overdueInterval)) throw new Error("File is overdue"); else {
                var file = _fso.fso.OpenTextFile(fullPath, 1, !0, -1), data = file.ReadAll();
                file.Close();
                return data;
            } else throw new Error("File is not found");
        }, exports.isFileOverdue = function(fullPath, overdueInterval) {
            if (!0 === _fso.fso.FileExists(fullPath)) {
                if (new Date().getTime() - _fso.fso.GetFile(fullPath).DateLastModified > overdueInterval) return !0; else return !1;
            } else return !0;
        }), ensurePath = exports.ensurePath = function(path) {
            for (var parts = path.split("\\"), stack = []; parts.length > 0; ) {
                var current = parts.join("\\");
                if (parts.pop()) if (_fso.fso.FolderExists(current)) break; else stack.push(current);
            }
            for (;stack.length > 0; ) {
                var _current = stack.pop();
                if (!_fso.fso.FolderExists(_current)) _fso.fso.CreateFolder(_current);
            }
            return path;
        };
    },
    156: function(module, exports, __webpack_require__) {
        "use strict";
        var $export = __webpack_require__(0), $find = __webpack_require__(45)(5), forced = !0;
        if ("find" in []) Array(1).find(function() {
            forced = !1;
        });
        $export($export.P + $export.F * forced, "Array", {
            find: function(callbackfn) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(56)("find");
    },
    157: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0);
        $export($export.S + $export.F, "Object", {
            assign: __webpack_require__(185)
        });
    },
    158: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0);
        $export($export.S + $export.F * !__webpack_require__(7), "Object", {
            defineProperties: __webpack_require__(140)
        });
    },
    159: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0);
        $export($export.S + $export.F * !__webpack_require__(7), "Object", {
            defineProperty: __webpack_require__(10).f
        });
    },
    16: function(module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(42), min = Math.min;
        module.exports = function(it) {
            return it > 0 ? min(toInteger(it), 9007199254740991) : 0;
        };
    },
    160: function(module, exports, __webpack_require__) {
        var toIObject = __webpack_require__(18), $getOwnPropertyDescriptor = __webpack_require__(29).f;
        __webpack_require__(30)("getOwnPropertyDescriptor", function() {
            return function(it, key) {
                return $getOwnPropertyDescriptor(toIObject(it), key);
            };
        });
    },
    161: function(module, exports, __webpack_require__) {
        __webpack_require__(30)("getOwnPropertyNames", function() {
            return __webpack_require__(142).f;
        });
    },
    162: function(module, exports, __webpack_require__) {
        "use strict";
        var Internal, GenericPromiseCapability, Wrapper, LIBRARY = __webpack_require__(59), global = __webpack_require__(1), ctx = __webpack_require__(24), classof = __webpack_require__(69), $export = __webpack_require__(0), isObject = __webpack_require__(5), aFunction = __webpack_require__(23), anInstance = __webpack_require__(81), forOf = __webpack_require__(96), speciesConstructor = __webpack_require__(126), task = __webpack_require__(104).set, microtask = __webpack_require__(139)(), TypeError = global.TypeError, process = global.process, $Promise = global.Promise, process = global.process, isNode = "process" == classof(process), empty = function() {}, USE_NATIVE = !!function() {
            try {
                var promise = $Promise.resolve(1), FakePromise = (promise.constructor = {})[__webpack_require__(3)("species")] = function(exec) {
                    exec(empty, empty);
                };
                return (isNode || "function" == typeof PromiseRejectionEvent) && promise.then(empty) instanceof FakePromise;
            } catch (e) {}
        }(), sameConstructor = function(a, b) {
            return a === b || a === $Promise && b === Wrapper;
        }, isThenable = function(it) {
            var then;
            return isObject(it) && "function" == typeof (then = it.then) ? then : !1;
        }, newPromiseCapability = function(C) {
            return sameConstructor($Promise, C) ? new PromiseCapability(C) : new GenericPromiseCapability(C);
        }, PromiseCapability = GenericPromiseCapability = function(C) {
            var resolve, reject;
            this.promise = new C(function($$resolve, $$reject) {
                if (resolve !== undefined || reject !== undefined) throw TypeError("Bad Promise constructor");
                resolve = $$resolve;
                reject = $$reject;
            });
            this.resolve = aFunction(resolve);
            this.reject = aFunction(reject);
        }, perform = function(exec) {
            try {
                exec();
            } catch (e) {
                return {
                    error: e
                };
            }
        }, notify = function(promise, isReject) {
            if (!promise._n) {
                promise._n = !0;
                var chain = promise._c;
                microtask(function() {
                    for (var value = promise._v, ok = 1 == promise._s, i = 0; chain.length > i; ) !function(reaction) {
                        var result, then, handler = ok ? reaction.ok : reaction.fail, resolve = reaction.resolve, reject = reaction.reject, domain = reaction.domain;
                        try {
                            if (handler) {
                                if (!ok) {
                                    if (2 == promise._h) onHandleUnhandled(promise);
                                    promise._h = 1;
                                }
                                if (!0 === handler) result = value; else {
                                    if (domain) domain.enter();
                                    result = handler(value);
                                    if (domain) domain.exit();
                                }
                                if (result === reaction.promise) reject(TypeError("Promise-chain cycle")); else if (then = isThenable(result)) then.call(result, resolve, reject); else resolve(result);
                            } else reject(value);
                        } catch (e) {
                            reject(e);
                        }
                    }(chain[i++]);
                    promise._c = [];
                    promise._n = !1;
                    if (isReject && !promise._h) onUnhandled(promise);
                });
            }
        }, onUnhandled = function(promise) {
            task.call(global, function() {
                var abrupt, handler, console, value = promise._v;
                if (isUnhandled(promise)) {
                    abrupt = perform(function() {
                        if (isNode) process.emit("unhandledRejection", value, promise); else if (handler = global.onunhandledrejection) handler({
                            promise: promise,
                            reason: value
                        }); else if ((console = global.console) && console.error) console.error("Unhandled promise rejection", value);
                    });
                    promise._h = isNode || isUnhandled(promise) ? 2 : 1;
                }
                promise._a = undefined;
                if (abrupt) throw abrupt.error;
            });
        }, isUnhandled = function(promise) {
            if (1 == promise._h) return !1;
            for (var reaction, chain = promise._a || promise._c, i = 0; chain.length > i; ) {
                reaction = chain[i++];
                if (reaction.fail || !isUnhandled(reaction.promise)) return !1;
            }
            return !0;
        }, onHandleUnhandled = function(promise) {
            task.call(global, function() {
                var handler;
                if (isNode) process.emit("rejectionHandled", promise); else if (handler = global.onrejectionhandled) handler({
                    promise: promise,
                    reason: promise._v
                });
            });
        }, $reject = function(value) {
            var promise = this;
            if (!promise._d) {
                promise._d = !0;
                promise = promise._w || promise;
                promise._v = value;
                promise._s = 2;
                if (!promise._a) promise._a = promise._c.slice();
                notify(promise, !0);
            }
        }, $resolve = function(value) {
            var then, promise = this;
            if (!promise._d) {
                promise._d = !0;
                promise = promise._w || promise;
                try {
                    if (promise === value) throw TypeError("Promise can't be resolved itself");
                    if (then = isThenable(value)) microtask(function() {
                        var wrapper = {
                            _w: promise,
                            _d: !1
                        };
                        try {
                            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                        } catch (e) {
                            $reject.call(wrapper, e);
                        }
                    }); else {
                        promise._v = value;
                        promise._s = 1;
                        notify(promise, !1);
                    }
                } catch (e) {
                    $reject.call({
                        _w: promise,
                        _d: !1
                    }, e);
                }
            }
        };
        if (!USE_NATIVE) {
            $Promise = function(executor) {
                anInstance(this, $Promise, "Promise", "_h");
                aFunction(executor);
                Internal.call(this);
                try {
                    executor(ctx($resolve, this, 1), ctx($reject, this, 1));
                } catch (err) {
                    $reject.call(this, err);
                }
            };
            Internal = function(executor) {
                this._c = [];
                this._a = undefined;
                this._s = 0;
                this._d = !1;
                this._v = undefined;
                this._h = 0;
                this._n = !1;
            };
            Internal.prototype = __webpack_require__(84)($Promise.prototype, {
                then: function(onFulfilled, onRejected) {
                    var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
                    reaction.ok = "function" == typeof onFulfilled ? onFulfilled : !0;
                    reaction.fail = "function" == typeof onRejected && onRejected;
                    reaction.domain = isNode ? process.domain : undefined;
                    this._c.push(reaction);
                    if (this._a) this._a.push(reaction);
                    if (this._s) notify(this, !1);
                    return reaction.promise;
                },
                "catch": function(onRejected) {
                    return this.then(undefined, onRejected);
                }
            });
            PromiseCapability = function() {
                var promise = new Internal();
                this.promise = promise;
                this.resolve = ctx($resolve, promise, 1);
                this.reject = ctx($reject, promise, 1);
            };
        }
        $export($export.G + $export.W + $export.F * !USE_NATIVE, {
            Promise: $Promise
        });
        __webpack_require__(71)($Promise, "Promise");
        __webpack_require__(70)("Promise");
        Wrapper = __webpack_require__(33).Promise;
        $export($export.S + $export.F * !USE_NATIVE, "Promise", {
            reject: function(r) {
                var capability = newPromiseCapability(this);
                (0, capability.reject)(r);
                return capability.promise;
            }
        });
        $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), "Promise", {
            resolve: function(x) {
                if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
                var capability = newPromiseCapability(this);
                (0, capability.resolve)(x);
                return capability.promise;
            }
        });
        $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(99)(function(iter) {
            $Promise.all(iter)["catch"](empty);
        })), "Promise", {
            all: function(iterable) {
                var C = this, capability = newPromiseCapability(C), resolve = capability.resolve, reject = capability.reject, abrupt = perform(function() {
                    var values = [], index = 0, remaining = 1;
                    forOf(iterable, !1, function(promise) {
                        var $index = index++, alreadyCalled = !1;
                        values.push(undefined);
                        remaining++;
                        C.resolve(promise).then(function(value) {
                            if (!alreadyCalled) {
                                alreadyCalled = !0;
                                values[$index] = value;
                                --remaining || resolve(values);
                            }
                        }, reject);
                    });
                    --remaining || resolve(values);
                });
                if (abrupt) reject(abrupt.error);
                return capability.promise;
            },
            race: function(iterable) {
                var C = this, capability = newPromiseCapability(C), reject = capability.reject, abrupt = perform(function() {
                    forOf(iterable, !1, function(promise) {
                        C.resolve(promise).then(capability.resolve, reject);
                    });
                });
                if (abrupt) reject(abrupt.error);
                return capability.promise;
            }
        });
    },
    163: function(module, exports, __webpack_require__) {
        "use strict";
        var $export = __webpack_require__(0), toLength = __webpack_require__(16), context = __webpack_require__(127), $endsWith = "".endsWith;
        $export($export.P + $export.F * __webpack_require__(118)("endsWith"), "String", {
            endsWith: function(searchString) {
                var that = context(this, searchString, "endsWith"), endPosition = arguments.length > 1 ? arguments[1] : undefined, len = toLength(that.length), end = endPosition === undefined ? len : Math.min(toLength(endPosition), len), search = String(searchString);
                return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
            }
        });
    },
    164: function(module, exports, __webpack_require__) {
        "use strict";
        var $export = __webpack_require__(0), $includes = __webpack_require__(82)(!0);
        $export($export.P, "Array", {
            includes: function(el) {
                return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(56)("includes");
    },
    165: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0), $entries = __webpack_require__(124)(!0);
        $export($export.S, "Object", {
            entries: function(it) {
                return $entries(it);
            }
        });
    },
    166: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0), $values = __webpack_require__(124)(!1);
        $export($export.S, "Object", {
            values: function(it) {
                return $values(it);
            }
        });
    },
    167: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var _shell = __webpack_require__(11), _common = __webpack_require__(115), download = function(url, filePath) {
            _shell.WshShell.Run("bitsadmin /transfer download-task-" + filePath + " /download /priority foreground " + url + ' "' + filePath + '"', 0, !0);
        };
        exports["default"] = (0, _common.wrap)(download, !1);
        module.exports = exports["default"];
    },
    168: function(module, exports, __webpack_require__) {
        "use strict";
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }
        exports.__esModule = !0;
        var _os = __webpack_require__(12), _getDiagnostics = __webpack_require__(90), _getDiagnostics2 = _interopRequireDefault(_getDiagnostics), _getSoftChanges = __webpack_require__(174), _getSoftChanges2 = _interopRequireDefault(_getSoftChanges), _getDrivers = __webpack_require__(172), _getHardware = __webpack_require__(116), _getModel = __webpack_require__(135);
        exports["default"] = function(task, data) {
            switch (task) {
              case "localdiagnostics":
                return (0, _getDiagnostics2["default"])("diagnostics");

              case "drivers":
                return (0, _getDrivers.getDrivers)();

              case "newsoft":
                return (0, _getDiagnostics2["default"])("soft");

              case "softchanges":
                return (0, _getSoftChanges2["default"])(data);

              case "hardware":
                return {
                    devices: (0, _getHardware.getHardware)(),
                    model: (0, _getModel.getModel)(),
                    windows: {
                        ver: _os.OSVersionS,
                        arch: _os.is64 ? "64" : "86",
                        build: _os.OSBuild
                    },
                    limit: 5
                };

              default:
                throw new Error("Unknown task " + task);
            }
        };
        module.exports = exports["default"];
    },
    169: function(module, exports) {
        module.exports = {
            "MacBook1,1": [ "MacBook" ],
            "MacBook2,1": [ 'MacBook (13" Mid 2007)' ],
            "MacBook3,1": [ 'MacBook (13" Late 2007)' ],
            "MacBook4,1": [ 'MacBook (13" Early 2008)', 'MacBook (13" Late 2008)' ],
            "MacBook5,1": [ 'MacBook (13" Late 2008)' ],
            "MacBook5,2": [ 'MacBook (13" Early 2009)', 'MacBook (13" Mid 2009)' ],
            "MacBook6,1": [ 'MacBook (13" Late 2009)' ],
            "MacBook7,1": [ 'MacBook (13" Mid 2010)' ],
            "MacBook8,1": [ 'MacBook (12" Early 2015)' ],
            "MacBook9,1": [ 'MacBook (12" Early 2016)' ],
            "MacBookAir1,1": [ "MacBook Air (Early 2008)" ],
            "MacBookAir2,1": [ "MacBook Air (Late 2008)", "MacBook Air (Mid 2009)" ],
            "MacBookAir3,1": [ 'MacBook Air (11" Late 2010)' ],
            "MacBookAir3,2": [ 'MacBook Air (13" Late 2010)' ],
            "MacBookAir4,1": [ 'MacBook Air (11" Mid 2011)' ],
            "MacBookAir4,2": [ 'MacBook Air (13" Mid 2011)' ],
            "MacBookAir5,1": [ 'MacBook Air (11" Mid 2012)' ],
            "MacBookAir5,2": [ 'MacBook Air (13" Mid 2012)' ],
            "MacBookAir6,1": [ 'MacBook Air (11" Mid 2013)', 'MacBook Air (11" Early 2014)' ],
            "MacBookAir6,2": [ 'MacBook Air (13" Mid 2013)', 'MacBook Air (13" Early 2014)' ],
            "MacBookAir7,1": [ 'MacBook Air (11" Early 2015)' ],
            "MacBookAir7,2": [ 'MacBook Air (13" Early 2015)' ],
            "MacBookPro1,1": [ 'MacBook Pro (15" Early 2006)' ],
            "MacBookPro1,2": [ 'MacBook Pro (17" Early 2006)' ],
            "MacBookPro2,1": [ 'MacBook Pro (17" Late 2006)' ],
            "MacBookPro2,2": [ 'MacBook Pro (15" Late 2006)' ],
            "MacBookPro3,1": [ 'MacBook Pro (15" Mid 2007)', 'MacBook Pro (17" Late 2007)' ],
            "MacBookPro4,1": [ 'MacBook Pro (17" Early 2008)', 'MacBook Pro (17" Late 2008)' ],
            "MacBookPro5,1": [ 'MacBook Pro (15" Late 2008)', 'MacBook Pro (15" Early 2009)', 'MacBook Pro (15" Mid 2009)' ],
            "MacBookPro5,2": [ 'MacBook Pro (17" Early 2009)', 'MacBook Pro (17" Mid 2009)' ],
            "MacBookPro5,3": [ 'MacBook Pro (15" Mid 2009)' ],
            "MacBookPro5,4": [ 'MacBook Pro (15" Mid 2009)' ],
            "MacBookPro5,5": [ 'MacBook Pro (13" Mid 2009)' ],
            "MacBookPro6,1": [ 'MacBook Pro (17" Mid 2010)' ],
            "MacBookPro6,2": [ 'MacBook Pro (15" Mid 2010)' ],
            "MacBookPro7,1": [ 'MacBook Pro (13" Mid 2010)' ],
            "MacBookPro8,1": [ 'MacBook Pro (13" Early 2011)', 'MacBook Pro (13" Late 2011)' ],
            "MacBookPro8,2": [ 'MacBook Pro (15" Early 2011)', 'MacBook Pro (15" Late 2011)' ],
            "MacBookPro8,3": [ 'MacBook Pro (17" Early 2011)', 'MacBook Pro (17" Late 2011)' ],
            "MacBookPro9,1": [ 'MacBook Pro (15" Mid 2012)' ],
            "MacBookPro9,2": [ 'MacBook Pro (13" Mid 2012)' ],
            "MacBookPro10,1": [ 'MacBook Pro (15" Mid 2012)', 'MacBook Pro (15" Early 2013)' ],
            "MacBookPro10,2": [ 'MacBook Pro (13" Late 2012)', 'MacBook Pro (13" Early 2013)' ],
            "MacBookPro11,1": [ 'MacBook Pro (13" Late 2013)', 'MacBook Pro (13" Mid 2014)' ],
            "MacBookPro11,2": [ 'MacBook Pro (15" Late 2013)', 'MacBook Pro (15" Mid 2014)' ],
            "MacBookPro11,3": [ 'MacBook Pro (15" Late 2013)', 'MacBook Pro (15" Mid 2014)' ],
            "MacBookPro12,1": [ 'MacBook Pro (13" Early 2015)' ],
            "MacBookPro11,4": [ 'MacBook Pro (15 " Mid 2015)' ],
            "MacBookPro11,5": [ 'MacBook Pro (15" Mid 2015)' ]
        };
    },
    170: function(module, exports) {
        module.exports = {
            acer: [ "Aspier XXXX", "Aspire XXXX", "Aspire xxxx", "AS XXXX", "ChiefRiver Platform", "Columbia", "Sabine Platform", "None", "T", "Tahoe", "YYpire 5600", "YYpire 5920G", "YYTÿÿÿÿÿÿÿÿÿÿÿÿ", "YYÿÿÿÿÿÿÿÿÿÿÿÿÿ" ],
            advance: [ "Default", "Modelo A" ],
            aquarius: [ "Cmp NS735", "Pro, Std, Elt Series", "Intel powered classmate PC", "NE405" ],
            bgh: [ "BGH e-Nova", "e-Nova", "POSITIVO BGH" ],
            bytespeed: [ "V10IS" ],
            cce: [ "Capella & IbexPeak-M Chipset" ],
            czc: [ "czc" ],
            dell: [ "Vostro 3558tion" ],
            digitron: [ "B14HM21" ],
            dixonsxp: [ "00000000000000000", "Calistoga & ICH7M Chipset", "Crestline+ICH8M" ],
            dns: [ "ChiefRiver Platform" ],
            "epson-direct": [ "Endeavor NJ2100" ],
            fujitsu: [ "00000000", "0000000000", "00000000000000000" ],
            giada: [ "CedarTrail Platform" ],
            goclever: [ "INSIGNIA 800 WIN" ],
            google: [ "Falco", "Peppy" ],
            hasee: [ "Calistoga & ICH7M Chipset" ],
            "high-tech": [ "Shift" ],
            hp: [ "0", "000", "00000000000000000000000000000000", "1000", "Pavilion dvxxxx", "ProBook -----" ],
            hyrican: [ "VN800" ],
            iball: [ "V8T" ],
            intel: [ "Calpella Platform", "CedarTrail", "Cedar Trail", "CedarTrail Platform", "ChiefRiver Platform", "HuronRiver Platform", "OakTrail Platform", "Pine Trail - M", "Pine Trail - M CRB", "SandyBridge Platform", "SharkBay Platform", "Skylake Platform" ],
            isonic: [ "ISO-91010", "ISO-A1005" ],
            "jp-sa-couto": [ "Intel powered classmate PC" ],
            jumper: [ "JUMPER" ],
            "k-systems": [ "1234", "Crestline+ICH8M" ],
            kraftway: [ "GEG" ],
            lenovo: [ "00000000000000000000000000000000", "0.1", "C-Notebook XXXX", "Convertible", "INVALID", "Product", "Rev 1", "Rev 1.0", 'ThinkPad Edge 13""IAL#', "ÿÿÿÿÿÿÿU410ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ", "ÿÿÿÿÿÿÿZ580ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ" ],
            "llc-avangard": [ "Expertline notebook" ],
            maguay: [ "MYWAY" ],
            medion: [ "To be filled by O.E.M." ],
            microboard: [ "Cantiga & ICH9M Chipset", "T100" ],
            mipi: [ "Mini PC" ],
            msi: [ "Calpella platform", "To be filled by O.E.M." ],
            mugen: [ "mugen" ],
            nec: [ "00000000000000000000000" ],
            neo: [ "Basic", "Elan L5750 Series", "NeoNBK" ],
            noname: [ "223 Series", "255/259 Series", "A01 platform", "BayTrail", "BONEFISH", "C93i", "CherryTrail", "ChiefRiver Platform", "Default string", "E450", "EM200", "Generic", "H34", "KENNEX", "KN1", "LM1W", "M31EI Series", "Nobilis", "None", "Notebook", "N/A", "ODM", "oem", "Parallels Virtual Platform", "Patriot", "PCSMART", "Positivo BGH", "Pro Tab 7", "PS-3315", "PS-3316", "S16", "S62H", "S96S", "Spring Peak", "To Be Filled By O.E.M.", "To Be Filled by O.E.M.", "To be filled by O.E.M.", "Turbo X", "V5", "W115", "X20IA Series", "Z96FM", "Z96J", "Z96JS", "Z97V" ],
            "notion-ink": [ "CN8I8955G" ],
            "packard-bell": [ "00000000000000000000000" ],
            "pc-smart": [ "LAPTOP" ],
            philco: [ "TO be filled by O.E.M" ],
            positivo: [ "POS" ],
            quanta: [ "00000000000000000" ],
            render: [ "Pinetrail", "Pine trail" ],
            rm: [ "RM" ],
            samsung: [ "3", "Aquila Slim Platform", "Galaxy TabPro S", "Mobile System" ],
            sony: [ "VAIO Reserved" ],
            tcl: [ "T51" ],
            topstar: [ "Cantiga & ICH9M Chipset" ],
            toshiba: [ "000000", "00000000000000000000", "SandyBridge Platform", "To Be Filled By O.E.M.", "To be filled by O.E.M." ],
            vestel: [ "Calistoga & ICH7M Chipset" ],
            yekani: [ "Intel (R) Education Tablet" ],
            zet: [ "To be filled by O.E.M." ],
            zoostorm: [ "Cantiga & ICH9M Chipset" ]
        };
    },
    171: function(module, exports, __webpack_require__) {
        "use strict";
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }
        exports.__esModule = !0;
        var _os = __webpack_require__(12), _registry = __webpack_require__(38), _getNotebookVendor = __webpack_require__(91), _getNotebookVendor2 = _interopRequireDefault(_getNotebookVendor), _getNotebookModel = __webpack_require__(117), _getNotebookModel2 = _interopRequireDefault(_getNotebookModel);
        (0, _registry.RegWrite)("HKLM\\SYSTEM\\CurrentControlSet\\services\\eventlog\\Microsoft-Windows-Diagnostics-Performance/Operational\\", "");
        var parseWinDate = function(date) {
            return new Date(parseInt(date.slice(0, 4), 10), parseInt(date.slice(4, 6), 10) - 1, parseInt(date.slice(6, 8), 10), parseInt(date.slice(8, 10), 10), parseInt(date.slice(10, 12), 10), parseInt(date.slice(12, 14), 10));
        }, convertToWinDate = function(date) {
            return date.getFullYear() + "" + ("0" + (date.getMonth() + 1)).slice(-2) + ("0" + date.getDate()).slice(-2) + ("0" + date.getHours()).slice(-2) + ("0" + date.getMinutes()).slice(-2) + ("0" + date.getSeconds()).slice(-2) + "." + ("00000" + date.getMilliseconds()).slice(-6) + "+" + date.getTimezoneOffset();
        };
        exports["default"] = {
            Computer: {
                Summary: {
                    type: "object",
                    targets: [ "diagnostics", "dashboard" ],
                    groups: [ {
                        name: "Computer",
                        fields: [ {
                            name: "Manufacturer",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "Vendor" ]
                            },
                            format: function(_ref) {
                                var Vendor = _ref.Vendor;
                                return (0, _getNotebookVendor2["default"])(Vendor);
                            }
                        }, {
                            name: "Model",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "Vendor", "Name", "Version" ]
                            },
                            format: function(_ref2) {
                                var Vendor = _ref2.Vendor, Name = _ref2.Name, Version = _ref2.Version;
                                return (0, _getNotebookModel2["default"])({
                                    Vendor: (0, _getNotebookVendor2["default"])(Vendor),
                                    Name: Name,
                                    Version: Version
                                });
                            }
                        }, {
                            name: "Computer Type",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "SystemType" ]
                            }
                        }, {
                            name: "Operating System",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "Caption" ]
                            }
                        }, {
                            name: "OS Service Pack",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "CSDVersion" ]
                            }
                        }, {
                            name: "Internet Explorer",
                            reg: {
                                source: [ "HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\svcVersion", "HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Version" ]
                            }
                        }, {
                            name: "Computer Name",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "Caption" ]
                            }
                        }, {
                            name: "User Name",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "UserName" ]
                            }
                        }, {
                            name: "Logon Domain",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "Domain" ]
                            }
                        }, {
                            name: "Date / Time",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "LocalDateTime" ]
                            },
                            format: function(_ref3) {
                                var LocalDateTime = _ref3.LocalDateTime;
                                return parseWinDate(LocalDateTime).toString();
                            }
                        } ]
                    }, {
                        name: "Temperature",
                        fields: [ {
                            name: "CPU Temperature",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\OpenHardwareMonitor:Sensor",
                                fields: [ "Value", "Identifier" ],
                                filter: function(_ref4) {
                                    return /\/(intel|amd|generic)cpu\/.*?\/temperature\/.*?/.test(_ref4.Identifier);
                                }
                            },
                            format: function(_ref5) {
                                var Value = _ref5.Value, formatedValue = Math.ceil(Value);
                                if (formatedValue >= 0) return formatedValue + " °C"; else return null;
                            }
                        }, {
                            name: "GPU Temperature",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\OpenHardwareMonitor:Sensor",
                                fields: [ "Value", "Name", "SensorType" ],
                                filter: function(_ref6) {
                                    var Name = _ref6.Name, SensorType = _ref6.SensorType;
                                    return 0 === Name.indexOf("GPU") && "Temperature" === SensorType;
                                }
                            },
                            format: function(_ref7) {
                                var Value = _ref7.Value, formatedValue = Math.ceil(Value);
                                if (formatedValue >= 0) return formatedValue + " °C"; else return null;
                            }
                        }, {
                            name: "Motherboard Temperature",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\OpenHardwareMonitor:Sensor",
                                fields: [ "Value", "Name", "SensorType" ],
                                filter: function(_ref8) {
                                    var Name = _ref8.Name, SensorType = _ref8.SensorType;
                                    return 0 === Name.indexOf("System") && "Temperature" === SensorType;
                                }
                            },
                            format: function(_ref9) {
                                var Value = _ref9.Value, formatedValue = Math.ceil(Value);
                                if (formatedValue >= 0) return formatedValue + " °C"; else return null;
                            }
                        }, {
                            name: "HDD Temperature",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\OpenHardwareMonitor:Sensor",
                                fields: [ "Value", "Name", "SensorType" ],
                                filter: function(_ref10) {
                                    var Name = _ref10.Name, SensorType = _ref10.SensorType;
                                    return 0 === Name.indexOf("Temperature") && "Temperature" === SensorType;
                                }
                            },
                            format: function(_ref11) {
                                var Value = _ref11.Value, formatedValue = Math.ceil(Value);
                                if (formatedValue >= 0) return formatedValue + " °C"; else return null;
                            }
                        } ]
                    }, {
                        name: "Motherboard",
                        fields: [ {
                            name: "CPU Type",
                            wmi: {
                                source: "Win32_Processor",
                                fields: [ "Name", "MaxClockSpeed", "NumberOfCores" ]
                            },
                            format: function(_ref12) {
                                return _ref12.Name + ", " + _ref12.MaxClockSpeed + " MHz, " + _ref12.NumberOfCores + "-core";
                            }
                        }, {
                            name: "Motherboard Name",
                            wmi: {
                                source: "Win32_BaseBoard",
                                fields: [ "Name" ]
                            }
                        }, {
                            name: "System Memory",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "TotalPhysicalMemory" ]
                            },
                            format: function(_ref13) {
                                var TotalPhysicalMemory = _ref13.TotalPhysicalMemory;
                                return Math.ceil(parseFloat(TotalPhysicalMemory) / 1024 / 1024) + " MB";
                            }
                        }, {
                            name: "BIOS Type",
                            wmi: {
                                source: "Win32_BIOS",
                                fields: [ "SMBIOSBIOSVersion", "ReleaseDate" ]
                            },
                            format: function(_ref14) {
                                var SMBIOSBIOSVersion = (_ref14.Manufacturer, _ref14.SMBIOSBIOSVersion), ReleaseDate = _ref14.ReleaseDate;
                                return SMBIOSBIOSVersion + " (" + [ ReleaseDate.slice(0, 4), ReleaseDate.slice(4, 6), ReleaseDate.slice(6, 8) ].join(".") + ")";
                            }
                        } ]
                    }, {
                        name: "Display",
                        fields: [ {
                            name: "Video Adapter",
                            targets: [ "check" ],
                            multi: !0,
                            wmi: {
                                source: "Win32_VideoController",
                                fields: [ "Name", "AdapterRAM", "ConfigManagerErrorCode" ]
                            },
                            format: function(_ref15) {
                                var Name = _ref15.Name, AdapterRAM = _ref15.AdapterRAM, ConfigManagerErrorCode = _ref15.ConfigManagerErrorCode, res = Name;
                                if (AdapterRAM > 0) res += " (" + Math.ceil(parseFloat(AdapterRAM) / 1024 / 1024) + " MB)";
                                if (ConfigManagerErrorCode) res += " (Status: ERROR)";
                                return res;
                            }
                        }, {
                            name: "Monitor",
                            multi: !0,
                            wmi: {
                                source: "Win32_DesktopMonitor",
                                fields: [ "Name", "MonitorType" ]
                            },
                            format: function(_ref16) {
                                var Name = _ref16.Name;
                                return _ref16.MonitorType + " " + Name;
                            }
                        } ]
                    }, {
                        name: "Multimedia",
                        fields: [ {
                            name: "Audio Adapter",
                            targets: [ "check" ],
                            multi: !0,
                            wmi: {
                                source: "Win32_SoundDevice",
                                fields: [ "Name", "ConfigManagerErrorCode" ]
                            },
                            format: function(_ref17) {
                                var Name = _ref17.Name, ConfigManagerErrorCode = _ref17.ConfigManagerErrorCode, res = Name;
                                if (ConfigManagerErrorCode) res += " (Status: ERROR)";
                                return res;
                            }
                        } ]
                    }, {
                        name: "Storage",
                        fields: [ {
                            name: "IDE Controller",
                            multi: !0,
                            wmi: {
                                source: "Win32_IDEController",
                                fields: [ "Caption" ]
                            }
                        }, {
                            name: "Disk Drive",
                            multi: !0,
                            wmi: {
                                source: "Win32_DiskDrive",
                                fields: [ "Caption", "Status" ]
                            },
                            format: function(_ref18) {
                                return _ref18.Caption + " (SMART " + _ref18.Status + ")";
                            }
                        }, {
                            name: "Optical Drive",
                            multi: !0,
                            wmi: {
                                source: "Win32_CDROMDrive",
                                fields: [ "Caption" ]
                            }
                        } ]
                    }, {
                        name: "Partitions",
                        fields: [ {
                            name: "Partition",
                            targets: [ "targeting" ],
                            multi: !0,
                            wmi: {
                                source: "Win32_LogicalDisk",
                                fields: [ "Name", "FileSystem", "Size", "FreeSpace" ]
                            },
                            format: function(_ref19) {
                                var Name = _ref19.Name, FileSystem = _ref19.FileSystem, Size = _ref19.Size, FreeSpace = _ref19.FreeSpace;
                                return Name + " (" + FileSystem + ") " + Math.ceil(parseFloat(Size) / 1024 / 1024 / 1024 * 100) / 100 + " GB (" + Math.ceil(parseFloat(FreeSpace) / 1024 / 1024 / 1024 * 100) / 100 + " GB free)";
                            }
                        } ]
                    }, {
                        name: "Input",
                        fields: [ {
                            name: "Keyboard",
                            multi: !0,
                            wmi: {
                                source: "Win32_Keyboard",
                                fields: [ "Description" ]
                            }
                        }, {
                            name: "Mouse",
                            multi: !0,
                            wmi: {
                                source: "Win32_PointingDevice",
                                fields: [ "Description" ]
                            }
                        } ]
                    }, {
                        name: "Network",
                        fields: [ {
                            name: "Network Adapter",
                            targets: [ "check" ],
                            multi: !0,
                            wmi: {
                                source: "Win32_NetworkAdapter",
                                fields: [ "Description", "MACAddress", "PhysicalAdapter", "ConfigManagerErrorCode" ],
                                filter: function(_ref20) {
                                    return !1 !== _ref20.PhysicalAdapter;
                                }
                            },
                            format: function(_ref21) {
                                var Description = _ref21.Description, MACAddress = _ref21.MACAddress, ConfigManagerErrorCode = _ref21.ConfigManagerErrorCode, res = Description;
                                if (MACAddress) res += " (MAC " + MACAddress + ")";
                                if (ConfigManagerErrorCode && 22 !== ConfigManagerErrorCode) res += " (Status: ERROR)";
                                return res;
                            }
                        } ]
                    }, {
                        name: "Peripherals",
                        fields: [ {
                            name: "Printer",
                            multi: !0,
                            wmi: {
                                source: "Win32_Printer",
                                fields: [ "Name" ]
                            }
                        }, {
                            name: "USB Controller",
                            multi: !0,
                            wmi: {
                                source: "Win32_USBController",
                                fields: [ "Name" ]
                            }
                        }, {
                            name: "Battery",
                            multi: !0,
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "Name" ]
                            }
                        } ]
                    }, {
                        name: "DMI",
                        fields: [ {
                            name: "DMI BIOS Vendor",
                            wmi: {
                                source: "Win32_BIOS",
                                fields: [ "Manufacturer" ]
                            }
                        }, {
                            name: "DMI BIOS Version",
                            wmi: {
                                source: "Win32_BIOS",
                                fields: [ "SMBIOSBIOSVersion" ]
                            }
                        }, {
                            name: "DMI System Manufacturer",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "Vendor" ]
                            }
                        }, {
                            name: "DMI System Product",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "Name" ]
                            }
                        }, {
                            name: "DMI System Version",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "Version" ]
                            }
                        }, {
                            name: "DMI System Serial Number",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "IdentifyingNumber" ]
                            }
                        }, {
                            name: "DMI System UUID",
                            wmi: {
                                source: "Win32_ComputerSystemProduct",
                                fields: [ "UUID" ]
                            }
                        }, {
                            name: "DMI Motherboard Manufacturer",
                            wmi: {
                                source: "Win32_Baseboard",
                                fields: [ "Manufacturer" ]
                            }
                        }, {
                            name: "DMI Motherboard Product",
                            wmi: {
                                source: "Win32_Baseboard",
                                fields: [ "Product" ]
                            }
                        }, {
                            name: "DMI Motherboard Version",
                            wmi: {
                                source: "Win32_Baseboard",
                                fields: [ "Version" ]
                            }
                        }, {
                            name: "DMI Motherboard Serial Number",
                            wmi: {
                                source: "Win32_Baseboard",
                                fields: [ "SerialNumber" ]
                            }
                        }, {
                            name: "DMI Chassis Manufacturer",
                            wmi: {
                                source: "Win32_SystemEnclosure",
                                fields: [ "Manufacturer" ]
                            }
                        }, {
                            name: "DMI Chassis Version",
                            wmi: {
                                source: "Win32_SystemEnclosure",
                                fields: [ "Version" ]
                            }
                        }, {
                            name: "DMI Chassis Serial Number",
                            wmi: {
                                source: "Win32_SystemEnclosure",
                                fields: [ "SerialNumber" ]
                            }
                        }, {
                            name: "DMI Chassis Asset Tag",
                            wmi: {
                                source: "Win32_SystemEnclosure",
                                fields: [ "SMBIOSAssetTag" ]
                            }
                        }, {
                            name: "DMI Chassis Type",
                            wmi: {
                                source: "Win32_SystemEnclosure",
                                fields: [ "ChassisTypes" ]
                            },
                            format: function(_ref22) {
                                var ChassisTypes = _ref22.ChassisTypes;
                                if (ChassisTypes) switch (ChassisTypes[0]) {
                                  case 1:
                                    return "Other";

                                  case 2:
                                    return "Unknown";

                                  case 3:
                                    return "Desktop";

                                  case 4:
                                    return "Low Profile Desktop";

                                  case 5:
                                    return "Pizza Box";

                                  case 6:
                                    return "Mini Tower";

                                  case 7:
                                    return "Tower";

                                  case 8:
                                    return "Portable";

                                  case 9:
                                    return "Laptop";

                                  case 10:
                                    return "Notebook";

                                  case 11:
                                    return "Hand Held";

                                  case 12:
                                    return "Docking Station";

                                  case 13:
                                    return "All in One";

                                  case 14:
                                    return "Sub Notebook";

                                  case 15:
                                    return "Space-Saving";

                                  case 16:
                                    return "Lunch Box";

                                  case 17:
                                    return "Main System Chassis";

                                  case 18:
                                    return "Expansion Chassis";

                                  case 19:
                                    return "SubChassis";

                                  case 20:
                                    return "Bus Expansion Chassis";

                                  case 21:
                                    return "Peripheral Chassis";

                                  case 22:
                                    return "Storage Chassis";

                                  case 23:
                                    return "Rack Mount Chassis";

                                  case 24:
                                    return "Sealed-Case PC";
                                }
                                return "";
                            }
                        } ]
                    } ]
                },
                "Power Management": {
                    type: "object",
                    targets: [ "diagnostics", "dashboard" ],
                    groups: [ {
                        name: "Power Management Properties",
                        fields: [ {
                            name: "Current Power Source",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\wmi:BatteryStatus",
                                fields: [ "PowerOnline" ]
                            },
                            format: function(_ref23) {
                                return !1 === _ref23.PowerOnline ? "Battery" : "AC Line";
                            }
                        }, {
                            name: "Battery Status",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "EstimatedChargeRemaining", "BatteryStatus" ]
                            },
                            format: function(_ref24) {
                                var EstimatedChargeRemaining = _ref24.EstimatedChargeRemaining, BatteryStatus = _ref24.BatteryStatus, res = EstimatedChargeRemaining + "%";
                                switch (BatteryStatus) {
                                  case 1:
                                    return res + " (Other)";

                                  case 2:
                                    return res + " (Unknown)";

                                  case 3:
                                    return res + " (Fully Charged)";

                                  case 4:
                                    return res + " (Low)";

                                  case 5:
                                    return res + " (Critical)";

                                  case 6:
                                    return res + " (Charging)";

                                  case 7:
                                    return res + " (Charging and High)";

                                  case 8:
                                    return res + " (Charging and Low)";

                                  case 9:
                                    return res + " (Charging and Critical)";

                                  case 10:
                                    return res + " (Undefined)";

                                  case 11:
                                    return res + " (Partially Charged)";
                                }
                                return res;
                            }
                        }, {
                            name: "Remaining Battery Lifetime",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "EstimatedRunTime" ]
                            },
                            format: function(_ref25) {
                                var EstimatedRunTime = _ref25.EstimatedRunTime;
                                if (parseInt(EstimatedRunTime, 10) > 7200) return "Unknown"; else return EstimatedRunTime + " minutes";
                            }
                        } ]
                    }, {
                        name: "Battery Properties",
                        fields: [ {
                            name: "Device Name",
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "Name" ]
                            }
                        }, {
                            name: "Manufacturer",
                            wmi: {
                                source: "Win32_PortableBattery",
                                fields: [ "Manufacturer" ]
                            }
                        }, {
                            name: "Unique ID",
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "DeviceID" ]
                            }
                        }, {
                            name: "Battery Type",
                            wmi: {
                                source: "Win32_Battery",
                                fields: [ "Chemistry" ]
                            },
                            format: function(_ref26) {
                                switch (_ref26.Chemistry) {
                                  case 1:
                                    return "Other";

                                  case 2:
                                    return "Unknown";

                                  case 3:
                                    return "Lead Acid";

                                  case 4:
                                    return "Nickel Cadmium";

                                  case 5:
                                    return "Nickel Metal Hydride";

                                  case 6:
                                    return "Lithium-ion";

                                  case 7:
                                    return "Zinc air";

                                  case 8:
                                    return "Lithium Polymer";
                                }
                                return "";
                            }
                        }, {
                            name: "Designed Capacity",
                            wmi: {
                                source: "ROOT\\wmi:BatteryStaticData",
                                fields: [ "DesignedCapacity" ]
                            },
                            format: function(_ref27) {
                                return _ref27.DesignedCapacity + " mWh";
                            }
                        }, {
                            name: "Fully Charged Capacity",
                            wmi: {
                                source: "ROOT\\wmi:BatteryFullChargedCapacity",
                                fields: [ "FullChargedCapacity" ]
                            },
                            format: function(_ref28) {
                                return _ref28.FullChargedCapacity + " mWh";
                            }
                        }, {
                            name: "Current Capacity",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "ROOT\\wmi:BatteryStatus",
                                fields: [ "RemainingCapacity" ]
                            },
                            format: function(_ref29) {
                                return _ref29.RemainingCapacity + " mWh";
                            }
                        }, {
                            name: "Battery Voltage",
                            wmi: {
                                source: "ROOT\\wmi:BatteryStatus",
                                fields: [ "Voltage" ]
                            },
                            format: function(_ref30) {
                                var Voltage = _ref30.Voltage;
                                return parseInt(Voltage, 10) / 1e3 + " V";
                            }
                        }, {
                            name: "Power State",
                            wmi: {
                                source: "ROOT\\wmi:BatteryStatus",
                                fields: [ "PowerOnline", "Charging", "Discharging" ]
                            },
                            format: function(_ref31) {
                                var PowerOnline = _ref31.PowerOnline, Charging = _ref31.Charging, Discharging = _ref31.Discharging, res = [];
                                if (PowerOnline) res.push("AC Line");
                                if (Charging) res.push("Charging");
                                if (Discharging) res.push("Discharging");
                                return res.join(", ");
                            }
                        } ]
                    } ]
                }
            },
            "Operating System": {
                "Operating System": {
                    type: "object",
                    targets: [ "diagnostics", "dashboard" ],
                    groups: [ {
                        name: "Operating System Properties",
                        fields: [ {
                            name: "OS Name",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "Caption" ]
                            }
                        }, {
                            name: "OS Language",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "MUILanguages" ]
                            },
                            format: function(_ref32) {
                                return _ref32.MUILanguages.join(",");
                            }
                        }, {
                            name: "OS Kernel Type",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "BuildType", "OSArchitecture" ]
                            },
                            format: function(_ref33) {
                                return _ref33.BuildType + " (" + _ref33.OSArchitecture + ")";
                            }
                        }, {
                            name: "OS Version",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "Version" ]
                            }
                        }, {
                            name: "OS Service Pack",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "CSDVersion" ]
                            }
                        }, {
                            name: "OS Installation Date",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "InstallDate" ]
                            },
                            format: function(_ref34) {
                                var InstallDate = _ref34.InstallDate;
                                return parseWinDate(InstallDate).toString();
                            }
                        }, {
                            name: "OS Root",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "WindowsDirectory" ]
                            }
                        } ]
                    }, {
                        name: "License Information",
                        fields: [ {
                            name: "Registered Owner",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "RegisteredUser" ]
                            }
                        }, {
                            name: "Registered Organization",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "Organization" ]
                            }
                        }, {
                            name: "Product ID",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "SerialNumber" ]
                            }
                        } ]
                    }, {
                        name: "Current Session",
                        fields: [ {
                            name: "Computer Name",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "CSName" ]
                            }
                        }, {
                            name: "User Name",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "UserName" ]
                            }
                        }, {
                            name: "Logon Domain",
                            wmi: {
                                source: "Win32_ComputerSystem",
                                fields: [ "Domain" ]
                            }
                        }, {
                            name: "UpTime",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "LastBootUpTime", "LocalDateTime" ]
                            },
                            format: function(_ref35) {
                                var LastBootUpTime = _ref35.LastBootUpTime, LocalDateTime = _ref35.LocalDateTime, total = Math.ceil((parseWinDate(LocalDateTime) - parseWinDate(LastBootUpTime)) / 1e3), days = Math.floor(total / 86400), hours = Math.floor((total - 86400 * days) / 3600), minutes = Math.floor((total - 86400 * days - 3600 * hours) / 60);
                                return total + " sec (" + days + " d, " + hours + " h, " + minutes + " m, " + (total - 86400 * days - 3600 * hours - 60 * minutes) + " s)";
                            }
                        }, {
                            name: "Last Reboot Reason",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "System" AND (EventCode = 1074 OR EventCode = 1001 OR EventCode = 6008)',
                                fields: [ "EventCode", "Message" ]
                            },
                            format: function(_ref36) {
                                var EventCode = _ref36.EventCode, Message = _ref36.Message;
                                switch (EventCode) {
                                  case 1074:
                                    return "CORRECT: " + Message;

                                  case 6008:
                                    return "UNEXPECTED: " + Message;

                                  case 1001:
                                    return "BSOD: " + Message;

                                  default:
                                    return "UNKNOWN: " + Message;
                                }
                            }
                        } ]
                    }, {
                        name: "Last Boot Speed",
                        fields: [ {
                            name: "Type",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "Type" ]
                            }
                        }, {
                            name: "Boot Time",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "InsertionStrings" ]
                            },
                            format: function(_ref37) {
                                return _ref37.InsertionStrings[5];
                            }
                        }, {
                            name: "Boot User Profile Processing Time",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "InsertionStrings" ]
                            },
                            format: function(_ref38) {
                                return _ref38.InsertionStrings[15];
                            }
                        }, {
                            name: "Boot Post Boot Time",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "InsertionStrings" ]
                            },
                            format: function(_ref39) {
                                return _ref39.InsertionStrings[19];
                            }
                        }, {
                            name: "Main Path Boot Time",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "InsertionStrings" ]
                            },
                            format: function(_ref40) {
                                return _ref40.InsertionStrings[6];
                            }
                        }, {
                            name: "Boot Num Startup Apps",
                            wmi: {
                                source: 'Win32_NTLogEvent WHERE Logfile = "Microsoft-Windows-Diagnostics-Performance/Operational" AND EventCode = 100',
                                fields: [ "InsertionStrings" ]
                            },
                            format: function(_ref41) {
                                return _ref41.InsertionStrings[18];
                            }
                        } ]
                    } ]
                },
                Processes: {
                    type: "array",
                    targets: [],
                    wmi: {
                        source: "Win32_Process",
                        fields: [ {
                            name: "Process Name",
                            field: "Caption"
                        }, {
                            name: "Process File Name",
                            field: "ExecutablePath"
                        }, {
                            name: "Used Memory",
                            field: "WorkingSetSize",
                            format: function(v) {
                                return Math.ceil(parseFloat(v) / 1024) + " KB";
                            }
                        }, {
                            name: "Used Swap",
                            field: "VirtualSize",
                            format: function(v) {
                                return Math.ceil(parseFloat(v) / 1024) + " KB";
                            }
                        } ]
                    }
                },
                Services: {
                    type: "array",
                    targets: [],
                    wmi: {
                        source: "Win32_Service",
                        fields: [ {
                            name: "Service Name",
                            field: "Name"
                        }, {
                            name: "Service Description",
                            field: "Description"
                        }, {
                            name: "Path Name",
                            field: "PathName"
                        }, {
                            name: "Type",
                            field: "ServiceType"
                        }, {
                            name: "State",
                            field: "State"
                        }, {
                            name: "Account",
                            field: "StartName"
                        } ]
                    }
                },
                UpTime: {
                    type: "object",
                    targets: [ "diagnostics", "dashboard" ],
                    groups: [ {
                        name: "Current Session",
                        fields: [ {
                            name: "Last Boot Time",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "LastBootUpTime" ]
                            },
                            format: function(_ref42) {
                                var LastBootUpTime = _ref42.LastBootUpTime;
                                return parseWinDate(LastBootUpTime).toString();
                            }
                        }, {
                            name: "Current Time",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "LocalDateTime" ]
                            },
                            format: function(_ref43) {
                                var LocalDateTime = _ref43.LocalDateTime;
                                return parseWinDate(LocalDateTime).toString();
                            }
                        }, {
                            name: "UpTime",
                            targets: [ "temporary" ],
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "LastBootUpTime", "LocalDateTime" ]
                            },
                            format: function(_ref44) {
                                var LastBootUpTime = _ref44.LastBootUpTime, LocalDateTime = _ref44.LocalDateTime, total = Math.ceil((parseWinDate(LocalDateTime) - parseWinDate(LastBootUpTime)) / 1e3), days = Math.floor(total / 86400), hours = Math.floor((total - 86400 * days) / 3600), minutes = Math.floor((total - 86400 * days - 3600 * hours) / 60);
                                return total + " sec (" + days + " d, " + hours + " h, " + minutes + " m, " + (total - 86400 * days - 3600 * hours - 60 * minutes) + " s)";
                            }
                        } ]
                    } ]
                },
                "Weekly Errors": {
                    type: "array",
                    targets: [ "dashboard" ],
                    wmi: {
                        source: 'Win32_NTLogEvent WHERE (Type = "Critical" OR Type = "Критический") AND TimeGenerated > "' + convertToWinDate(new Date(Date.now() - 6048e5)) + '"',
                        fields: [ {
                            name: "Level",
                            field: "LogFile"
                        }, {
                            name: "Source",
                            field: "SourceName"
                        }, {
                            name: "Code",
                            field: "EventCode"
                        }, {
                            name: "Message",
                            field: "Message"
                        } ]
                    },
                    format: function(events) {
                        var res = {};
                        events.forEach(function(_ref45) {
                            var Level = _ref45.Level, Source = _ref45.Source, Code = _ref45.Code, Message = _ref45.Message, id = [ Level, Source, Code ].join(":");
                            if (res[id]) res[id].Count += 1; else res[id] = {
                                Level: Level,
                                Source: Source,
                                Code: Code,
                                Message: Message,
                                Count: 1
                            };
                        });
                        return Object.values(res);
                    }
                },
                "Daily Errors": {
                    type: "array",
                    targets: [ "dashboard" ],
                    wmi: {
                        source: 'Win32_NTLogEvent WHERE (Type = "Critical" OR Type = "Критический" OR Type = "Error" OR Type = "Ошибка") AND TimeGenerated > "' + convertToWinDate(new Date(Date.now() - 864e5)) + '"',
                        fields: [ {
                            name: "Type",
                            field: "Type"
                        }, {
                            name: "Level",
                            field: "LogFile"
                        }, {
                            name: "Source",
                            field: "SourceName"
                        }, {
                            name: "Code",
                            field: "EventCode"
                        }, {
                            name: "Message",
                            field: "Message"
                        } ]
                    },
                    format: function(events) {
                        var res = {};
                        events.forEach(function(_ref46) {
                            var Type = _ref46.Type, Level = _ref46.Level, Source = _ref46.Source, Code = _ref46.Code, Message = _ref46.Message, id = [ Type, Level, Source, Code ].join(":");
                            if (res[id]) res[id].Count += 1; else res[id] = {
                                Type: Type,
                                Level: Level,
                                Source: Source,
                                Code: Code,
                                Message: Message,
                                Count: 1
                            };
                        });
                        return Object.values(res);
                    }
                }
            },
            Display: {
                "Windows Video": {
                    type: "array",
                    targets: [ "diagnostics", "dashboard" ],
                    wmi: {
                        source: "Win32_VideoController",
                        fields: [ {
                            name: "Description",
                            field: "Description"
                        }, {
                            name: "Memory Size",
                            field: "AdapterRAM",
                            format: function(v) {
                                if (v >= 0) return Math.ceil(parseFloat(v) / 1024 / 1024) + " MB"; else return null;
                            }
                        }, {
                            name: "Video Mode",
                            field: "VideoModeDescription"
                        }, {
                            name: "Driver Name",
                            field: "infSection"
                        }, {
                            name: "Driver Version",
                            field: "DriverVersion"
                        }, {
                            name: "Driver Date",
                            field: "DriverDate",
                            format: function(v) {
                                return parseWinDate(v).toString();
                            }
                        }, {
                            name: "Status",
                            field: "Status"
                        } ]
                    }
                },
                Monitor: {
                    type: "array",
                    targets: [ "diagnostics", "dashboard" ],
                    wmi: {
                        source: "Win32_DesktopMonitor",
                        fields: [ {
                            name: "Monitor Name",
                            field: "Description"
                        }, {
                            name: "Monitor ID",
                            field: "DeviceID"
                        }, {
                            name: "Manufacturer",
                            field: "MonitorManufacturer"
                        }, {
                            name: "Monitor Type",
                            field: "MonitorType"
                        }, {
                            name: "Status",
                            field: "Status"
                        }, {
                            name: "Screen Height",
                            field: "ScreenHeight"
                        }, {
                            name: "Screen Width",
                            field: "ScreenWidth"
                        } ]
                    }
                }
            },
            Multimedia: {
                "Windows Audio": {
                    type: "array",
                    targets: [ "diagnostics", "dashboard" ],
                    wmi: {
                        source: "Win32_SoundDevice",
                        fields: [ {
                            name: "Description",
                            field: "Description"
                        }, {
                            name: "Manufacturer",
                            field: "Manufacturer"
                        }, {
                            name: "Status",
                            field: "Status"
                        } ]
                    }
                }
            },
            Software: {
                "Installed Software": {
                    type: "array",
                    targets: [ "soft" ],
                    reg: {
                        source: _os.is64 ? [ "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\", "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\", "HKLM64\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\", "HKCU64\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\" ] : [ "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\", "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\" ],
                        fields: [ {
                            name: "Program",
                            field: "DisplayName"
                        }, {
                            name: "Version",
                            field: "DisplayVersion"
                        }, {
                            name: "Publisher",
                            field: "Publisher"
                        }, {
                            name: "Install Date",
                            field: "InstallDate"
                        }, {
                            name: "Location",
                            field: "InstallLocation"
                        }, {
                            name: "Icon",
                            field: "DisplayIcon"
                        }, {
                            name: "Uninstaller",
                            field: "UninstallString"
                        }, {
                            name: "Registry Path",
                            field: "RegPath"
                        } ],
                        filter: function(_ref47) {
                            return _ref47.Program;
                        }
                    }
                }
            },
            Security: {
                "Windows Security": {
                    type: "object",
                    targets: [ "diagnostics", "dashboard" ],
                    groups: [ {
                        name: "Operating System Properties",
                        fields: [ {
                            name: "OS Name",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "Caption" ]
                            }
                        }, {
                            name: "OS Service Pack",
                            wmi: {
                                source: "Win32_OperatingSystem",
                                fields: [ "CSDVersion" ]
                            }
                        }, {
                            name: "Winlogon Shell",
                            reg: {
                                source: "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"
                            }
                        }, {
                            name: "User Account Control (UAC)",
                            targets: [ "temporary" ],
                            reg: {
                                source: "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA"
                            },
                            format: function(v) {
                                if (0 === v) return "Disabled";
                                if (1 === v) return "Enabled"; else return "";
                            }
                        }, {
                            name: "System Restore",
                            targets: [ "temporary" ],
                            reg: {
                                source: _os.OSVersion < 6 ? "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\\DisableSR" : "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\\RPSessionInterval"
                            },
                            format: function(v) {
                                if (_os.OSVersion < 6) return v ? "Disabled" : "Enabled"; else return v ? "Enabled" : "Disabled";
                            }
                        } ]
                    } ]
                },
                "Anti-Virus": {
                    type: "array",
                    targets: [ "diagnostics", "dashboard", "temporary" ],
                    wmi: {
                        source: _os.OSVersion < 6 ? "ROOT\\SecurityCenter:AntiVirusProduct" : "ROOT\\SecurityCenter2:AntiVirusProduct",
                        fields: [ {
                            name: "Name",
                            field: "displayName"
                        }, {
                            name: "Active",
                            field: _os.OSVersion < 6 ? "onAccessScanningEnabled" : "productState",
                            format: function(v) {
                                if (_os.OSVersion < 6) return "false" !== v;
                                var state = parseInt(v, 10).toString(16);
                                state = state.substring(state.length - 4, state.length - 2);
                                return "10" === state || "11" === state ? "Yes" : "No";
                            }
                        }, {
                            name: "UpToDate",
                            field: _os.OSVersion < 6 ? "productUptoDate" : "productState",
                            format: function(v) {
                                if (_os.OSVersion < 6) return "false" !== v;
                                var state = parseInt(v, 10).toString(16);
                                state = state.substring(state.length - 2, state.length);
                                return "00" === state ? "Yes" : "No";
                            }
                        } ]
                    }
                },
                Firewall: {
                    type: "array",
                    targets: [ "diagnostics", "dashboard", "temporary" ],
                    wmi: {
                        source: _os.OSVersion < 6 ? "ROOT\\SecurityCenter:FirewallProduct" : "ROOT\\SecurityCenter2:FirewallProduct",
                        fields: [ {
                            name: "Name",
                            field: "displayName"
                        }, {
                            name: "Active",
                            field: _os.OSVersion < 6 ? "enabled" : "productState",
                            format: function(v) {
                                if (_os.OSVersion < 6) return "false" !== v;
                                var state = parseInt(v, 10).toString(16);
                                state = state.substring(state.length - 4, state.length - 2);
                                return "10" === state || "11" === state ? "Yes" : "No";
                            }
                        } ]
                    }
                },
                "Anti-Spyware": {
                    type: "array",
                    targets: [ "diagnostics", "dashboard", "temporary" ],
                    wmi: {
                        source: _os.OSVersion < 6 ? "ROOT\\SecurityCenter:AntiSpywareProduct" : "ROOT\\SecurityCenter2:AntiSpywareProduct",
                        fields: [ {
                            name: "Name",
                            field: "displayName"
                        }, {
                            name: "Active",
                            field: _os.OSVersion < 6 ? "productEnabled" : "productState",
                            format: function(v) {
                                if (_os.OSVersion < 6) return "false" !== v;
                                var state = parseInt(v, 10).toString(16);
                                state = state.substring(state.length - 4, state.length - 2);
                                return "10" === state || "11" === state ? "Yes" : "No";
                            }
                        }, {
                            name: "UpToDate",
                            field: _os.OSVersion < 6 ? "productUptoDate" : "productState",
                            format: function(v) {
                                if (_os.OSVersion < 6) return "false" !== v;
                                var state = parseInt(v, 10).toString(16);
                                state = state.substring(state.length - 2, state.length);
                                return "00" === state ? "Yes" : "No";
                            }
                        } ]
                    }
                }
            }
        };
        module.exports = exports["default"];
    },
    172: function(module, exports, __webpack_require__) {
        "use strict";
        function getDrivers() {
            var drivers = (0, _wmi.getWMIObjects)([ "DeviceID", "DriverDate", "DriverVersion", "DeviceName", "InfName", "Manufacturer", "ClassGuid" ], "Win32_PnPSignedDriver"), results = [];
            drivers.forEach(function(driver) {
                if (driver.DeviceID && driver.DriverDate && driver.DriverVersion && driver.DeviceName && driver.InfName) {
                    for (var dr = {
                        deviceId: driver.DeviceID,
                        date: [ driver.DriverDate.slice(0, 4), driver.DriverDate.slice(4, 6), driver.DriverDate.slice(6, 8) ].join("-"),
                        version: driver.DriverVersion,
                        name: driver.DeviceName,
                        manufacturer: driver ? driver.Manufacturer : null,
                        inf: driver.InfName
                    }, regPath = "SYSTEM\\CurrentControlSet\\Control\\Class\\" + driver.ClassGuid, regData = _wmiRegistry.wmiRegistry.EnumKey(_wmiRegistry.wmiRegistry.HKLM, regPath), _iterator = regData, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {
                        var _ref;
                        if (_isArray) {
                            if (_i >= _iterator.length) break;
                            _ref = _iterator[_i++];
                        } else {
                            _i = _iterator.next();
                            if (_i.done) break;
                            _ref = _i.value;
                        }
                        var regSection = _ref;
                        if (_wmiRegistry.wmiRegistry.GetStringValue(_wmiRegistry.wmiRegistry.HKLM, regPath + "\\" + regSection, "InfPath") === dr.inf) {
                            var regDate = _wmiRegistry.wmiRegistry.GetStringValue(_wmiRegistry.wmiRegistry.HKLM, regPath + "\\" + regSection, "DriverDate");
                            dr.date = [ regDate.split("-")[2], ("0" + regDate.split("-")[0]).slice(-2), ("0" + regDate.split("-")[1]).slice(-2) ].join("-");
                            break;
                        }
                    }
                    results.push(dr);
                }
            });
            return results;
        }
        exports.__esModule = !0;
        exports.getDrivers = getDrivers;
        var _wmi = __webpack_require__(13), _wmiRegistry = __webpack_require__(80);
    },
    173: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var _wmi = __webpack_require__(13), _trimVendorName = __webpack_require__(76), _trimVendorName2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_trimVendorName);
        exports["default"] = function(_ref) {
            var _ref$Vendor = _ref.Vendor, Vendor = _ref$Vendor === undefined ? "Noname" : _ref$Vendor, _ref$Name = _ref.Name, Name = _ref$Name === undefined ? "Unknown" : _ref$Name, chassis = (0, 
            _wmi.getWMIObjects)([ "ChassisTypes" ], "Win32_SystemEnclosure"), type = void 0;
            if (!(chassis && chassis[0] && chassis[0].ChassisTypes && chassis[0].ChassisTypes[0])) type = "Other"; else switch (chassis[0].ChassisTypes[0]) {
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 13:
              case 15:
              case 16:
                type = "Desktop";
                break;

              case 8:
              case 9:
              case 10:
              case 11:
              case 14:
                return "Notebook";

              default:
                type = "Other";
            }
            if ([ /virtualbox/i, /vmware/i ].some(function(reg) {
                return reg.test(Name);
            })) return type;
            if (0 === (0, _wmi.getWMIObjects)([ "Name" ], "Win32_Battery").length) return type;
            if ("Other" === type) return "Notebook";
            if ("Desktop" === type && "micro-star" === (0, _trimVendorName2["default"])(Vendor)) return "Notebook"; else return type;
        };
        module.exports = exports["default"];
    },
    174: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var _fso = __webpack_require__(9), _specialFolders = __webpack_require__(14), _localFiles = __webpack_require__(15), _getDiagnostics = __webpack_require__(90), _getDiagnostics2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_getDiagnostics), analyseSoftChanges = function(prev, cur) {
            var res = {
                installed: [],
                uninstalled: [],
                updated: []
            };
            if (!prev.Software || !prev.Software["Installed Software"]) return res;
            var prevSoft = prev.Software["Installed Software"], curSoft = cur.Software["Installed Software"];
            res.installed = curSoft.filter(function(csoft) {
                return !prevSoft.find(function(psoft) {
                    return psoft.Program === csoft.Program;
                });
            });
            res.uninstalled = prevSoft.filter(function(psoft) {
                return !curSoft.find(function(csoft) {
                    return csoft.Program === psoft.Program;
                });
            });
            res.updated = curSoft.filter(function(csoft) {
                return prevSoft.find(function(psoft) {
                    return psoft.Program === csoft.Program && psoft.Version !== csoft.Version;
                });
            });
            return res;
        }, checkPrevSoftFile = function(fullPath) {
            try {
                if (_fso.fso.FileExists(fullPath)) {
                    var fileIn = _fso.fso.OpenTextFile(fullPath, 1, !0, -1), prev = JSON.parse(fileIn.ReadAll());
                    fileIn.Close();
                    return prev;
                }
            } catch (e) {}
            return {};
        };
        exports["default"] = function(cur) {
            var path = _specialFolders.AppData + "\\DRPSu\\diagnostics\\", fullPathCur = path + "newsoft.json", fullPathPrev = path + "soft.json";
            try {
                if (!cur) cur = JSON.parse((0, _localFiles.queryFile)(fullPathCur, 6e4));
            } catch (err) {
                cur = (0, _getDiagnostics2["default"])("soft");
            }
            var prev = checkPrevSoftFile(fullPathPrev), changes = analyseSoftChanges(prev, cur);
            (0, _localFiles.createFile)(path, "soft.json", JSON.stringify(cur));
            return changes;
        };
        module.exports = exports["default"];
    },
    175: function(module, exports, __webpack_require__) {
        "use strict";
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        exports.__esModule = !0;
        var _wmi = __webpack_require__(13), Registry = function() {
            function Registry(is64) {
                _classCallCheck(this, Registry);
                this.is64 = is64;
                this.HKCR = 2147483648;
                this.HKCU = 2147483649;
                this.HKLM = 2147483650;
                this.HKUS = 2147483651;
                this.HKCC = 2147483653;
                this.REG_SZ = 1;
                this.REG_EXPAND_SZ = 2;
                this.REG_BINARY = 3;
                this.REG_DWORD = 4;
                this.REG_MULTI_SZ = 7;
                this.connect(is64);
            }
            Registry.prototype.connect = function() {
                var context = this.is64 ? {
                    __ProviderArchitecture: 64,
                    __RequiredArchitecture: !0
                } : null;
                this.stdregprov = (0, _wmi.ConnectServer)("root\\default", context).Get("StdRegProv");
            };
            Registry.prototype._exec = function(methodName, hkey, key, valueName) {
                var inParameters = this.stdregprov.Methods_.Item(methodName).InParameters.SpawnInstance_();
                inParameters.hDefKey = hkey;
                inParameters.sSubKeyName = key;
                if (valueName) inParameters.sValueName = valueName;
                return this.stdregprov.ExecMethod_(methodName, inParameters);
            };
            Registry.prototype.exec = function() {
                try {
                    return this._exec.apply(this, arguments);
                } catch (err) {
                    this.connect();
                    return this._exec.apply(this, arguments);
                }
            };
            Registry.prototype.EnumKey = function(hkey, key) {
                var outParameters = this.exec("EnumKey", hkey, key), names = [];
                if (null != outParameters.sNames && outParameters.sNames.toArray) names = outParameters.sNames.toArray();
                return names;
            };
            Registry.prototype.EnumValues = function(hkey, key) {
                var outParameters = this.exec("EnumValues", hkey, key), valueNames = [];
                if (null != outParameters.sNames && outParameters.sNames.toArray) valueNames = outParameters.sNames.toArray();
                var valueTypes = [];
                if (null != outParameters.sNames && outParameters.Types.toArray) valueTypes = outParameters.Types.toArray();
                return {
                    Names: valueNames,
                    Types: valueTypes
                };
            };
            Registry.prototype.GetStringValue = function(hkey, key, name) {
                return this.exec("GetStringValue", hkey, key, name).sValue;
            };
            Registry.prototype.GetExpandedStringValue = function(hkey, key, name) {
                return this.exec("GetExpandedStringValue", hkey, key, name).sValue;
            };
            Registry.prototype.GetDWORDValue = function(hkey, key, name) {
                return this.exec("GetDWORDValue", hkey, key, name).uValue;
            };
            return Registry;
        }();
        exports["default"] = Registry;
        module.exports = exports["default"];
    },
    177: function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(5), isArray = __webpack_require__(122), SPECIES = __webpack_require__(3)("species");
        module.exports = function(original) {
            var C;
            if (isArray(original)) {
                C = original.constructor;
                if ("function" == typeof C && (C === Array || isArray(C.prototype))) C = undefined;
                if (isObject(C)) {
                    C = C[SPECIES];
                    if (null === C) C = undefined;
                }
            }
            return C === undefined ? Array : C;
        };
    },
    178: function(module, exports, __webpack_require__) {
        var speciesConstructor = __webpack_require__(177);
        module.exports = function(original, length) {
            return new (speciesConstructor(original))(length);
        };
    },
    18: function(module, exports, __webpack_require__) {
        var IObject = __webpack_require__(57), defined = __webpack_require__(25);
        module.exports = function(it) {
            return IObject(defined(it));
        };
    },
    185: function(module, exports, __webpack_require__) {
        "use strict";
        var getKeys = __webpack_require__(39), gOPS = __webpack_require__(101), pIE = __webpack_require__(62), toObject = __webpack_require__(19), IObject = __webpack_require__(57), $assign = Object.assign;
        module.exports = !$assign || __webpack_require__(4)(function() {
            var A = {}, B = {}, S = Symbol(), K = "abcdefghijklmnopqrst";
            A[S] = 7;
            K.split("").forEach(function(k) {
                B[k] = k;
            });
            return 7 != $assign({}, A)[S] || Object.keys($assign({}, B)).join("") != K;
        }) ? function(target, source) {
            for (var T = toObject(target), aLen = arguments.length, index = 1, getSymbols = gOPS.f, isEnum = pIE.f; aLen > index; ) for (var key, S = IObject(arguments[index++]), keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S), length = keys.length, j = 0; length > j; ) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
            return T;
        } : $assign;
    },
    19: function(module, exports, __webpack_require__) {
        var defined = __webpack_require__(25);
        module.exports = function(it) {
            return Object(defined(it));
        };
    },
    20: function(module, exports) {
        var toString = {}.toString;
        module.exports = function(it) {
            return toString.call(it).slice(8, -1);
        };
    },
    21: function(module, exports) {
        var hasOwnProperty = {}.hasOwnProperty;
        module.exports = function(it, key) {
            return hasOwnProperty.call(it, key);
        };
    },
    22: function(module, exports, __webpack_require__) {
        var dP = __webpack_require__(10), createDesc = __webpack_require__(40);
        module.exports = __webpack_require__(7) ? function(object, key, value) {
            return dP.f(object, key, createDesc(1, value));
        } : function(object, key, value) {
            object[key] = value;
            return object;
        };
    },
    221: function(module, exports) {
        module.exports = [ {
            name: "HP",
            altNames: [ "hewlett-packard", "hp", "probook", "hp-pavilion" ],
            prioritized: 1
        }, {
            name: "Asus",
            altNames: [ "asus", "asustek" ],
            prioritized: 1
        }, {
            name: "Lenovo",
            altNames: [ "lenovo", "lenovo notebook", "lnv" ],
            prioritized: 1
        }, {
            name: "Acer",
            altNames: [ "acer" ],
            prioritized: 1
        }, {
            name: "Dell",
            altNames: [ "dell", "dellinc", "wyse" ],
            prioritized: 1
        }, {
            name: "Toshiba",
            altNames: [ "toshiba", "semp toshiba", "semp toshiba informaticaa", "semp toshiba informatica ltda" ],
            prioritized: 1
        }, {
            name: "Samsung",
            altNames: [ "samsung" ],
            prioritized: 1
        }, {
            name: "Sony",
            altNames: [ "sony", "vaio" ],
            prioritized: 1
        }, {
            name: "Packard Bell",
            altNames: [ "packard bell", "packard bells", "packard bell bv", "packard bell nec", "parkard bell" ],
            prioritized: 1
        }, {
            name: "eMachines",
            altNames: [ "emachines" ],
            prioritized: 0
        }, {
            name: "Fujitsu",
            altNames: [ "fujitsu", "fujitsu siemens", "fujitsu siemems" ],
            prioritized: 1
        }, {
            name: "Pegatron",
            altNames: [ "pegatron" ],
            prioritized: 0
        }, {
            name: "Intel",
            altNames: [ "intel", "intelr", "intel(r)atom" ],
            prioritized: 0
        }, {
            name: "MSI",
            altNames: [ "micro-star", "msi_nb", "msi", "micro-star int'l" ],
            prioritized: 1
        }, {
            name: "Clevo",
            altNames: [ "clevo" ],
            prioritized: 0
        }, {
            name: "Positivo",
            altNames: [ "positivo", "positivo informatica", "positivo informaticaa", "positivo bgh", "positivo informatica s/a" ],
            prioritized: 0
        }, {
            name: "Gateway",
            altNames: [ "gateway" ],
            prioritized: 0
        }, {
            name: "Apple",
            altNames: [ "apple" ],
            prioritized: 1
        }, {
            name: "LG",
            altNames: [ "lg" ],
            prioritized: 1
        }, {
            name: "DNS",
            altNames: [ "dns", "dns center", "dns computer center" ],
            prioritized: 0
        }, {
            name: "Quanta",
            altNames: [ "quanta", "kn1", "qci" ],
            prioritized: 0
        }, {
            name: "IBM",
            altNames: [ "ibm" ],
            prioritized: 0
        }, {
            name: "Digibras",
            altNames: [ "digibras" ],
            prioritized: 0
        }, {
            name: "Compal",
            altNames: [ "compal" ],
            prioritized: 0
        }, {
            name: "Medion",
            altNames: [ "medion", "medionag", "medionpc", "medionnb" ],
            prioritized: 0
        }, {
            name: "Casper",
            altNames: [ "casper", "casper bilgisayar", "casper bilgisayar sistemleri", "casper bilgisayar sistemleri.a.s", "casper bilgisayar sistemleria", "casper bilgisayar sistemleris" ],
            prioritized: 0
        }, {
            name: "Insyde",
            altNames: [ "insyde" ],
            prioritized: 0
        }, {
            name: "Itautec",
            altNames: [ "itautec", "itauteca", "itautec philco", "itautec philcoa" ],
            prioritized: 0
        }, {
            name: "Axioo",
            altNames: [ "axioo" ],
            prioritized: 0
        }, {
            name: "VIT",
            altNames: [ "vit" ],
            prioritized: 0
        }, {
            name: "Alienware",
            altNames: [ "alienware" ],
            prioritized: 0
        }, {
            name: "NEC",
            altNames: [ "nec", "necs", "nec csd", "necs sas" ],
            prioritized: 0
        }, {
            name: "HCL",
            altNames: [ "hcl", "hcl infosystems" ],
            prioritized: 0
        }, {
            name: "DEXP",
            altNames: [ "dexp" ],
            prioritized: 0
        }, {
            name: "Arcelik",
            altNames: [ "arcelik", "arceliks", "arcelik-a.s" ],
            prioritized: 0
        }, {
            name: "Microsoft",
            altNames: [ "microsoft" ],
            prioritized: 0
        }, {
            name: "Panasonic",
            altNames: [ "panasonic", "matsushita electric industrial" ],
            prioritized: 1
        }, {
            name: "ECS",
            altNames: [ "ecs" ],
            prioritized: 0
        }, {
            name: "Benq",
            altNames: [ "benq" ],
            prioritized: 0
        }, {
            name: "Haier",
            altNames: [ "haier", "haiercomputer", "haier information" ],
            prioritized: 0
        }, {
            name: "Prestigio",
            altNames: [ "prestigio" ],
            prioritized: 0
        }, {
            name: "Gigabyte",
            altNames: [ "gigabyte", "gbt", "gigabyte tecohnology" ],
            prioritized: 0
        }, {
            name: "Compaq",
            altNames: [ "compaq" ],
            prioritized: 0
        }, {
            name: "Bangho",
            altNames: [ "bangho" ],
            prioritized: 0
        }, {
            name: "ExoPC",
            altNames: [ "exo", "exopc" ],
            prioritized: 0
        }, {
            name: "Megaware",
            altNames: [ "megaware" ],
            prioritized: 0
        }, {
            name: "Wipro",
            altNames: [ "wipro" ],
            prioritized: 0
        }, {
            name: "Exper",
            altNames: [ "exper", "expers", "exper@datateknik", "karizma a5v" ],
            prioritized: 0
        }, {
            name: "CCE",
            altNames: [ "cce", "cceinf" ],
            prioritized: 0
        }, {
            name: "Rover",
            altNames: [ "rover", "roverbook", "infomash", "ooo infomash", "ooo infomach" ],
            prioritized: 0
        }, {
            name: "Oysters",
            altNames: [ "oysters" ],
            prioritized: 0
        }, {
            name: "Spa Condor",
            altNames: [ "spa condor" ],
            prioritized: 0
        }, {
            name: "Irbis",
            altNames: [ "irbis" ],
            prioritized: 0
        }, {
            name: "Hasee",
            altNames: [ "hasee", "hasee co,.ltd" ],
            prioritized: 0
        }, {
            name: "Siragon",
            altNames: [ "siragon" ],
            prioritized: 0
        }, {
            name: "RM",
            altNames: [ "rm plc", "rm education" ],
            prioritized: 0
        }, {
            name: "Alaska",
            altNames: [ "alaska" ],
            prioritized: 0
        }, {
            name: "Monster",
            altNames: [ "monster", "monster notebook" ],
            prioritized: 0
        }, {
            name: "Micromax",
            altNames: [ "micromax" ],
            prioritized: 0
        }, {
            name: "MTC",
            altNames: [ "mtc" ],
            prioritized: 0
        }, {
            name: "Advance",
            altNames: [ "advance", "advan", "advanc" ],
            prioritized: 0
        }, {
            name: "Gericom",
            altNames: [ "gericom" ],
            prioritized: 0
        }, {
            name: "i-Life",
            altNames: [ "ilife", "i-life", "i-life digital llc" ],
            prioritized: 0
        }, {
            name: "Noblex",
            altNames: [ "noblex", "noblex argentina" ],
            prioritized: 0
        }, {
            name: "Deltron",
            altNames: [ "deltron" ],
            prioritized: 0
        }, {
            name: "DixonsXP",
            altNames: [ "dixonsxp" ],
            prioritized: 0
        }, {
            name: "Wortmann",
            altNames: [ "wortmann" ],
            prioritized: 0
        }, {
            name: "YiFang",
            altNames: [ "yifang" ],
            prioritized: 0
        }, {
            name: "PTLTD",
            altNames: [ "ptltd" ],
            prioritized: 0
        }, {
            name: "FIC",
            altNames: [ "fic" ],
            prioritized: 0
        }, {
            name: "CZC",
            altNames: [ "czc" ],
            prioritized: 0
        }, {
            name: "Onda",
            altNames: [ "onda" ],
            prioritized: 0
        }, {
            name: "DBM",
            altNames: [ "dbm", "dbm maroc" ],
            prioritized: 0
        }, {
            name: "Maxdata",
            altNames: [ "maxdata" ],
            prioritized: 0
        }, {
            name: "PinnacleMicro",
            altNames: [ "pinnaclemicro", "pinnacle micro" ],
            prioritized: 0
        }, {
            name: "Login",
            altNames: [ "login", "login informaticaa", "login informática", "login informáticaa" ],
            prioritized: 0
        }, {
            name: "Vestel",
            altNames: [ "vestel", "vestel dijitals" ],
            prioritized: 0
        }, {
            name: "PC Smart",
            altNames: [ "pcsmart", "pcsmarta", "pcsmarta.s" ],
            prioritized: 0
        }, {
            name: "Compumax",
            altNames: [ "compumax", "compumaxa" ],
            prioritized: 0
        }, {
            name: "Mustek",
            altNames: [ "mustek", "mustek6376mst6376" ],
            prioritized: 0
        }, {
            name: "Olidata",
            altNames: [ "olidata", "olidata chilea", "olidatap", "computacion olidata" ],
            prioritized: 0
        }, {
            name: "Radio Victoria Fueguina",
            altNames: [ "radio victoria fueguina", "radio victoria fueguinaa" ],
            prioritized: 0
        }, {
            name: "Shenzhen",
            altNames: [ "shenzhen", "shenzhen da&fong", "shenzhen emc", "shenzhen yungtai imp. and exp. co", "shenzhen yungtai imp. and exp. co," ],
            prioritized: 0
        }, {
            name: "Depo",
            altNames: [ "depo", "depos" ],
            prioritized: 0
        }, {
            name: "Digitron",
            altNames: [ "digitron", "digitron da amazonia" ],
            prioritized: 0
        }, {
            name: "Lanix",
            altNames: [ "lanix", "lanix todos los derechos reservados", "corporativo lanix", "corporativo lanix,a. de c.v" ],
            prioritized: 0
        }, {
            name: "TCL",
            altNames: [ "tcl", "tcl cor.,ltd" ],
            prioritized: 0
        }, {
            name: "THD",
            altNames: [ "thd", "thd(thread)" ],
            prioritized: 0
        }, {
            name: "BGH",
            altNames: [ "bgh", "bgh e-nova" ],
            prioritized: 0
        }, {
            name: "Founder",
            altNames: [ "founder", "founder pc" ],
            prioritized: 0
        }, {
            name: "Microboard",
            altNames: [ "microboard", "microboard ind.e com.de produtos elet.itda" ],
            prioritized: 0
        }, {
            name: "Neo",
            altNames: [ "neo", "neo manufacturing & services", "neophl" ],
            prioritized: 0
        }, {
            name: "Standard",
            altNames: [ "standard", "stand" ],
            prioritized: 0
        }, {
            name: "Zepto",
            altNames: [ "zepto", "zeptol" ],
            prioritized: 0
        }, {
            name: "Zyrex",
            altNames: [ "zyrex", "zyrex system" ],
            prioritized: 0
        }, {
            name: "Crea",
            altNames: [ "crea", "creas" ],
            prioritized: 0
        }, {
            name: "Axdia",
            altNames: [ "axdia", "axdia gmbh" ],
            prioritized: 0
        }, {
            name: "Bytespeed",
            altNames: [ "bytespeed", "bytespeed llc" ],
            prioritized: 0
        }, {
            name: "Advantech",
            altNames: [ "advantech", "advantec" ],
            prioritized: 0
        }, {
            name: "Airis",
            altNames: [ "airis", "airs srl" ],
            prioritized: 0
        }, {
            name: "Beko",
            altNames: [ "beko", "bekopc" ],
            prioritized: 0
        }, {
            name: "Essentiel B",
            altNames: [ "essentiel b", "essentielb" ],
            prioritized: 0
        }, {
            name: "GoClever",
            altNames: [ "goclever" ],
            prioritized: 0
        }, {
            name: "iBall",
            altNames: [ "iball" ],
            prioritized: 0
        }, {
            name: "GD Itronix",
            altNames: [ "itronix", "gd itronix" ],
            prioritized: 0
        }, {
            name: "JP SA Couto",
            altNames: [ "jpsacouto", "jp sa couto" ],
            prioritized: 0
        }, {
            name: "MIPI",
            altNames: [ "mipi", "mipi pc" ],
            prioritized: 0
        }, {
            name: "Mouse Computer",
            altNames: [ "mouse computer", "mousecomputer" ],
            prioritized: 0
        }, {
            name: "Getac",
            altNames: [ "getac", "ncstech" ],
            prioritized: 0
        }, {
            name: "Phoenix",
            altNames: [ "phoenix", "phoenix/sis" ],
            prioritized: 0
        }, {
            name: "Stone",
            altNames: [ "stone", "stone-computers" ],
            prioritized: 0
        }, {
            name: "Sun",
            altNames: [ "sun", "sun microsystems" ],
            prioritized: 0
        }, {
            name: "Third Wave",
            altNames: [ "third wave", "thirdwave" ],
            prioritized: 0
        }, {
            name: "Biostar",
            altNames: [ "biostar", "biostar group" ]
        }, {
            name: "Noname",
            altNames: [ "a14cr", "a14cu", "a15cr03", "accm", "actebis", "algorithm", "american megatrends", "aral oyun ve konsols", "ati", "bauhn", "blank", "bluelight", "britania", "brunenit", "buster", "byt80cp", "centra", "cevena", "common version d12", "complet electro serv", "connect", "coradira", "creative vision", "default string", "dialogue", "dummymanufacturer", "ea", "efirstview", "egreat", "equus systems", "eurl saterex", "eurotradellc", "foxconn", "garbarino saic", "generic", "grupo nucleo", "h-buster", "head-links", "houter", "ifsa", "inco co,a. de c.v", "infinity", "insyde", "inupur", "jingwah-kaoge", "kampen", "kanji", "kennex", "l3000 y300", "logycoms", "merlion trade overseas", "mpman", "multilaser", "n3", "n/a", "navigator", "nca group", "n d", "nikon battery", "noname", "none", "notebook", "novatech", "o", "o.e.m", "o.e.m.", "odm", "oem", "oem pc", "oem default", "ox", "parallels software", "pcsy09", "pega pc", "plaisio", "quanmax", "soltech", "stem manufacturer", "system manufacturer", "telecomitalia", "tenco ind. com", "times", "timi", "to be filled by o.e.m", "top it industries sdn bhd", "tora", "tps", "trinity", "tsinghua tongfang", "uli", "uniwill", "unknown", "v5", "xxxxxx" ],
            prioritized: 0
        } ];
    },
    23: function(module, exports) {
        module.exports = function(it) {
            if ("function" != typeof it) throw TypeError(it + " is not a function!");
            return it;
        };
    },
    24: function(module, exports, __webpack_require__) {
        var aFunction = __webpack_require__(23);
        module.exports = function(fn, that, length) {
            aFunction(fn);
            if (that === undefined) return fn;
            switch (length) {
              case 1:
                return function(a) {
                    return fn.call(that, a);
                };

              case 2:
                return function(a, b) {
                    return fn.call(that, a, b);
                };

              case 3:
                return function(a, b, c) {
                    return fn.call(that, a, b, c);
                };
            }
            return function() {
                return fn.apply(that, arguments);
            };
        };
    },
    25: function(module, exports) {
        module.exports = function(it) {
            if (it == undefined) throw TypeError("Can't call method on  " + it);
            return it;
        };
    },
    26: function(module, exports, __webpack_require__) {
        var global = __webpack_require__(1), hide = __webpack_require__(22), has = __webpack_require__(21), SRC = __webpack_require__(43)("src"), $toString = Function.toString, TPL = ("" + $toString).split("toString");
        __webpack_require__(33).inspectSource = function(it) {
            return $toString.call(it);
        };
        (module.exports = function(O, key, val, safe) {
            var isFunction = "function" == typeof val;
            if (isFunction) has(val, "name") || hide(val, "name", key);
            if (O[key] !== val) {
                if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? "" + O[key] : TPL.join(String(key)));
                if (O === global) O[key] = val; else if (!safe) {
                    delete O[key];
                    hide(O, key, val);
                } else if (O[key]) O[key] = val; else hide(O, key, val);
            }
        })(Function.prototype, "toString", function() {
            return "function" == typeof this && this[SRC] || $toString.call(this);
        });
    },
    29: function(module, exports, __webpack_require__) {
        var pIE = __webpack_require__(62), createDesc = __webpack_require__(40), toIObject = __webpack_require__(18), toPrimitive = __webpack_require__(32), has = __webpack_require__(21), IE8_DOM_DEFINE = __webpack_require__(120), gOPD = Object.getOwnPropertyDescriptor;
        exports.f = __webpack_require__(7) ? gOPD : function(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, !0);
            if (IE8_DOM_DEFINE) try {
                return gOPD(O, P);
            } catch (e) {}
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
        };
    },
    3: function(module, exports, __webpack_require__) {
        var store = __webpack_require__(102)("wks"), uid = __webpack_require__(43), Symbol = __webpack_require__(1).Symbol, USE_SYMBOL = "function" == typeof Symbol;
        (module.exports = function(name) {
            return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)("Symbol." + name));
        }).store = store;
    },
    30: function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(0), core = __webpack_require__(33), fails = __webpack_require__(4);
        module.exports = function(KEY, exec) {
            var fn = (core.Object || {})[KEY] || Object[KEY], exp = {};
            exp[KEY] = exec(fn);
            $export($export.S + $export.F * fails(function() {
                fn(1);
            }), "Object", exp);
        };
    },
    314: function(module, exports, __webpack_require__) {
        !function(JSON) {
            "use strict";
            function f(n) {
                return n < 10 ? "0" + n : n;
            }
            function quote(string) {
                escapable.lastIndex = 0;
                return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
                    var c = meta[a];
                    return "string" == typeof c ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                }) + '"' : '"' + string + '"';
            }
            function str(key, holder) {
                var i, k, v, length, partial, mind = gap, value = holder[key];
                if (value && "object" == typeof value && "function" == typeof value.toJSON) value = value.toJSON(key);
                if ("function" == typeof rep) value = rep.call(holder, key, value);
                switch (typeof value) {
                  case "string":
                    return quote(value);

                  case "number":
                    return isFinite(value) ? String(value) : "null";

                  case "boolean":
                  case "null":
                    return String(value);

                  case "object":
                    if (!value) return "null";
                    gap += indent;
                    partial = [];
                    if ("[object Array]" === Object.prototype.toString.apply(value)) {
                        length = value.length;
                        for (i = 0; i < length; i += 1) partial[i] = str(i, value) || "null";
                        v = 0 === partial.length ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                        gap = mind;
                        return v;
                    }
                    if (rep && "object" == typeof rep) {
                        length = rep.length;
                        for (i = 0; i < length; i += 1) if ("string" == typeof rep[i]) {
                            k = rep[i];
                            v = str(k, value);
                            if (v) partial.push(quote(k) + (gap ? ": " : ":") + v);
                        }
                    } else for (k in value) if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) partial.push(quote(k) + (gap ? ": " : ":") + v);
                    }
                    v = 0 === partial.length ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
                    gap = mind;
                    return v;
                }
            }
            if (!1) {
                if ("function" != typeof Date.prototype.toJSON) Date.prototype.toJSON = function(key) {
                    return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null;
                };
                if ("function" != typeof String.prototype.toJSON) String.prototype.toJSON = function(key) {
                    return this.valueOf();
                };
                if ("function" != typeof Number.prototype.toJSON) Number.prototype.toJSON = function(key) {
                    return this.valueOf();
                };
                if ("function" != typeof Boolean.prototype.toJSON) Boolean.prototype.toJSON = function(key) {
                    return this.valueOf();
                };
            }
            var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            }, rep;
            if ("function" != typeof JSON.stringify) JSON.stringify = function(value, replacer, space) {
                var i;
                gap = "";
                indent = "";
                if ("number" == typeof space) for (i = 0; i < space; i += 1) indent += " "; else if ("string" == typeof space) indent = space;
                rep = replacer;
                if (replacer && "function" != typeof replacer && ("object" != typeof replacer || "number" != typeof replacer.length)) throw new Error("JSON.stringify");
                return str("", {
                    "": value
                });
            };
            if ("function" != typeof JSON.parse) JSON.parse = function(text, reviver) {
                function walk(holder, key) {
                    var k, v, value = holder[key];
                    if (value && "object" == typeof value) for (k in value) if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = walk(value, k);
                        if (v !== undefined) value[k] = v; else delete value[k];
                    }
                    return reviver.call(holder, key, value);
                }
                var j;
                text = String(text);
                cx.lastIndex = 0;
                if (cx.test(text)) text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                });
                if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                    j = eval("(" + text + ")");
                    return "function" == typeof reviver ? walk({
                        "": j
                    }, "") : j;
                }
                throw new SyntaxError("JSON.parse");
            };
        }(!0 ? exports : window.JSON ? window.JSON : window.JSON = {});
    },
    315: function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
        !function(t, r) {
            "use strict";
            if (!0) __WEBPACK_AMD_DEFINE_FACTORY__ = r, (__WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof __WEBPACK_AMD_DEFINE_FACTORY__ ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__) !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__); else if ("object" == typeof exports) module.exports = r(); else t.returnExports = r();
        }(this, function() {
            var D, M, t = Array, r = t.prototype, e = Object, n = e.prototype, i = Function, a = i.prototype, o = String, f = o.prototype, u = Number, l = u.prototype, s = r.slice, c = r.splice, v = r.push, h = r.unshift, p = r.concat, y = r.join, d = a.call, g = a.apply, w = Math.max, b = Math.min, T = n.toString, m = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag, S = Function.prototype.toString, x = /^\s*class /, O = function(t) {
                try {
                    var r = S.call(t), e = r.replace(/\/\/.*\n/g, ""), n = e.replace(/\/\*[.\s\S]*\*\//g, ""), i = n.replace(/\n/gm, " ").replace(/ {2}/g, " ");
                    return x.test(i);
                } catch (a) {
                    return !1;
                }
            }, E = function(t) {
                try {
                    if (O(t)) return !1;
                    S.call(t);
                    return !0;
                } catch (r) {
                    return !1;
                }
            }, D = function(t) {
                if (!t) return !1;
                if ("function" != typeof t && "object" != typeof t) return !1;
                if (m) return E(t);
                if (O(t)) return !1;
                var r = T.call(t);
                return "[object Function]" === r || "[object GeneratorFunction]" === r;
            }, U = RegExp.prototype.exec, F = function(t) {
                try {
                    U.call(t);
                    return !0;
                } catch (r) {
                    return !1;
                }
            };
            M = function(t) {
                if ("object" != typeof t) return !1; else return m ? F(t) : "[object RegExp]" === T.call(t);
            };
            var C, k = String.prototype.valueOf, A = function(t) {
                try {
                    k.call(t);
                    return !0;
                } catch (r) {
                    return !1;
                }
            };
            C = function(t) {
                if ("string" == typeof t) return !0;
                if ("object" != typeof t) return !1; else return m ? A(t) : "[object String]" === T.call(t);
            };
            var $ = e.defineProperty && function() {
                try {
                    var t = {};
                    e.defineProperty(t, "x", {
                        enumerable: !1,
                        value: t
                    });
                    for (var r in t) return !1;
                    return t.x === t;
                } catch (n) {
                    return !1;
                }
            }(), P = function(t) {
                var r;
                if ($) r = function(t, r, n, i) {
                    if (i || !(r in t)) e.defineProperty(t, r, {
                        configurable: !0,
                        enumerable: !1,
                        writable: !0,
                        value: n
                    });
                }; else r = function(t, r, e, n) {
                    if (n || !(r in t)) t[r] = e;
                };
                return function(e, n, i) {
                    for (var a in n) if (t.call(n, a)) r(e, a, n[a], i);
                };
            }(n.hasOwnProperty), J = function(t) {
                var r = typeof t;
                return null === t || "object" !== r && "function" !== r;
            }, Y = u.isNaN || function(t) {
                return t !== t;
            }, Z = {
                ToInteger: function(t) {
                    var r = +t;
                    if (Y(r)) r = 0; else if (0 !== r && r !== 1 / 0 && r !== -1 / 0) r = (r > 0 || -1) * Math.floor(Math.abs(r));
                    return r;
                },
                ToPrimitive: function(t) {
                    var r, e, n;
                    if (J(t)) return t;
                    e = t.valueOf;
                    if (D(e)) {
                        r = e.call(t);
                        if (J(r)) return r;
                    }
                    n = t.toString;
                    if (D(n)) {
                        r = n.call(t);
                        if (J(r)) return r;
                    }
                    throw new TypeError();
                },
                ToObject: function(t) {
                    if (null == t) throw new TypeError("can't convert " + t + " to object");
                    return e(t);
                },
                ToUint32: function(t) {
                    return t >>> 0;
                }
            }, z = function() {};
            P(a, {
                bind: function(t) {
                    var r = this;
                    if (!D(r)) throw new TypeError("Function.prototype.bind called on incompatible " + r);
                    for (var a, n = s.call(arguments, 1), o = function() {
                        if (this instanceof a) {
                            var i = g.call(r, this, p.call(n, s.call(arguments)));
                            if (e(i) === i) return i; else return this;
                        } else return g.call(r, t, p.call(n, s.call(arguments)));
                    }, f = w(0, r.length - n.length), u = [], l = 0; l < f; l++) v.call(u, "$" + l);
                    a = i("binder", "return function (" + y.call(u, ",") + "){ return binder.apply(this, arguments); }")(o);
                    if (r.prototype) {
                        z.prototype = r.prototype;
                        a.prototype = new z();
                        z.prototype = null;
                    }
                    return a;
                }
            });
            var G = d.bind(n.hasOwnProperty), B = d.bind(n.toString), H = d.bind(s), W = g.bind(s);
            if ("object" == typeof document && document && document.documentElement) try {
                H(document.documentElement.childNodes);
            } catch (L) {
                var X = H, q = W;
                H = function(t) {
                    for (var r = [], e = t.length; e-- > 0; ) r[e] = t[e];
                    return q(r, X(arguments, 1));
                };
                W = function(t, r) {
                    return q(H(t), r);
                };
            }
            var K = d.bind(f.slice), Q = d.bind(f.split), V = d.bind(f.indexOf), _ = d.bind(v), tt = d.bind(n.propertyIsEnumerable), rt = d.bind(r.sort), et = t.isArray || function(t) {
                return "[object Array]" === B(t);
            }, nt = 1 !== [].unshift(0);
            P(r, {
                unshift: function() {
                    h.apply(this, arguments);
                    return this.length;
                }
            }, nt);
            P(t, {
                isArray: et
            });
            var it = e("a"), at = "a" !== it[0] || !(0 in it), ot = function(t) {
                var r = !0, e = !0, n = !1;
                if (t) try {
                    t.call("foo", function(t, e, n) {
                        if ("object" != typeof n) r = !1;
                    });
                    t.call([ 1 ], function() {
                        "use strict";
                        e = "string" == typeof this;
                    }, "x");
                } catch (i) {
                    n = !0;
                }
                return !!t && !n && r && e;
            };
            P(r, {
                forEach: function(t) {
                    var a, r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = -1, i = Z.ToUint32(e.length);
                    if (arguments.length > 1) a = arguments[1];
                    if (!D(t)) throw new TypeError("Array.prototype.forEach callback must be a function");
                    for (;++n < i; ) if (n in e) if (void 0 === a) t(e[n], n, r); else t.call(a, e[n], n, r);
                }
            }, !ot(r.forEach));
            P(r, {
                map: function(r) {
                    var o, e = Z.ToObject(this), n = at && C(this) ? Q(this, "") : e, i = Z.ToUint32(n.length), a = t(i);
                    if (arguments.length > 1) o = arguments[1];
                    if (!D(r)) throw new TypeError("Array.prototype.map callback must be a function");
                    for (var f = 0; f < i; f++) if (f in n) if (void 0 === o) a[f] = r(n[f], f, e); else a[f] = r.call(o, n[f], f, e);
                    return a;
                }
            }, !ot(r.map));
            P(r, {
                filter: function(t) {
                    var a, o, r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = Z.ToUint32(e.length), i = [];
                    if (arguments.length > 1) o = arguments[1];
                    if (!D(t)) throw new TypeError("Array.prototype.filter callback must be a function");
                    for (var f = 0; f < n; f++) if (f in e) {
                        a = e[f];
                        if (void 0 === o ? t(a, f, r) : t.call(o, a, f, r)) _(i, a);
                    }
                    return i;
                }
            }, !ot(r.filter));
            P(r, {
                every: function(t) {
                    var i, r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = Z.ToUint32(e.length);
                    if (arguments.length > 1) i = arguments[1];
                    if (!D(t)) throw new TypeError("Array.prototype.every callback must be a function");
                    for (var a = 0; a < n; a++) if (a in e && !(void 0 === i ? t(e[a], a, r) : t.call(i, e[a], a, r))) return !1;
                    return !0;
                }
            }, !ot(r.every));
            P(r, {
                some: function(t) {
                    var i, r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = Z.ToUint32(e.length);
                    if (arguments.length > 1) i = arguments[1];
                    if (!D(t)) throw new TypeError("Array.prototype.some callback must be a function");
                    for (var a = 0; a < n; a++) if (a in e && (void 0 === i ? t(e[a], a, r) : t.call(i, e[a], a, r))) return !0;
                    return !1;
                }
            }, !ot(r.some));
            var ft = !1;
            if (r.reduce) ft = "object" == typeof r.reduce.call("es5", function(t, r, e, n) {
                return n;
            });
            P(r, {
                reduce: function(t) {
                    var r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = Z.ToUint32(e.length);
                    if (!D(t)) throw new TypeError("Array.prototype.reduce callback must be a function");
                    if (0 === n && 1 === arguments.length) throw new TypeError("reduce of empty array with no initial value");
                    var a, i = 0;
                    if (arguments.length >= 2) a = arguments[1]; else for (;;) {
                        if (i in e) {
                            a = e[i++];
                            break;
                        }
                        if (++i >= n) throw new TypeError("reduce of empty array with no initial value");
                    }
                    for (;i < n; i++) if (i in e) a = t(a, e[i], i, r);
                    return a;
                }
            }, !ft);
            var ut = !1;
            if (r.reduceRight) ut = "object" == typeof r.reduceRight.call("es5", function(t, r, e, n) {
                return n;
            });
            P(r, {
                reduceRight: function(t) {
                    var r = Z.ToObject(this), e = at && C(this) ? Q(this, "") : r, n = Z.ToUint32(e.length);
                    if (!D(t)) throw new TypeError("Array.prototype.reduceRight callback must be a function");
                    if (0 === n && 1 === arguments.length) throw new TypeError("reduceRight of empty array with no initial value");
                    var i, a = n - 1;
                    if (arguments.length >= 2) i = arguments[1]; else for (;;) {
                        if (a in e) {
                            i = e[a--];
                            break;
                        }
                        if (--a < 0) throw new TypeError("reduceRight of empty array with no initial value");
                    }
                    if (a < 0) return i;
                    do {
                        if (a in e) i = t(i, e[a], a, r);
                    } while (a--);
                    return i;
                }
            }, !ut);
            var lt = r.indexOf && -1 !== [ 0, 1 ].indexOf(1, 2);
            P(r, {
                indexOf: function(t) {
                    var r = at && C(this) ? Q(this, "") : Z.ToObject(this), e = Z.ToUint32(r.length);
                    if (0 === e) return -1;
                    var n = 0;
                    if (arguments.length > 1) n = Z.ToInteger(arguments[1]);
                    n = n >= 0 ? n : w(0, e + n);
                    for (;n < e; n++) if (n in r && r[n] === t) return n;
                    return -1;
                }
            }, lt);
            var st = r.lastIndexOf && -1 !== [ 0, 1 ].lastIndexOf(0, -3);
            P(r, {
                lastIndexOf: function(t) {
                    var r = at && C(this) ? Q(this, "") : Z.ToObject(this), e = Z.ToUint32(r.length);
                    if (0 === e) return -1;
                    var n = e - 1;
                    if (arguments.length > 1) n = b(n, Z.ToInteger(arguments[1]));
                    n = n >= 0 ? n : e - Math.abs(n);
                    for (;n >= 0; n--) if (n in r && t === r[n]) return n;
                    return -1;
                }
            }, st);
            var ct = function() {
                var t = [ 1, 2 ], r = t.splice();
                return 2 === t.length && et(r) && 0 === r.length;
            }();
            P(r, {
                splice: function(t, r) {
                    if (0 === arguments.length) return []; else return c.apply(this, arguments);
                }
            }, !ct);
            var vt = function() {
                var t = {};
                r.splice.call(t, 0, 0, 1);
                return 1 === t.length;
            }();
            P(r, {
                splice: function(t, r) {
                    if (0 === arguments.length) return [];
                    var e = arguments;
                    this.length = w(Z.ToInteger(this.length), 0);
                    if (arguments.length > 0 && "number" != typeof r) {
                        e = H(arguments);
                        if (e.length < 2) _(e, this.length - t); else e[1] = Z.ToInteger(r);
                    }
                    return c.apply(this, e);
                }
            }, !vt);
            var ht = function() {
                var r = new t(1e5);
                r[8] = "x";
                r.splice(1, 1);
                return 7 === r.indexOf("x");
            }(), pt = function() {
                var r = [];
                r[256] = "a";
                r.splice(257, 0, "b");
                return "a" === r[256];
            }();
            P(r, {
                splice: function(t, r) {
                    for (var s, e = Z.ToObject(this), n = [], i = Z.ToUint32(e.length), a = Z.ToInteger(t), f = a < 0 ? w(i + a, 0) : b(a, i), u = b(w(Z.ToInteger(r), 0), i - f), l = 0; l < u; ) {
                        s = o(f + l);
                        if (G(e, s)) n[l] = e[s];
                        l += 1;
                    }
                    var h, c = H(arguments, 2), v = c.length;
                    if (v < u) {
                        l = f;
                        for (var p = i - u; l < p; ) {
                            s = o(l + u);
                            h = o(l + v);
                            if (G(e, s)) e[h] = e[s]; else delete e[h];
                            l += 1;
                        }
                        l = i;
                        for (var y = i - u + v; l > y; ) {
                            delete e[l - 1];
                            l -= 1;
                        }
                    } else if (v > u) {
                        l = i - u;
                        for (;l > f; ) {
                            s = o(l + u - 1);
                            h = o(l + v - 1);
                            if (G(e, s)) e[h] = e[s]; else delete e[h];
                            l -= 1;
                        }
                    }
                    l = f;
                    for (var d = 0; d < c.length; ++d) {
                        e[l] = c[d];
                        l += 1;
                    }
                    e.length = i - u + v;
                    return n;
                }
            }, !ht || !pt);
            var dt, yt = r.join;
            try {
                dt = "1,2,3" !== Array.prototype.join.call("123", ",");
            } catch (L) {
                dt = !0;
            }
            if (dt) P(r, {
                join: function(t) {
                    var r = void 0 === t ? "," : t;
                    return yt.call(C(this) ? Q(this, "") : this, r);
                }
            }, dt);
            var gt = "1,2" !== [ 1, 2 ].join(undefined);
            if (gt) P(r, {
                join: function(t) {
                    var r = void 0 === t ? "," : t;
                    return yt.call(this, r);
                }
            }, gt);
            var wt = function(t) {
                for (var r = Z.ToObject(this), e = Z.ToUint32(r.length), n = 0; n < arguments.length; ) {
                    r[e + n] = arguments[n];
                    n += 1;
                }
                r.length = e + n;
                return e + n;
            }, bt = function() {
                var t = {};
                return 1 !== Array.prototype.push.call(t, undefined) || 1 !== t.length || "undefined" != typeof t[0] || !G(t, 0);
            }();
            P(r, {
                push: function(t) {
                    if (et(this)) return v.apply(this, arguments); else return wt.apply(this, arguments);
                }
            }, bt);
            var Tt = function() {
                var t = [];
                return 1 !== t.push(undefined) || 1 !== t.length || "undefined" != typeof t[0] || !G(t, 0);
            }();
            P(r, {
                push: wt
            }, Tt);
            P(r, {
                slice: function(t, r) {
                    var e = C(this) ? Q(this, "") : this;
                    return W(e, arguments);
                }
            }, at);
            var mt = function() {
                try {
                    [ 1, 2 ].sort(null);
                } catch (t) {
                    try {
                        [ 1, 2 ].sort({});
                    } catch (r) {
                        return !1;
                    }
                }
                return !0;
            }(), Dt = function() {
                try {
                    [ 1, 2 ].sort(/a/);
                    return !1;
                } catch (t) {}
                return !0;
            }(), St = function() {
                try {
                    [ 1, 2 ].sort(undefined);
                    return !0;
                } catch (t) {}
                return !1;
            }();
            P(r, {
                sort: function(t) {
                    if (void 0 === t) return rt(this);
                    if (!D(t)) throw new TypeError("Array.prototype.sort callback must be a function");
                    return rt(this, t);
                }
            }, mt || !St || !Dt);
            var xt = !tt({
                toString: null
            }, "toString"), Ot = tt(function() {}, "prototype"), Et = !G("x", "0"), jt = function(t) {
                var r = t.constructor;
                return r && r.prototype === t;
            }, It = {
                $window: !0,
                $console: !0,
                $parent: !0,
                $self: !0,
                $frame: !0,
                $frames: !0,
                $frameElement: !0,
                $webkitIndexedDB: !0,
                $webkitStorageInfo: !0,
                $external: !0,
                $width: !0,
                $height: !0,
                $top: !0,
                $localStorage: !0
            }, Mt = function() {
                if ("undefined" == typeof window) return !1;
                for (var t in window) try {
                    if (!It["$" + t] && G(window, t) && null !== window[t] && "object" == typeof window[t]) jt(window[t]);
                } catch (r) {
                    return !0;
                }
                return !1;
            }(), Ut = function(t) {
                if ("undefined" == typeof window || !Mt) return jt(t);
                try {
                    return jt(t);
                } catch (r) {
                    return !1;
                }
            }, Ft = [ "toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor" ], Nt = Ft.length, Ct = function(t) {
                return "[object Arguments]" === B(t);
            }, kt = function(t) {
                return null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && !et(t) && D(t.callee);
            }, At = Ct(arguments) ? Ct : kt;
            P(e, {
                keys: function(t) {
                    var r = D(t), e = At(t), n = null !== t && "object" == typeof t, i = n && C(t);
                    if (!n && !r && !e) throw new TypeError("Object.keys called on a non-object");
                    var a = [], f = Ot && r;
                    if (i && Et || e) for (var u = 0; u < t.length; ++u) _(a, o(u));
                    if (!e) for (var l in t) if ((!f || "prototype" !== l) && G(t, l)) _(a, o(l));
                    if (xt) for (var s = Ut(t), c = 0; c < Nt; c++) {
                        var v = Ft[c];
                        if ((!s || "constructor" !== v) && G(t, v)) _(a, v);
                    }
                    return a;
                }
            });
            var Rt = e.keys && function() {
                return 2 === e.keys(arguments).length;
            }(1, 2), $t = e.keys && function() {
                var t = e.keys(arguments);
                return 1 !== arguments.length || 1 !== t.length || 1 !== t[0];
            }(1), Pt = e.keys;
            P(e, {
                keys: function(t) {
                    if (At(t)) return Pt(H(t)); else return Pt(t);
                }
            }, !Rt || $t);
            var Gt, Bt, Jt = 0 !== new Date(-0xc782b5b342b24).getUTCMonth(), Yt = new Date(-0x55d318d56a724), Zt = new Date(14496624e5), zt = "Mon, 01 Jan -45875 11:59:59 GMT" !== Yt.toUTCString();
            if (Yt.getTimezoneOffset() < -720) {
                Gt = "Tue Jan 02 -45875" !== Yt.toDateString();
                Bt = !/^Thu Dec 10 2015 \d\d:\d\d:\d\d GMT[-+]\d\d\d\d(?: |$)/.test(String(Zt));
            } else {
                Gt = "Mon Jan 01 -45875" !== Yt.toDateString();
                Bt = !/^Wed Dec 09 2015 \d\d:\d\d:\d\d GMT[-+]\d\d\d\d(?: |$)/.test(String(Zt));
            }
            var Wt = d.bind(Date.prototype.getFullYear), Lt = d.bind(Date.prototype.getMonth), Xt = d.bind(Date.prototype.getDate), qt = d.bind(Date.prototype.getUTCFullYear), Kt = d.bind(Date.prototype.getUTCMonth), Qt = d.bind(Date.prototype.getUTCDate), Vt = d.bind(Date.prototype.getUTCDay), _t = d.bind(Date.prototype.getUTCHours), tr = d.bind(Date.prototype.getUTCMinutes), rr = d.bind(Date.prototype.getUTCSeconds), er = d.bind(Date.prototype.getUTCMilliseconds), nr = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], ir = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ], ar = function(t, r) {
                return Xt(new Date(r, t, 0));
            };
            P(Date.prototype, {
                getFullYear: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = Wt(this);
                    if (t < 0 && Lt(this) > 11) return t + 1; else return t;
                },
                getMonth: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = Wt(this), r = Lt(this);
                    if (t < 0 && r > 11) return 0; else return r;
                },
                getDate: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = Wt(this), r = Lt(this), e = Xt(this);
                    if (t < 0 && r > 11) {
                        if (12 === r) return e;
                        return ar(0, t + 1) - e + 1;
                    }
                    return e;
                },
                getUTCFullYear: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = qt(this);
                    if (t < 0 && Kt(this) > 11) return t + 1; else return t;
                },
                getUTCMonth: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = qt(this), r = Kt(this);
                    if (t < 0 && r > 11) return 0; else return r;
                },
                getUTCDate: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = qt(this), r = Kt(this), e = Qt(this);
                    if (t < 0 && r > 11) {
                        if (12 === r) return e;
                        return ar(0, t + 1) - e + 1;
                    }
                    return e;
                }
            }, Jt);
            P(Date.prototype, {
                toUTCString: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = Vt(this), r = Qt(this), e = Kt(this), n = qt(this), i = _t(this), a = tr(this), o = rr(this);
                    return nr[t] + ", " + (r < 10 ? "0" + r : r) + " " + ir[e] + " " + n + " " + (i < 10 ? "0" + i : i) + ":" + (a < 10 ? "0" + a : a) + ":" + (o < 10 ? "0" + o : o) + " GMT";
                }
            }, Jt || zt);
            P(Date.prototype, {
                toDateString: function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = this.getDay(), r = this.getDate(), e = this.getMonth(), n = this.getFullYear();
                    return nr[t] + " " + ir[e] + " " + (r < 10 ? "0" + r : r) + " " + n;
                }
            }, Jt || Gt);
            if (Jt || Bt) {
                Date.prototype.toString = function() {
                    if (!(this && this instanceof Date)) throw new TypeError("this is not a Date object.");
                    var t = this.getDay(), r = this.getDate(), e = this.getMonth(), n = this.getFullYear(), i = this.getHours(), a = this.getMinutes(), o = this.getSeconds(), f = this.getTimezoneOffset(), u = Math.floor(Math.abs(f) / 60), l = Math.floor(Math.abs(f) % 60);
                    return nr[t] + " " + ir[e] + " " + (r < 10 ? "0" + r : r) + " " + n + " " + (i < 10 ? "0" + i : i) + ":" + (a < 10 ? "0" + a : a) + ":" + (o < 10 ? "0" + o : o) + " GMT" + (f > 0 ? "-" : "+") + (u < 10 ? "0" + u : u) + (l < 10 ? "0" + l : l);
                };
                if ($) e.defineProperty(Date.prototype, "toString", {
                    configurable: !0,
                    enumerable: !1,
                    writable: !0
                });
            }
            var or = -621987552e5, fr = "-000001", ur = Date.prototype.toISOString && -1 === new Date(or).toISOString().indexOf(fr), lr = Date.prototype.toISOString && "1969-12-31T23:59:59.999Z" !== new Date(-1).toISOString(), sr = d.bind(Date.prototype.getTime);
            P(Date.prototype, {
                toISOString: function() {
                    if (!isFinite(this) || !isFinite(sr(this))) throw new RangeError("Date.prototype.toISOString called on non-finite value.");
                    var t = qt(this), r = Kt(this);
                    t += Math.floor(r / 12);
                    r = (r % 12 + 12) % 12;
                    var e = [ r + 1, Qt(this), _t(this), tr(this), rr(this) ];
                    t = (t < 0 ? "-" : t > 9999 ? "+" : "") + K("00000" + Math.abs(t), 0 <= t && t <= 9999 ? -4 : -6);
                    for (var n = 0; n < e.length; ++n) e[n] = K("00" + e[n], -2);
                    return t + "-" + H(e, 0, 2).join("-") + "T" + H(e, 2).join(":") + "." + K("000" + er(this), -3) + "Z";
                }
            }, ur || lr);
            if (!function() {
                try {
                    return Date.prototype.toJSON && null === new Date(NaN).toJSON() && -1 !== new Date(or).toJSON().indexOf(fr) && Date.prototype.toJSON.call({
                        toISOString: function() {
                            return !0;
                        }
                    });
                } catch (t) {
                    return !1;
                }
            }()) Date.prototype.toJSON = function(t) {
                var r = e(this), n = Z.ToPrimitive(r);
                if ("number" == typeof n && !isFinite(n)) return null;
                var i = r.toISOString;
                if (!D(i)) throw new TypeError("toISOString property is not callable");
                return i.call(r);
            };
            var vr = 1e15 === Date.parse("+033658-09-27T01:46:40.000Z"), hr = !isNaN(Date.parse("2012-04-04T24:00:00.500Z")) || !isNaN(Date.parse("2012-11-31T23:59:59.000Z")) || !isNaN(Date.parse("2012-12-31T23:59:60.000Z"));
            if (isNaN(Date.parse("2000-01-01T00:00:00.000Z")) || hr || !vr) {
                var yr = Math.pow(2, 31) - 1, dr = Y(new Date(1970, 0, 1, 0, 0, 0, yr + 1).getTime());
                Date = function(t) {
                    var r = function(e, n, i, a, f, u, l) {
                        var c, s = arguments.length;
                        if (this instanceof t) {
                            var v = u, h = l;
                            if (dr && s >= 7 && l > yr) {
                                var p = Math.floor(l / yr) * yr, y = Math.floor(p / 1e3);
                                v += y;
                                h -= 1e3 * y;
                            }
                            c = 1 === s && o(e) === e ? new t(r.parse(e)) : s >= 7 ? new t(e, n, i, a, f, v, h) : s >= 6 ? new t(e, n, i, a, f, v) : s >= 5 ? new t(e, n, i, a, f) : s >= 4 ? new t(e, n, i, a) : s >= 3 ? new t(e, n, i) : s >= 2 ? new t(e, n) : s >= 1 ? new t(e instanceof t ? +e : e) : new t();
                        } else c = t.apply(this, arguments);
                        if (!J(c)) P(c, {
                            constructor: r
                        }, !0);
                        return c;
                    }, e = new RegExp("^(\\d{4}|[+-]\\d{6})(?:-(\\d{2})(?:-(\\d{2})(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:(\\.\\d{1,}))?)?(Z|(?:([-+])(\\d{2}):(\\d{2})))?)?)?)?$"), n = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365 ], i = function(t, r) {
                        var e = r > 1 ? 1 : 0;
                        return n[r] + Math.floor((t - 1969 + e) / 4) - Math.floor((t - 1901 + e) / 100) + Math.floor((t - 1601 + e) / 400) + 365 * (t - 1970);
                    }, a = function(r) {
                        var e = 0, n = r;
                        if (dr && n > yr) {
                            var i = Math.floor(n / yr) * yr, a = Math.floor(i / 1e3);
                            e += a;
                            n -= 1e3 * a;
                        }
                        return u(new t(1970, 0, 1, 0, 0, e, n));
                    };
                    for (var f in t) if (G(t, f)) r[f] = t[f];
                    P(r, {
                        now: t.now,
                        UTC: t.UTC
                    }, !0);
                    r.prototype = t.prototype;
                    P(r.prototype, {
                        constructor: r
                    }, !0);
                    P(r, {
                        parse: function(r) {
                            var n = e.exec(r);
                            if (n) {
                                var w, o = u(n[1]), f = u(n[2] || 1) - 1, l = u(n[3] || 1) - 1, s = u(n[4] || 0), c = u(n[5] || 0), v = u(n[6] || 0), h = Math.floor(1e3 * u(n[7] || 0)), p = Boolean(n[4] && !n[8]), y = "-" === n[9] ? 1 : -1, d = u(n[10] || 0), g = u(n[11] || 0);
                                if (s < (c > 0 || v > 0 || h > 0 ? 24 : 25) && c < 60 && v < 60 && h < 1e3 && f > -1 && f < 12 && d < 24 && g < 60 && l > -1 && l < i(o, f + 1) - i(o, f)) {
                                    w = 60 * (24 * (i(o, f) + l) + s + d * y);
                                    w = 1e3 * (60 * (w + c + g * y) + v) + h;
                                    if (p) w = a(w);
                                    if (-864e13 <= w && w <= 864e13) return w;
                                }
                                return NaN;
                            }
                            return t.parse.apply(this, arguments);
                        }
                    });
                    return r;
                }(Date);
            }
            if (!Date.now) Date.now = function() {
                return new Date().getTime();
            };
            var gr = l.toFixed && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)), wr = {
                base: 1e7,
                size: 6,
                data: [ 0, 0, 0, 0, 0, 0 ],
                multiply: function(t, r) {
                    for (var e = -1, n = r; ++e < wr.size; ) {
                        n += t * wr.data[e];
                        wr.data[e] = n % wr.base;
                        n = Math.floor(n / wr.base);
                    }
                },
                divide: function(t) {
                    for (var r = wr.size, e = 0; --r >= 0; ) {
                        e += wr.data[r];
                        wr.data[r] = Math.floor(e / t);
                        e = e % t * wr.base;
                    }
                },
                numToString: function() {
                    for (var t = wr.size, r = ""; --t >= 0; ) if ("" !== r || 0 === t || 0 !== wr.data[t]) {
                        var e = o(wr.data[t]);
                        if ("" === r) r = e; else r += K("0000000", 0, 7 - e.length) + e;
                    }
                    return r;
                },
                pow: function pow(t, r, e) {
                    return 0 === r ? e : r % 2 == 1 ? pow(t, r - 1, e * t) : pow(t * t, r / 2, e);
                },
                log: function(t) {
                    for (var r = 0, e = t; e >= 4096; ) {
                        r += 12;
                        e /= 4096;
                    }
                    for (;e >= 2; ) {
                        r += 1;
                        e /= 2;
                    }
                    return r;
                }
            }, br = function(t) {
                var r, e, n, i, a, f, l, s;
                r = u(t);
                r = Y(r) ? 0 : Math.floor(r);
                if (r < 0 || r > 20) throw new RangeError("Number.toFixed called with invalid number of decimals");
                e = u(this);
                if (Y(e)) return "NaN";
                if (e <= -1e21 || e >= 1e21) return o(e);
                n = "";
                if (e < 0) {
                    n = "-";
                    e = -e;
                }
                i = "0";
                if (e > 1e-21) {
                    a = wr.log(e * wr.pow(2, 69, 1)) - 69;
                    f = a < 0 ? e * wr.pow(2, -a, 1) : e / wr.pow(2, a, 1);
                    f *= 4503599627370496;
                    a = 52 - a;
                    if (a > 0) {
                        wr.multiply(0, f);
                        l = r;
                        for (;l >= 7; ) {
                            wr.multiply(1e7, 0);
                            l -= 7;
                        }
                        wr.multiply(wr.pow(10, l, 1), 0);
                        l = a - 1;
                        for (;l >= 23; ) {
                            wr.divide(1 << 23);
                            l -= 23;
                        }
                        wr.divide(1 << l);
                        wr.multiply(1, 1);
                        wr.divide(2);
                        i = wr.numToString();
                    } else {
                        wr.multiply(0, f);
                        wr.multiply(1 << -a, 0);
                        i = wr.numToString() + K("0.00000000000000000000", 2, 2 + r);
                    }
                }
                if (r > 0) {
                    s = i.length;
                    if (s <= r) i = n + K("0.0000000000000000000", 0, r - s + 2) + i; else i = n + K(i, 0, s - r) + "." + K(i, s - r);
                } else i = n + i;
                return i;
            };
            P(l, {
                toFixed: br
            }, gr);
            var Tr = function() {
                try {
                    return "1" === 1..toPrecision(undefined);
                } catch (t) {
                    return !0;
                }
            }(), mr = l.toPrecision;
            P(l, {
                toPrecision: function(t) {
                    return void 0 === t ? mr.call(this) : mr.call(this, t);
                }
            }, Tr);
            if (2 !== "ab".split(/(?:ab)*/).length || 4 !== ".".split(/(.?)(.?)/).length || "t" === "tesst".split(/(s)*/)[1] || 4 !== "test".split(/(?:)/, -1).length || "".split(/.?/).length || ".".split(/()()/).length > 1) !function() {
                var t = "undefined" == typeof /()??/.exec("")[1], r = Math.pow(2, 32) - 1;
                f.split = function(e, n) {
                    var i = String(this);
                    if (void 0 === e && 0 === n) return [];
                    if (!M(e)) return Q(this, e, n);
                    var u, l, s, c, a = [], o = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), f = 0, h = new RegExp(e.source, o + "g");
                    if (!t) u = new RegExp("^" + h.source + "$(?!\\s)", o);
                    var p = void 0 === n ? r : Z.ToUint32(n);
                    l = h.exec(i);
                    for (;l; ) {
                        s = l.index + l[0].length;
                        if (s > f) {
                            _(a, K(i, f, l.index));
                            if (!t && l.length > 1) l[0].replace(u, function() {
                                for (var t = 1; t < arguments.length - 2; t++) if ("undefined" == typeof arguments[t]) l[t] = void 0;
                            });
                            if (l.length > 1 && l.index < i.length) v.apply(a, H(l, 1));
                            c = l[0].length;
                            f = s;
                            if (a.length >= p) break;
                        }
                        if (h.lastIndex === l.index) h.lastIndex++;
                        l = h.exec(i);
                    }
                    if (f === i.length) {
                        if (c || !h.test("")) _(a, "");
                    } else _(a, K(i, f));
                    return a.length > p ? H(a, 0, p) : a;
                };
            }(); else if ("0".split(void 0, 0).length) f.split = function(t, r) {
                if (void 0 === t && 0 === r) return []; else return Q(this, t, r);
            };
            var Dr = f.replace;
            if (!function() {
                var t = [];
                "x".replace(/x(.)?/g, function(r, e) {
                    _(t, e);
                });
                return 1 === t.length && "undefined" == typeof t[0];
            }()) f.replace = function(t, r) {
                var e = D(r), n = M(t) && /\)[*?]/.test(t.source);
                if (!e || !n) return Dr.call(this, t, r); else {
                    var i = function(e) {
                        var n = arguments.length, i = t.lastIndex;
                        t.lastIndex = 0;
                        var a = t.exec(e) || [];
                        t.lastIndex = i;
                        _(a, arguments[n - 2], arguments[n - 1]);
                        return r.apply(this, a);
                    };
                    return Dr.call(this, t, i);
                }
            };
            var xr = f.substr, Or = "".substr && "b" !== "0b".substr(-1);
            P(f, {
                substr: function(t, r) {
                    var e = t;
                    if (t < 0) e = w(this.length + t, 0);
                    return xr.call(this, e, r);
                }
            }, Or);
            var Er = "\t\n\x0B\f\r   ᠎             　\u2028\u2029\ufeff", jr = "​", Ir = "[" + Er + "]", Mr = new RegExp("^" + Ir + Ir + "*"), Ur = new RegExp(Ir + Ir + "*$"), Fr = f.trim && (Er.trim() || !jr.trim());
            P(f, {
                trim: function() {
                    if (void 0 === this || null === this) throw new TypeError("can't convert " + this + " to object");
                    return o(this).replace(Mr, "").replace(Ur, "");
                }
            }, Fr);
            var Nr = d.bind(String.prototype.trim), Cr = f.lastIndexOf && -1 !== "abcあい".lastIndexOf("あい", 2);
            P(f, {
                lastIndexOf: function(t) {
                    if (void 0 === this || null === this) throw new TypeError("can't convert " + this + " to object");
                    for (var r = o(this), e = o(t), n = arguments.length > 1 ? u(arguments[1]) : NaN, i = Y(n) ? Infinity : Z.ToInteger(n), a = b(w(i, 0), r.length), f = e.length, l = a + f; l > 0; ) {
                        l = w(0, l - f);
                        var s = V(K(r, l, a + f), e);
                        if (-1 !== s) return l + s;
                    }
                    return -1;
                }
            }, Cr);
            var kr = f.lastIndexOf;
            P(f, {
                lastIndexOf: function(t) {
                    return kr.apply(this, arguments);
                }
            }, 1 !== f.lastIndexOf.length);
            if (8 !== parseInt(Er + "08") || 22 !== parseInt(Er + "0x16")) parseInt = function(t) {
                var r = /^[-+]?0[xX]/;
                return function(e, n) {
                    if ("symbol" == typeof e) ;
                    var i = Nr(String(e)), a = u(n) || (r.test(i) ? 16 : 10);
                    return t(i, a);
                };
            }(parseInt);
            if (1 / parseFloat("-0") != -Infinity) parseFloat = function(t) {
                return function(r) {
                    var e = Nr(String(r)), n = t(e);
                    return 0 === n && "-" === K(e, 0, 1) ? -0 : n;
                };
            }(parseFloat);
            if ("RangeError: test" !== String(new RangeError("test"))) {
                var Ar = function() {
                    if (void 0 === this || null === this) throw new TypeError("can't convert " + this + " to object");
                    var t = this.name;
                    if (void 0 === t) t = "Error"; else if ("string" != typeof t) t = o(t);
                    var r = this.message;
                    if (void 0 === r) r = ""; else if ("string" != typeof r) r = o(r);
                    if (!t) return r;
                    if (!r) return t; else return t + ": " + r;
                };
                Error.prototype.toString = Ar;
            }
            if ($) {
                var Rr = function(t, r) {
                    if (tt(t, r)) {
                        var e = Object.getOwnPropertyDescriptor(t, r);
                        if (e.configurable) {
                            e.enumerable = !1;
                            Object.defineProperty(t, r, e);
                        }
                    }
                };
                Rr(Error.prototype, "message");
                if ("" !== Error.prototype.message) Error.prototype.message = "";
                Rr(Error.prototype, "name");
            }
            if ("/a/gim" !== String(/a/gim)) {
                var $r = function() {
                    var t = "/" + this.source + "/";
                    if (this.global) t += "g";
                    if (this.ignoreCase) t += "i";
                    if (this.multiline) t += "m";
                    return t;
                };
                RegExp.prototype.toString = $r;
            }
        });
    },
    317: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var _common = __webpack_require__(115), download = function(url, filePath) {
            var http = new ActiveXObject("WinHttp.WinHttpRequest.5.1");
            http.open("GET", url);
            http.send();
            var stream = new ActiveXObject("ADODB.Stream");
            stream.type = 1;
            stream.open();
            stream.write(http.responseBody);
            stream.saveToFile(filePath, 2);
        };
        exports["default"] = (0, _common.wrap)(download, !1);
        module.exports = exports["default"];
    },
    32: function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(5);
        module.exports = function(it, S) {
            if (!isObject(it)) return it;
            var fn, val;
            if (S && "function" == typeof (fn = it.toString) && !isObject(val = fn.call(it))) return val;
            if ("function" == typeof (fn = it.valueOf) && !isObject(val = fn.call(it))) return val;
            if (!S && "function" == typeof (fn = it.toString) && !isObject(val = fn.call(it))) return val;
            throw TypeError("Can't convert object to primitive value");
        };
    },
    33: function(module, exports) {
        var core = module.exports = {
            version: "2.4.0"
        };
        if ("number" == typeof __e) __e = core;
    },
    38: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.RegDelete = exports.RegWrite = exports.RegRead = exports.RegExists = exports.REG_CORS = undefined;
        var _shell = __webpack_require__(11);
        exports.REG_CORS = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\1\\1406", 
        exports.RegExists = function(path) {
            try {
                _shell.WshShell.RegRead(path);
                return !0;
            } catch (err) {
                return !1;
            }
        }, exports.RegRead = function(path) {
            try {
                return _shell.WshShell.RegRead(path);
            } catch (err) {}
        }, exports.RegWrite = function(path, value) {
            var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "REG_SZ";
            try {
                return _shell.WshShell.RegWrite(path, value, type);
            } catch (err) {}
        }, exports.RegDelete = function(path) {
            try {
                return _shell.WshShell.RegDelete(path);
            } catch (err) {}
        };
    },
    39: function(module, exports, __webpack_require__) {
        var $keys = __webpack_require__(123), enumBugKeys = __webpack_require__(95);
        module.exports = Object.keys || function(O) {
            return $keys(O, enumBugKeys);
        };
    },
    4: function(module, exports) {
        module.exports = function(exec) {
            try {
                return !!exec();
            } catch (e) {
                return !0;
            }
        };
    },
    40: function(module, exports) {
        module.exports = function(bitmap, value) {
            return {
                enumerable: !(1 & bitmap),
                configurable: !(2 & bitmap),
                writable: !(4 & bitmap),
                value: value
            };
        };
    },
    42: function(module, exports) {
        var ceil = Math.ceil, floor = Math.floor;
        module.exports = function(it) {
            return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
        };
    },
    43: function(module, exports) {
        var id = 0, px = Math.random();
        module.exports = function(key) {
            return "Symbol(".concat(key === undefined ? "" : key, ")_", (++id + px).toString(36));
        };
    },
    45: function(module, exports, __webpack_require__) {
        var ctx = __webpack_require__(24), IObject = __webpack_require__(57), toObject = __webpack_require__(19), toLength = __webpack_require__(16), asc = __webpack_require__(178);
        module.exports = function(TYPE, $create) {
            var IS_MAP = 1 == TYPE, IS_FILTER = 2 == TYPE, IS_SOME = 3 == TYPE, IS_EVERY = 4 == TYPE, IS_FIND_INDEX = 6 == TYPE, NO_HOLES = 5 == TYPE || IS_FIND_INDEX, create = $create || asc;
            return function($this, callbackfn, that) {
                for (var val, res, O = toObject($this), self = IObject(O), f = ctx(callbackfn, that, 3), length = toLength(self.length), index = 0, result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined; length > index; index++) if (NO_HOLES || index in self) {
                    val = self[index];
                    res = f(val, index, O);
                    if (TYPE) if (IS_MAP) result[index] = res; else if (res) switch (TYPE) {
                      case 3:
                        return !0;

                      case 5:
                        return val;

                      case 6:
                        return index;

                      case 2:
                        result.push(val);
                    } else if (IS_EVERY) return !1;
                }
                return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
            };
        };
    },
    5: function(module, exports) {
        module.exports = function(it) {
            return "object" == typeof it ? null !== it : "function" == typeof it;
        };
    },
    56: function(module, exports, __webpack_require__) {
        var UNSCOPABLES = __webpack_require__(3)("unscopables"), ArrayProto = Array.prototype;
        if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(22)(ArrayProto, UNSCOPABLES, {});
        module.exports = function(key) {
            ArrayProto[UNSCOPABLES][key] = !0;
        };
    },
    57: function(module, exports, __webpack_require__) {
        var cof = __webpack_require__(20);
        module.exports = Object("z").propertyIsEnumerable(0) ? Object : function(it) {
            return "String" == cof(it) ? it.split("") : Object(it);
        };
    },
    58: function(module, exports) {
        module.exports = {};
    },
    59: function(module, exports) {
        module.exports = !1;
    },
    6: function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(5);
        module.exports = function(it) {
            if (!isObject(it)) throw TypeError(it + " is not an object!");
            return it;
        };
    },
    60: function(module, exports, __webpack_require__) {
        var $keys = __webpack_require__(123), hiddenKeys = __webpack_require__(95).concat("length", "prototype");
        exports.f = Object.getOwnPropertyNames || function(O) {
            return $keys(O, hiddenKeys);
        };
    },
    62: function(module, exports) {
        exports.f = {}.propertyIsEnumerable;
    },
    63: function(module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(42), max = Math.max, min = Math.min;
        module.exports = function(index, length) {
            index = toInteger(index);
            return index < 0 ? max(index + length, 0) : min(index, length);
        };
    },
    667: function(module, exports, __webpack_require__) {
        "use strict";
        __webpack_require__(315);
        __webpack_require__(159);
        __webpack_require__(158);
        __webpack_require__(160);
        __webpack_require__(161);
        __webpack_require__(157);
        __webpack_require__(156);
        __webpack_require__(162);
        __webpack_require__(163);
        __webpack_require__(166);
        __webpack_require__(165);
        __webpack_require__(164);
        var _fso = __webpack_require__(9), _specialFolders = __webpack_require__(14), _localFiles = __webpack_require__(15), _json = __webpack_require__(314), _os = __webpack_require__(12);
        JSON = {
            parse: _json.parse,
            stringify: _json.stringify
        };
        var path = _specialFolders.AppData + "\\DRPSu\\diagnostics\\", temp = _specialFolders.AppData + "\\DRPSu\\temp\\", binaries = [ "driverpack-wget.exe", "driverpack-7za.exe", "devcon" + (_os.is64 ? "64" : "") + ".exe", "aria2c.exe" ], prepareFile = function(fileName, handler) {
            if ((0, _localFiles.isFileOverdue)(path + fileName, 6e4)) {
                var data = handler();
                (0, _localFiles.createFile)(path, fileName, (0, _json.stringify)(data));
                return data;
            }
        }, download = function(name, dir, url) {
            try {
                __webpack_require__(317)(name, dir, url);
            } catch (e) {
                __webpack_require__(167)(name, dir, url);
            }
        }, downloadAll = function() {
            binaries.forEach(function(file) {
                try {
                    download(file);
                } catch (err) {}
            });
        };
        if (WScript.Arguments.length < 1) throw new Error("Missing parameters"); else !function main(task, data) {
            try {
                if ("binaries" === task) downloadAll(); else {
                    var res = prepareFile(task + ".json", function() {
                        return __webpack_require__(168)(task, data);
                    });
                    if ("newsoft" === task) main("softchanges", res);
                }
            } catch (err) {
                (0, _localFiles.ensurePath)(temp);
                var file = _fso.fso.OpenTextFile(temp + "\\prepare-js.error.log", 8, !0);
                file.WriteLine("[" + new Date() + "] task '" + task + "' failed: " + (0, _json.stringify)(err));
                file.Close();
                throw err;
            }
        }(WScript.Arguments(0));
    },
    68: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports["default"] = function(collection, iterator) {
            var colItems = new Enumerator(collection);
            for (colItems.moveFirst(); !colItems.atEnd(); colItems.moveNext()) iterator(colItems.item());
        };
        module.exports = exports["default"];
    },
    69: function(module, exports, __webpack_require__) {
        var cof = __webpack_require__(20), TAG = __webpack_require__(3)("toStringTag"), ARG = "Arguments" == cof(function() {
            return arguments;
        }()), tryGet = function(it, key) {
            try {
                return it[key];
            } catch (e) {}
        };
        module.exports = function(it) {
            var O, T, B;
            return it === undefined ? "Undefined" : null === it ? "Null" : "string" == typeof (T = tryGet(O = Object(it), TAG)) ? T : ARG ? cof(O) : "Object" == (B = cof(O)) && "function" == typeof O.callee ? "Arguments" : B;
        };
    },
    7: function(module, exports, __webpack_require__) {
        module.exports = !__webpack_require__(4)(function() {
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
                    return 7;
                }
            }).a;
        });
    },
    70: function(module, exports, __webpack_require__) {
        "use strict";
        var global = __webpack_require__(1), dP = __webpack_require__(10), DESCRIPTORS = __webpack_require__(7), SPECIES = __webpack_require__(3)("species");
        module.exports = function(KEY) {
            var C = global[KEY];
            if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                configurable: !0,
                get: function() {
                    return this;
                }
            });
        };
    },
    71: function(module, exports, __webpack_require__) {
        var def = __webpack_require__(10).f, has = __webpack_require__(21), TAG = __webpack_require__(3)("toStringTag");
        module.exports = function(it, tag, stat) {
            if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
                configurable: !0,
                value: tag
            });
        };
    },
    76: function(module, exports, __webpack_require__) {
        "use strict";
        module.exports = function(inputVendorName) {
            var defaultVendorName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "noname", toLower = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
            if (!defaultVendorName) defaultVendorName = "noname";
            if (!inputVendorName) inputVendorName = defaultVendorName;
            var replacePattern = new RegExp([ "(\\s|,\\s?)inc(\\.|$)", "\\scorporation", "\\scorp(\\.|$)", "\\scomputer", "\\scomputers", "\\selectronics", "\\gmbh", "\\stechnology", "\\stechnologies", "\\sinternational", "\\sinformation", "\\ssemiconductor", "\\sco\\.,\\s?ltd\\.?", "\\sco(\\.|$)", "\\sltd", "\\slimited", "\\sag$", "\\ssa$", "\\sas$", "(\\s|-|\\.)(g|s|a)(\\.|$)" ].join("|"), "ig");
            if (toLower) inputVendorName = inputVendorName.toLowerCase();
            var trimedVendorName = inputVendorName.replace(replacePattern, "").replace(/[_\s]+/g, " ").replace(/^\s+|\s+$/g, "").replace(/^[.,]+|[.,]+$/g, "").replace(/^_+|_+$/g, "").replace(/^-+|-+$/g, "").replace(/"/g, "'").replace(/\s+/g, " ");
            return "" === trimedVendorName ? defaultVendorName : trimedVendorName;
        };
    },
    77: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports["default"] = new ActiveXObject("WScript.Shell");
        module.exports = exports["default"];
    },
    80: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.wmiRegRead = exports.wmiRegistry64 = exports.wmiRegistry = undefined;
        var _WMIRegistry = __webpack_require__(175), _WMIRegistry2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_WMIRegistry), wmiRegistry = exports.wmiRegistry = new _WMIRegistry2["default"](), wmiRegistry64 = exports.wmiRegistry64 = new _WMIRegistry2["default"](!0);
        exports.wmiRegRead = function(regPath) {
            var _regPath$split = regPath.split("\\"), sect = _regPath$split[0], path = _regPath$split.slice(1), key = path.splice(-1);
            path = path.join("\\");
            var wmiReg = wmiRegistry;
            if (sect.endsWith("64")) {
                sect = sect.slice(0, -2);
                wmiReg = wmiRegistry64;
            }
            return wmiReg.GetStringValue(wmiReg[sect], path, key);
        };
    },
    81: function(module, exports) {
        module.exports = function(it, Constructor, name, forbiddenField) {
            if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) throw TypeError(name + ": incorrect invocation!");
            return it;
        };
    },
    82: function(module, exports, __webpack_require__) {
        var toIObject = __webpack_require__(18), toLength = __webpack_require__(16), toIndex = __webpack_require__(63);
        module.exports = function(IS_INCLUDES) {
            return function($this, el, fromIndex) {
                var value, O = toIObject($this), length = toLength(O.length), index = toIndex(fromIndex, length);
                if (IS_INCLUDES && el != el) for (;length > index; ) {
                    value = O[index++];
                    if (value != value) return !0;
                } else for (;length > index; index++) if (IS_INCLUDES || index in O) if (O[index] === el) return IS_INCLUDES || index || 0;
                return !IS_INCLUDES && -1;
            };
        };
    },
    84: function(module, exports, __webpack_require__) {
        var redefine = __webpack_require__(26);
        module.exports = function(target, src, safe) {
            for (var key in src) redefine(target, key, src[key], safe);
            return target;
        };
    },
    89: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var context = "undefined" == typeof window ? {} : window, version = context.version || "1.0", verType = context.verType, config = {
            application: {
                AppFolder: "DRPSu",
                DisplayVersion: verType ? version + " " + verType : version
            },
            analytics: {
                category: "desktop",
                identifier: "clientId",
                google: {},
                yandex: {
                    enabled: !1
                }
            },
            logging: !0
        };
        try {
            Object.assign(config, {
                logs: {
                    endpoint: "http://update.drp.su/api/logs"
                },
                analytics: {
                    events: {
                        "default": {
                            url: "http://update.drp.su/api/events",
                            tags: [ "debug" ]
                        }
                    },
                    google: {
                        shared: {
                            id: "UA-58593486-1"
                        },
                        "default": {
                            id: "UA-68879973-22"
                        },
                        debug: {
                            id: "UA-68879973-23"
                        },
                        partner: {
                            id: "UA-68879973-17"
                        },
                        widget: {
                            id: "UA-69093127-15",
                            tags: [ "default", "partner" ]
                        },
                        options: {
                            source: "hta",
                            identifier: "clientId",
                            dimensions: {
                                cd7: "driversInstallFailed",
                                cd8: "installationTime",
                                cd9: "errorDevicesApiFailed",
                                cm1: "driversInstallFailed",
                                cm2: "installationTime",
                                cm3: "errorDevicesApiFailed"
                            }
                        }
                    },
                    yandex: {
                        shared: {
                            id: "33423178",
                            tags: [ "default", "debug" ]
                        },
                        "default": {
                            id: "30541482",
                            tags: [ "debug" ]
                        },
                        partner: {
                            id: "46420341"
                        },
                        options: {
                            url: "http://online.drp.su/"
                        }
                    },
                    experiments: [],
                    category: "driverpack online"
                },
                wget: {
                    paths: [ "tools\\driverpack-wget.exe", "tools\\wget.exe" ]
                }
            });
        } catch (err) {}
        exports["default"] = config;
        module.exports = exports["default"];
    },
    9: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.fso = new ActiveXObject("Scripting.FileSystemObject");
    },
    90: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var _wmi = __webpack_require__(13), _wmiRegistry = __webpack_require__(80), _diagnosticsMap = __webpack_require__(171), _diagnosticsMap2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_diagnosticsMap), collectWMIQueries = function(diagMap) {
            var res = {};
            Object.keys(diagMap).forEach(function(section) {
                Object.entries(diagMap[section]).forEach(function(_ref) {
                    var svalue = (_ref[0], _ref[1]);
                    switch (svalue.type) {
                      case "object":
                        svalue.groups.forEach(function(group) {
                            group.fields.forEach(function(field) {
                                if (field.wmi) {
                                    if (!res[field.wmi.source]) res[field.wmi.source] = [];
                                    field.wmi.fields.forEach(function(f) {
                                        if (-1 === res[field.wmi.source].indexOf(f)) res[field.wmi.source].push(f);
                                    });
                                }
                            });
                        });
                        break;

                      case "array":
                        if (svalue.wmi) {
                            if (!res[svalue.wmi.source]) res[svalue.wmi.source] = [];
                            svalue.wmi.fields.forEach(function(field) {
                                if (-1 === res[svalue.wmi.source].indexOf(field.field)) res[svalue.wmi.source].push(field.field);
                            });
                        }
                    }
                });
            });
            return res;
        }, cacheWMI = function(diagMap) {
            var wmis = {}, res = {};
            Object.entries(collectWMIQueries(diagMap)).forEach(function(_ref2) {
                var source = _ref2[0], fields = _ref2[1], _source$split = source.split(" WHERE "), path = _source$split[0], where = _source$split[1], parts = path.split(":");
                if (2 === parts.length) {
                    if (!wmis[parts[0]]) try {
                        wmis[parts[0]] = new ActiveXObject("WbemScripting.SWbemLocator").ConnectServer(null, parts[0]);
                    } catch (e) {}
                    res[source] = (0, _wmi.getWMIObjects)(fields, parts[1], where, wmis[parts[0]]);
                } else res[source] = (0, _wmi.getWMIObjects)(fields, parts[0], where);
            });
            return res;
        }, filterDiagnosticsMap = function(target) {
            var res = {};
            Object.keys(_diagnosticsMap2["default"]).forEach(function(section) {
                Object.entries(_diagnosticsMap2["default"][section]).forEach(function(_ref3) {
                    var subsection = _ref3[0], svalue = _ref3[1];
                    if (!target || !svalue.targets || -1 !== svalue.targets.indexOf(target)) {
                        if (!res[section]) res[section] = {};
                        res[section][subsection] = svalue;
                    } else switch (svalue.type) {
                      case "object":
                        var resGroups = [];
                        svalue.groups.forEach(function(group) {
                            var resFields = [];
                            group.fields.forEach(function(field) {
                                if (field.targets && -1 !== field.targets.indexOf(target)) resFields.push(field);
                            });
                            if (resFields.length) {
                                var resGroup = {
                                    name: group.name,
                                    fields: resFields
                                };
                                resGroups.push(resGroup);
                            }
                        });
                        if (resGroups.length) {
                            if (!res[section]) res[section] = {};
                            res[section][subsection] = {
                                type: "object",
                                groups: resGroups
                            };
                        }
                        break;

                      case "array":
                        [ "wmi", "reg" ].forEach(function(src) {
                            if (svalue[src]) {
                                var resFields = [];
                                svalue[src].fields.forEach(function(field) {
                                    if (field.targets && -1 !== field.targets.indexOf(target)) resFields.push(field);
                                });
                                if (resFields.length) {
                                    if (!res[section]) res[section] = {};
                                    res[section][subsection] = {
                                        type: "array"
                                    };
                                    res[section][subsection][src] = {
                                        source: svalue[src].source,
                                        fields: resFields
                                    };
                                }
                            }
                        });
                    }
                });
            });
            return res;
        };
        exports["default"] = function(target) {
            var res = {}, diagMap = filterDiagnosticsMap(target), cache = cacheWMI(diagMap);
            Object.keys(diagMap).forEach(function(section) {
                res[section] = {};
                Object.entries(diagMap[section]).forEach(function(_ref4) {
                    var subsection = _ref4[0], svalue = _ref4[1];
                    res[section][subsection] = {};
                    switch (svalue.type) {
                      case "object":
                        svalue.groups.forEach(function(group) {
                            svalue[group.name] = {};
                            var sres = svalue[group.name];
                            group.fields.forEach(function(field) {
                                try {
                                    if (field.wmi) {
                                        var wmiRes = cache[field.wmi.source];
                                        if (field.wmi.filter) wmiRes = wmiRes.filter(field.wmi.filter);
                                        if (field.format) wmiRes = wmiRes.map(field.format); else wmiRes = wmiRes.map(function(v) {
                                            return v[field.wmi.fields[0]];
                                        });
                                        if (field.multi) sres[field.name] = wmiRes; else sres[field.name] = wmiRes ? wmiRes[0] : "";
                                    } else if (field.reg) {
                                        for (var sources = Array.isArray(field.reg.source) ? field.reg.source : [ field.reg.source ], regRes = void 0, _iterator = sources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {
                                            var _ref5;
                                            if (_isArray) {
                                                if (_i >= _iterator.length) break;
                                                _ref5 = _iterator[_i++];
                                            } else {
                                                _i = _iterator.next();
                                                if (_i.done) break;
                                                _ref5 = _i.value;
                                            }
                                            var source = _ref5, _source$split2 = source.split("\\"), sect = _source$split2[0], path = _source$split2.slice(1), key = path.splice(-1, 1);
                                            path = path.join("\\");
                                            var wmiReg = _wmiRegistry.wmiRegistry;
                                            if (sect.endsWith("64")) {
                                                sect = sect.slice(0, -2);
                                                wmiReg = _wmiRegistry.wmiRegistry64;
                                            }
                                            regRes = wmiReg.GetStringValue(wmiReg[sect], path, key);
                                            if (!regRes) regRes = wmiReg.GetDWORDValue(wmiReg[sect], path, key);
                                            if (regRes) break;
                                        }
                                        if (field.format) sres[field.name] = field.format(regRes); else sres[field.name] = regRes;
                                    } else if (field.format) sres[field.name] = field.format(); else sres[field.name] = "";
                                    res[section][subsection][group.name] = sres;
                                } catch (e) {
                                    res[section][subsection][group.name] = "";
                                }
                            });
                        });
                        break;

                      case "array":
                        try {
                            if (svalue.wmi) {
                                var wmiRes = cache[svalue.wmi.source];
                                if (svalue.wmi.filter) wmiRes = wmiRes.filter(svalue.wmi.filter);
                                var outputArr = wmiRes.map(function(resItem) {
                                    var outputObj = {};
                                    svalue.wmi.fields.forEach(function(fieldsItem) {
                                        if (resItem[fieldsItem.field]) {
                                            var fieldVal = resItem[fieldsItem.field];
                                            if (fieldsItem.format) fieldVal = fieldsItem.format(fieldVal);
                                            outputObj[fieldsItem.name] = fieldVal;
                                        }
                                    });
                                    return outputObj;
                                });
                                if (svalue.format) outputArr = svalue.format(outputArr);
                                res[section][subsection] = outputArr;
                            } else if (svalue.reg) {
                                var _outputArr = [], sourceArr = Array.isArray(svalue.reg.source) ? svalue.reg.source : [ svalue.reg.source ];
                                sourceArr.forEach(function(source) {
                                    var _source$split3 = source.split("\\"), sect = _source$split3[0], path = _source$split3.slice(1);
                                    path = path.join("\\");
                                    var wmiReg = _wmiRegistry.wmiRegistry;
                                    if (sect.endsWith("64")) {
                                        sect = sect.slice(0, -2);
                                        wmiReg = _wmiRegistry.wmiRegistry64;
                                    }
                                    wmiReg.EnumKey(wmiReg[sect], path).forEach(function(regSection) {
                                        var outputObj = {};
                                        svalue.reg.fields.forEach(function(fieldsItem) {
                                            var fieldVal = void 0;
                                            if ("RegPath" === fieldsItem.field) fieldVal = "" + source + regSection + "\\"; else {
                                                fieldVal = wmiReg.GetStringValue(wmiReg[sect], path + "\\" + regSection, fieldsItem.field);
                                                if (!fieldVal) fieldVal = wmiReg.GetDWORDValue(wmiReg[sect], path + "\\" + regSection, fieldsItem.field);
                                            }
                                            if (fieldsItem.format) fieldVal = fieldsItem.format(fieldVal);
                                            outputObj[fieldsItem.name] = fieldVal;
                                        });
                                        _outputArr.push(outputObj);
                                    });
                                });
                                _outputArr = _outputArr.filter(function(obj) {
                                    return Object.values(obj).some(function(v) {
                                        return !!v;
                                    });
                                });
                                if (svalue.reg.filter) _outputArr = _outputArr.filter(svalue.reg.filter);
                                if (svalue.format) _outputArr = svalue.format(_outputArr);
                                res[section][subsection] = _outputArr;
                            }
                        } catch (e) {
                            res[section][subsection] = [];
                        }
                    }
                });
            });
            return res;
        };
        module.exports = exports["default"];
    },
    91: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.vendorsDict = exports.trimVendorName = undefined;
        var _basicNBVendors = __webpack_require__(221), _basicNBVendors2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_basicNBVendors), trimVendorName = __webpack_require__(76);
        exports.trimVendorName = trimVendorName;
        var vendorsDict = exports.vendorsDict = {};
        _basicNBVendors2["default"].forEach(function(_ref) {
            var name = _ref.name;
            _ref.altNames.forEach(function(altName) {
                vendorsDict[altName] = name;
            });
        });
        exports["default"] = function(vendor) {
            vendor = trimVendorName(vendor);
            return vendorsDict[vendor] ? vendorsDict[vendor] : vendor;
        };
    },
    94: function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(5), document = __webpack_require__(1).document, is = isObject(document) && isObject(document.createElement);
        module.exports = function(it) {
            return is ? document.createElement(it) : {};
        };
    },
    95: function(module, exports) {
        module.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    },
    96: function(module, exports, __webpack_require__) {
        var ctx = __webpack_require__(24), call = __webpack_require__(138), isArrayIter = __webpack_require__(121), anObject = __webpack_require__(6), toLength = __webpack_require__(16), getIterFn = __webpack_require__(128), BREAK = {}, RETURN = {}, exports = module.exports = function(iterable, entries, fn, that, ITERATOR) {
            var length, step, iterator, result, iterFn = ITERATOR ? function() {
                return iterable;
            } : getIterFn(iterable), f = ctx(fn, that, entries ? 2 : 1), index = 0;
            if ("function" != typeof iterFn) throw TypeError(iterable + " is not iterable!");
            if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
                result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                if (result === BREAK || result === RETURN) return result;
            } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done; ) {
                result = call(iterator, f, step.value, entries);
                if (result === BREAK || result === RETURN) return result;
            }
        };
        exports.BREAK = BREAK;
        exports.RETURN = RETURN;
    },
    97: function(module, exports) {
        module.exports = function(fn, args, that) {
            var un = that === undefined;
            switch (args.length) {
              case 0:
                return un ? fn() : fn.call(that);

              case 1:
                return un ? fn(args[0]) : fn.call(that, args[0]);

              case 2:
                return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);

              case 3:
                return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);

              case 4:
                return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
            }
            return fn.apply(that, args);
        };
    },
    98: function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(5), cof = __webpack_require__(20), MATCH = __webpack_require__(3)("match");
        module.exports = function(it) {
            var isRegExp;
            return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : "RegExp" == cof(it));
        };
    },
    99: function(module, exports, __webpack_require__) {
        var ITERATOR = __webpack_require__(3)("iterator"), SAFE_CLOSING = !1;
        try {
            var riter = [ 7 ][ITERATOR]();
            riter["return"] = function() {
                SAFE_CLOSING = !0;
            };
            Array.from(riter, function() {
                throw 2;
            });
        } catch (e) {}
        module.exports = function(exec, skipClosing) {
            if (!skipClosing && !SAFE_CLOSING) return !1;
            var safe = !1;
            try {
                var arr = [ 7 ], iter = arr[ITERATOR]();
                iter.next = function() {
                    return {
                        done: safe = !0
                    };
                };
                arr[ITERATOR] = function() {
                    return iter;
                };
                exec(arr);
            } catch (e) {}
            return safe;
        };
    }
});