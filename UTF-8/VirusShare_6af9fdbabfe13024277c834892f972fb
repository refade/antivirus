/*
Not needed anymore 
var publicationUrl = document.URL;
publicationUrl = publicationUrl.split("/");
publicationUrl = publicationUrl[3];*/

/*
* jQuery JavaScript Library v1.3.2
* http://jquery.com/
*
* Copyright (c) 2009 John Resig
* Dual licensed under the MIT and GPL licenses.
* http://docs.jquery.com/License
*
* Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)
* Revision: 6246
*/
(function () {var l = this, g, y = l.jQuery, p = l.$, o = l.jQuery = l.$ = function (E, F) { return new o.fn.init(E, F) }, D = /^[^<]*(<(.|\s)+>)[^>]*$|^#([\w-]+)$/, f = /^.[^:#\[\.,]*$/; o.fn = o.prototype = { init: function (E, H) { E = E || document; if (E.nodeType) { this[0] = E; this.length = 1; this.context = E; return this } if (typeof E === "string") { var G = D.exec(E); if (G && (G[1] || !H)) { if (G[1]) { E = o.clean([G[1]], H) } else { var I = document.getElementById(G[3]); if (I && I.id != G[3]) { return o().find(E) } var F = o(I || []); F.context = document; F.selector = E; return F } } else { return o(H).find(E) } } else { if (o.isFunction(E)) { return o(document).ready(E) } } if (E.selector && E.context) { this.selector = E.selector; this.context = E.context } return this.setArray(o.isArray(E) ? E : o.makeArray(E)) }, selector: "", jquery: "1.3.2", size: function () { return this.length }, get: function (E) { return E === g ? Array.prototype.slice.call(this) : this[E] }, pushStack: function (F, H, E) { var G = o(F); G.prevObject = this; G.context = this.context; if (H === "find") { G.selector = this.selector + (this.selector ? " " : "") + E } else { if (H) { G.selector = this.selector + "." + H + "(" + E + ")" } } return G }, setArray: function (E) { this.length = 0; Array.prototype.push.apply(this, E); return this }, each: function (F, E) { return o.each(this, F, E) }, index: function (E) { return o.inArray(E && E.jquery ? E[0] : E, this) }, attr: function (F, H, G) { var E = F; if (typeof F === "string") { if (H === g) { return this[0] && o[G || "attr"](this[0], F) } else { E = {}; E[F] = H } } return this.each(function (I) { for (F in E) { o.attr(G ? this.style : this, F, o.prop(this, E[F], G, I, F)) } }) }, css: function (E, F) { if ((E == "width" || E == "height") && parseFloat(F) < 0) { F = g } return this.attr(E, F, "curCSS") }, text: function (F) { if (typeof F !== "object" && F != null) { return this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(F)) } var E = ""; o.each(F || this, function () { o.each(this.childNodes, function () { if (this.nodeType != 8) { E += this.nodeType != 1 ? this.nodeValue : o.fn.text([this]) } }) }); return E }, wrapAll: function (E) { if (this[0]) { var F = o(E, this[0].ownerDocument).clone(); if (this[0].parentNode) { F.insertBefore(this[0]) } F.map(function () { var G = this; while (G.firstChild) { G = G.firstChild } return G }).append(this) } return this }, wrapInner: function (E) { return this.each(function () { o(this).contents().wrapAll(E) }) }, wrap: function (E) { return this.each(function () { o(this).wrapAll(E) }) }, append: function () { return this.domManip(arguments, true, function (E) { if (this.nodeType == 1) { this.appendChild(E) } }) }, prepend: function () { return this.domManip(arguments, true, function (E) { if (this.nodeType == 1) { this.insertBefore(E, this.firstChild) } }) }, before: function () { return this.domManip(arguments, false, function (E) { this.parentNode.insertBefore(E, this) }) }, after: function () { return this.domManip(arguments, false, function (E) { this.parentNode.insertBefore(E, this.nextSibling) }) }, end: function () { return this.prevObject || o([]) }, push: [].push, sort: [].sort, splice: [].splice, find: function (E) { if (this.length === 1) { var F = this.pushStack([], "find", E); F.length = 0; o.find(E, this[0], F); return F } else { return this.pushStack(o.unique(o.map(this, function (G) { return o.find(E, G) })), "find", E) } }, clone: function (G) { var E = this.map(function () { if (!o.support.noCloneEvent && !o.isXMLDoc(this)) { var I = this.outerHTML; if (!I) { var J = this.ownerDocument.createElement("div"); J.appendChild(this.cloneNode(true)); I = J.innerHTML } return o.clean([I.replace(/ jQuery\d+="(?:\d+|null)"/g, "").replace(/^\s*/, "")])[0] } else { return this.cloneNode(true) } }); if (G === true) { var H = this.find("*").andSelf(), F = 0; E.find("*").andSelf().each(function () { if (this.nodeName !== H[F].nodeName) { return } var I = o.data(H[F], "events"); for (var K in I) { for (var J in I[K]) { o.event.add(this, K, I[K][J], I[K][J].data) } } F++ }) } return E }, filter: function (E) { return this.pushStack(o.isFunction(E) && o.grep(this, function (G, F) { return E.call(G, F) }) || o.multiFilter(E, o.grep(this, function (F) { return F.nodeType === 1 })), "filter", E) }, closest: function (E) { var G = o.expr.match.POS.test(E) ? o(E) : null, F = 0; return this.map(function () { var H = this; while (H && H.ownerDocument) { if (G ? G.index(H) > -1 : o(H).is(E)) { o.data(H, "closest", F); return H } H = H.parentNode; F++ } }) }, not: function (E) { if (typeof E === "string") { if (f.test(E)) { return this.pushStack(o.multiFilter(E, this, true), "not", E) } else { E = o.multiFilter(E, this) } } var F = E.length && E[E.length - 1] !== g && !E.nodeType; return this.filter(function () { return F ? o.inArray(this, E) < 0 : this != E }) }, add: function (E) { return this.pushStack(o.unique(o.merge(this.get(), typeof E === "string" ? o(E) : o.makeArray(E)))) }, is: function (E) { return !!E && o.multiFilter(E, this).length > 0 }, hasClass: function (E) { return !!E && this.is("." + E) }, val: function (K) { if (K === g) { var E = this[0]; if (E) { if (o.nodeName(E, "option")) { return (E.attributes.value || {}).specified ? E.value : E.text } if (o.nodeName(E, "select")) { var I = E.selectedIndex, L = [], M = E.options, H = E.type == "select-one"; if (I < 0) { return null } for (var F = H ? I : 0, J = H ? I + 1 : M.length; F < J; F++) { var G = M[F]; if (G.selected) { K = o(G).val(); if (H) { return K } L.push(K) } } return L } return (E.value || "").replace(/\r/g, "") } return g } if (typeof K === "number") { K += "" } return this.each(function () { if (this.nodeType != 1) { return } if (o.isArray(K) && /radio|checkbox/.test(this.type)) { this.checked = (o.inArray(this.value, K) >= 0 || o.inArray(this.name, K) >= 0) } else { if (o.nodeName(this, "select")) { var N = o.makeArray(K); o("option", this).each(function () { this.selected = (o.inArray(this.value, N) >= 0 || o.inArray(this.text, N) >= 0) }); if (!N.length) { this.selectedIndex = -1 } } else { this.value = K } } }) }, html: function (E) { return E === g ? (this[0] ? this[0].innerHTML.replace(/ jQuery\d+="(?:\d+|null)"/g, "") : null) : this.empty().append(E) }, replaceWith: function (E) { return this.after(E).remove() }, eq: function (E) { return this.slice(E, +E + 1) }, slice: function () { return this.pushStack(Array.prototype.slice.apply(this, arguments), "slice", Array.prototype.slice.call(arguments).join(",")) }, map: function (E) { return this.pushStack(o.map(this, function (G, F) { return E.call(G, F, G) })) }, andSelf: function () { return this.add(this.prevObject) }, domManip: function (J, M, L) { if (this[0]) { var I = (this[0].ownerDocument || this[0]).createDocumentFragment(), F = o.clean(J, (this[0].ownerDocument || this[0]), I), H = I.firstChild; if (H) { for (var G = 0, E = this.length; G < E; G++) { L.call(K(this[G], H), this.length > 1 || G > 0 ? I.cloneNode(true) : I) } } if (F) { o.each(F, z) } } return this; function K(N, O) { return M && o.nodeName(N, "table") && o.nodeName(O, "tr") ? (N.getElementsByTagName("tbody")[0] || N.appendChild(N.ownerDocument.createElement("tbody"))) : N } } }; o.fn.init.prototype = o.fn; function z(E, F) { if (F.src) { o.ajax({ url: F.src, async: false, dataType: "script" }) } else { o.globalEval(F.text || F.textContent || F.innerHTML || "") } if (F.parentNode) { F.parentNode.removeChild(F) } } function e() { return +new Date } o.extend = o.fn.extend = function () { var J = arguments[0] || {}, H = 1, I = arguments.length, E = false, G; if (typeof J === "boolean") { E = J; J = arguments[1] || {}; H = 2 } if (typeof J !== "object" && !o.isFunction(J)) { J = {} } if (I == H) { J = this; --H } for (; H < I; H++) { if ((G = arguments[H]) != null) { for (var F in G) { var K = J[F], L = G[F]; if (J === L) { continue } if (E && L && typeof L === "object" && !L.nodeType) { J[F] = o.extend(E, K || (L.length != null ? [] : {}), L) } else { if (L !== g) { J[F] = L } } } } } return J }; var b = /z-?index|font-?weight|opacity|zoom|line-?height/i, q = document.defaultView || {}, s = Object.prototype.toString; o.extend({ noConflict: function (E) { l.$ = p; if (E) { l.jQuery = y } return o }, isFunction: function (E) { return s.call(E) === "[object Function]" }, isArray: function (E) { return s.call(E) === "[object Array]" }, isXMLDoc: function (E) { return E.nodeType === 9 && E.documentElement.nodeName !== "HTML" || !!E.ownerDocument && o.isXMLDoc(E.ownerDocument) }, globalEval: function (G) { if (G && /\S/.test(G)) { var F = document.getElementsByTagName("head")[0] || document.documentElement, E = document.createElement("script"); E.type = "text/javascript"; if (o.support.scriptEval) { E.appendChild(document.createTextNode(G)) } else { E.text = G } F.insertBefore(E, F.firstChild); F.removeChild(E) } }, nodeName: function (F, E) { return F.nodeName && F.nodeName.toUpperCase() == E.toUpperCase() }, each: function (G, K, F) { var E, H = 0, I = G.length; if (F) { if (I === g) { for (E in G) { if (K.apply(G[E], F) === false) { break } } } else { for (; H < I; ) { if (K.apply(G[H++], F) === false) { break } } } } else { if (I === g) { for (E in G) { if (K.call(G[E], E, G[E]) === false) { break } } } else { for (var J = G[0]; H < I && K.call(J, H, J) !== false; J = G[++H]) { } } } return G }, prop: function (H, I, G, F, E) { if (o.isFunction(I)) { I = I.call(H, F) } return typeof I === "number" && G == "curCSS" && !b.test(E) ? I + "px" : I }, className: { add: function (E, F) { o.each((F || "").split(/\s+/), function (G, H) { if (E.nodeType == 1 && !o.className.has(E.className, H)) { E.className += (E.className ? " " : "") + H } }) }, remove: function (E, F) { if (E.nodeType == 1) { E.className = F !== g ? o.grep(E.className.split(/\s+/), function (G) { return !o.className.has(F, G) }).join(" ") : "" } }, has: function (F, E) { return F && o.inArray(E, (F.className || F).toString().split(/\s+/)) > -1 } }, swap: function (H, G, I) { var E = {}; for (var F in G) { E[F] = H.style[F]; H.style[F] = G[F] } I.call(H); for (var F in G) { H.style[F] = E[F] } }, css: function (H, F, J, E) { if (F == "width" || F == "height") { var L, G = { position: "absolute", visibility: "hidden", display: "block" }, K = F == "width" ? ["Left", "Right"] : ["Top", "Bottom"]; function I() { L = F == "width" ? H.offsetWidth : H.offsetHeight; if (E === "border") { return } o.each(K, function () { if (!E) { L -= parseFloat(o.curCSS(H, "padding" + this, true)) || 0 } if (E === "margin") { L += parseFloat(o.curCSS(H, "margin" + this, true)) || 0 } else { L -= parseFloat(o.curCSS(H, "border" + this + "Width", true)) || 0 } }) } if (H.offsetWidth !== 0) { I() } else { o.swap(H, G, I) } return Math.max(0, Math.round(L)) } return o.curCSS(H, F, J) }, curCSS: function (I, F, G) { var L, E = I.style; if (F == "opacity" && !o.support.opacity) { L = o.attr(E, "opacity"); return L == "" ? "1" : L } if (F.match(/float/i)) { F = w } if (!G && E && E[F]) { L = E[F] } else { if (q.getComputedStyle) { if (F.match(/float/i)) { F = "float" } F = F.replace(/([A-Z])/g, "-$1").toLowerCase(); var M = q.getComputedStyle(I, null); if (M) { L = M.getPropertyValue(F) } if (F == "opacity" && L == "") { L = "1" } } else { if (I.currentStyle) { var J = F.replace(/\-(\w)/g, function (N, O) { return O.toUpperCase() }); L = I.currentStyle[F] || I.currentStyle[J]; if (!/^\d+(px)?$/i.test(L) && /^\d/.test(L)) { var H = E.left, K = I.runtimeStyle.left; I.runtimeStyle.left = I.currentStyle.left; E.left = L || 0; L = E.pixelLeft + "px"; E.left = H; I.runtimeStyle.left = K } } } } return L }, clean: function (F, K, I) { K = K || document; if (typeof K.createElement === "undefined") { K = K.ownerDocument || K[0] && K[0].ownerDocument || document } if (!I && F.length === 1 && typeof F[0] === "string") { var H = /^<(\w+)\s*\/?>$/.exec(F[0]); if (H) { return [K.createElement(H[1])] } } var G = [], E = [], L = K.createElement("div"); o.each(F, function (P, S) { if (typeof S === "number") { S += "" } if (!S) { return } if (typeof S === "string") { S = S.replace(/(<(\w+)[^>]*?)\/>/g, function (U, V, T) { return T.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ? U : V + "></" + T + ">" }); var O = S.replace(/^\s+/, "").substring(0, 10).toLowerCase(); var Q = !O.indexOf("<opt") && [1, "<select multiple='multiple'>", "</select>"] || !O.indexOf("<leg") && [1, "<fieldset>", "</fieldset>"] || O.match(/^<(thead|tbody|tfoot|colg|cap)/) && [1, "<table>", "</table>"] || !O.indexOf("<tr") && [2, "<table><tbody>", "</tbody></table>"] || (!O.indexOf("<td") || !O.indexOf("<th")) && [3, "<table><tbody><tr>", "</tr></tbody></table>"] || !O.indexOf("<col") && [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"] || !o.support.htmlSerialize && [1, "div<div>", "</div>"] || [0, "", ""]; L.innerHTML = Q[1] + S + Q[2]; while (Q[0]--) { L = L.lastChild } if (!o.support.tbody) { var R = /<tbody/i.test(S), N = !O.indexOf("<table") && !R ? L.firstChild && L.firstChild.childNodes : Q[1] == "<table>" && !R ? L.childNodes : []; for (var M = N.length - 1; M >= 0; --M) { if (o.nodeName(N[M], "tbody") && !N[M].childNodes.length) { N[M].parentNode.removeChild(N[M]) } } } if (!o.support.leadingWhitespace && /^\s/.test(S)) { L.insertBefore(K.createTextNode(S.match(/^\s*/)[0]), L.firstChild) } S = o.makeArray(L.childNodes) } if (S.nodeType) { G.push(S) } else { G = o.merge(G, S) } }); if (I) { for (var J = 0; G[J]; J++) { if (o.nodeName(G[J], "script") && (!G[J].type || G[J].type.toLowerCase() === "text/javascript")) { E.push(G[J].parentNode ? G[J].parentNode.removeChild(G[J]) : G[J]) } else { if (G[J].nodeType === 1) { G.splice.apply(G, [J + 1, 0].concat(o.makeArray(G[J].getElementsByTagName("script")))) } I.appendChild(G[J]) } } return E } return G }, attr: function (J, G, K) { if (!J || J.nodeType == 3 || J.nodeType == 8) { return g } var H = !o.isXMLDoc(J), L = K !== g; G = H && o.props[G] || G; if (J.tagName) { var F = /href|src|style/.test(G); if (G == "selected" && J.parentNode) { J.parentNode.selectedIndex } if (G in J && H && !F) { if (L) { if (G == "type" && o.nodeName(J, "input") && J.parentNode) { throw "type property can't be changed" } J[G] = K } if (o.nodeName(J, "form") && J.getAttributeNode(G)) { return J.getAttributeNode(G).nodeValue } if (G == "tabIndex") { var I = J.getAttributeNode("tabIndex"); return I && I.specified ? I.value : J.nodeName.match(/(button|input|object|select|textarea)/i) ? 0 : J.nodeName.match(/^(a|area)$/i) && J.href ? 0 : g } return J[G] } if (!o.support.style && H && G == "style") { return o.attr(J.style, "cssText", K) } if (L) { J.setAttribute(G, "" + K) } var E = !o.support.hrefNormalized && H && F ? J.getAttribute(G, 2) : J.getAttribute(G); return E === null ? g : E } if (!o.support.opacity && G == "opacity") { if (L) { J.zoom = 1; J.filter = (J.filter || "").replace(/alpha\([^)]*\)/, "") + (parseInt(K) + "" == "NaN" ? "" : "alpha(opacity=" + K * 100 + ")") } return J.filter && J.filter.indexOf("opacity=") >= 0 ? (parseFloat(J.filter.match(/opacity=([^)]*)/)[1]) / 100) + "" : "" } G = G.replace(/-([a-z])/ig, function (M, N) { return N.toUpperCase() }); if (L) { J[G] = K } return J[G] }, trim: function (E) { return (E || "").replace(/^\s+|\s+$/g, "") }, makeArray: function (G) { var E = []; if (G != null) { var F = G.length; if (F == null || typeof G === "string" || o.isFunction(G) || G.setInterval) { E[0] = G } else { while (F) { E[--F] = G[F] } } } return E }, inArray: function (G, H) { for (var E = 0, F = H.length; E < F; E++) { if (H[E] === G) { return E } } return -1 }, merge: function (H, E) { var F = 0, G, I = H.length; if (!o.support.getAll) { while ((G = E[F++]) != null) { if (G.nodeType != 8) { H[I++] = G } } } else { while ((G = E[F++]) != null) { H[I++] = G } } return H }, unique: function (K) { var F = [], E = {}; try { for (var G = 0, H = K.length; G < H; G++) { var J = o.data(K[G]); if (!E[J]) { E[J] = true; F.push(K[G]) } } } catch (I) { F = K } return F }, grep: function (F, J, E) { var G = []; for (var H = 0, I = F.length; H < I; H++) { if (!E != !J(F[H], H)) { G.push(F[H]) } } return G }, map: function (E, J) { var F = []; for (var G = 0, H = E.length; G < H; G++) { var I = J(E[G], G); if (I != null) { F[F.length] = I } } return F.concat.apply([], F) } }); var C = navigator.userAgent.toLowerCase(); o.browser = { version: (C.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, "0"])[1], safari: /webkit/.test(C), opera: /opera/.test(C), msie: /msie/.test(C) && !/opera/.test(C), mozilla: /mozilla/.test(C) && !/(compatible|webkit)/.test(C) }; o.each({ parent: function (E) { return E.parentNode }, parents: function (E) { return o.dir(E, "parentNode") }, next: function (E) { return o.nth(E, 2, "nextSibling") }, prev: function (E) { return o.nth(E, 2, "previousSibling") }, nextAll: function (E) { return o.dir(E, "nextSibling") }, prevAll: function (E) { return o.dir(E, "previousSibling") }, siblings: function (E) { return o.sibling(E.parentNode.firstChild, E) }, children: function (E) { return o.sibling(E.firstChild) }, contents: function (E) { return o.nodeName(E, "iframe") ? E.contentDocument || E.contentWindow.document : o.makeArray(E.childNodes) } }, function (E, F) { o.fn[E] = function (G) { var H = o.map(this, F); if (G && typeof G == "string") { H = o.multiFilter(G, H) } return this.pushStack(o.unique(H), E, G) } }); o.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (E, F) { o.fn[E] = function (G) { var J = [], L = o(G); for (var K = 0, H = L.length; K < H; K++) { var I = (K > 0 ? this.clone(true) : this).get(); o.fn[F].apply(o(L[K]), I); J = J.concat(I) } return this.pushStack(J, E, G) } }); o.each({ removeAttr: function (E) { o.attr(this, E, ""); if (this.nodeType == 1) { this.removeAttribute(E) } }, addClass: function (E) { o.className.add(this, E) }, removeClass: function (E) { o.className.remove(this, E) }, toggleClass: function (F, E) { if (typeof E !== "boolean") { E = !o.className.has(this, F) } o.className[E ? "add" : "remove"](this, F) }, remove: function (E) { if (!E || o.filter(E, [this]).length) { o("*", this).add([this]).each(function () { o.event.remove(this); o.removeData(this) }); if (this.parentNode) { this.parentNode.removeChild(this) } } }, empty: function () { o(this).children().remove(); while (this.firstChild) { this.removeChild(this.firstChild) } } }, function (E, F) { o.fn[E] = function () { return this.each(F, arguments) } }); function j(E, F) { return E[0] && parseInt(o.curCSS(E[0], F, true), 10) || 0 } var h = "jQuery" + e(), v = 0, A = {}; o.extend({ cache: {}, data: function (F, E, G) { F = F == l ? A : F; var H = F[h]; if (!H) { H = F[h] = ++v } if (E && !o.cache[H]) { o.cache[H] = {} } if (G !== g) { o.cache[H][E] = G } return E ? o.cache[H][E] : H }, removeData: function (F, E) { F = F == l ? A : F; var H = F[h]; if (E) { if (o.cache[H]) { delete o.cache[H][E]; E = ""; for (E in o.cache[H]) { break } if (!E) { o.removeData(F) } } } else { try { delete F[h] } catch (G) { if (F.removeAttribute) { F.removeAttribute(h) } } delete o.cache[H] } }, queue: function (F, E, H) { if (F) { E = (E || "fx") + "queue"; var G = o.data(F, E); if (!G || o.isArray(H)) { G = o.data(F, E, o.makeArray(H)) } else { if (H) { G.push(H) } } } return G }, dequeue: function (H, G) { var E = o.queue(H, G), F = E.shift(); if (!G || G === "fx") { F = E[0] } if (F !== g) { F.call(H) } } }); o.fn.extend({ data: function (E, G) { var H = E.split("."); H[1] = H[1] ? "." + H[1] : ""; if (G === g) { var F = this.triggerHandler("getData" + H[1] + "!", [H[0]]); if (F === g && this.length) { F = o.data(this[0], E) } return F === g && H[1] ? this.data(H[0]) : F } else { return this.trigger("setData" + H[1] + "!", [H[0], G]).each(function () { o.data(this, E, G) }) } }, removeData: function (E) { return this.each(function () { o.removeData(this, E) }) }, queue: function (E, F) { if (typeof E !== "string") { F = E; E = "fx" } if (F === g) { return o.queue(this[0], E) } return this.each(function () { var G = o.queue(this, E, F); if (E == "fx" && G.length == 1) { G[0].call(this) } }) }, dequeue: function (E) { return this.each(function () { o.dequeue(this, E) }) } });
    
/*
    * Sizzle CSS Selector Engine - v0.9.3
    *  Copyright 2009, The Dojo Foundation
    *  Released under the MIT, BSD, and GPL Licenses.
    *  More information: http://sizzlejs.com/
    */
    (function () { var R = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g, L = 0 , H = Object.prototype.toString; var F = function (Y, U, ab, ac) { ab = ab || []; U = U || document; if (U.nodeType !== 1 && U.nodeType !== 9) { return [] } if (!Y || typeof Y !== "string") { return ab } var Z = [], W, af, ai, T, ad, V, X = true; R.lastIndex = 0; while ((W = R.exec(Y)) !== null) { Z.push(W[1]); if (W[2]) { V = RegExp.rightContext; break } } if (Z.length > 1 && M.exec(Y)) { if (Z.length === 2 && I.relative[Z[0]]) { af = J(Z[0] + Z[1], U) } else { af = I.relative[Z[0]] ? [U] : F(Z.shift(), U); while (Z.length) { Y = Z.shift(); if (I.relative[Y]) { Y += Z.shift() } af = J(Y, af) } } } else { var ae = ac ? { expr: Z.pop(), set: E(ac)} : F.find(Z.pop(), Z.length === 1 && U.parentNode ? U.parentNode : U, Q(U)); af = F.filter(ae.expr, ae.set); if (Z.length > 0) { ai = E(af) } else { X = false } while (Z.length) { var ah = Z.pop(), ag = ah; if (!I.relative[ah]) { ah = "" } else { ag = Z.pop() } if (ag == null) { ag = U } I.relative[ah](ai, ag, Q(U)) } } if (!ai) { ai = af } if (!ai) { throw "Syntax error, unrecognized expression: " + (ah || Y) } if (H.call(ai) === "[object Array]") { if (!X) { ab.push.apply(ab, ai) } else { if (U.nodeType === 1) { for (var aa = 0; ai[aa] != null; aa++) { if (ai[aa] && (ai[aa] === true || ai[aa].nodeType === 1 && K(U, ai[aa]))) { ab.push(af[aa]) } } } else { for (var aa = 0; ai[aa] != null; aa++) { if (ai[aa] && ai[aa].nodeType === 1) { ab.push(af[aa]) } } } } } else { E(ai, ab) } if (V) { F(V, U, ab, ac); if (G) { hasDuplicate = false; ab.sort(G); if (hasDuplicate) { for (var aa = 1; aa < ab.length; aa++) { if (ab[aa] === ab[aa - 1]) { ab.splice(aa--, 1) } } } } } return ab }; F.matches = function (T, U) { return F(T, null, null, U) }; F.find = function (aa, T, ab) { var Z, X; if (!aa) { return [] } for (var W = 0, V = I.order.length; W < V; W++) { var Y = I.order[W], X; if ((X = I.match[Y].exec(aa))) { var U = RegExp.leftContext; if (U.substr(U.length - 1) !== "\\") { X[1] = (X[1] || "").replace(/\\/g, ""); Z = I.find[Y](X, T, ab); if (Z != null) { aa = aa.replace(I.match[Y], ""); break } } } } if (!Z) { Z = T.getElementsByTagName("*") } return { set: Z, expr: aa} }; F.filter = function (ad, ac, ag, W) { var V = ad, ai = [], aa = ac, Y, T, Z = ac && ac[0] && Q(ac[0]); while (ad && ac.length) { for (var ab in I.filter) { if ((Y = I.match[ab].exec(ad)) != null) { var U = I.filter[ab], ah, af; T = false; if (aa == ai) { ai = [] } if (I.preFilter[ab]) { Y = I.preFilter[ab](Y, aa, ag, ai, W, Z); if (!Y) { T = ah = true } else { if (Y === true) { continue } } } if (Y) { for (var X = 0; (af = aa[X]) != null; X++) { if (af) { ah = U(af, Y, X, aa); var ae = W ^ !!ah; if (ag && ah != null) { if (ae) { T = true } else { aa[X] = false } } else { if (ae) { ai.push(af); T = true } } } } } if (ah !== g) { if (!ag) { aa = ai } ad = ad.replace(I.match[ab], ""); if (!T) { return [] } break } } } if (ad == V) { if (T == null) { throw "Syntax error, unrecognized expression: " + ad } else { break } } V = ad } return aa }; var I = F.selectors = { order: ["ID", "NAME", "TAG"], match: { ID: /#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/ }, attrMap: { "class": "className", "for": "htmlFor" }, attrHandle: { href: function (T) { return T.getAttribute("href") } }, relative: { "+": function (aa, T, Z) { var X = typeof T === "string", ab = X && !/\W/.test(T), Y = X && !ab; if (ab && !Z) { T = T.toUpperCase() } for (var W = 0, V = aa.length, U; W < V; W++) { if ((U = aa[W])) { while ((U = U.previousSibling) && U.nodeType !== 1) { } aa[W] = Y || U && U.nodeName === T ? U || false : U === T } } if (Y) { F.filter(T, aa, true) } }, ">": function (Z, U, aa) { var X = typeof U === "string"; if (X && !/\W/.test(U)) { U = aa ? U : U.toUpperCase(); for (var V = 0, T = Z.length; V < T; V++) { var Y = Z[V]; if (Y) { var W = Y.parentNode; Z[V] = W.nodeName === U ? W : false } } } else { for (var V = 0, T = Z.length; V < T; V++) { var Y = Z[V]; if (Y) { Z[V] = X ? Y.parentNode : Y.parentNode === U } } if (X) { F.filter(U, Z, true) } } }, "": function (W, U, Y) { var V = L++, T = S; if (!U.match(/\W/)) { var X = U = Y ? U : U.toUpperCase(); T = P } T("parentNode", U, V, W, X, Y) }, "~": function (W, U, Y) { var V = L++, T = S; if (typeof U === "string" && !U.match(/\W/)) { var X = U = Y ? U : U.toUpperCase(); T = P } T("previousSibling", U, V, W, X, Y) } }, find: { ID: function (U, V, W) { if (typeof V.getElementById !== "undefined" && !W) { var T = V.getElementById(U[1]); return T ? [T] : [] } }, NAME: function (V, Y, Z) { if (typeof Y.getElementsByName !== "undefined") { var U = [], X = Y.getElementsByName(V[1]); for (var W = 0, T = X.length; W < T; W++) { if (X[W].getAttribute("name") === V[1]) { U.push(X[W]) } } return U.length === 0 ? null : U } }, TAG: function (T, U) { return U.getElementsByTagName(T[1]) } }, preFilter: { CLASS: function (W, U, V, T, Z, aa) { W = " " + W[1].replace(/\\/g, "") + " "; if (aa) { return W } for (var X = 0, Y; (Y = U[X]) != null; X++) { if (Y) { if (Z ^ (Y.className && (" " + Y.className + " ").indexOf(W) >= 0)) { if (!V) { T.push(Y) } } else { if (V) { U[X] = false } } } } return false }, ID: function (T) { return T[1].replace(/\\/g, "") }, TAG: function (U, T) { for (var V = 0; T[V] === false; V++) { } return T[V] && Q(T[V]) ? U[1] : U[1].toUpperCase() }, CHILD: function (T) { if (T[1] == "nth") { var U = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(T[2] == "even" && "2n" || T[2] == "odd" && "2n+1" || !/\D/.test(T[2]) && "0n+" + T[2] || T[2]); T[2] = (U[1] + (U[2] || 1)) - 0; T[3] = U[3] - 0 } T[0] = L++; return T }, ATTR: function (X, U, V, T, Y, Z) { var W = X[1].replace(/\\/g, ""); if (!Z && I.attrMap[W]) { X[1] = I.attrMap[W] } if (X[2] === "~=") { X[4] = " " + X[4] + " " } return X }, PSEUDO: function (X, U, V, T, Y) { if (X[1] === "not") { if (X[3].match(R).length > 1 || /^\w/.test(X[3])) { X[3] = F(X[3], null, null, U) } else { var W = F.filter(X[3], U, V, true ^ Y); if (!V) { T.push.apply(T, W) } return false } } else { if (I.match.POS.test(X[0]) || I.match.CHILD.test(X[0])) { return true } } return X }, POS: function (T) { T.unshift(true); return T } }, filters: { enabled: function (T) { return T.disabled === false && T.type !== "hidden" }, disabled: function (T) { return T.disabled === true }, checked: function (T) { return T.checked === true }, selected: function (T) { T.parentNode.selectedIndex; return T.selected === true }, parent: function (T) { return !!T.firstChild }, empty: function (T) { return !T.firstChild }, has: function (V, U, T) { return !!F(T[3], V).length }, header: function (T) { return /h\d/i.test(T.nodeName) }, text: function (T) { return "text" === T.type }, radio: function (T) { return "radio" === T.type }, checkbox: function (T) { return "checkbox" === T.type }, file: function (T) { return "file" === T.type }, password: function (T) { return "password" === T.type }, submit: function (T) { return "submit" === T.type }, image: function (T) { return "image" === T.type }, reset: function (T) { return "reset" === T.type }, button: function (T) { return "button" === T.type || T.nodeName.toUpperCase() === "BUTTON" }, input: function (T) { return /input|select|textarea|button/i.test(T.nodeName) } }, setFilters: { first: function (U, T) { return T === 0 }, last: function (V, U, T, W) { return U === W.length - 1 }, even: function (U, T) { return T % 2 === 0 }, odd: function (U, T) { return T % 2 === 1 }, lt: function (V, U, T) { return U < T[3] - 0 }, gt: function (V, U, T) { return U > T[3] - 0 }, nth: function (V, U, T) { return T[3] - 0 == U }, eq: function (V, U, T) { return T[3] - 0 == U } }, filter: { PSEUDO: function (Z, V, W, aa) { var U = V[1], X = I.filters[U]; if (X) { return X(Z, W, V, aa) } else { if (U === "contains") { return (Z.textContent || Z.innerText || "").indexOf(V[3]) >= 0 } else { if (U === "not") { var Y = V[3]; for (var W = 0, T = Y.length; W < T; W++) { if (Y[W] === Z) { return false } } return true } } } }, CHILD: function (T, W) { var Z = W[1], U = T; switch (Z) { case "only": case "first": while (U = U.previousSibling) { if (U.nodeType === 1) { return false } } if (Z == "first") { return true } U = T; case "last": while (U = U.nextSibling) { if (U.nodeType === 1) { return false } } return true; case "nth": var V = W[2], ac = W[3]; if (V == 1 && ac == 0) { return true } var Y = W[0], ab = T.parentNode; if (ab && (ab.sizcache !== Y || !T.nodeIndex)) { var X = 0; for (U = ab.firstChild; U; U = U.nextSibling) { if (U.nodeType === 1) { U.nodeIndex = ++X } } ab.sizcache = Y } var aa = T.nodeIndex - ac; if (V == 0) { return aa == 0 } else { return (aa % V == 0 && aa / V >= 0) } } }, ID: function (U, T) { return U.nodeType === 1 && U.getAttribute("id") === T }, TAG: function (U, T) { return (T === "*" && U.nodeType === 1) || U.nodeName === T }, CLASS: function (U, T) { return (" " + (U.className || U.getAttribute("class")) + " ").indexOf(T) > -1 }, ATTR: function (Y, W) { var V = W[1], T = I.attrHandle[V] ? I.attrHandle[V](Y) : Y[V] != null ? Y[V] : Y.getAttribute(V), Z = T + "", X = W[2], U = W[4]; return T == null ? X === "!=" : X === "=" ? Z === U : X === "*=" ? Z.indexOf(U) >= 0 : X === "~=" ? (" " + Z + " ").indexOf(U) >= 0 : !U ? Z && T !== false : X === "!=" ? Z != U : X === "^=" ? Z.indexOf(U) === 0 : X === "$=" ? Z.substr(Z.length - U.length) === U : X === "|=" ? Z === U || Z.substr(0, U.length + 1) === U + "-" : false }, POS: function (X, U, V, Y) { var T = U[2], W = I.setFilters[T]; if (W) { return W(X, V, U, Y) } } } }; var M = I.match.POS; for (var O in I.match) { I.match[O] = RegExp(I.match[O].source + /(?![^\[]*\])(?![^\(]*\))/.source) } var E = function (U, T) { U = Array.prototype.slice.call(U); if (T) { T.push.apply(T, U); return T } return U }; try { Array.prototype.slice.call(document.documentElement.childNodes) } catch (N) { E = function (X, W) { var U = W || []; if (H.call(X) === "[object Array]") { Array.prototype.push.apply(U, X) } else { if (typeof X.length === "number") { for (var V = 0, T = X.length; V < T; V++) { U.push(X[V]) } } else { for (var V = 0; X[V]; V++) { U.push(X[V]) } } } return U } } var G; if (document.documentElement.compareDocumentPosition) { G = function (U, T) { var V = U.compareDocumentPosition(T) & 4 ? -1 : U === T ? 0 : 1; if (V === 0) { hasDuplicate = true } return V } } else { if ("sourceIndex" in document.documentElement) { G = function (U, T) { var V = U.sourceIndex - T.sourceIndex; if (V === 0) { hasDuplicate = true } return V } } else { if (document.createRange) { G = function (W, U) { var V = W.ownerDocument.createRange(), T = U.ownerDocument.createRange(); V.selectNode(W); V.collapse(true); T.selectNode(U); T.collapse(true); var X = V.compareBoundaryPoints(Range.START_TO_END, T); if (X === 0) { hasDuplicate = true } return X } } } } (function () { var U = document.createElement("form"), V = "script" + (new Date).getTime(); U.innerHTML = "<input name='" + V + "'/>"; var T = document.documentElement; T.insertBefore(U, T.firstChild); if (!!document.getElementById(V)) { I.find.ID = function (X, Y, Z) { if (typeof Y.getElementById !== "undefined" && !Z) { var W = Y.getElementById(X[1]); return W ? W.id === X[1] || typeof W.getAttributeNode !== "undefined" && W.getAttributeNode("id").nodeValue === X[1] ? [W] : g : [] } }; I.filter.ID = function (Y, W) { var X = typeof Y.getAttributeNode !== "undefined" && Y.getAttributeNode("id"); return Y.nodeType === 1 && X && X.nodeValue === W } } T.removeChild(U) })(); (function () { var T = document.createElement("div"); T.appendChild(document.createComment("")); if (T.getElementsByTagName("*").length > 0) { I.find.TAG = function (U, Y) { var X = Y.getElementsByTagName(U[1]); if (U[1] === "*") { var W = []; for (var V = 0; X[V]; V++) { if (X[V].nodeType === 1) { W.push(X[V]) } } X = W } return X } } T.innerHTML = "<a href='#'></a>"; if (T.firstChild && typeof T.firstChild.getAttribute !== "undefined" && T.firstChild.getAttribute("href") !== "#") { I.attrHandle.href = function (U) { return U.getAttribute("href", 2) } } })(); if (document.querySelectorAll) { (function () { var T = F, U = document.createElement("div"); U.innerHTML = "<p class='TEST'></p>"; if (U.querySelectorAll && U.querySelectorAll(".TEST").length === 0) { return } F = function (Y, X, V, W) { X = X || document; if (!W && X.nodeType === 9 && !Q(X)) { try { return E(X.querySelectorAll(Y), V) } catch (Z) { } } return T(Y, X, V, W) }; F.find = T.find; F.filter = T.filter; F.selectors = T.selectors; F.matches = T.matches })() } if (document.getElementsByClassName && document.documentElement.getElementsByClassName) { (function () { var T = document.createElement("div"); T.innerHTML = "<div class='test e'></div><div class='test'></div>"; if (T.getElementsByClassName("e").length === 0) { return } T.lastChild.className = "e"; if (T.getElementsByClassName("e").length === 1) { return } I.order.splice(1, 0, "CLASS"); I.find.CLASS = function (U, V, W) { if (typeof V.getElementsByClassName !== "undefined" && !W) { return V.getElementsByClassName(U[1]) } } })() } function P(U, Z, Y, ad, aa, ac) { var ab = U == "previousSibling" && !ac; for (var W = 0, V = ad.length; W < V; W++) { var T = ad[W]; if (T) { if (ab && T.nodeType === 1) { T.sizcache = Y; T.sizset = W } T = T[U]; var X = false; while (T) { if (T.sizcache === Y) { X = ad[T.sizset]; break } if (T.nodeType === 1 && !ac) { T.sizcache = Y; T.sizset = W } if (T.nodeName === Z) { X = T; break } T = T[U] } ad[W] = X } } } function S(U, Z, Y, ad, aa, ac) { var ab = U == "previousSibling" && !ac; for (var W = 0, V = ad.length; W < V; W++) { var T = ad[W]; if (T) { if (ab && T.nodeType === 1) { T.sizcache = Y; T.sizset = W } T = T[U]; var X = false; while (T) { if (T.sizcache === Y) { X = ad[T.sizset]; break } if (T.nodeType === 1) { if (!ac) { T.sizcache = Y; T.sizset = W } if (typeof Z !== "string") { if (T === Z) { X = true; break } } else { if (F.filter(Z, [T]).length > 0) { X = T; break } } } T = T[U] } ad[W] = X } } } var K = document.compareDocumentPosition ? function (U, T) { return U.compareDocumentPosition(T) & 16 } : function (U, T) { return U !== T && (U.contains ? U.contains(T) : true) }; var Q = function (T) { return T.nodeType === 9 && T.documentElement.nodeName !== "HTML" || !!T.ownerDocument && Q(T.ownerDocument) }; var J = function (T, aa) { var W = [], X = "", Y, V = aa.nodeType ? [aa] : aa; while ((Y = I.match.PSEUDO.exec(T))) { X += Y[0]; T = T.replace(I.match.PSEUDO, "") } T = I.relative[T] ? T + "*" : T; for (var Z = 0, U = V.length; Z < U; Z++) { F(T, V[Z], W) } return F.filter(X, W) }; o.find = F; o.filter = F.filter; o.expr = F.selectors; o.expr[":"] = o.expr.filters; F.selectors.filters.hidden = function (T) { return T.offsetWidth === 0 || T.offsetHeight === 0 }; F.selectors.filters.visible = function (T) { return T.offsetWidth > 0 || T.offsetHeight > 0 }; F.selectors.filters.animated = function (T) { return o.grep(o.timers, function (U) { return T === U.elem }).length }; o.multiFilter = function (V, T, U) { if (U) { V = ":not(" + V + ")" } return F.matches(V, T) }; o.dir = function (V, U) { var T = [], W = V[U]; while (W && W != document) { if (W.nodeType == 1) { T.push(W) } W = W[U] } return T }; o.nth = function (X, T, V, W) { T = T || 1; var U = 0; for (; X; X = X[V]) { if (X.nodeType == 1 && ++U == T) { break } } return X }; o.sibling = function (V, U) { var T = []; for (; V; V = V.nextSibling) { if (V.nodeType == 1 && V != U) { T.push(V) } } return T }; return; l.Sizzle = F })(); o.event = { add: function (I, F, H, K) { if (I.nodeType == 3 || I.nodeType == 8) { return } if (I.setInterval && I != l) { I = l } if (!H.guid) { H.guid = this.guid++ } if (K !== g) { var G = H; H = this.proxy(G); H.data = K } var E = o.data(I, "events") || o.data(I, "events", {}), J = o.data(I, "handle") || o.data(I, "handle", function () { return typeof o !== "undefined" && !o.event.triggered ? o.event.handle.apply(arguments.callee.elem, arguments) : g }); J.elem = I; o.each(F.split(/\s+/), function (M, N) { var O = N.split("."); N = O.shift(); H.type = O.slice().sort().join("."); var L = E[N]; if (o.event.specialAll[N]) { o.event.specialAll[N].setup.call(I, K, O) } if (!L) { L = E[N] = {}; if (!o.event.special[N] || o.event.special[N].setup.call(I, K, O) === false) { if (I.addEventListener) { I.addEventListener(N, J, false) } else { if (I.attachEvent) { I.attachEvent("on" + N, J) } } } } L[H.guid] = H; o.event.global[N] = true }); I = null }, guid: 1, global: {}, remove: function (K, H, J) { if (K.nodeType == 3 || K.nodeType == 8) { return } var G = o.data(K, "events"), F, E; if (G) { if (H === g || (typeof H === "string" && H.charAt(0) == ".")) { for (var I in G) { this.remove(K, I + (H || "")) } } else { if (H.type) { J = H.handler; H = H.type } o.each(H.split(/\s+/), function (M, O) { var Q = O.split("."); O = Q.shift(); var N = RegExp("(^|\\.)" + Q.slice().sort().join(".*\\.") + "(\\.|$)"); if (G[O]) { if (J) { delete G[O][J.guid] } else { for (var P in G[O]) { if (N.test(G[O][P].type)) { delete G[O][P] } } } if (o.event.specialAll[O]) { o.event.specialAll[O].teardown.call(K, Q) } for (F in G[O]) { break } if (!F) { if (!o.event.special[O] || o.event.special[O].teardown.call(K, Q) === false) { if (K.removeEventListener) { K.removeEventListener(O, o.data(K, "handle"), false) } else { if (K.detachEvent) { K.detachEvent("on" + O, o.data(K, "handle")) } } } F = null; delete G[O] } } }) } for (F in G) { break } if (!F) { var L = o.data(K, "handle"); if (L) { L.elem = null } o.removeData(K, "events"); o.removeData(K, "handle") } } }, trigger: function (I, K, H, E) { var G = I.type || I; if (!E) { I = typeof I === "object" ? I[h] ? I : o.extend(o.Event(G), I) : o.Event(G); if (G.indexOf("!") >= 0) { I.type = G = G.slice(0, -1); I.exclusive = true } if (!H) { I.stopPropagation(); if (this.global[G]) { o.each(o.cache, function () { if (this.events && this.events[G]) { o.event.trigger(I, K, this.handle.elem) } }) } } if (!H || H.nodeType == 3 || H.nodeType == 8) { return g } I.result = g; I.target = H; K = o.makeArray(K); K.unshift(I) } I.currentTarget = H; var J = o.data(H, "handle"); if (J) { J.apply(H, K) } if ((!H[G] || (o.nodeName(H, "a") && G == "click")) && H["on" + G] && H["on" + G].apply(H, K) === false) { I.result = false } if (!E && H[G] && !I.isDefaultPrevented() && !(o.nodeName(H, "a") && G == "click")) { this.triggered = true; try { H[G]() } catch (L) { } } this.triggered = false; if (!I.isPropagationStopped()) { var F = H.parentNode || H.ownerDocument; if (F) { o.event.trigger(I, K, F, true) } } }, handle: function (K) { var J, E; K = arguments[0] = o.event.fix(K || l.event); K.currentTarget = this; var L = K.type.split("."); K.type = L.shift(); J = !L.length && !K.exclusive; var I = RegExp("(^|\\.)" + L.slice().sort().join(".*\\.") + "(\\.|$)"); E = (o.data(this, "events") || {})[K.type]; for (var G in E) { var H = E[G]; if (J || I.test(H.type)) { K.handler = H; K.data = H.data; var F = H.apply(this, arguments); if (F !== g) { K.result = F; if (F === false) { K.preventDefault(); K.stopPropagation() } } if (K.isImmediatePropagationStopped()) { break } } } }, props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "), fix: function (H) { if (H[h]) { return H } var F = H; H = o.Event(F); for (var G = this.props.length, J; G; ) { J = this.props[--G]; H[J] = F[J] } if (!H.target) { H.target = H.srcElement || document } if (H.target.nodeType == 3) { H.target = H.target.parentNode } if (!H.relatedTarget && H.fromElement) { H.relatedTarget = H.fromElement == H.target ? H.toElement : H.fromElement } if (H.pageX == null && H.clientX != null) { var I = document.documentElement, E = document.body; H.pageX = H.clientX + (I && I.scrollLeft || E && E.scrollLeft || 0) - (I.clientLeft || 0); H.pageY = H.clientY + (I && I.scrollTop || E && E.scrollTop || 0) - (I.clientTop || 0) } if (!H.which && ((H.charCode || H.charCode === 0) ? H.charCode : H.keyCode)) { H.which = H.charCode || H.keyCode } if (!H.metaKey && H.ctrlKey) { H.metaKey = H.ctrlKey } if (!H.which && H.button) { H.which = (H.button & 1 ? 1 : (H.button & 2 ? 3 : (H.button & 4 ? 2 : 0))) } return H }, proxy: function (F, E) { E = E || function () { return F.apply(this, arguments) }; E.guid = F.guid = F.guid || E.guid || this.guid++; return E }, special: { ready: { setup: B, teardown: function () { } } }, specialAll: { live: { setup: function (E, F) { o.event.add(this, F[0], c) }, teardown: function (G) { if (G.length) { var E = 0, F = RegExp("(^|\\.)" + G[0] + "(\\.|$)"); o.each((o.data(this, "events").live || {}), function () { if (F.test(this.type)) { E++ } }); if (E < 1) { o.event.remove(this, G[0], c) } } } }} }; o.Event = function (E) { if (!this.preventDefault) { return new o.Event(E) } if (E && E.type) { this.originalEvent = E; this.type = E.type } else { this.type = E } this.timeStamp = e(); this[h] = true }; function k() { return false } function u() { return true } o.Event.prototype = { preventDefault: function () { this.isDefaultPrevented = u; var E = this.originalEvent; if (!E) { return } if (E.preventDefault) { E.preventDefault() } E.returnValue = false }, stopPropagation: function () { this.isPropagationStopped = u; var E = this.originalEvent; if (!E) { return } if (E.stopPropagation) { E.stopPropagation() } E.cancelBubble = true }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = u; this.stopPropagation() }, isDefaultPrevented: k, isPropagationStopped: k, isImmediatePropagationStopped: k }; var a = function (F) { var E = F.relatedTarget; while (E && E != this) { try { E = E.parentNode } catch (G) { E = this } } if (E != this) { F.type = F.data; o.event.handle.apply(this, arguments) } }; o.each({ mouseover: "mouseenter", mouseout: "mouseleave" }, function (F, E) { o.event.special[E] = { setup: function () { o.event.add(this, F, a, E) }, teardown: function () { o.event.remove(this, F, a) } } }); o.fn.extend({ bind: function (F, G, E) { return F == "unload" ? this.one(F, G, E) : this.each(function () { o.event.add(this, F, E || G, E && G) }) }, one: function (G, H, F) { var E = o.event.proxy(F || H, function (I) { o(this).unbind(I, E); return (F || H).apply(this, arguments) }); return this.each(function () { o.event.add(this, G, E, F && H) }) }, unbind: function (F, E) { return this.each(function () { o.event.remove(this, F, E) }) }, trigger: function (E, F) { return this.each(function () { o.event.trigger(E, F, this) }) }, triggerHandler: function (E, G) { if (this[0]) { var F = o.Event(E); F.preventDefault(); F.stopPropagation(); o.event.trigger(F, G, this[0]); return F.result } }, toggle: function (G) { var E = arguments, F = 1; while (F < E.length) { o.event.proxy(G, E[F++]) } return this.click(o.event.proxy(G, function (H) { this.lastToggle = (this.lastToggle || 0) % F; H.preventDefault(); return E[this.lastToggle++].apply(this, arguments) || false })) }, hover: function (E, F) { return this.mouseenter(E).mouseleave(F) }, ready: function (E) { B(); if (o.isReady) { E.call(document, o) } else { o.readyList.push(E) } return this }, live: function (G, F) { var E = o.event.proxy(F); E.guid += this.selector + G; o(document).bind(i(G, this.selector), this.selector, E); return this }, die: function (F, E) { o(document).unbind(i(F, this.selector), E ? { guid: E.guid + this.selector + F} : null); return this } }); function c(H) { var E = RegExp("(^|\\.)" + H.type + "(\\.|$)"), G = true, F = []; o.each(o.data(this, "events").live || [], function (I, J) { if (E.test(J.type)) { var K = o(H.target).closest(J.data)[0]; if (K) { F.push({ elem: K, fn: J }) } } }); F.sort(function (J, I) { return o.data(J.elem, "closest") - o.data(I.elem, "closest") }); o.each(F, function () { if (this.fn.call(this.elem, H, this.fn.data) === false) { return (G = false) } }); return G } function i(F, E) { return ["live", F, E.replace(/\./g, "`").replace(/ /g, "|")].join(".") } o.extend({ isReady: false, readyList: [], ready: function () { if (!o.isReady) { o.isReady = true; if (o.readyList) { o.each(o.readyList, function () { this.call(document, o) }); o.readyList = null } o(document).triggerHandler("ready") } } }); var x = false; function B() { if (x) { return } x = true; if (document.addEventListener) { document.addEventListener("DOMContentLoaded", function () { document.removeEventListener("DOMContentLoaded", arguments.callee, false); o.ready() }, false) } else { if (document.attachEvent) { document.attachEvent("onreadystatechange", function () { if (document.readyState === "complete") { document.detachEvent("onreadystatechange", arguments.callee); o.ready() } }); if (document.documentElement.doScroll && l == l.top) { (function () { if (o.isReady) { return } try { document.documentElement.doScroll("left") } catch (E) { setTimeout(arguments.callee, 0); return } o.ready() })() } } } o.event.add(l, "load", o.ready) } o.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error").split(","), function (F, E) { o.fn[E] = function (G) { return G ? this.bind(E, G) : this.trigger(E) } }); o(l).bind("unload", function () { for (var E in o.cache) { if (E != 1 && o.cache[E].handle) { o.event.remove(o.cache[E].handle.elem) } } }); (function () { o.support = {}; var F = document.documentElement, G = document.createElement("script"), K = document.createElement("div"), J = "script" + (new Date).getTime(); K.style.display = "none"; K.innerHTML = '   <link/><table></table><a href="/a" style="color:red;float:left;opacity:.5;">a</a><select><option>text</option></select><object><param/></object>'; var H = K.getElementsByTagName("*"), E = K.getElementsByTagName("a")[0]; if (!H || !H.length || !E) { return } o.support = { leadingWhitespace: K.firstChild.nodeType == 3, tbody: !K.getElementsByTagName("tbody").length, objectAll: !!K.getElementsByTagName("object")[0].getElementsByTagName("*").length, htmlSerialize: !!K.getElementsByTagName("link").length, style: /red/.test(E.getAttribute("style")), hrefNormalized: E.getAttribute("href") === "/a", opacity: E.style.opacity === "0.5", cssFloat: !!E.style.cssFloat, scriptEval: false, noCloneEvent: true, boxModel: null }; G.type = "text/javascript"; try { G.appendChild(document.createTextNode("window." + J + "=1;")) } catch (I) { } F.insertBefore(G, F.firstChild); if (l[J]) { o.support.scriptEval = true; delete l[J] } F.removeChild(G); if (K.attachEvent && K.fireEvent) { K.attachEvent("onclick", function () { o.support.noCloneEvent = false; K.detachEvent("onclick", arguments.callee) }); K.cloneNode(true).fireEvent("onclick") } o(function () { var L = document.createElement("div"); L.style.width = L.style.paddingLeft = "1px"; document.body.appendChild(L); o.boxModel = o.support.boxModel = L.offsetWidth === 2; document.body.removeChild(L).style.display = "none" }) })(); var w = o.support.cssFloat ? "cssFloat" : "styleFloat"; o.props = { "for": "htmlFor", "class": "className", "float": w, cssFloat: w, styleFloat: w, readonly: "readOnly", maxlength: "maxLength", cellspacing: "cellSpacing", rowspan: "rowSpan", tabindex: "tabIndex" }; o.fn.extend({ _load: o.fn.load, load: function (G, J, K) { if (typeof G !== "string") { return this._load(G) } var I = G.indexOf(" "); if (I >= 0) { var E = G.slice(I, G.length); G = G.slice(0, I) } var H = "GET"; if (J) { if (o.isFunction(J)) { K = J; J = null } else { if (typeof J === "object") { J = o.param(J); H = "POST" } } } var F = this; o.ajax({ url: G, type: H, dataType: "html", data: J, complete: function (M, L) { if (L == "success" || L == "notmodified") { F.html(E ? o("<div/>").append(M.responseText.replace(/<script(.|\s)*?\/script>/g, "")).find(E) : M.responseText) } if (K) { F.each(K, [M.responseText, L, M]) } } }); return this }, serialize: function () { return o.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { return this.elements ? o.makeArray(this.elements) : this }).filter(function () { return this.name && !this.disabled && (this.checked || /select|textarea/i.test(this.nodeName) || /text|hidden|password|search/i.test(this.type)) }).map(function (E, F) { var G = o(this).val(); return G == null ? null : o.isArray(G) ? o.map(G, function (I, H) { return { name: F.name, value: I} }) : { name: F.name, value: G} }).get() } }); o.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","), function (E, F) { o.fn[F] = function (G) { return this.bind(F, G) } }); var r = e(); o.extend({ get: function (E, G, H, F) { if (o.isFunction(G)) { H = G; G = null } return o.ajax({ type: "GET", url: E, data: G, success: H, dataType: F }) }, getScript: function (E, F) { return o.get(E, null, F, "script") }, getJSON: function (E, F, G) { return o.get(E, F, G, "json") }, post: function (E, G, H, F) { if (o.isFunction(G)) { H = G; G = {} } return o.ajax({ type: "POST", url: E, data: G, success: H, dataType: F }) }, ajaxSetup: function (E) { o.extend(o.ajaxSettings, E) }, ajaxSettings: { url: location.href, global: true, type: "GET", contentType: "application/x-www-form-urlencoded", processData: true, async: true, xhr: function () { return l.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest() }, accepts: { xml: "application/xml, text/xml", html: "text/html", script: "text/javascript, application/javascript", json: "application/json, text/javascript", text: "text/plain", _default: "*/*"} }, lastModified: {}, ajax: function (M) { M = o.extend(true, M, o.extend(true, {}, o.ajaxSettings, M)); var W, F = /=\?(&|$)/g, R, V, G = M.type.toUpperCase(); if (M.data && M.processData && typeof M.data !== "string") { M.data = o.param(M.data) } if (M.dataType == "jsonp") { if (G == "GET") { if (!M.url.match(F)) { M.url += (M.url.match(/\?/) ? "&" : "?") + (M.jsonp || "callback") + "=?" } } else { if (!M.data || !M.data.match(F)) { M.data = (M.data ? M.data + "&" : "") + (M.jsonp || "callback") + "=?" } } M.dataType = "json" } if (M.dataType == "json" && (M.data && M.data.match(F) || M.url.match(F))) { W = "jsonp" + r++; if (M.data) { M.data = (M.data + "").replace(F, "=" + W + "$1") } M.url = M.url.replace(F, "=" + W + "$1"); M.dataType = "script"; l[W] = function (X) { V = X; I(); L(); l[W] = g; try { delete l[W] } catch (Y) { } if (H) { H.removeChild(T) } } } if (M.dataType == "script" && M.cache == null) { M.cache = false } if (M.cache === false && G == "GET") { var E = e(); var U = M.url.replace(/(\?|&)_=.*?(&|$)/, "$1_=" + E + "$2"); M.url = U + ((U == M.url) ? (M.url.match(/\?/) ? "&" : "?") + "_=" + E : "") } if (M.data && G == "GET") { M.url += (M.url.match(/\?/) ? "&" : "?") + M.data; M.data = null } if (M.global && !o.active++) { o.event.trigger("ajaxStart") } var Q = /^(\w+:)?\/\/([^\/?#]+)/.exec(M.url); if (M.dataType == "script" && G == "GET" && Q && (Q[1] && Q[1] != location.protocol || Q[2] != location.host)) { var H = document.getElementsByTagName("head")[0]; var T = document.createElement("script"); T.src = M.url; if (M.scriptCharset) { T.charset = M.scriptCharset } if (!W) { var O = false; T.onload = T.onreadystatechange = function () { if (!O && (!this.readyState || this.readyState == "loaded" || this.readyState == "complete")) { O = true; I(); L(); T.onload = T.onreadystatechange = null; H.removeChild(T) } } } H.appendChild(T); return g } var K = false; var J = M.xhr(); if (M.username) { J.open(G, M.url, M.async, M.username, M.password) } else { J.open(G, M.url, M.async) } try { if (M.data) { J.setRequestHeader("Content-Type", M.contentType) } if (M.ifModified) { J.setRequestHeader("If-Modified-Since", o.lastModified[M.url] || "Thu, 01 Jan 1970 00:00:00 GMT") } J.setRequestHeader("X-Requested-With", "XMLHttpRequest"); J.setRequestHeader("Accept", M.dataType && M.accepts[M.dataType] ? M.accepts[M.dataType] + ", */*" : M.accepts._default) } catch (S) { } if (M.beforeSend && M.beforeSend(J, M) === false) { if (M.global && ! --o.active) { o.event.trigger("ajaxStop") } J.abort(); return false } if (M.global) { o.event.trigger("ajaxSend", [J, M]) } var N = function (X) { if (J.readyState == 0) { if (P) { clearInterval(P); P = null; if (M.global && ! --o.active) { o.event.trigger("ajaxStop") } } } else { if (!K && J && (J.readyState == 4 || X == "timeout")) { K = true; if (P) { clearInterval(P); P = null } R = X == "timeout" ? "timeout" : !o.httpSuccess(J) ? "error" : M.ifModified && o.httpNotModified(J, M.url) ? "notmodified" : "success"; if (R == "success") { try { V = o.httpData(J, M.dataType, M) } catch (Z) { R = "parsererror" } } if (R == "success") { var Y; try { Y = J.getResponseHeader("Last-Modified") } catch (Z) { } if (M.ifModified && Y) { o.lastModified[M.url] = Y } if (!W) { I() } } else { o.handleError(M, J, R) } L(); if (X) { J.abort() } if (M.async) { J = null } } } }; if (M.async) { var P = setInterval(N, 13); if (M.timeout > 0) { setTimeout(function () { if (J && !K) { N("timeout") } }, M.timeout) } } try { J.send(M.data) } catch (S) { o.handleError(M, J, null, S) } if (!M.async) { N() } function I() { if (M.success) { M.success(V, R) } if (M.global) { o.event.trigger("ajaxSuccess", [J, M]) } } function L() { if (M.complete) { M.complete(J, R) } if (M.global) { o.event.trigger("ajaxComplete", [J, M]) } if (M.global && ! --o.active) { o.event.trigger("ajaxStop") } } return J }, handleError: function (F, H, E, G) { if (F.error) { F.error(H, E, G) } if (F.global) { o.event.trigger("ajaxError", [H, F, G]) } }, active: 0, httpSuccess: function (F) { try { return !F.status && location.protocol == "file:" || (F.status >= 200 && F.status < 300) || F.status == 304 || F.status == 1223 } catch (E) { } return false }, httpNotModified: function (G, E) { try { var H = G.getResponseHeader("Last-Modified"); return G.status == 304 || H == o.lastModified[E] } catch (F) { } return false }, httpData: function (J, H, G) { var F = J.getResponseHeader("content-type"), E = H == "xml" || !H && F && F.indexOf("xml") >= 0, I = E ? J.responseXML : J.responseText; if (E && I.documentElement.tagName == "parsererror") { throw "parsererror" } if (G && G.dataFilter) { I = G.dataFilter(I, H) } if (typeof I === "string") { if (H == "script") { o.globalEval(I) } if (H == "json") { I = l["eval"]("(" + I + ")") } } return I }, param: function (E) { var G = []; function H(I, J) { G[G.length] = encodeURIComponent(I) + "=" + encodeURIComponent(J) } if (o.isArray(E) || E.jquery) { o.each(E, function () { H(this.name, this.value) }) } else { for (var F in E) { if (o.isArray(E[F])) { o.each(E[F], function () { H(F, this) }) } else { H(F, o.isFunction(E[F]) ? E[F]() : E[F]) } } } return G.join("&").replace(/%20/g, "+") } }); var m = {}, n, d = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]]; function t(F, E) { var G = {}; o.each(d.concat.apply([], d.slice(0, E)), function () { G[this] = F }); return G } o.fn.extend({ show: function (J, L) { if (J) { return this.animate(t("show", 3), J, L) } else { for (var H = 0, F = this.length; H < F; H++) { var E = o.data(this[H], "olddisplay"); this[H].style.display = E || ""; if (o.css(this[H], "display") === "none") { var G = this[H].tagName, K; if (m[G]) { K = m[G] } else { var I = o("<" + G + " />").appendTo("body"); K = I.css("display"); if (K === "none") { K = "block" } I.remove(); m[G] = K } o.data(this[H], "olddisplay", K) } } for (var H = 0, F = this.length; H < F; H++) { this[H].style.display = o.data(this[H], "olddisplay") || "" } return this } }, hide: function (H, I) { if (H) { return this.animate(t("hide", 3), H, I) } else { for (var G = 0, F = this.length; G < F; G++) { var E = o.data(this[G], "olddisplay"); if (!E && E !== "none") { o.data(this[G], "olddisplay", o.css(this[G], "display")) } } for (var G = 0, F = this.length; G < F; G++) { this[G].style.display = "none" } return this } }, _toggle: o.fn.toggle, toggle: function (G, F) { var E = typeof G === "boolean"; return o.isFunction(G) && o.isFunction(F) ? this._toggle.apply(this, arguments) : G == null || E ? this.each(function () { var H = E ? G : o(this).is(":hidden"); o(this)[H ? "show" : "hide"]() }) : this.animate(t("toggle", 3), G, F) }, fadeTo: function (E, G, F) { return this.animate({ opacity: G }, E, F) }, animate: function (I, F, H, G) { var E = o.speed(F, H, G); return this[E.queue === false ? "each" : "queue"](function () { var K = o.extend({}, E), M, L = this.nodeType == 1 && o(this).is(":hidden"), J = this; for (M in I) { if (I[M] == "hide" && L || I[M] == "show" && !L) { return K.complete.call(this) } if ((M == "height" || M == "width") && this.style) { K.display = o.css(this, "display"); K.overflow = this.style.overflow } } if (K.overflow != null) { this.style.overflow = "hidden" } K.curAnim = o.extend({}, I); o.each(I, function (O, S) { var R = new o.fx(J, K, O); if (/toggle|show|hide/.test(S)) { R[S == "toggle" ? L ? "show" : "hide" : S](I) } else { var Q = S.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/), T = R.cur(true) || 0; if (Q) { var N = parseFloat(Q[2]), P = Q[3] || "px"; if (P != "px") { J.style[O] = (N || 1) + P; T = ((N || 1) / R.cur(true)) * T; J.style[O] = T + P } if (Q[1]) { N = ((Q[1] == "-=" ? -1 : 1) * N) + T } R.custom(T, N, P) } else { R.custom(T, S, "") } } }); return true }) }, stop: function (F, E) { var G = o.timers; if (F) { this.queue([]) } this.each(function () { for (var H = G.length - 1; H >= 0; H--) { if (G[H].elem == this) { if (E) { G[H](true) } G.splice(H, 1) } } }); if (!E) { this.dequeue() } return this } }); o.each({ slideDown: t("show", 1), slideUp: t("hide", 1), slideToggle: t("toggle", 1), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide"} }, function (E, F) { o.fn[E] = function (G, H) { return this.animate(F, G, H) } }); o.extend({ speed: function (G, H, F) { var E = typeof G === "object" ? G : { complete: F || !F && H || o.isFunction(G) && G, duration: G, easing: F && H || H && !o.isFunction(H) && H }; E.duration = o.fx.off ? 0 : typeof E.duration === "number" ? E.duration : o.fx.speeds[E.duration] || o.fx.speeds._default; E.old = E.complete; E.complete = function () { if (E.queue !== false) { o(this).dequeue() } if (o.isFunction(E.old)) { E.old.call(this) } }; return E }, easing: { linear: function (G, H, E, F) { return E + F * G }, swing: function (G, H, E, F) { return ((-Math.cos(G * Math.PI) / 2) + 0.5) * F + E } }, timers: [], fx: function (F, E, G) { this.options = E; this.elem = F; this.prop = G; if (!E.orig) { E.orig = {} } } }); o.fx.prototype = { update: function () { if (this.options.step) { this.options.step.call(this.elem, this.now, this) } (o.fx.step[this.prop] || o.fx.step._default)(this); if ((this.prop == "height" || this.prop == "width") && this.elem.style) { this.elem.style.display = "block" } }, cur: function (F) { if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) { return this.elem[this.prop] } var E = parseFloat(o.css(this.elem, this.prop, F)); return E && E > -10000 ? E : parseFloat(o.curCSS(this.elem, this.prop)) || 0 }, custom: function (I, H, G) { this.startTime = e(); this.start = I; this.end = H; this.unit = G || this.unit || "px"; this.now = this.start; this.pos = this.state = 0; var E = this; function F(J) { return E.step(J) } F.elem = this.elem; if (F() && o.timers.push(F) && !n) { n = setInterval(function () { var K = o.timers; for (var J = 0; J < K.length; J++) { if (!K[J]()) { K.splice(J--, 1) } } if (!K.length) { clearInterval(n); n = g } }, 13) } }, show: function () { this.options.orig[this.prop] = o.attr(this.elem.style, this.prop); this.options.show = true; this.custom(this.prop == "width" || this.prop == "height" ? 1 : 0, this.cur()); o(this.elem).show() }, hide: function () { this.options.orig[this.prop] = o.attr(this.elem.style, this.prop); this.options.hide = true; this.custom(this.cur(), 0) }, step: function (H) { var G = e(); if (H || G >= this.options.duration + this.startTime) { this.now = this.end; this.pos = this.state = 1; this.update(); this.options.curAnim[this.prop] = true; var E = true; for (var F in this.options.curAnim) { if (this.options.curAnim[F] !== true) { E = false } } if (E) { if (this.options.display != null) { this.elem.style.overflow = this.options.overflow; this.elem.style.display = this.options.display; if (o.css(this.elem, "display") == "none") { this.elem.style.display = "block" } } if (this.options.hide) { o(this.elem).hide() } if (this.options.hide || this.options.show) { for (var I in this.options.curAnim) { o.attr(this.elem.style, I, this.options.orig[I]) } } this.options.complete.call(this.elem) } return false } else { var J = G - this.startTime; this.state = J / this.options.duration; this.pos = o.easing[this.options.easing || (o.easing.swing ? "swing" : "linear")](this.state, J, 0, 1, this.options.duration); this.now = this.start + ((this.end - this.start) * this.pos); this.update() } return true } }; o.extend(o.fx, { speeds: { slow: 600, fast: 200, _default: 400 }, step: { opacity: function (E) { o.attr(E.elem.style, "opacity", E.now) }, _default: function (E) { if (E.elem.style && E.elem.style[E.prop] != null) { E.elem.style[E.prop] = E.now + E.unit } else { E.elem[E.prop] = E.now } } } }); if (document.documentElement.getBoundingClientRect) { o.fn.offset = function () { if (!this[0]) { return { top: 0, left: 0} } if (this[0] === this[0].ownerDocument.body) { return o.offset.bodyOffset(this[0]) } var G = this[0].getBoundingClientRect(), J = this[0].ownerDocument, F = J.body, E = J.documentElement, L = E.clientTop || F.clientTop || 0, K = E.clientLeft || F.clientLeft || 0, I = G.top + (self.pageYOffset || o.boxModel && E.scrollTop || F.scrollTop) - L, H = G.left + (self.pageXOffset || o.boxModel && E.scrollLeft || F.scrollLeft) - K; return { top: I, left: H} } } else { o.fn.offset = function () { if (!this[0]) { return { top: 0, left: 0} } if (this[0] === this[0].ownerDocument.body) { return o.offset.bodyOffset(this[0]) } o.offset.initialized || o.offset.initialize(); var J = this[0], G = J.offsetParent, F = J, O = J.ownerDocument, M, H = O.documentElement, K = O.body, L = O.defaultView, E = L.getComputedStyle(J, null), N = J.offsetTop, I = J.offsetLeft; while ((J = J.parentNode) && J !== K && J !== H) { M = L.getComputedStyle(J, null); N -= J.scrollTop, I -= J.scrollLeft; if (J === G) { N += J.offsetTop, I += J.offsetLeft; if (o.offset.doesNotAddBorder && !(o.offset.doesAddBorderForTableAndCells && /^t(able|d|h)$/i.test(J.tagName))) { N += parseInt(M.borderTopWidth, 10) || 0, I += parseInt(M.borderLeftWidth, 10) || 0 } F = G, G = J.offsetParent } if (o.offset.subtractsBorderForOverflowNotVisible && M.overflow !== "visible") { N += parseInt(M.borderTopWidth, 10) || 0, I += parseInt(M.borderLeftWidth, 10) || 0 } E = M } if (E.position === "relative" || E.position === "static") { N += K.offsetTop, I += K.offsetLeft } if (E.position === "fixed") { N += Math.max(H.scrollTop, K.scrollTop), I += Math.max(H.scrollLeft, K.scrollLeft) } return { top: N, left: I} } } o.offset = { initialize: function () { if (this.initialized) { return } var L = document.body, F = document.createElement("div"), H, G, N, I, M, E, J = L.style.marginTop, K = '<div style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;"><div></div></div><table style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;" cellpadding="0" cellspacing="0"><tr><td></td></tr></table>'; M = { position: "absolute", top: 0, left: 0, margin: 0, border: 0, width: "1px", height: "1px", visibility: "hidden" }; for (E in M) { F.style[E] = M[E] } F.innerHTML = K; L.insertBefore(F, L.firstChild); H = F.firstChild, G = H.firstChild, I = H.nextSibling.firstChild.firstChild; this.doesNotAddBorder = (G.offsetTop !== 5); this.doesAddBorderForTableAndCells = (I.offsetTop === 5); H.style.overflow = "hidden", H.style.position = "relative"; this.subtractsBorderForOverflowNotVisible = (G.offsetTop === -5); L.style.marginTop = "1px"; this.doesNotIncludeMarginInBodyOffset = (L.offsetTop === 0); L.style.marginTop = J; L.removeChild(F); this.initialized = true }, bodyOffset: function (E) { o.offset.initialized || o.offset.initialize(); var G = E.offsetTop, F = E.offsetLeft; if (o.offset.doesNotIncludeMarginInBodyOffset) { G += parseInt(o.curCSS(E, "marginTop", true), 10) || 0, F += parseInt(o.curCSS(E, "marginLeft", true), 10) || 0 } return { top: G, left: F} } }; o.fn.extend({ position: function () { var I = 0, H = 0, F; if (this[0]) { var G = this.offsetParent(), J = this.offset(), E = /^body|html$/i.test(G[0].tagName) ? { top: 0, left: 0} : G.offset(); J.top -= j(this, "marginTop"); J.left -= j(this, "marginLeft"); E.top += j(G, "borderTopWidth"); E.left += j(G, "borderLeftWidth"); F = { top: J.top - E.top, left: J.left - E.left} } return F }, offsetParent: function () { var E = this[0].offsetParent || document.body; while (E && (!/^body|html$/i.test(E.tagName) && o.css(E, "position") == "static")) { E = E.offsetParent } return o(E) } }); o.each(["Left", "Top"], function (F, E) { var G = "scroll" + E; o.fn[G] = function (H) { if (!this[0]) { return null } return H !== g ? this.each(function () { this == l || this == document ? l.scrollTo(!F ? H : o(l).scrollLeft(), F ? H : o(l).scrollTop()) : this[G] = H }) : this[0] == l || this[0] == document ? self[F ? "pageYOffset" : "pageXOffset"] || o.boxModel && document.documentElement[G] || document.body[G] : this[0][G] } }); o.each(["Height", "Width"], function (I, G) { var E = I ? "Left" : "Top", H = I ? "Right" : "Bottom", F = G.toLowerCase(); o.fn["inner" + G] = function () { return this[0] ? o.css(this[0], F, false, "padding") : null }; o.fn["outer" + G] = function (K) { return this[0] ? o.css(this[0], F, false, K ? "margin" : "border") : null }; var J = G.toLowerCase(); o.fn[J] = function (K) { return this[0] == l ? document.compatMode == "CSS1Compat" && document.documentElement["client" + G] || document.body["client" + G] : this[0] == document ? Math.max(document.documentElement["client" + G], document.body["scroll" + G], document.documentElement["scroll" + G], document.body["offset" + G], document.documentElement["offset" + G]) : K === g ? (this.length ? o.css(this[0], J) : null) : this.css(J, typeof K === "string" ? K : K + "px") } })
})();

/*
* jQuery.Listen - Light and fast event handling, using event delegation.
* Copyright (c) 2007-2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
* Dual licensed under MIT and GPL.
* Date: 3/7/2008
* http://flesler.blogspot.com/2007/10/jquerylisten.html
* @version 1.0.3
*/
; (function ($) { var a = 'indexer', h = $.event, j = h.special, k = $.listen = function (c, d, e, f) { if (typeof d != 'object') { f = e; e = d; d = document } o(c.split(/\s+/), function (a) { a = k.fixes[a] || a; var b = m(d, a) || m(d, a, new n(a, d)); b.append(e, f); b.start() }) }, m = function (b, c, d) { return $.data(b, c + '.' + a, d) }; $.fn[a] = function (a) { return this[0] && m(this[0], a) || null }; $[a] = function (a) { return m(document, a) }; $.extend(k, { regex: /^((?:\w*?|\*))(?:([#.])([\w-]+))?$/, fixes: { focus: 'focusin', blur: 'focusout' }, cache: function (a) { this.caching = a } }); $.each(k.fixes, function (a, b) { j[b] = { setup: function () { if ($.browser.msie) return !1; this.addEventListener(a, j[b].handler, !0) }, teardown: function () { if ($.browser.msie) return !1; this.removeEventListener(a, j[b].handler, !0) }, handler: function (e) { arguments[0] = e = h.fix(e); e.type = b; return h.handle.apply(this, arguments) } } }); $.fn.listen = function (a, b, c) { return this.each(function () { k(a, this, b, c) }) }; function n(a, b) { $.extend(this, { ids: {}, tags: {}, listener: b, event: a }); this.id = n.instances.push(this) }; n.instances = []; n.prototype = { constructor: n, handle: function (e) { var a = e.stopPropagation; e.stopPropagation = function () { e.stopped = 1; a.apply(this, arguments) }; m(this, e.type).parse(e); e.stopPropagation = a; a = e.data = null }, on: 0, bubbles: 0, start: function () { var a = this; if (!a.on) { h.add(a.listener, a.event, a.handle); a.on = 1 } }, stop: function () { var a = this; if (a.on) { h.remove(a.listener, a.event, a.handle); a.on = 0 } }, cache: function (a, b) { return $.data(a, 'listenCache_' + this.id, b) }, parse: function (e) { var z = this, c = e.data || e.target, d = arguments, f; if (!k.caching || !(f = z.cache(c))) { f = []; if (c.id && z.ids[c.id]) p(f, z.ids[c.id]); o([c.nodeName, '*'], function (a) { var b = z.tags[a]; if (b) o((c.className + ' *').split(' '), function (a) { if (a && b[a]) p(f, b[a]) }) }); if (k.caching) z.cache(c, f) } if (f[0]) { o(f, function (a) { if (a.apply(c, d) === !1) { e.preventDefault(); e.stopPropagation() } }) } if (!e.stopped && (c = c.parentNode) && (c.nodeName == 'A' || z.bubbles && c != z.listener)) { e.data = c; z.parse(e) } f = d = c = null }, append: function (f, g) { var z = this; o(f.split(/\s*,\s*/), function (a) { var b = k.regex.exec(a); if (!b) throw '$.listen > "' + a + '" is not a supported selector.'; var c = b[2] == '#' && b[3], d = b[1].toUpperCase() || '*', e = b[3] || '*'; if (c) (z.ids[c] || (z.ids[c] = [])).push(g); else if (d) { d = z.tags[d] = z.tags[d] || {}; (d[e] || (d[e] = [])).push(g) } }) } }; function o(a, b, c) { for (var i = 0, l = a.length; i < l; i++) b.call(c, a[i], i) }; function p(a, b) { a.push.apply(a, b); return a }; $(window).unload(function () { if (typeof n == 'function') o(n.instances, function (b) { b.stop(); $.removeData(b.listener, b.event + '.' + a); b.ids = b.names = b.listener = null }) }) })(jQuery);

/*
* hoverIntent r5 // 2007.03.27 // jQuery 1.1.2+
* <http://cherne.net/brian/resources/jquery.hoverIntent.html>
* 
* @param  f  onMouseOver function || An object with configuration options
* @param  g  onMouseOut function  || Nothing (use configuration options object)
* @author    Brian Cherne <brian@cherne.net>
*/
(function ($) { $.fn.hoverIntent = function (f, g) { var cfg = { sensitivity: 7, interval: 100, timeout: 0 }; cfg = $.extend(cfg, g ? { over: f, out: g} : f); var cX, cY, pX, pY; var track = function (ev) { cX = ev.pageX; cY = ev.pageY; }; var compare = function (ev, ob) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); if ((Math.abs(pX - cX) + Math.abs(pY - cY)) < cfg.sensitivity) { $(ob).unbind("mousemove", track); ob.hoverIntent_s = 1; return cfg.over.apply(ob, [ev]); } else { pX = cX; pY = cY; ob.hoverIntent_t = setTimeout(function () { compare(ev, ob); }, cfg.interval); } }; var delay = function (ev, ob) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); ob.hoverIntent_s = 0; return cfg.out.apply(ob, [ev]); }; var handleHover = function (e) { var p = (e.type == "mouseover" ? e.fromElement : e.toElement) || e.relatedTarget; while (p && p != this) { try { p = p.parentNode; } catch (e) { p = this; } } if (p == this) { return false; } var ev = jQuery.extend({}, e); var ob = this; if (ob.hoverIntent_t) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); } if (e.type == "mouseover") { pX = ev.pageX; pY = ev.pageY; $(ob).bind("mousemove", track); if (ob.hoverIntent_s != 1) { ob.hoverIntent_t = setTimeout(function () { compare(ev, ob); }, cfg.interval); } } else { $(ob).unbind("mousemove", track); if (ob.hoverIntent_s == 1) { ob.hoverIntent_t = setTimeout(function () { delay(ev, ob); }, cfg.timeout); } } }; return this.mouseover(handleHover).mouseout(handleHover); }; })(jQuery);

/*
* --------------------------------------------------------------------
* jQuery-Plugin "pngFix"
* Version: 1.1, 11.09.2007
* by Andreas Eberhard, andreas.eberhard@gmail.com
*                      http://jquery.andreaseberhard.de/
*
* Copyright (c) 2007 Andreas Eberhard
* Licensed under GPL (http://www.opensource.org/licenses/gpl-license.php)
*/
(function ($) { jQuery.fn.pngFix = function (settings) { settings = jQuery.extend({ blankgif: 'blank.gif' }, settings); var ie55 = (navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion) == 4 && navigator.appVersion.indexOf("MSIE 5.5") != -1); var ie6 = (navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion) == 4 && navigator.appVersion.indexOf("MSIE 6.0") != -1); var ie7 = (navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion) == 4 && navigator.appVersion.indexOf("MSIE 7.0") != -1); var ie8 = (navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion) == 4 && navigator.appVersion.indexOf("MSIE 8.0") != -1); if (jQuery.browser.msie && (ie55 || ie6 || ie7 || ie8)) { jQuery(this).find("img[src$=.png]").each(function () { var imgWidth = jQuery(this).attr('width'); var imgHeight = jQuery(this).attr('height'); var prevStyle = ''; var strNewHTML = ''; var imgId = (jQuery(this).attr('id')) ? 'id="' + jQuery(this).attr('id') + '" ' : ''; var imgClass = (jQuery(this).attr('class')) ? 'class="' + jQuery(this).attr('class') + '" ' : ''; var imgTitle = (jQuery(this).attr('title')) ? 'title="' + jQuery(this).attr('title') + '" ' : ''; var imgAlt = (jQuery(this).attr('alt')) ? 'alt="' + jQuery(this).attr('alt') + '" ' : ''; var imgAlign = (jQuery(this).attr('align')) ? 'float:' + jQuery(this).attr('align') + ';' : ''; var imgHand = (jQuery(this).parent().attr('href')) ? 'cursor:hand;' : ''; if (this.style.border) { prevStyle += 'border:' + this.style.border + ';'; this.style.border = '' } if (this.style.padding) { prevStyle += 'padding:' + this.style.padding + ';'; this.style.padding = '' } if (this.style.margin) { prevStyle += 'margin:' + this.style.margin + ';'; this.style.margin = '' } var imgStyle = (this.style.cssText); strNewHTML += '<span ' + imgId + imgClass + imgTitle + imgAlt; strNewHTML += 'style="position:relative;white-space:pre-line;display:inline-block;background:transparent;' + imgAlign + imgHand; strNewHTML += 'width:' + imgWidth + 'px;' + 'height:' + imgHeight + 'px;'; strNewHTML += 'filter:progid:DXImageTransform.Microsoft.AlphaImageLoader' + '(src=\'' + jQuery(this).attr('src') + '\', sizingMethod=\'crop\');'; strNewHTML += imgStyle + '"></span>'; if (prevStyle != '') { strNewHTML = '<span style="position:relative;display:inline-block;' + prevStyle + imgHand + 'width:' + imgWidth + 'px;' + 'height:' + imgHeight + 'px;' + '">' + strNewHTML + '</span>' } jQuery(this).hide(); jQuery(this).after(strNewHTML) }); jQuery(this).find("*").each(function () { var bgIMG = jQuery(this).css('background-image'); if (bgIMG.indexOf(".png") != -1) { var iebg = bgIMG.split('url("')[1].split('")')[0]; jQuery(this).css('background-image', 'none'); jQuery(this).get(0).runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + iebg + "',sizingMethod='crop')" } }); jQuery(this).find("input[src$=.png]").each(function () { var bgIMG = jQuery(this).attr('src'); jQuery(this).get(0).runtimeStyle.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader' + '(src=\'' + bgIMG + '\', sizingMethod=\'crop\');'; jQuery(this).attr('src', settings.blankgif) }) } return jQuery } })(jQuery);

var ua = navigator.userAgent;
var mode;

if (ua.indexOf("Mac", 0) >= 0) { mode = "mac_"; }
else if (ua.indexOf("Win", 0) >= 0) { mode = "win_"; }
else { mode = "other_"; }

if (ua.indexOf("Opera", 0) >= 0) { mode += "opera"; }
else if (ua.indexOf("MSIE 8", 0) >= 0) { mode += "msie"; }
else if (ua.indexOf("MSIE 7", 0) >= 0) { mode += "msie"; }
else if (ua.indexOf("MSIE 6", 0) >= 0) { mode += "msie6"; }
else if (ua.indexOf("Mozilla/4.0", 0) >= 0) { mode += "msie"; }
else if (ua.indexOf("Mozilla/4", 0) >= 0) { mode += "ns4"; }
else if (ua.indexOf("Firefox/3", 0) >= 0) { mode += "fs3"; }
else if (ua.indexOf("Safari", 0) >= 0) { mode += "safari"; }
else { mode += "other"; }

var boxrounded_config = {
    'div.frm': {
        target_node: "div.frm",
        border_style: "solid",
        border_width: 1,
        border_color: "#b8b8b8",
        cnr_radius: 8, // px,
        padding_top: 15,
        padding_right: 15,
        padding_bottom: 0,
        padding_left: 15,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rb.gif"
    },
    'div.frm-grd': {
        target_node: "div.frm-grd",
        border_style: "solid",
        border_width: 1,
        border_color: "#b8b8b8",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px -8px repeat-x",
        cnr_radius: 8, // px
        padding_top: 15,
        padding_right: 15,
        padding_bottom: 0,
        padding_left: 15,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rb.gif"
    },
    'div.frm-bg': {
        target_node: "div.frm-bg",
        border_style: "solid",
        border_width: 1,
        border_color: "#b8b8b8",
        box_h_background: "#f2f2f2",
        box_v_background: "#f2f2f2",
        cnr_radius: 8, // px
        padding_top: 15,
        padding_right: 15,
        padding_bottom: 0,
        padding_left: 15,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-bg-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-bg-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-bg-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-bg-rb.gif"
    },
    'div.bg': {
        target_node: "div.bg",
        border_style: "none",
        border_width: 0,
        box_h_background: "#f2f2f2",
        box_v_background: "#f2f2f2",
        cnr_radius: 8, // px
        padding_top: 16,
        padding_right: 16,
        padding_bottom: 0,
        padding_left: 16,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-rb.gif"
    },
    '#location': {
        target_node: "#location",
        border_style: "solid",
        border_width: 1,
        border_color: "#eeeeee",
        box_h_background: "#f7f7f7",
        box_v_background: "#f7f7f7",
        cnr_radius: 4, // px
        padding_top: 8,
        padding_right: 8,
        padding_bottom: 0,
        padding_left: 8,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/location-bg-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/location-bg-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/location-bg-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/location-bg-rb.gif",
        extra: {
            area_offset_width: "972px", // for ne lte IE6.
            remove_class: "location-inside"
        }
    },
    'div.tasks': {
        target_node: "div.tasks",
        border_style: "solid",
        border_width: 1,
        border_color: "#b5b5b5",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px -8px repeat-x",
        cnr_radius: 8, // px
        padding_top: 15,
        padding_right: 15,
        padding_bottom: 1,
        padding_left: 15,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rb.gif",
        extra: {
            area_offset_width: "168px", // for IE.
            remove_class: "rounded-inside"
        }
    },
    'div.placard': {
        target_node: "div.placard",
        border_style: "solid",
        border_width: 1,
        border_color: "#c5c5c5",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        cnr_radius: 8, // px
        padding_top: 7,
        padding_right: 1,
        padding_bottom: 8,
        padding_left: 1,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-lt.png",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-rt.png",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rb.gif",
        extra: {
            area_offset_width: "168px",
            remove_class: "rounded-inside"
        }
    },
    'div.placard-no-text': {
        target_node: "div.placard-no-text",
        border_style: "solid",
        border_width: 1,
        border_color: "#c5c5c5",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        cnr_radius: 8, // px
        padding_top: 7,
        padding_right: 1,
        padding_bottom: 0,
        padding_left: 1,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-lt.png",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-rt.png",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-lb-trans.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-rb-trans.gif",
        extra: {
            area_offset_width: "168px",
            remove_class: "rounded-inside"
        }
    },
    'div.cta-promotion-image-2col' : {
        target_node : "div.cta-promotion-image-2col",
        border_style : "solid",
        border_width : 1,
        border_color : "#c5c5c5",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard_grey.png) 0px 0px repeat-x",
        cnr_radius : 8, // px
        padding_top : 7,
        padding_right : 1,
        padding_bottom : 1,
        padding_left : 1,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-lt.png",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/placard-rt.png",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-lb-trans.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-rb-trans.gif",
        extra : {
            remove_class : "rounded-inside"
        }
    },
    'div.cta-promotion-link-list' : {
        target_node : "div.cta-promotion-link-list",
        border_style : "solid",
        border_width : 1,
        border_color : "#b5b5b5",
        box_h_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px 0px repeat-x",
        box_v_background : "#ffffff url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-bg-demo.gif) 0px -8px repeat-x",
        cnr_radius : 8, // px
        padding_top : 15,
        padding_right : 15,
        padding_bottom : 1,
        padding_left : 15,
        cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-lt.gif",
        cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-grd-rt.gif",
        cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-lb.gif",
        cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-frm-rb.gif",
        extra : {
            remove_class : "rounded-inside"
        }
    }
};

var boxrounded_ref = {
    'div.cssbtn': {
        target_node: "div.cssbtn",
        border_style: "solid",
        border_width: 1,
        border_color: "transparent",
        box_h_background: "transparent",
        box_v_background: "transparent",
        cnr_radius: 7, // px
        padding_top: 7,
        padding_right: 8,
        padding_bottom: 7,
        padding_left: 8,
  cnr_lt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-lt.gif",
  cnr_rt_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-rt.gif",
  cnr_lb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-lb.gif",
  cnr_rb_src : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-rb.gif",
        extra: {
            remove_class: "rounded-inside"
        }
    }
}

var boxrounded = function (box_setting, exclude_browsers) {
    j$('div.placard-no-text img.bottom').remove();
    var ua = navigator.userAgent;
    var ua_type, ua_ver;

    if (document.all) {
        ua_type = "msie_all"
    }

    if (ua.indexOf("MSIE 8", 0) >= 0) {
        ua_ver = "msie8";
    } else if (ua.indexOf("MSIE 7", 0) >= 0) {
        ua_ver = "msie7";
    } else if (ua.indexOf("MSIE 6", 0) >= 0) {
        ua_ver = "msie6";
    } else if (ua.indexOf("Opera", 0) >= 0) {
        ua_ver = "opera"
    }

    if (exclude_browsers) {
        for (var i = 0; i < exclude_browsers.length; i++) {
            if (exclude_browsers[i] === ua_ver) {
                return true; // exit boxrounded action.
            }
        }
    }

    var flag_complete;
    var outerbox, j$outerbox;

    if (!box_setting.extra) {
        outerbox = box_setting.target_node + ".rounded";
        j$outerbox = j$(outerbox);
    } else {
        outerbox = box_setting.target_node;
        j$outerbox = j$(outerbox).wrapInner("<div class=\"innerblock\"></div>");
        if (box_setting.extra.remove_class) {
            var remove_class = box_setting.extra.remove_class;
            j$outerbox.find("." + remove_class).removeClass(remove_class);
            j$("ol.location-inside").css({
                borderStyle: "none"
            });
        }
    }

    if (j$outerbox.length) { // If target node is exist.
        var innerbox_h = j$outerbox.find("div.innerblock:first").wrapInner("<div class=\"highlight_h\"><div class=\"inside_v\"><div class=\"highlight_v\"><div class=\"contentblock\"></div></div></div></div>");

        var j$innerbox_h = j$(outerbox + ">" + "div.innerblock");
        var j$highlight_h = j$(outerbox + " " + "div.highlight_h");
        var j$innerbox_v = j$(outerbox + " " + "div.inside_v");
        var j$highlight_v = j$(outerbox + " " + "div.highlight_v");
        var j$contentbox = j$(outerbox + " " + "div.contentblock");

        var cnr_lt = document.createElement("img");
        var cnr_rt = document.createElement("img");
        var cnr_lb = document.createElement("img");
        var cnr_rb = document.createElement("img");

        if (box_setting.target_node != "div.placard-no-text") {

        }

        var j$cnr_lt = j$(cnr_lt).addClass("lt").attr("src", box_setting.cnr_lt_src).attr("alt", "");
        var j$cnr_rt = j$(cnr_rt).addClass("rt").attr("src", box_setting.cnr_rt_src).attr("alt", "");
        var j$cnr_lb = j$(cnr_lb).addClass("lb").attr("src", box_setting.cnr_lb_src).attr("alt", "");
        var j$cnr_rb = j$(cnr_rb).addClass("rb").attr("src", box_setting.cnr_rb_src).attr("alt", "");

        j$outerbox.css({
            position: "relative",
            padding: "0px" + " " + box_setting.cnr_radius + "px",
            background: "none",
            borderStyle: "none",
            zoom: "1"
        });
        j$innerbox_h.css({
            position: "relative",
            padding: "0px",
            borderStyle: box_setting.border_style,
            borderWidth: "1px 0px",
            borderColor: box_setting.border_color,
            background: box_setting.box_h_background,
            zoom: "1"
        });
        if($('#bodyarea.micro').length) {
            if (box_setting.target_node != 'div.frm-bg' || ua_ver != 'msie6') {
                j$highlight_h.css({
                    position: "relative",
                    padding: box_setting.cnr_radius - box_setting.border_width * 2 + "px" + " " + "0px",
                    borderStyle: box_setting.border_style,
                    borderWidth: "1px 0px",
                    borderColor: "#ffffff",
                    zoom: "1"
                });
            }
            else {
                j$highlight_h.css({
                    position: "relative",
                    borderStyle: box_setting.border_style,
                    borderWidth: "1px 0px",
                    borderColor: "#ffffff",
                    zoom: "1"
                });
            }
        }
        else {
            j$highlight_h.css({
                position: "relative",
                padding: box_setting.cnr_radius - box_setting.border_width * 2 + "px" + " " + "0px",
                borderStyle: box_setting.border_style,
                borderWidth: "1px 0px",
                borderColor: "#ffffff",
                zoom: "1"
            });
        }
        j$innerbox_v.css({
            margin: "0px" + " " + "-" + box_setting.cnr_radius + "px",
            borderStyle: box_setting.border_style,
            borderWidth: "0px 1px",
            borderColor: box_setting.border_color,
            background: box_setting.box_v_background,
            zoom: "1",
            position: "relative"
        });
        j$highlight_v.css({
            paddingTop: box_setting.padding_top - (box_setting.cnr_radius - box_setting.border_width) + "px",
            paddingRight: box_setting.padding_right - box_setting.border_width + "px",
            paddingBottom: box_setting.padding_bottom + "px",
            paddingLeft: box_setting.padding_left - box_setting.border_width + "px",
            borderStyle: box_setting.border_style,
            borderWidth: box_setting.target_node == "div.placard" || box_setting.target_node == "div.placard-no-text" ? "0px 0px" : "0px 1px",
            borderColor: "#ffffff",
            zoom: "1"
        });
        j$contentbox.css({
            marginBottom: "-" + (box_setting.cnr_radius - box_setting.border_width + 1) + "px",
            zoom: "1",
            position: "relative"
        });
        j$highlight_v.addClass("clearfix"); // for IE8 box bug
        if (box_setting.extra) {
            if (mode !== "win_msie6") {
                if (box_setting.extra.area_offset_width) {
                    j$outerbox.css("width", box_setting.extra.area_offset_width);
                }
            }
            if (box_setting.target_node === "#location") {
                j$highlight_v.css({
                    padding: "0px"
                });
                j$contentbox.css({
                    marginTop: "-" + (box_setting.cnr_radius - box_setting.border_width * 2) + "px",
                    paddingBottom: "1px"
                });
            }
            if (box_setting.target_node === "div.tasks") {
                j$highlight_v.css({
                    padding: "0px"
                });
                j$("div.contentblock div h2:first-child").css("paddingTop", "4px"); // for IE8 box bug
            }
        }

        j$cnr_lt.css({
            position: "absolute",
            zIndex: "0",
            left: "0px",
            top: "0px",
            margin: "0px",
            lineHeight: "1",
            verticalAlign: "bottom",
            width: box_setting.cnr_radius + "px",
            height: box_setting.cnr_radius + "px"
        });
        j$cnr_rt.css({
            position: "absolute",
            zIndex: "0",
            right: "0px",
            top: "0px",
            margin: "0px",
            lineHeight: "1",
            verticalAlign: "bottom",
            width: box_setting.cnr_radius + "px",
            height: box_setting.cnr_radius + "px"
        });
        j$cnr_lb.css({
            position: "absolute",
            zIndex: "0",
            left: "0px",
            bottom: "0px",
            margin: "0px",
            lineHeight: "1",
            verticalAlign: "bottom",
            width: box_setting.cnr_radius + "px",
            height: box_setting.cnr_radius + "px"
        });
        j$cnr_rb.css({
            position: "absolute",
            zIndex: "0",
            right: "0px",
            bottom: "0px",
            margin: "0px",
            lineHeight: "1",
            verticalAlign: "bottom",
            width: box_setting.cnr_radius + "px",
            height: box_setting.cnr_radius + "px"
        });

        j$('.placard h2, .placard-no-text h2').css('paddingTop', '0px');

        if ((box_setting.target_node === "div.cssbtn") && (ua_ver === "opera")) {
            j$("div.cssbtn").css({
                position: "relative", top: "0", border: "none"
            });
            j$("div.cssbtn div.innerblock").css({
                position: "static", top: "0", border: "none", margin: "0", padding: "0"
            });
            j$("div.cssbtn div.innerblock a").css({
                position: "static", top: "0", display: "inline", margin: "0", padding: "0", background: "none"
            });
        }

        if ((ua_ver === "msie6") && (box_setting.target_node !== "#location") && (box_setting.target_node !== "div.cssbtn")) {
            j$cnr_lb.css({
                position: "relative",
                float: "left",
                marginTop: "-8px",
                marginLeft: "-11px"
            });
            j$cnr_rb.css({
                position: "relative",
                float: "right",
                marginTop: "-8px",
                marginRight: "-11px"
            });
        }

        if ((box_setting.target_node === "div.cssbtn") && (ua_ver === "msie7" || ua_ver === "msie8" || ua_ver === "opera")) {
            j$outerbox.css({
                float: "left",
                background: "#663300"
            });
            j$innerbox_h.css({
                borderStyle: "none"
            });
            j$highlight_h.css({
    			background: "url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-xb.gif) 0px 100% repeat-x",
                borderWidth: "0px 0px 1px 0px",
                borderColor: "#999999"
            });
            j$innerbox_v.css({
                borderStyle: "none"
            });
            j$highlight_v.css({
    			background: "#484848 url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-xm.gif) 0px 100% repeat-x",
                borderColor: "#111111",
                paddingTop: "2px",
                paddingLeft: "6px",
                paddingRight: "6px"
            });
            j$contentbox.css({
                zoom: "1"
            });
            j$contentbox.find("a").css({
                display: "block",
                marginTop: "-7px",
                paddingTop: "5px",
                marginBottom: "-2px",
    			background: "url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-xt.gif) 0px 0px repeat-x",
                borderStyle: "none",
                zoom: "1",
                position: "relative",
                lineHeight: "1",
                zoom: "1"
            });
            j$contentbox.find("img").css({
                borderStyle: "none"
            });
            j$highlight_h.css({
    			background: "url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-xb.gif) 0px 100% repeat-x",
                borderWidth: "0px 0px 1px 0px",
                borderColor: "#999999"
            });
            j$innerbox_v.css({
                borderStyle: "none"
            });
            j$highlight_v.css({
    			background: "#484848 url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/box-parentcomlink-xm.gif) 0px 100% repeat-x",
                borderColor: "#111111"
            });
            j$contentbox.css({
                borderStyle: "none",
                zoom: "1"
            });
        }

        j$outerbox.append(cnr_lt);
        j$outerbox.append(cnr_rt);
        j$outerbox.append(cnr_lb);
        j$outerbox.append(cnr_rb);

        return true;
    } else {
        return false;
    }
}

if (ua.indexOf("MSIE", 0) >= 0 || ua.indexOf("Opera", 0) >= 0) { // Boxrounded, for IE only
    var timer_boxrounded;
    var div_cssbtn_flag;

    function setBoxrounded() {
        if (typeof boxrounded === undefined) { // retry if boxrounded.js does not exists.
            timer_boxrounded = setTimeout(setBoxrounded, 1000);
        } else if (div_cssbtn_flag !== true) { // try if boxrounded.js is still waiting for action.
            div_cssbtn_flag = boxrounded(boxrounded_ref['div.cssbtn'], ['msie6']); // exclude ua names in arguments.
            timer_boxrounded = setTimeout(setBoxrounded, 500);
        } else { // if boxrounded.js has done.
            clearTimeout(timer_boxrounded);
            return;
        }
    };
}

function initBoxrounded() {
    j$(document).ready(function () {
        for (key in boxrounded_config) {
            var box_setting = boxrounded_config[key];
            boxrounded(box_setting);
        }
        if (j$("div.cssbtn").text()) {
            if (setBoxrounded) {
                setBoxrounded();
            }
        }
    });
}

document.write('<script type="text/javascript"><!--jQuery.noConflict();\/\/--></script>');
var j$ = jQuery;

switch (mode) {
    case "win_msie6":
        /**
        * DD_belatedPNG: Adds IE6 support: PNG images for CSS background-image and HTML <IMG/>.
        * Author: Drew Diller
        * Email: drew.diller@gmail.com
        * URL: http://www.dillerdesign.com/experiment/DD_belatedPNG/
        * Version: 0.0.8a
        * Licensed under the MIT License: http://dillerdesign.com/experiment/DD_belatedPNG/#license
        *
        * Example usage:
        * DD_belatedPNG.fix('.png_bg'); // argument is a CSS selector
        * DD_belatedPNG.fixPng( someNode ); // argument is an HTMLDomElement
        **/
        var DD_belatedPNG = { ns: "DD_belatedPNG", imgSize: {}, delay: 10, nodesFixed: 0, createVmlNameSpace: function () { if (document.namespaces && !document.namespaces[this.ns]) { document.namespaces.add(this.ns, "urn:schemas-microsoft-com:vml") } }, createVmlStyleSheet: function () { var b, a; b = document.createElement("style"); b.setAttribute("media", "screen"); document.documentElement.firstChild.insertBefore(b, document.documentElement.firstChild.firstChild); if (b.styleSheet) { b = b.styleSheet; b.addRule(this.ns + "\\:*", "{behavior:url(#default#VML)}"); b.addRule(this.ns + "\\:shape", "position:absolute;"); b.addRule("img." + this.ns + "_sizeFinder", "behavior:none; border:none; position:absolute; z-index:-1; top:-10000px; visibility:hidden;"); this.screenStyleSheet = b; a = document.createElement("style"); a.setAttribute("media", "print"); document.documentElement.firstChild.insertBefore(a, document.documentElement.firstChild.firstChild); a = a.styleSheet; a.addRule(this.ns + "\\:*", "{display: none !important;}"); a.addRule("img." + this.ns + "_sizeFinder", "{display: none !important;}") } }, readPropertyChange: function () { var b, c, a; b = event.srcElement; if (!b.vmlInitiated) { return } if (event.propertyName.search("background") != -1 || event.propertyName.search("border") != -1) { DD_belatedPNG.applyVML(b) } if (event.propertyName == "style.display") { c = (b.currentStyle.display == "none") ? "none" : "block"; for (a in b.vml) { if (b.vml.hasOwnProperty(a)) { b.vml[a].shape.style.display = c } } } if (event.propertyName.search("filter") != -1) { DD_belatedPNG.vmlOpacity(b) } }, vmlOpacity: function (b) { if (b.currentStyle.filter.search("lpha") != -1) { var a = b.currentStyle.filter; a = parseInt(a.substring(a.lastIndexOf("=") + 1, a.lastIndexOf(")")), 10) / 100; b.vml.color.shape.style.filter = b.currentStyle.filter; b.vml.image.fill.opacity = a } }, handlePseudoHover: function (a) { setTimeout(function () { DD_belatedPNG.applyVML(a) }, 1) }, fix: function (a) { if (this.screenStyleSheet) { var c, b; c = a.split(","); for (b = 0; b < c.length; b++) { if (c[b].indexOf("!", 0) >= 0) { var orgd = c[b].split('!'); this.screenStyleSheet.addRule(orgd[1], 'behavior:none'); } else { this.screenStyleSheet.addRule(c[b], "behavior:expression(DD_belatedPNG.fixPng(this))") } } } }, applyVML: function (a) { a.runtimeStyle.cssText = ""; this.vmlFill(a); this.vmlOffsets(a); this.vmlOpacity(a); if (a.isImg) { this.copyImageBorders(a) } }, attachHandlers: function (i) { var d, c, g, e, b, f; d = this; c = { resize: "vmlOffsets", move: "vmlOffsets" }; if (i.nodeName == "A") { e = { mouseleave: "handlePseudoHover", mouseenter: "handlePseudoHover", focus: "handlePseudoHover", blur: "handlePseudoHover" }; for (b in e) { if (e.hasOwnProperty(b)) { c[b] = e[b] } } } for (f in c) { if (c.hasOwnProperty(f)) { g = function () { d[c[f]](i) }; i.attachEvent("on" + f, g) } } i.attachEvent("onpropertychange", this.readPropertyChange) }, giveLayout: function (a) { a.style.zoom = 1; if (a.currentStyle.position == "static") { a.style.position = "relative" } }, copyImageBorders: function (b) { var c, a; c = { borderStyle: true, borderWidth: true, borderColor: true }; for (a in c) { if (c.hasOwnProperty(a)) { b.vml.color.shape.style[a] = b.currentStyle[a] } } }, vmlFill: function (e) { if (!e.currentStyle) { return } else { var d, f, g, b, a, c; d = e.currentStyle } for (b in e.vml) { if (e.vml.hasOwnProperty(b)) { e.vml[b].shape.style.zIndex = d.zIndex } } e.runtimeStyle.backgroundColor = ""; e.runtimeStyle.backgroundImage = ""; f = true; if (d.backgroundImage != "none" || e.isImg) { if (!e.isImg) { e.vmlBg = d.backgroundImage; e.vmlBg = e.vmlBg.substr(5, e.vmlBg.lastIndexOf('")') - 5) } else { e.vmlBg = e.src } g = this; if (!g.imgSize[e.vmlBg]) { a = document.createElement("img"); g.imgSize[e.vmlBg] = a; a.className = g.ns + "_sizeFinder"; a.runtimeStyle.cssText = "behavior:none; position:absolute; left:-10000px; top:-10000px; border:none; margin:0; padding:0;"; c = function () { this.width = this.offsetWidth; this.height = this.offsetHeight; g.vmlOffsets(e) }; a.attachEvent("onload", c); a.src = e.vmlBg; a.removeAttribute("width"); a.removeAttribute("height"); document.body.insertBefore(a, document.body.firstChild) } e.vml.image.fill.src = e.vmlBg; f = false } e.vml.image.fill.on = !f; e.vml.image.fill.color = "none"; e.vml.color.shape.style.backgroundColor = d.backgroundColor; e.runtimeStyle.backgroundImage = "none"; e.runtimeStyle.backgroundColor = "transparent" }, vmlOffsets: function (d) { var h, n, a, e, g, m, f, l, j, i, k; h = d.currentStyle; n = { W: d.clientWidth + 1, H: d.clientHeight + 1, w: this.imgSize[d.vmlBg].width, h: this.imgSize[d.vmlBg].height, L: d.offsetLeft, T: d.offsetTop, bLW: d.clientLeft, bTW: d.clientTop }; a = (n.L + n.bLW == 1) ? 1 : 0; e = function (b, p, q, c, s, u) { b.coordsize = c + "," + s; b.coordorigin = u + "," + u; b.path = "m0,0l" + c + ",0l" + c + "," + s + "l0," + s + " xe"; b.style.width = c + "px"; b.style.height = s + "px"; b.style.left = p + "px"; b.style.top = q + "px" }; e(d.vml.color.shape, (n.L + (d.isImg ? 0 : n.bLW)), (n.T + (d.isImg ? 0 : n.bTW)), (n.W - 1), (n.H - 1), 0); e(d.vml.image.shape, (n.L + n.bLW), (n.T + n.bTW), (n.W), (n.H), 1); g = { X: 0, Y: 0 }; if (d.isImg) { g.X = parseInt(h.paddingLeft, 10) + 1; g.Y = parseInt(h.paddingTop, 10) + 1 } else { for (j in g) { if (g.hasOwnProperty(j)) { this.figurePercentage(g, n, j, h["backgroundPosition" + j]) } } } d.vml.image.fill.position = (g.X / n.W) + "," + (g.Y / n.H); m = h.backgroundRepeat; f = { T: 1, R: n.W + a, B: n.H, L: 1 + a }; l = { X: { b1: "L", b2: "R", d: "W" }, Y: { b1: "T", b2: "B", d: "H"} }; if (m != "repeat" || d.isImg) { i = { T: (g.Y), R: (g.X + n.w), B: (g.Y + n.h), L: (g.X) }; if (m.search("repeat-") != -1) { k = m.split("repeat-")[1].toUpperCase(); i[l[k].b1] = 1; i[l[k].b2] = n[l[k].d] } if (i.B > n.H) { i.B = n.H } d.vml.image.shape.style.clip = "rect(" + i.T + "px " + (i.R + a) + "px " + i.B + "px " + (i.L + a) + "px)" } else { d.vml.image.shape.style.clip = "rect(" + f.T + "px " + f.R + "px " + f.B + "px " + f.L + "px)" } }, figurePercentage: function (d, c, f, a) { var b, e; e = true; b = (f == "X"); switch (a) { case "left": case "top": d[f] = 0; break; case "center": d[f] = 0.5; break; case "right": case "bottom": d[f] = 1; break; default: if (a.search("%") != -1) { d[f] = parseInt(a, 10) / 100 } else { e = false } } d[f] = Math.ceil(e ? ((c[b ? "W" : "H"] * d[f]) - (c[b ? "w" : "h"] * d[f])) : parseInt(a, 10)); if (d[f] % 2 === 0) { d[f]++ } return d[f] }, fixPng: function (c) { c.style.behavior = "none"; var g, b, f, a, d; if (c.nodeName == "BODY" || c.nodeName == "TD" || c.nodeName == "TR") { return } c.isImg = false; if (c.nodeName == "IMG") { if (c.src.toLowerCase().search(/\.png$/) != -1) { c.isImg = true; c.style.visibility = "hidden" } else { return } } else { if (c.currentStyle.backgroundImage.toLowerCase().search(".png") == -1) { return } } g = DD_belatedPNG; c.vml = { color: {}, image: {} }; b = { shape: {}, fill: {} }; for (a in c.vml) { if (c.vml.hasOwnProperty(a)) { for (d in b) { if (b.hasOwnProperty(d)) { f = g.ns + ":" + d; c.vml[a][d] = document.createElement(f) } } c.vml[a].shape.stroked = false; c.vml[a].shape.appendChild(c.vml[a].fill); c.parentNode.insertBefore(c.vml[a].shape, c) } } c.vml.image.shape.fillcolor = "none"; c.vml.image.fill.type = "tile"; c.vml.color.fill.on = false; g.attachHandlers(c); g.giveLayout(c); g.giveLayout(c.offsetParent); c.vmlInitiated = true; g.applyVML(c) } }; try { document.execCommand("BackgroundImageCache", false, true) } catch (r) { } DD_belatedPNG.createVmlNameSpace(); DD_belatedPNG.createVmlStyleSheet();
        DD_belatedPNG.fix('!#map img, .stage, #wrapper, #container, .header, * html #headerbottom li.glbnavlist a.glbnavtitle:hover, div.hidemenu a.glbnavtitle, .hidemenu-right-bottom, .hidemenu-left-bottom, .hidemenu-right-top, .hidemenu-left-top, #mainmenu li.bottom strong.current, #tasks, .relatedcontents, div.accdsection .heading, div.accdsection .innerframe');
        initBoxrounded();
        break;
    case "win_msie":
        initBoxrounded();
        break;
    case "win_opera":
        initBoxrounded();
        break;
    case "win_other": break;
    case "mac_fs3": break;
    case "mac_safari": break;
    case "mac_other": break;
    case "mac_opera": break;
    case "mac_msie5": break;
    case "win_ns4": break;
    case "mac_ns4": break;
    default: document.write("<style type='text/css'></style>\n");
}

var cssbool = false;
function csschk() {
    if (j$("div#corporatesymbol").css("float") == "left") {
        cssbool = true;
    } else {
        cssbool = false;
    }
    return cssbool;
}

// Listings and Multilistings filters
$(document).ready(function(){
	if ($("div.filter-container").length || $("div.filtermulti-container").length)
	{
		var url = window.location.pathname.toString();
		url = url.substring($("#routingPath").val().length + 1); // Get only the parameters
		var array = url.split("/");
		var filter = "";
		var val = "";

		if ($("div.filter-container").length)
		{
			// Select corresponding value
			if (array.length >= 2) {
				filter = array[0];
				val = array[1];
			}

			if ($("#filter-" + filter).length) {
				var selObj = document.getElementById("filter-" + filter);
				var A = selObj.options, L = A.length;
				while (L) {
					if (A[--L].value == val) {
						selObj.selectedIndex = L;
						L = 0;
					}
				}
			}
		}
		else if ($("div.filtermulti-container").length)
		{
			// Select corresponding value for each filter
			for (var i = 0; i < array.length - 1; i=i+2)
			{
				filter = array[i];
				val = array[i + 1];

				if ($("#filtermulti-" + filter).length) {
					var selObj = document.getElementById("filtermulti-" + filter);
					var A = selObj.options, L = A.length;
					while (L) {
						if (A[--L].value == val) {
							selObj.selectedIndex = L;
							L = 0;
						}
					}
				}
			}
		}
	}
});

j$(document).ready(function () {
    var BlockSkipNav = j$("#blockskip a");
    j$(BlockSkipNav).focus(function () {
        j$(this).addClass("show");
    });

    j$(BlockSkipNav).blur(function () {
        var scrHeight = j$(this).outerHeight({ margin: true });
        j$(this).removeClass("show");
        if (!(ua.indexOf("Opera", 0) >= 0)) {
            window.scrollBy(0, -scrHeight);
        }
    });

    j$('.productdetail').each(function () {
        j$(this).css('min-height', j$(this).height() + 'px');
    });

    j$("div.stripe tbody tr:even").addClass("even");

    j$("p.pickupthumb + p").css("margin-top", "-10px");

    if (!j$('li.bottom').hasClass('open')) {
      j$('li.bottom strong.current').wrap('<div style="background: transparent url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/mainmenu-li-last-current-bg.png) 1px bottom no-repeat;">');
    }
    else {
        j$('li.bottom').removeClass('bottom');
        j$('li.open').addClass('bottom-gray');
    }

    if (ua.indexOf("MSIE 6", 0) >= 0) {
        j$(".maincontents div.lay2col div.col1 > div.innerblock").css("margin", "0 8px 0 0");
        j$(".maincontents div.lay2col div.col2 > div.innerblock").css("margin", "0 1px 0 7px");
        j$(".maincontents div.lay3col div.col1 > div.innerblock").css("margin", "0 10px 0 0");
        j$(".maincontents div.lay3col div.col2 > div.innerblock").css("margin", "0 5px 0 5px");
        j$(".maincontents div.lay3col div.col3 > div.innerblock").css("margin", "0 0 0 10px");
        j$(".maincontents div.lay4col div.col1 > div.innerblock").css("margin", "0 12px 0 0");
        j$(".maincontents div.lay4col div.col2 > div.innerblock").css("margin", "0 9px 0 3px");
        j$(".maincontents div.lay4col div.col3 > div.innerblock").css("margin", "0 6px 0 6px");
        j$(".maincontents div.lay4col div.col4 > div.innerblock").css("margin", "0 3px 0 9px");
        j$(".maincontents div.lay5col div.col1 > div.innerblock").css("margin", "0 12px 0 0");
        j$(".maincontents div.lay5col div.col2 > div.innerblock").css("margin", "0 9px 0 3px");
        j$(".maincontents div.lay5col div.col3 > div.innerblock").css("margin", "0 6px 0 6px");
        j$(".maincontents div.lay5col div.col4 > div.innerblock").css("margin", "0 3px 0 9px");
        j$(".maincontents div.lay5col div.col5 > div.innerblock").css("margin", "0 0 0 12px");
        j$(".maincontents div.col1 > div.innerblock").css("padding", "0");
        j$(".maincontents div.col2 > div.innerblock").css("padding", "0");
        j$(".maincontents div.col3 > div.innerblock").css("padding", "0");
        j$(".maincontents div.col4 > div.innerblock").css("padding", "0");
        j$(".maincontents div.col5 > div.innerblock").css("padding", "0");
    }

    if ($('#bodyarea.micro').length) {
        // png fix
        if (ua.indexOf("MSIE 6", 0) >= 0) {
            DD_belatedPNG.fix('.micro .social-media img');
        }

        // disable focus for IE
        $('.micro embed, .micro object').attr('tabindex', '-1');

        // set alt attribute for Screenreader in Firefox
        if ($('.micro embed, .micro object').length && (ua.indexOf("MSIE", 0) == -1)) {
            $('.micro embed, .micro object').each(function () {
				if ($(this).attr('flashvars') != null)
				{
					var vars = $(this).attr('flashvars');
					var tmp = vars.split('content=');
					if (tmp[1]) {
						var content = tmp[1].split('&');
						$(this).attr('alt', content[0]);
					}
				}
            });
        }

        if ($('.micro .menu-bar ul').length) {
            if (ua.indexOf("MSIE 7", 0) >= 0) {
                var w = 0;
                $('.micro .menu-bar ul li').each(function () {
                    // add border-left-width + padding-left for each element
                    w += $(this).width() + 1;
                });
                $('.micro .menu-bar ul').css('width', w + 'px');
            }
            $('.micro .menu-bar').css('marginLeft', '-' + ($('.micro .menu-bar ul').width() / 2) + 'px');
        }

        $('.micro .feedback-wrapper a:last').css('marginRight', '0px');
    }
    if(document.getElementById('product-finder-maincontent')!= undefined)
		{ ShowHideContentFirstLoaded(); }
	if(!ReadCookie('FujitsuWebsite_common_01'))
		SetJPcookie();
});

// open new window
function openNewWindow($link) {
  if(typeof $link === 'undefined') {
      var $link = $("a.new-window");
    }
  if($link.length) {
    $link.each(function() {
      $(this).click(function(e) {
        e.preventDefault();
		e.stopPropagation();
          var url = $(this).attr("href");
        window.open(url, 'newWindow');
      });
      $(this).keydown(function(e) {
        var keyCode = e.keyCode || e.which;
        if(keyCode == 13) {
          e.preventDefault();
		  e.stopPropagation();
          var url = $(this).attr("href");
          window.open(url, 'newWindow');
        }
      });
    });
  }
}

//-------------------------------------------
// SearchBox
//-------------------------------------------
if (config_searchbox) {
    alert("Javascript error occurd : global variable \"config_searchbox\" maybe overlaps other script");
} else {
    var config_searchbox = {
        id_textfield: "#Search",
        id_button: "#submit",
        input_status: false
    }
}

j$(document).ready(function () {
    var j$textfield = j$(config_searchbox.id_textfield);
    var j$button = j$(config_searchbox.id_button);
    var default_text = j$textfield.attr("title");

    var sfFocusIn = function (e) {
        var my_value = j$(this).attr("value");
        j$(this).css("color", "#333");
        if (my_value !== default_text) {
            return;
        } else {
            j$(this).attr("value", "");
        }
    }

    var sfFocusOut = function (e) {
        var my_value = j$(this).attr("value");
        if (my_value === "" || my_value === default_text) {
            j$(this).css("color", "#777");
            j$(this).attr("value", default_text);
        } else {
            return;
        }
    }

    var sfEnter = function () {
        var my_value = j$textfield.attr("value");
        if (my_value === default_text) {
            j$textfield.attr("value", "");
        } else {
            return;
        }
    }

    var sfReset = function () {
        j$textfield.attr("value", default_text)
    }

    j$textfield.focus(sfFocusIn);
    j$textfield.blur(sfFocusOut);

    j$button.click(sfEnter);

    j$(window).load(function () {
        sfReset();
    });
});

//-------------------------------------------
// for Tabnav
//-------------------------------------------
var setTabNav = function (config) {
	var setStyleSheet = function () {
		if (config.stylesheet != null && config.stylesheet != "") {
			var ss = document.createElement("link");
			ss.setAttribute("rel","stylesheet");
			ss.setAttribute("type","text/css");
			ss.setAttribute("href",config.stylesheet);
			document.getElementsByTagName("head")[0].appendChild(ss);
		}
	}	
	
	var initialize = function () {
		var j$wrapper = j$(config.wrapper);
		var j$content = j$wrapper.find(config.content);
		var j$content_first = j$wrapper.find(config.content + ":first");
		var j$tabs = j$wrapper.find(config.tabs_wrapper + " " + "li>a");
		var j$tabs_outer_first = j$tabs.closest("li:first-child");
		var j$btn_next_prev = j$wrapper.find(config.btn_next_prev);
		
		var setVisual = function () {
			
			j$wrapper.each(function(i){
				var j$this_tabs = j$(this).find(config.tabs_wrapper + " " + "li>a");
				var lf = 0;
				
				j$this_tabs.each(function(j){
					var this_lf = j$(this).children("br").length;
					if(this_lf > lf){
						lf = this_lf;
					}
				});
				
				j$this_tabs.each(function(j){
					var this_lf = j$(this).children("br").length;
					var delta = lf - this_lf;
					for (var k = 0; k < delta; k++) {
						j$(this).append("<br />\&nbsp;");
					}
				});
			});
			
			var tag_img_cnr_lt = document.createElement("img");
			var tag_img_cnr_lb = document.createElement("img");
			var tag_img_cnr_rb = document.createElement("img");
			var tag_img_cnr_rt = document.createElement("img");
			if (!document.all) {
				tag_img_cnr_lt.setAttribute("class","tab_lt");
				tag_img_cnr_lb.setAttribute("class","tab_lb");
				tag_img_cnr_rb.setAttribute("class","tab_rb");
				tag_img_cnr_rt.setAttribute("class","tab_rt");
			} else {
				tag_img_cnr_lt.className = "tab_lt";
				tag_img_cnr_lb.className = "tab_lb";
				tag_img_cnr_rb.className = "tab_rb";
				tag_img_cnr_rt.className = "tab_rt";
			}
			
			tag_img_cnr_lt.src = config.corner_img_left_top;
			tag_img_cnr_lb.src = config.corner_img_left_bottom;
			tag_img_cnr_rb.src = config.corner_img_right_bottom;
			tag_img_cnr_rt.src = config.corner_img_right_top;
			j$content.append(tag_img_cnr_lt);
			j$content.append(tag_img_cnr_lb);
			j$content.append(tag_img_cnr_rb);
			j$content.append(tag_img_cnr_rt);
			j$content.wrapInner("<div class=\"frameV\"><div class=\"frameH\"></div></div>");
		}();
		
		j$tabs.attr("tabindex","-1");
		j$tabs_outer_first.children("a").attr("tabindex","0");
		
		j$tabs_outer_first.addClass("selected");
		j$content_first.css("display","block");
			
		j$tabs.bind("click focus", changeTabs);
		j$btn_next_prev.bind("click", changeTabs);
	}
	
	var changeTabs = function () { // behavior
		var j$this = j$(this);
		var this_href = j$this.attr("href");
		
		var j$target_content = j$("#" + this_href.split("#")[1]);
		var j$target_tab = j$(config.tabs_wrapper + " " + "a[href=\'"+ this_href +"\']");
		
		var j$my_wrapper = j$this.closest(config.wrapper);
		var j$my_contents = j$my_wrapper.children(config.content)
		var j$my_tabs = j$my_wrapper.find(config.tabs_wrapper + " " + "li a");
		var j$my_tabs_outer = j$my_wrapper.find(config.tabs_wrapper + " " + "li");
		
		j$my_tabs_outer.removeClass("selected");
		j$target_tab.closest("li").addClass("selected");
		
		j$my_tabs.attr("tabindex","-1");
		j$target_tab.attr("tabindex","0");		
		
		j$my_contents.css("display","none");		
		j$target_content.css("display","block");
		
		j$target_tab.get(0).focus();
		return false; // prevent default action on browser.
	}
	
	setStyleSheet();
	initialize();
}

j$(document).ready(function(){
	setTabNav({
		wrapper : "div.tabnav",
		tabs_wrapper : ".tablist",
		btn_next_prev : ".next-prev a",
		content : "div.content",
		corner_img_left_top : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-lt.gif",
	    corner_img_left_bottom : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-lb.gif",
	    corner_img_right_bottom : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-rb.gif",
	    corner_img_right_top : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-rt.gif"
	});
});

//-------------------------------------------
// DropDown in Country Selector
//-------------------------------------------
function Activate_countryselector_action() {
    var setDropDownCS = function (j$target) {
        var ua = navigator.userAgent;
        var j$list = j$target.find("li");

        j$target.css("display", "block");
        var menu_single_width = j$target.width();
        j$target.css("display", "none");

        //__________ initialize __________
        if ((ua.indexOf("Win", 0) >= 0) && ((ua.indexOf("MSIE", 0) >= 0))) {
            j$target.parent(".maincontents").css("position", "relative");
        }

        j$list.each(function () {
            if (j$(this).is(":has(ul)")) {
                j$(this).addClass("has_children");
                j$(this).children("ul").css("width", menu_single_width + "px");
            }
        });

        //__________ behavior __________
        j$list.hover(
      function () {
          var j$child_node;
          var distance_bottom;
          var distance_top;
          var distance_right;
          var window_width = j$(window).width();
          var window_height = j$(window).height();

          if (j$(this).children("ul").length) {
              var menu_total_width = menu_single_width * 2 + j$(this).children("ul").width();

              j$child_node = j$(this).find("> ul");
              child_height = j$child_node.height() + 2; // "2" is twice the value of border-width.

              distance_bottom = window_height - ((j$(this).offset().top - j$(window).scrollTop()) + child_height);
              distance_bottom = Math.ceil(distance_bottom);

              distance_top = ((j$(this).outerHeight() + j$(this).offset().top) - j$(window).scrollTop()) - child_height;
              distance_top = Math.ceil(distance_top);

              distance_right = window_width - ((j$(this).offset().left - j$(window).scrollLeft()) + menu_single_width * 2);
              distance_right = Math.ceil(distance_right);
              if (ua.indexOf("Opera", 0) >= 0) {
                  distance_right = window_width - ((j$("div.dd-country-selector p.lang").offset().left - 8 - j$(window).scrollLeft()) + menu_single_width * 2);
              };

              j$(this).css("position", "relative");
              j$child_node.css("position", "absolute");

              // If total height of menus is over window
              if (distance_bottom > 0) {
                  j$child_node.css("top", "0px");
              } else {
                  if (distance_top > 0) {
                      j$child_node.css("top", "-" + (child_height - j$(this).outerHeight() - 1) + "px");
                  } else {
                      j$child_node.css("top", "0px");
                  }
              }

              // If total wide of menus is over window
              if (distance_right > 0) {
                  j$child_node.css("left", (menu_single_width - 8) + "px");
              } else {
                  j$child_node.css("right", "100%");
              }
          }

          j$(this).addClass("selected");
          j$(this).children("a").addClass("selected");
          j$(this).children("span").addClass("selected");
      },
      function () {
          j$child_node = j$(this).find("> ul");
          j$(this).find("> ul").css("position", "static");
          j$(this).css("position", "static");
          j$(this).removeClass("selected");
          j$(this).children("a").removeClass("selected");
          j$(this).children("span").removeClass("selected");
          j$child_node.css("left", "auto");
          j$child_node.css("right", "auto");
          j$child_node.css("position", "static");
      }
    );
    }

    if (csschk() == true) {
        $(document).ready(function () {
            var top_wrapper = "div.header";
            var top_wrapper_default_z_index = "1000";
            var wrapper = "div.headertop";
            var wrapper_default_z_index = "0";

            if (ua.indexOf("Firefox", 0) >= 0) {
                j$("#headnavi .dd-country-selector").css("display", "inline-block");
            }

            var j$target_nodes = j$("div.dd-country-selector");
            j$target_nodes.hover( // This method work pre-setup only. etDropDownCS is main function.
        function () {
            j$(this).css("position", "relative");
            j$(this).children("ul.dropdown-box").css({
                position: "absolute",
                display: "block"
            });
            j$(wrapper).css({
                position: "relative",
                zIndex: "2"
            });
            if (ua.indexOf("Opera", 0) >= 0) {
                var opera_offset_L = j$(window).scrollLeft();
                var opera_offset_T = j$(window).scrollTop();
                j$(this).children("ul.dropdown-box").css({
                    marginLeft: opera_offset_L + "px",
                    marginTop: opera_offset_T + "px"
                });
            }
        },
        function () {
            j$(this).css("position", "static");
            j$(this).children("ul.dropdown-box").css({
                display: "none",
                position: "static"
            });

            j$(wrapper).css({
                position: "static",
                zIndex: wrapper_default_z_index
            });
        }
      );
            j$target_nodes.each(function () {
                setDropDownCS(j$(this).children("ul.dropdown-box"));
            });
        });
    }
}

//-------------------------------------------
// MegaDropDown & DropDown in MegaDrop
//-------------------------------------------
var Noopaque = false;
var nav_active = false;
var setNoopaque = function () {
    Noopaque = true;
}

function Activate_megadropdown_action() {
    var cssbool = false;
    var disp_timer, hide_timer;

    function noact() {
    };
    var menuList = j$("#headerbottom li.glbnavlist");
    if ($('#bodyarea.micro').length) {
        var hidemenuAll = [];
        var mouseareaAll = [];
        j$(menuList).each(function (i) {
            !j$(this).find('div.hidemenu').length ? hidemenuAll[i] = false : hidemenuAll[i] = $(this).find('div.hidemenu')[0];
            !j$(this).find('div.hidemenu_mousearea').length ? mouseareaAll[i] = false : mouseareaAll[i] = $(this).find('div.hidemenu_mousearea')[0];
        });
    }
    else {
        var hidemenuAll = j$("#headerbottom div.hidemenu");
        var mouseareaAll = j$("#headerbottom div.hidemenu_mousearea");
    }
    var hidewrapperAll = j$(hidemenuAll).find("div.hidemenuwrapper");

    // add icon for dropdown
    j$(menuList).find("a span").css("background", "transparent url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/megadropdown/arrow-box-down-megadrop.gif) no-repeat right center");
    j$(menuList).find("a span").css("padding-right", "26px");

    // add roundedbox
    j$(hidewrapperAll).wrapInner('<div class="hidemenu-right-bottom clearfix"></div>');
    j$(hidewrapperAll).wrapInner('<div class="hidemenu-left-bottom"></div>');
    j$(hidewrapperAll).wrapInner('<div class="hidemenu-right-top"></div>');
    j$(hidewrapperAll).wrapInner('<div class="hidemenu-left-top"></div>');

    // change mouse cursor when mouseover to close button
    j$("#headerbottom div.hidemenuwrapper p.megaclosebtn").css("display", "block");
    j$("#headerbottom div.hidemenuwrapper p.megaclosebtn").find("img").css("cursor", "pointer");

    // copy title
    var megatitleAll = j$(menuList).find("a.glbnavtitle");

    // init
    for (var i = 0; i < j$(megatitleAll).length; i++) {
        var hidemenu = hidemenuAll[i];
        var mousearea = mouseareaAll[i];
        var megatitle = megatitleAll[i];

        if ($('.bodyarea.micro').length) {
            if (csschk() == true && hidemenu != false) {
                // copy title
                j$(megatitle).clone().prependTo(j$(mousearea));
                var copymegatitle = j$(hidemenu).find("a.glbnavtitle");
                // remove class
                j$(copymegatitle).removeClass("realtitle");
            }
        }
        else {
            if (csschk() == true) {
                // copy title
                j$(megatitle).clone().prependTo(j$(mousearea));
                var copymegatitle = j$(hidemenu).find("a.glbnavtitle");
                // remove class
                j$(copymegatitle).removeClass("realtitle");
            }
        }
    }

    function addMega(thisObject, focusTarget, callback) {
        if (csschk() == true) {
            if (focusTarget == null) {
                for (k = 0; k < j$(megatitleAll).length; k++) {
                    var thisMENU = j$("a.realtitle:eq(" + k + ")");
                    if (j$(thisObject).find("a.realtitle").html() != j$(thisMENU).html()) {
                        j$("div.hidemenu:eq(" + k + ")").css("display", "none");
                    }
                }
            } else {
                thisObject = focusTarget;
                var ACTIVEOBJ = j$(document.activeElement);
                for (k = 0; k < j$(megatitleAll).length; k++) {
                    var thisMENU = j$("a.realtitle:eq(" + k + ")");
                    if (j$(ACTIVEOBJ).html() != j$(thisMENU).html()) {
                        j$("div.hidemenu:eq(" + k + ")").css("display", "none");
                    }
                }
            }
            var hidemenu_one = j$(thisObject).find("div.hidemenu");
            var mousearea_one = j$(thisObject).find("div.hidemenu_mousearea");
            var megatitle_one = j$(thisObject).find("a.glbnavtitle");
            var megamenu_one = j$(thisObject).find("div.hidemenuwrapper");
            var copymegatitle_one = j$(hidemenu_one).find("a.glbnavtitle");

            // offest contents
            j$(hidemenu_one).css("display", "block");
            var hidewrapperWidth = j$(megamenu_one).width();
            j$(hidemenu_one).css("display", "none")
            var offsetL = j$(thisObject).offset().left - j$("div.bodyarea").offset().left;
            var my_area = (981 - offsetL);
            if (hidewrapperWidth > my_area) {
                var my_offset_r = (offsetL + hidewrapperWidth - 980);
	            if($('body').hasClass('double') && j$(mousearea_one).parents('li:first').hasClass('my-fujitsu')) {
	              my_offset_r += 12;
	            }
                j$(mousearea_one).css("margin-left", -(my_offset_r -= 1) + "px");
                if (ua.indexOf("MSIE 7", 0) >= 0) {
                } else if (ua.indexOf("MSIE 6", 0) >= 0) {
                } else {
                    j$(copymegatitle_one).css("margin-left", (my_offset_r -= 1) + "px");
                }
            } else {
            	j$(megamenu_one).find("div.hidemenu-left-top").css("background", "transparent url(//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/megadropdown/dropdown-back-left-top-noround.png) no-repeat left top");
            }

            j$("#headerbottom").css("position", "relative");
            j$("#headsearch").parent().css({
                position: "relative",
                zIndex: "0"
            });
            j$(thisObject).parent().find("li.glbnavlist").css("position", "static");
            j$(thisObject).css("position", "relative");

            j$(hidemenu_one).css("display", "block");
            if (callback) {
                callback();
            }
        };
    };

    function removeMegaByMouseOut(thisObject, focusTarget) {
        var status = j$(thisObject).css("position");
        var j$that;

        if (status === "relative") {
            j$that = j$(thisObject).find("div.hidemenu_mousearea").parent();
            j$that.parent().css("position", "static");
            j$("#headerbottom").css("position", "static");
            j$("#headsearch").parent().css({
                position: "static"
            });
            j$that.css("display", "none");
        } else {
            return;
        }
    };

    function removeMegaByClick() {
        var hidemenu = j$("div.hidemenu:visible");
        j$(hidemenu).css("display", "none");
    }

    function focusIn(event) {
        var focusTarget = (j$(this).parent().get(0));
        addMega(this, focusTarget);
    };

    function deleteMenu(event) {
        j$("div.hidemenu").css("display", "none");
    };

    if (csschk() == true) {
        var j$glbnavlist = j$("#headerbottom").find("li.glbnavlist");
        var j$megawrraper = j$("div.hidemenuwrapper");

        // Global nav basic behavior
        j$glbnavlist.hover(
        function () {
            var that = this;

            clearTimeout(hide_timer);

            disp_timer = setTimeout(function () {
                addMega(that);
            }, 500);
        },
        function (e) {
            var that = this;
            if (e.relatedTarget) {
                var relTarg = e.relatedTarget || e.toElement;

                // limitation event object.
                if (!(relTarg.tagName.toUpperCase() === "SPAN" || j$(relTarg).hasClass("glbnavtitle"))) {
                    clearTimeout(disp_timer);
                    hide_timer = setTimeout(function () {
                        removeMegaByMouseOut(that);
                    }, 0);
                } else if (j$(relTarg).css("position") === "static") {
                    removeMegaByMouseOut(that);
                    clearTimeout(disp_timer);
                } else {
                }
            } else {
                removeMegaByMouseOut(that);
                clearTimeout(disp_timer);
            }
        }
      );

        // --- keyboard my-fujitsu      
        j$('li.my-fujitsu > a').focus(function () {
            clearTimeout(hide_timer);
            disp_timer = setTimeout(function () {
                addMega(j$('ul#globalnav li.my-fujitsu'));
            }, 200);
        });

        j$('li.my-fujitsu').prev().find('a:first').focus(function () {
            clearTimeout(hide_timer);
            disp_timer = setTimeout(function () {
                removeMegaByMouseOut(j$('li.my-fujitsu'));
            }, 200);
        });
        j$('.bodyarea a:first').focus(function () {
            clearTimeout(hide_timer);
            disp_timer = setTimeout(function () {
                removeMegaByMouseOut(j$('li.my-fujitsu'));
            }, 200);
        });

        j$("#headerbottom p.megaclosebtn img").click(removeMegaByClick);
    }

    /* DropDown trigger */
    var setDropDown_inmegadrop = function (j$target) {
        var ua = navigator.userAgent;
        var j$list = j$target.find("li");

        j$("div.hidemenu").css("display", "block");
        var menu_single_width = j$target.width();
        j$("div.hidemenu").css("display", "none");

        //__________ initialize __________
        j$list.each(function () {
            j$(this).addClass("hidden");
            if (j$(this).is(":has(ul)")) {
                j$(this).addClass("has_children");
                j$(this).children("ul").css("width", menu_single_width);
            }
        });

        //__________ behavior __________
        j$list.hover(
        function () {
            var j$child_node;
            var distance_bottom;
            var distance_top;
            var distance_right;
            var window_width = j$(window).width();
            var window_height = j$(window).height();

            if (j$(this).children("ul").length) {
                var menu_total_width = menu_single_width * 2 + j$(this).children("ul").width();

                j$child_node = j$(this).find("> ul");
                child_height = j$child_node.height() + 2; // "2" is twice the value of border-width.

                distance_bottom = window_height - ((j$(this).offset().top - j$(window).scrollTop()) + child_height);
                distance_bottom = Math.ceil(distance_bottom);

                distance_top = ((j$(this).outerHeight() + j$(this).offset().top) - j$(window).scrollTop()) - child_height;
                distance_top = Math.ceil(distance_top);

                distance_right = window_width - ((j$(this).offset().left - j$(window).scrollLeft()) + menu_single_width * 2);
                distance_right = Math.ceil(distance_right);

                j$(this).css({
                    position: "relative",
                    zIndex: "1" // for IE
                });
                j$(this).removeClass("hidden");

                // If total height of menus is over window
                if (distance_bottom > 0) {
                    j$child_node.css("top", "0px");
                } else {
                    if (distance_top > 0) {
                        j$child_node.css("top", "-" + (child_height - j$(this).outerHeight() - 1) + "px");
                    } else {
                        j$child_node.css("top", "0px");
                    }
                }

                // If total wide of menus is over window
                if (distance_right > 0) {
                    j$child_node.css("left", "100%");
                } else {
                    j$child_node.css("left", "-100%");
                }
            }

            j$(this).addClass("selected");
            j$(this).children("a").addClass("selected");
            j$(this).children("span").addClass("selected");
        },
        function () {
            j$(this).css("position", "static");
            j$(this).addClass("hidden");
            j$(this).removeClass("selected");
            j$(this).children("a").removeClass("selected");
            j$(this).children("span").removeClass("selected");

            if (!($(this).parent().parent().hasClass(".selected"))) {
            }
        }
      );
    }

    j$(document).ready(function () {
        j$("#headerbottom div.hidemenu div.hidemenuwrapper ul.dropdown-box").each(function () {
            setDropDown_inmegadrop(j$(this));
        });
    });
}

/* thumbnail slideshow */
(function (j$) {
    var active = false;
    j$.fn.thumbSlide = function () {
        if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 1)) == 8))) {
            this.find("ul.slideshow-images li:not(:first-child) span").css('opacity', '0');
        }
        else {
            this.find("ul.slideshow-images li:not(:first-child)").css('opacity', '0');
        }

        if((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 2)) < 9))) {
            this.find('ul.slideshow-images li *').each(function () {
                var height = $(this).parent().height();
                $(this).next().css('marginTop', ((height - $(this).height()) / 2) + 'px');
                $(this).parent().css('left', 'auto');
            });
            this.find('ul.thumbs li img').each(function () {
                var height = $(this).parents('li:first').height();
                (j$.browser.msie && parseInt(j$.browser.version.substr(0, 2)) > 6) ? e = 0 : e = 3;
                $(this).next().css('marginTop', ((height - $(this).height()) / 2 + e) + 'px');
            });
        }
        else {
            this.find('ul.slideshow-images li').css('left', 'auto');
        }
        this.each(function () {
            var wrapper = j$(this);
            wrapper.find('ul.thumbs li').each(function (i) {
                j$(this).find('a').bind('click focus', function (event) {
                    event.preventDefault();
                    if (!active) {
                        changeSlide((i + 1));
                    }
                    return false;
                });
            });
            wrapper.find('ul.thumbs li:first').addClass('active-first').parents('ul.thumbs:first').find('li:last').addClass('last');
            function changeSlide(i) {
                active = true;
                if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 1)) == 8))) {
                    var $obj1 = wrapper.find('ul.slideshow-images li:nth-child(' + i + ') span');
                    var $obj2 = wrapper.find('ul.slideshow-images li:not(:nth-child(' + i + ')) span');
                }
                else {
                    var $obj1 = wrapper.find('ul.slideshow-images li:nth-child(' + i + ')');
                    var $obj2 = wrapper.find('ul.slideshow-images li:not(:nth-child(' + i + '))');
                }
                $obj1.stop(true).animate({ opacity: 1 }, 400, function () { active = false; });
                $obj2.animate({ opacity: 0 }, 400);
                wrapper.find('ul.thumbs li').removeClass('active').removeClass('active-first');
                if ((j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
                    wrapper.find('ul.thumbs a *').css('background', 'none');
                }
                i == 1 ? wrapper.find('ul.thumbs :nth-child(' + i + ')').addClass('active-first') : wrapper.find('ul :nth-child(' + i + ')').addClass('active');
            }
        });
    };
})(jQuery);

/* sort checkbox wrapper */
(function (j$) {
    j$.fn.sortCheckboxes = function () {
        var str = this.attr('class');
        var i = str.search(/col.+/);
        var no = parseInt(str.substring(i + 3, i + 4));
        this.each(function () {
            var $wrap = $(this);
            for (var a = 1; a <= no; a++) {
                $wrap.append('<div class="check' + no + 'span check-row"></div>');
                $wrap.find('.check' + no + 'span:last').append($('.column' + a));
            }
        });
    };
})(jQuery);

/* contentfilter plugin */
(function (j$) {
    j$.fn.extend({
        //contentfilter
        contentfilter: function () {
            return this.each(function () {
                var filters = new Array();
                var cfilter = $(this);
                var filteredelements = 'li';
                var noResult = cfilter.find('.no-results');

                if ($('.filtercontent table').length > 0) {
                    filteredelements = 'tr';
                }
                if ($('.filtercontent div.filter').length > 0) {
                    filteredelements = 'div.filter';
                }

                //Filter button is pressed
                j$('input[type="submit"], button', cfilter).click(function () {
                    //recreate filter array
                    buildFilterList();

                    //filter elements with new filter
                    filterElements();
                    return false;
                });

                //Add/Remove classes if select field has value or not
                j$('select', cfilter).change(function () {
                    $group = j$(this).parents('.filtergroup:first');
                    $styledselecttext = j$('.ddTitleText', $group);
                    if (j$(this).val() != 'reset') {
                        $styledselecttext.addClass('ddTitleTextActive');
                    }
                    else {
                        $styledselecttext.removeClass('ddTitleTextActive');
                    }
                });

                //Traverse select fields and build filter array
                function buildFilterList() {
                    j$('select', cfilter).each(function () {
                        var $select = j$(this);
                        var groupname = $select.attr('name');
                        //is select resetted
                        if ($select.val() != 'reset') {
                            var filter = $select.val();
                            //add filter
                            filters[groupname] = filter;
                        }
                        else {
                            delete filters[groupname];
                        }
                    });
                }

                //build filter string and filter the contents
                function filterElements() {
                    j$('.filtercontent ' + filteredelements, cfilter).hide();
                    var filterstring = '.filtercontent ' + filteredelements;
                    for (group in filters) {
                        filterstring += '.' + filters[group];
                    }
                    if (j$(filterstring, cfilter).length > 0) {
                        j$(filterstring, cfilter).show();
                        j$(filterstring, cfilter).removeClass('last-element').filter(':last').addClass('last-element');
                        noResult.hide();
                    }
                    else {
                        noResult.show();
                    }
                }
            });
        }
    });
})(jQuery);

//v1.7
// Flash Player Version Detection
// Detect Client Browser type
// Copyright 2005-2008 Adobe Systems Incorporated.  All rights reserved.
var isIE = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false;
var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false;
var isOpera = (navigator.userAgent.indexOf("Opera") != -1) ? true : false;
function ControlVersion()
{
    var version;
    var axo;
    var e;
    // NOTE : new ActiveXObject(strFoo) throws an exception if strFoo isn't in the registry
    try {
        // version will be set for 7.X or greater players
        axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
        version = axo.GetVariable("$version");
    } catch (e) {
    }
    if (!version)
    {
        try {
            // version will be set for 6.X players only
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");

            // installed player is some revision of 6.0
            // GetVariable("$version") crashes for versions 6.0.22 through 6.0.29,
            // so we have to be careful. 

            // default to the first public version
            version = "WIN 6,0,21,0";
            // throws if AllowScripAccess does not exist (introduced in 6.0r47)   
            axo.AllowScriptAccess = "always";
            // safe to call for 6.0r47 or greater
            version = axo.GetVariable("$version");
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 4.X or 5.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = axo.GetVariable("$version");
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 3.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = "WIN 3,0,18,0";
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 2.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
            version = "WIN 2,0,0,11";
        } catch (e) {
            version = -1;
        }
    }

    return version;
}
// JavaScript helper required to detect Flash Player PlugIn version information
function GetSwfVer() {
    // NS/Opera version >= 3 check for Flash plugin in plugin array
    var flashVer = -1;

    if (navigator.plugins != null && navigator.plugins.length > 0) {
        if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
            var swVer2 = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";
            var flashDescription = navigator.plugins["Shockwave Flash" + swVer2].description;
            var descArray = flashDescription.split(" ");
            var tempArrayMajor = descArray[2].split(".");
            var versionMajor = tempArrayMajor[0];
            var versionMinor = tempArrayMajor[1];
            var versionRevision = descArray[3];
            if (versionRevision == "") {
                versionRevision = descArray[4];
            }
            if (versionRevision[0] == "d") {
                versionRevision = versionRevision.substring(1);
            } else if (versionRevision[0] == "r") {
                versionRevision = versionRevision.substring(1);
                if (versionRevision.indexOf("d") > 0) {
                    versionRevision = versionRevision.substring(0, versionRevision.indexOf("d"));
                }
            }
            var flashVer = versionMajor + "." + versionMinor + "." + versionRevision;
        }
    }
    // MSN/WebTV 2.6 supports Flash 4
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.6") != -1) flashVer = 4;
    // WebTV 2.5 supports Flash 3
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.5") != -1) flashVer = 3;
    // older WebTV supports Flash 2
    else if (navigator.userAgent.toLowerCase().indexOf("webtv") != -1) flashVer = 2;
    else if (isIE && isWin && !isOpera) {
        flashVer = ControlVersion();
    }
    return flashVer;
}
// When called with reqMajorVer, reqMinorVer, reqRevision returns true if that version or greater is available
function DetectFlashVer(reqMajorVer, reqMinorVer, reqRevision)
{
    versionStr = GetSwfVer();
    if (versionStr == -1) {
        return false;
    } else if (versionStr != 0) {
        if (isIE && isWin && !isOpera) {
            // Given "WIN 2,0,0,11"
            tempArray = versionStr.split(" ");  // ["WIN", "2,0,0,11"]
            tempString = tempArray[1];     // "2,0,0,11"
            versionArray = tempString.split(",");  // ['2', '0', '0', '11']
        } else {
            versionArray = versionStr.split(".");
        }
        var versionMajor = versionArray[0];
        var versionMinor = versionArray[1];
        var versionRevision = versionArray[2];
        // is the major.revision >= requested major.revision AND the minor version >= requested minor
        if (versionMajor > parseFloat(reqMajorVer)) {
            return true;
        } else if (versionMajor == parseFloat(reqMajorVer)) {
            if (versionMinor > parseFloat(reqMinorVer))
                return true;
            else if (versionMinor == parseFloat(reqMinorVer)) {
                if (versionRevision >= parseFloat(reqRevision))
                    return true;
            }
        }
        return false;
    }
}
function AC_AddExtension(src, ext)
{
    if (src.indexOf('?') != -1)
        return src.replace(/\?/, ext + '?');
    else
        return src + ext;
}
var altName = new Array();
var altNameIndex = 0;
function AC_Generateobj(objAttrs, params, embedAttrs)
{
    var str = '';
    var random_id = random(1, 99999) + 'el' + random(1, 99999);
    if (isIE && isWin && !isOpera)
    {
        str += '<object ';
        for (var i in objAttrs)
        {
            if (i == 'name') {
                altName[altNameIndex] = objAttrs[i];
            }
            str += i + '="' + objAttrs[i] + '" ';
        }
        str += '>';
        for (var i in params)
        {
            str += '<param name="' + i + '" value="' + params[i] + '" /> ';
        }
        str += '<span class="' + altName[altNameIndex] + '" style="height:' + objAttrs['height'] + 'px; width:' + objAttrs['width'] + 'px; position:absolute; display: block;"></span></object>';
        altNameIndex++;
    }
    else
    {
        str += '<embed ';
        for (var i in embedAttrs)
        {
            // dynamic id for printable flash 
            if (i == 'FlashVars') {
                var flid = 'id=fl_' + random_id;
                embedAttrs[i] += '&' + flid;
            }
            str += i + '="' + embedAttrs[i] + '" ';
        }
        // dynamic id for printable flash
        if (flid) {
            str += flid;
        }
        str += '></embed>';
    }
    document.write(str);
}

j$(document).ready(function () {
    var flVersion = GetSwfVer();

    // IE flash disabled -> alt content
    if (flVersion == -1 && $.browser.msie && parseInt($.browser.version) < 9) {
        var $nos = $("noscript");
        $nos.each(function () {
            var $tmp = $(this).after($(this)[0].textContent || $(this)[0].innerHTML);
            var $alt = $tmp.find('div.alt-content').clone();
            $tmp.remove();
            $(this).remove();
        });
        $('object').remove();
    }
    else if (flVersion == -1 && $.browser.msie) {
        $('object').each(function () {
            var $tmp = $('<span/>').html($(this).next().text());
            $(this).replaceWith($tmp.html());
        });
    }

    // IE 6 next sibling for non-floating images
    if (($.browser.msie && parseInt($.browser.version) < 7) && $('.maincontents .banner .alignright').length) {
        $('.maincontents .banner .alignright + .nofloat').css('display', 'block');
    }

    // hide original flash for Google Chrome 25.0.1364.xxx in combination with flash v11.4.402.xxx or 11.6.602.xxx
    if (flVersion == '11.4.402' || flVersion == '11.6.602') {
        var userAgent = navigator.userAgent.toLowerCase();
        $.browser.chrome = /chrome/.test(navigator.userAgent.toLowerCase());
        if ($.browser.chrome && userAgent.search(/25.0.1364/)) {
            $('.bannercontent embed').css('visibility', 'hidden');
            window.setTimeout(function () {
                $('embed.printableFlashObj').each(function () {
                    $(this).hide();
                });
                $('img.flashScreenshot').css({
                    'position': 'absolute',
                    'top': '0px'
                }).show();
            }, 1500);
        }
    }

    // set flash alternative content if flash plugin is not installed
    if (flVersion == -1 && !$.browser.msie) {
        $('embed, object').each(function () {
            var $tmp = $('<div/>');
            $tmp.html($(this).next('noscript').text());
            var $obj = $('object', $tmp);
            var $alt = $('.alt-content', $tmp);
            $alt.css({
                'width': $obj.attr('width') + 'px',
                'height': $obj.attr('height') + 'px'
            });
            $(this).after($alt);
            $(this).add($tmp).remove();
        });
    }

    if ($('#bodyarea.micro div.main-header').length > 1) {
      $('.maincontents div.shortcuts, .maincontents div.shortcuts span a, .maincontents div.shortcuts ul').addClass('show');
        // set all mainheaders to max height
        var mhHeight = 0;
        $('.maincontents div.main-header').each(function () {
            if (mhHeight < $(this).height()) {
                mhHeight = $(this).height();
            }
        });
        $('.maincontents .main-header').height(mhHeight + 'px');
        $('.maincontents div.shortcuts, .maincontents div.shortcuts span a, .maincontents div.shortcuts ul').removeClass('show');        
    }
});

var embededVideo = new Array();

function AC_FL_RunContent() {

    var flVersion = GetSwfVer();
    var ret =
      AC_GetArgs
      (arguments, ".swf", "movie", "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
       , "application/x-shockwave-flash"
      );
    AC_Generateobj(ret.objAttrs, ret.params, ret.embedAttrs);
}

function renderEmbed($obj) {
    $obj.html(embededVideo);
}

function AC_SW_RunContent() {
    var ret =
    AC_GetArgs
    (arguments, ".dcr", "src", "clsid:166B1BCA-3F9C-11CF-8075-444553540000"
     , null
    );
    AC_Generateobj(ret.objAttrs, ret.params, ret.embedAttrs);
}

function AC_GetArgs(args, ext, srcParamName, classid, mimeType) {
    var ret = new Object();
    ret.embedAttrs = new Object();
    ret.params = new Object();
    ret.objAttrs = new Object();
    for (var i = 0; i < args.length; i = i + 2) {
        var currArg = args[i].toLowerCase();
        switch (currArg) {
            case "classid":
                break;
            case "pluginspage":
                ret.embedAttrs[args[i]] = args[i + 1];
                break;
            case "src":
            case "movie":
                args[i + 1] = AC_AddExtension(args[i + 1], ext);
                ret.embedAttrs["src"] = args[i + 1];
                ret.params[srcParamName] = args[i + 1];
                break;
            case "BGColor":
            case "onafterupdate":
            case "onbeforeupdate":
            case "onblur":
            case "oncellchange":
            case "onclick":
            case "ondblclick":
            case "ondrag":
            case "ondragend":
            case "ondragenter":
            case "ondragleave":
            case "ondragover":
            case "ondrop":
            case "onfinish":
            case "onfocus":
            case "onhelp":
            case "onmousedown":
            case "onmouseup":
            case "onmouseover":
            case "onmousemove":
            case "onmouseout":
            case "onkeypress":
            case "onkeydown":
            case "onkeyup":
            case "onload":
            case "onlosecapture":
            case "onpropertychange":
            case "onreadystatechange":
            case "onrowsdelete":
            case "onrowenter":
            case "onrowexit":
            case "onrowsinserted":
            case "onstart":
            case "onscroll":
            case "onbeforeeditfocus":
            case "onactivate":
            case "onbeforedeactivate":
            case "ondeactivate":
            case "type":
            case "codebase":
            case "id":
                ret.objAttrs[args[i]] = args[i + 1];
                break;
            case "width":
            case "height":
            case "align":
            case "vspace":
            case "hspace":
            case "class":
            case "title":
            case "accesskey":
            case "name":
            case "tabindex":
                ret.embedAttrs[args[i]] = ret.objAttrs[args[i]] = args[i + 1];
                break;
            default:
                ret.embedAttrs[args[i]] = ret.params[args[i]] = args[i + 1];
        }
    }
    ret.objAttrs["classid"] = classid;
    if (mimeType) ret.embedAttrs["type"] = mimeType;
    return ret;
}

//-------------------------------------------
// NewsTicker
//-------------------------------------------
var BTMCORNER = "noround";

var config_rownews = {
    img_pause : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/newsticker/btn-pause.gif",
    img_play : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/newsticker/btn-play.gif"
}

j$(document).ready(function () {
    var newsBlock = j$("div#rownews");
    var newsList = j$("div#rownews-list");
    var newsTickerAll = j$("div#rownews-list li");
    var newsTickerAllfirstshow = j$("div#rownews-list li.show");
    var newsOffsetTop;
    var newsBlockTop = j$(newsBlock).offset().top;
    var timerObj;
    var StopByBtn = false;

    newsTickerAll.css("position", "relative");
    newsTickerAllfirstshow.css("margin-top", "-1px");
    newsList.css("position", "absolute");
    newsList.css("z-index", "1");
    newsList.css("left", "85px");

    j$(newsTickerAll).each(function () {
        if (this.className.indexOf("show") > -1) {
            newsOffsetTop = j$(this).offset().top;
        } else {
            j$(this).css("display", "none");
        }
    });

    var j$btn = j$("#rownews img.btn-newspause");
    j$btn.each(function () {
        j$(this).toggle(
    function () {
        j$(this).attr("src", config_rownews.img_play);
        StopByBtn = true;
        stopTimer();
    },
    function () {
        j$(this).attr("src", config_rownews.img_pause);
        StopByBtn = false;
        startTimer_init();
    }
      );
    });

    var newsTickerNum = newsTickerAll.length;
    var nowDisplay = 0;
    // count up
    function countUp() {
        nowDisplay++;
        if (nowDisplay > newsTickerNum - 1) {
            nowDisplay = 0;
        }
        if (ua.indexOf("MSIE 8", 0) >= 0) {
            j$("div#rownews-list li:visible").css("margin-top", "0px");
        }
        j$("div#rownews-list li:visible").fadeOut(500, function () {
            if (ua.indexOf("MSIE 8", 0) >= 0) {
                j$(this).css("margin-top", "0px");
                j$(newsTickerAll[nowDisplay]).css("margin-top", "0px");
            }
            j$(newsTickerAll[nowDisplay]).fadeIn(500, function () {
                if (ua.indexOf("MSIE 8", 0) >= 0) {
                    j$(this).css("margin-top", "-1px");
                };
            });
        });
    }

    // start timer (init)
    function startTimer_init() {
        if (StopByBtn == false) {
            if (timerObj != undefined) {
                stopTimer();
            }
            timerObj = setInterval(countUp, 4000);
        }
    }
    // stop timer
    function stopTimer() {
        if (timerObj != undefined) {
            clearInterval(timerObj);
        }
    }

    j$(newsBlock).find("a").hover(stopTimer, startTimer_init);
    j$(newsBlock).find("a").focus(stopTimer);
    j$(newsBlock).find("a").blur(startTimer_init);

    startTimer_init();
});

//-------------------------------------------
// for Toggle
//-------------------------------------------
var toggle = function (toggle_target) {
    var config = {
        img_close : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/toggle/btn-minus.gif",
        img_open : "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/toggle/btn-plus.gif"
    }

    // enable keyboard navigation on +/- icon
    // var btn = "<a href=\"#\" class=\"btn\"><img src=\"" + config.img_open + "\" alt=\"toggle-list\" /></a>";
    // disable keyboard navigation  on +/- icon
    var btn = "<a tabindex=\"-1\" href=\"#\" class=\"btn\"><img src=\"" + config.img_open + "\" alt=\"toggle-list\" /></a>";

    var j$btn_parent = j$(toggle_target);
    var j$btn = j$btn_parent.prepend(btn);

    j$btn_parent.parents('.togglebox').find('dl').not('.open').find('dd').css('display', 'none');

    j$btn.each(function () {
        var $list = j$(this).parents('.innerframe:first');
        var $tab = j$(this).parents('.togglebox:first').parent('.frameH');
        if ($tab.length) {
            $tab.data('height', $tab.outerHeight());
        }
        j$(this).children("a").eq(0).toggle(
        // open toggle
            function () {
                if ($list.length) {
                    $list.css('height', 'auto');
                }
                j$(this).children("img").attr("src", config.img_close);
                j$(this).parent().next().css("display", "block");
                if ($list.length) {
                    $list.css('height', $list.outerHeight() + 'px');
                }
                if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 1)) == 6)) && $tab.length) {
                    $tab.find('img.tab_lb, img.tab_rb').css('top', ($tab.outerHeight()) + 'px');
                }
            },
        // close toggle
            function () {
                if ($list.length) {
                    $list.css('height', 'auto');
                }
                j$(this).children("img").attr("src", config.img_open);
                j$(this).parent().next().css("display", "none");
                if ($list.length) {
                    $list.css('height', $list.outerHeight() + 'px');
                }
                if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 1)) == 6)) && $tab.length) {
                    $tab.find('img.tab_lb, img.tab_rb').css('top', ($tab.outerHeight()) + 'px');
                }
            }
        );
        $(this).parents('dl.open:first').find('a.btn').trigger('click');
    });
}

j$(document).ready(function () {
    toggle("div.togglebox dt,ul.togglebox dt");
});

function noaction() {

}

j$(document).ready(function () {
    // set js enables body class
    $('body').addClass('js');

    // microsite multi-column header ie6 class fix
    if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 2)) < 7))) {
        j$('.micro .col1span.main-header').addClass('col1-header');
        j$('.micro .col2span.main-header').addClass('col2-header');
        j$('.micro .col3span.main-header').addClass('col3-header');
        j$('.micro .col4span.main-header').addClass('col4-header');
        j$('.micro .col5span.main-header').addClass('col5-header');

        j$('.micro .col1span.main-header.no-border').addClass('col1-header-no-border');
        j$('.micro .col2span.main-header.no-border').addClass('col2-header-no-border');
        j$('.micro .col3span.main-header.no-border').addClass('col3-header-no-border');
        j$('.micro .col4span.main-header.no-border').addClass('col4-header-no-border');
        j$('.micro .col5span.main-header.no-border').addClass('col5-header-no-border');
    }

    // microsite submenu
    if ($('.micro .main-header .menu-bar').length) {
        $('.micro .main-header .menu-bar ul').find('li:first').addClass('first');
    }

    if ($('.shortcuts').length && GetSwfVer() != -1) {
        $('.shortcuts').each(function () {
            if ($('embed').length) {
                var width = $(this).parent(':first').find('embed').attr('width');
            }
            else {
                var width = $(this).parent(':first').find('object').attr('width');
            }
            $(this).css('width', (width) + 'px');
        });
    }
    setOptgroups();
    $("form.jqtransform").jqTransform();
    if (($.browser.msie && (parseInt($.browser.version.substr(0, 2)) < 7)) && $('.phonenumber.left').length) {
        $('.phonenumber.left').addClass('no-right-margin');
    }
    if (($.browser.msie && (parseInt($.browser.version.substr(0, 2)) < 7)) && $('.phonenumber').length) {
        $('.phonenumber').find('.jqTransformInputWrapper:last').css('width', '107px');
    }
    $('.subselect').hide();
    if (j$('div.single-row').length) {
        var singleHeight = j$('div.single-row').find('.content .innerframe').height();
        j$('div.single-row').find('.content .innerframe').data('height', singleHeight);
        j$('div.single-row').find('.content .innerframe').css({ 'height': '1px', 'position': 'static' }).hide();
    }

    //-------------------------------------------
    // Accordeon
    //-------------------------------------------
    if (j$("div.accdsection.single-row").length) {
        j$("div.accdsection.single-row div.heading").addClass('single');
    }

    var ACChildAll = j$("div.accdsection div.innerframe");
    var ACHeaderAll = j$("div.accdsection div.heading");
    var ACHeaderinner = j$("div.accdsection div.heading div.innerblock");

	j$(ACChildAll).each(function () { 
	if(j$(this).find(".homepagenewsfeed") == null)
	  {
	   j$(this).css('height', j$(this).height() + 'px');
	}
	});
	
    ACChildAll.find("div.inside-box").addClass("clearfix");
    j$(ACHeaderAll).find("div.innerblock").css("cursor", "pointer");
    j$(ACHeaderAll).find(":header").css("cursor", "pointer");
    j$(ACHeaderAll).click(onACHeaderClick);
    j$(ACHeaderinner).find("a:first").keypress(onACHeaderPress);

    for (var m = 0; m < j$(ACChildAll).length; m++) {
        var ACChild = ACChildAll[m];
        if (ACChild.className.indexOf("open") > -1) {
            var ACHeader = j$(ACChild).parent().parent().find("div.heading");
            j$(ACHeader).addClass("accordion-open");
            j$(ACHeader).unbind('click', onACHeaderClick);
            j$(ACHeader).find("div.innerblock").css("cursor", "auto");
            j$(ACHeader).find("div.innerblock :header").css("cursor", "auto");
        } else {
            j$(ACChild).css("display", "none");
        }
    }

    j$(ACHeaderinner).each(function () {
        if (j$(this).parent().attr("class").indexOf("accordion-open", 0) < 0) {
            j$(this).wrapInner("<a></a>");
            j$(this).find("a:first").addClass("deconone");
            j$(this).find("a:first").css({
                display: "block",
                textDecoration: "none"
            });
            j$(this).find("a:first").attr("href", "javascript:noaction();");
        }
        j$(this).parents('.accd3span:first').append('<div class="open-bottom"></div>');
    });

    function onACHeaderClick() {
        var thisAC = j$(this).parent().parent();
        var openAC = j$(this).parent().find("div.innerframe");
        var closeAC = j$(thisAC).find("div.innerframe.open");
        var closeACHeader = j$(thisAC).find("div.accordion-open");
        var openACHeaderLink = j$(this).find("div.innerblock a:first");

        if (!j$(this).hasClass('single')) {
            j$(openACHeaderLink).before(j$(openACHeaderLink).html());
            j$(openACHeaderLink).remove();
            j$(closeACHeader).find("div.innerblock").wrapInner("<a></a>");
            j$(closeACHeader).find("div.innerblock").find("a:first").addClass("deconone");
            j$(closeACHeader).find("div.innerblock").find("a:first").css({
                display: "block",
                textDecoration: "none"
            });
            j$(closeACHeader).find("div.innerblock").find("a:first").attr("href", "javascript:noaction();");
            j$(closeAC).removeClass("open");
            j$(openAC).addClass("open");
            j$(thisAC).find("div.accordion-open").removeClass("accordion-open");
            j$(this).addClass("accordion-open");

            if (ua.indexOf("MSIE 8", 0) >= 0) {
                j$(openAC).css("overflow", "hidden");
            }

            j$(closeACHeader).click(onACHeaderClick);
            j$(this).unbind('click', onACHeaderClick);
            j$(openAC).slideDown(300, onACEnd);
            j$(closeAC).slideUp(300);

            j$(this).find("div.innerblock").css("cursor", "auto");
            j$(this).find(":header").css("cursor", "auto");
            j$(closeACHeader).find("div.innerblock").css("cursor", "pointer");
            j$(closeACHeader).find(":header").css("cursor", "pointer");
        }
        else {
            if (ua.indexOf("MSIE 8", 0) >= 0) {
                j$(openAC).css("overflow", "hidden");
            }
            if (j$(thisAC).hasClass('open')) {
                j$(openAC).css({
                  'height' : j$(openAC).css('min-height'),
                  'min-height' : '1px'
                });
                j$(openAC).css('position', 'relative').stop().animate({ height: '1px' }, 300, function () {
                    $(this).hide();
                    j$(thisAC).removeClass('open').find('.heading').css('min-height','38px').find('h2');
                    j$(thisAC).find('.accd-bottom').show();
                });
                j$(thisAC).find('.open-bottom').animate({ opacity: 0 }, 300, function () { $(this).hide(); });
                j$(thisAC).find('.heading h2').removeClass('open').addClass('closed');
            }
            else {
                j$(openAC).css('position', 'relative').stop().animate({ height: singleHeight + 'px' }, 300, function () {
                    $(this).css({
                      'height' : 'auto',
                      'min-height' : singleHeight + 'px',
                      'overflow' : 'visible'
                    });
                    $(this).find('div.formwrapper, div.innerblock, .jqtransform').css('overflow','visible');
                    $(this).find('div').css('overflow', 'visible');
                });
                j$(thisAC).addClass('open').find('.heading').css('min-height','43px').find('h2');
                j$(thisAC).find('.heading h2').removeClass('closed').addClass('open');
                j$(thisAC).find('.accd-bottom').hide();
                j$(thisAC).find('.open-bottom').show().animate({ opacity: 1 }, 1);
            }
        }
        return false;
    }

    function onACHeaderPress() {
        onACHeaderClick;
    }

    function onACEnd() {
        if (ua.indexOf("MSIE 8", 0) >= 0) {
            j$(this).css("overflow", "auto");
        }
    }
});

/* focusflag for the videoplayer */
var focused = false;
/* store focus to return from fullscreen */
var currentFocus;

var addthisboxinitialized = false;
var useHtml5 = false;
/* on load */
j$(document).ready(function (e) {
    if (j$.browser.msie) {
        $('body').addClass('ie');
    }

    //------- check for contentfilter elements -----
    if (j$('.contentfilter').length > 0) {
        j$('.contentfilter').contentfilter();
    }

    //--------- now check for single row accordeon -------
    if (j$('.single-row').length) {
        if (typeof DD_belatedPNG != 'undefined' && j$.browser.msie) {
            DD_belatedPNG.fix('.accd-bottom, .open-bottom');
        }
    }

    //--------- now check for thumbnail slideshow -------
    if (j$('.thumbnail-slideshow-banner').length) {
        if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 2)) < 9))) {
            j$('.thumbnail-slideshow-banner').pngFix();
        }
        j$('.thumbnail-slideshow-banner').thumbSlide();
    }

    if (j$('div.response, div.no-space').length) {
        if ((j$.browser.msie && (parseInt(j$.browser.version.substr(0, 2)) < 8))) {
            j$('div.response, div.no-space').pngFix();
        }
    }

    if (j$('div.bannercontent').length && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
        j$('div.bannercontent div.response, div.bannercontent div.no-space').each(function () {
            var height = j$(this).height();
            j$(this).find('span').css('marginTop', ((height - j$(this).find('img').height()) / 2) + 'px');
        });
    }

    //--------- now check for checkbox groups and sort them -------
    if (j$('.checkbox-wrapper').length) {
        j$('.checkbox-wrapper').sortCheckboxes();
    }

    if (j$('.productlistings img').length) {
        if (typeof DD_belatedPNG != 'undefined' && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
            DD_belatedPNG.fix('.productlistings img');
        }
    }

    //--------- now check for bullet slideshow -------
    if (j$('.bullet-slideshow-banner').length) {
        if (typeof DD_belatedPNG != 'undefined' && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
            DD_belatedPNG.fix('.bullet-slideshow-banner ul, .bullet-slideshow-banner div');
        }
        j$('.bullet-slideshow-banner').bulletSlide(8000);
        j$('.bullet-slideshow-banner div.slideshow-images a').attr('tabindex', '-1');
    }

    if (j$('.imageslide-banner').length) {
        if (typeof DD_belatedPNG != 'undefined' && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
            DD_belatedPNG.fix('.imageslide-thumb-wrapper div.slide img');
        }
        j$('.imageslide-banner').imageSlide(8000);
        j$('.imageslide-banner div.slide-images a').attr('tabindex', '-1');
    }
    //------------------------------------------

    if (j$('table.products').length) {
        var ie = j$.browser;
        if (typeof DD_belatedPNG != 'undefined' && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
            DD_belatedPNG.fix('table.products .bottom, table.products .top, .star-rating, .star-rating img');
        }
    }

    if (j$('.vendor-logo-container').length && (j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
        j$('.vendor-logo-container ul, .vendor-logo-container ul li, .vendor-logo-container ul li img').pngFix();
        j$('.vendor-logo-container ul li span').each(function () {
            var height = $(this).height();
            $(this).css('marginTop', (($(this).parents('li:first').height() - height) / 2) + 'px');
        });
    }

    if (j$('.vendor-logo-container').length && (j$.browser.msie && j$.browser.version.substr(0, 1) == '7')) {
        j$('.vendor-logo-container ul, .vendor-logo-container ul li, .vendor-logo-container ul li img').load(function () {
            j$(this).css('marginTop', ((j$(this).parents('li:first').height() - j$(this).height()) / 2) + 'px');
            return false;
        }).each(function () {
            if (this.complete && this.naturalWidth !== 0) {
                j$(this).trigger('load');
            }
        });
    }

    if (useHtml5) {
        if (j$('.video-js-box').length) {
            if (supports_video()) {
                var fallback = (j$.browser.msie) ? ['flash', 'html5'] : ['html5', 'flash'];
                VideoJS.setupAllWhenReady({
                    controlsHiding: false,
                    controlsBelow: true,
                    controlsAtStart: true,
                    flashVersion: 10,
                    linksHiding: true,
                    playerFallbackOrder: fallback
                });
            }
            j$('.video-js-box').each(function () {
                focused = true;
                var $shortcut = $(this).next('.shortcuts:first');
                var $link = $shortcut.find('a');
                var flash = false;
                if (supports_video()) {
                    var $video = $(this).find('video');
                }
                else {
                    var $video = $(this).find('object');
                    flash = true;
                }
                $video.find('*').attr('tabindex', '-1');
                $link.focus(function () {
                    $link.addClass('show');
                    $shortcut.find('div').addClass('show');
                    $(document).unbind('keydown');
                    playerKeyEvents($video, flash);
                });
                $link.blur(function () {
                    $link.removeClass('show');
                    $shortcut.find('div').removeClass('show');
                    $(document).unbind('keydown');
                })
            });
        }
    }
    else {
        if ($('body, html').find('embed').length) {
            var obj = 'embed';
        }
        if ($('body, html').find('object').length) {
            var obj = 'object';
        }
        $(obj).each(function () {
            if ($(this).attr('allowfullscreen')) {
                //focus/click on flash
                $(this).bind('click focus',function(e){
                    if ($.browser.msie) {
                        //ie: key-events are managed by the flashplayer
                        $(this).keydown(function (e) {
                            return false;
                        });
                        $(this).keyup(function (e) {
                            return false;
                        });
                    } else {
                        //NOT ie: key-events (shift) is managed by JS
                        $(this).keydown(function (e) {
                            if (e.keyCode == 16) {
                                document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('setShiftFocus');
                            }
                        });
                        $(this).keyup(function (e) {
                            if (e.keyCode == 16) {
                                document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeShiftFocus');
                            } else if (e.shiftKey) {
                                document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('setShiftFocus');
                            } else {
                                document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeShiftFocus');
                            }
                        });
                    }

                    $('div.shortcuts').removeClass('show').find('a').removeClass('show').parents('div.shortcuts').find('ul').removeClass('show');
                    if ($(this).parent().get(0).tagName == 'LI' || $(this).parent().get(0).tagName == 'li') {
                        $shortcuts = $(this).parents('.multimedia-banner:first').next('div.shortcuts');
                        $shortcuts.addClass('show').find('a').addClass('show').parents('div.shortcuts:first').find('ul').addClass('show');
                    } else {
                        $shortcuts = $(this).parents(':first').find('div.shortcuts');
                        $shortcuts.addClass('show').find('a').addClass('show').parents('div.shortcuts:first').find('ul').addClass('show');
                        $shortcuts.data('height', $shortcuts.height());
                    }
                    if(!$(this).hasClass('focus')) {
                      $(this).addClass('focus');
                    checkShortcutContainerHeight($shortcuts);
                    }
                });
                var _self = $(this);
				var $shortCuts;
				
				if (typeof $(this).next().get(0) !== "undefined") 
					$shortCuts = ($(this).next().get(0).tagName == 'noscript' || $(this).next().get(0).tagName == 'NOSCRIPT') ?  $(this).next().next() : $(this).next();
				else 
					$shortCuts = $(this).next();

                //blur on flash
                $(this).blur(function () {
                  $(this).removeClass('focus');
                  if($shortCuts.find('a').hasClass('show')) {
                    $(this).unbind('keyup, keydown');
                    document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeShiftFocus');
                    document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeFocus');
                    $('div.shortcuts').removeClass('show').find('a').removeClass('show').parents('div.shortcuts').find('ul').removeClass('show');
                    $shortcuts = $(this).parents(':first').find('div.shortcuts');
                    checkShortcutContainerHeight($shortcuts);
                  }
                });

                flashObject = _self;
                flashObject.attr('tabindex', '-1');
                flashObject.data('player', true);
                $shortCuts.find('a').focus(function (e) {
                    var tabables = $("a[tabindex != '-1']");
                    var index = tabables.index(_self.parents(':first').find('div.shortcuts a'));
                    flashObject.data('index', index);
                    _self.focus();
                }).mousedown(function(e){
                  e.preventDefault();
                  _self.blur();
                  return false;
                }).click(function(){
                  return false;
                });

            }
        });
        $('a').bind('focus, click', function () {
            $('div.shortcuts').removeClass('show').find('a').removeClass('show').parents('div.shortcuts').find('ul').removeClass('show');
        });
    }
    Activate_countryselector_action();
    Activate_megadropdown_action();
});

function checkShortcutContainerHeight(shortcuts) {
  if(!$.browser.msie || ($.browser.msie && $.browser.version.substr(0, 1) != '6')) {
    if(shortcuts.parents('.accdsection:first').length) {
      var $frame = shortcuts.parents('div.innerframe:first');
      if(!$frame.data('height')) {
        $frame.data('height', $frame.height());
      }
    var height = shortcuts.data('height');
      if($frame.height() == $frame.data('height')) {
      $frame.css('height', ($frame.height() + height));
    }
    else {
        $frame.css('height', $frame.data('height') + 'px');
      }
    }
  }
}

function supports_video() {
    if (useHtml5) {
        return !!document.createElement('video').canPlayType;
    }
}

function resetFocus() {
    if (useHtml5) {
        if (!supports_video()) {
            
        }
        else
            if (focused) {
                j$('.bannercontent').show();
                var pos = focused.offset();
                $(window).scrollTop(pos.top);
                focused.find('.shortcuts a').focus();
            }
    }
}

function playerKeyEvents(obj, flash) {
    if (useHtml5) {
        if (!flash) {
            var $player = obj.get(0).player;
        }
        else {
            var id = obj.attr('name');
        }
        $(document).keydown(function (event) {
            if (obj || flash) {
                switch (event.keyCode) {
                    case 32:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('play');
                        }
                        else {
                            $player.video.paused ? $player.video.play() : $player.video.pause();
                        }
                        event.preventDefault();
                        break;
                    case 37:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('seekBackward');
                        }
                        else {
                            $player.showControlBars();
                            $player.video.currentTime = $player.video.currentTime - 5;
                        }
                        event.preventDefault();
                        break;
                    case 38:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('volumeUp');
                        }
                        else {
                            event.preventDefault();
                            $player.showControlBars();
                            $player.volume($player.video.volume + 0.1);
                        }
                        break;
                    case 39:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('seekForward');
                        }
                        else {
                            $player.showControlBars();
                            $player.video.currentTime = $player.video.currentTime + 5;
                        }
                        event.preventDefault();
                        break;
                    case 40:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('volumeDown');
                        }
                        else {
                            event.preventDefault();
                            $player.showControlBars();
                            $player.volume($player.video.volume - 0.1);
                        }
                        break;
                    case 70:
                        if (!$player.videoIsFullScreen && !flash) {
                            j$('.bannercontent').hide();
                            $player.enterFullWindow();
                            j$('.esc-text').css({
                                'display': 'block',
                                'opacity': '1'
                            }).animate({ opacity: 1 }, 1000, function () {
                                j$(this).animate({ opacity: 0 }, 2000);
                            });
                        }
                        event.preventDefault();
                        break;
                    case 83:
                        if (flash) {
                            document.getElementsByName(id)[0].executePlayerCommand('toggleSubtitles');
                        }
                        else {
                            if (j$('div.vjs-subtitles').css('display') == 'none') {
                                j$('div.vjs-subtitles').show();
                                j$('div.vjs-subtitle-control').addClass('sub-active');
                            }
                            else {
                                j$('div.vjs-subtitles').hide();
                                j$('div.vjs-subtitle-control').removeClass('sub-active');
                            }
                        }
                        event.preventDefault();
                        break;
                    default: break;
                };
            }
        });
    }
}

/* js2 banner - imageslider */
(function ($) {
    $.fn.imageSlide = function (time) {
        if (!time) { var time = 8000; }
        this.each(function () {
            var $wrapper = $(this);
            var cont_height = $wrapper.find('div.slide-images').height();
            $wrapper.find('div.slide-images a img').each(function () {
                var img_width = $(this).width();
                var img_height = $(this).height();
                if (img_width <= 420) {
                    $(this).css('right', ((420 - img_width) / 2) + 'px');
                    $(this).css('top', ((cont_height - img_height) / 2) + 'px');
                }
                else {
                    $(this).css('right', '0px');
                }
            });
            var width = $wrapper.find('div.slide-images').width() / $wrapper.find('div.slide').length;
            var count = 0;
            var timer = window.setInterval(function () { changeSlider(count); }, time);
            $wrapper.find('div.slider, div.slide').css('width', width + 'px');
            $wrapper.find('div.slide a').bind('focus mouseenter', function () {
                window.clearInterval(timer);
                $wrapper.find('div.slider2').remove();
                count = $wrapper.find("div.slide").index($(this).parent());
                var pos = $(this).parent().position();
                $wrapper.find('div.slide').removeClass('active').eq(count).addClass('active');
                $wrapper.find('.slider1').stop(true).animate({ left: pos.left + 'px' }, 200);
                if ($.browser.msie) { correctWidth(count); }
                changeImage(count);
            });
            $wrapper.find('div.slide a').blur(function () { startTimer(); });
            $wrapper.find('.imageslide-thumb-wrapper').mouseleave(function () { startTimer(); });
            function startTimer() { timer = window.setInterval(function () { changeSlider(count); }, time); }

            function changeSlider(i) {
                if (count == ($wrapper.find('div.slide').length - 1)) {
                    var $obj = $wrapper.find('div.slider1').clone();
                    $obj.addClass('slider2').removeClass('slider1');
                    $wrapper.find('.imageslide-thumb-wrapper').append($obj);
                    $wrapper.find('div.slider2').css('left', '-' + width + 'px');
                }
                $wrapper.find('div.slider').stop(true).animate({ left: '+=' + width }, 200, function () {
                    if ($.browser.msie) { correctWidth(count); }
                    if (count == $wrapper.find('div.slide').length) {
                        $wrapper.find('div.slider1').remove();
                        $wrapper.find('div.slider2').addClass('slider1').removeClass('slider2');
                        count = 0;
                    }
                });
                var t = (count == ($wrapper.find('div.slide').length - 1) ? 0 : (count + 1));
                $wrapper.find('div.slide').removeClass('active').eq(t).addClass('active');
                changeImage(t);
                count++;
            }
            function correctWidth(i) {
                if (i == ($wrapper.find('div.slide').length - 1)) {
                    $wrapper.find('div.slider1').css({ 'width': (width + (4 - $wrapper.find('div.slide').length)) + 'px' });
                }
                else {
                    $wrapper.find('div.slider1').css({ 'width': width + 'px' });
                }
            }
            function changeImage(i) {
                $wrapper.find('div.slide-images a:not(:nth-child(' + (i + 1) + '))').css('zIndex', '399');
                $wrapper.find('div.slide-images a:nth-child(' + (i + 1) + ')').css('zIndex', '400').stop(true).animate({ opacity: 1 }, 150, function () {
                    $wrapper.find('div.slide-images a:not(:nth-child(' + (i + 1) + '))').css({ 'zIndex': '1', 'opacity': '0' });
                });
            }
        });
    };
})(jQuery);

/* ------- Form functions ---------- */
$(document).ready(function (e) {

    //Enable validation
    $('form.validate').validate({
        //We don't want any labels to be shown
        errorPlacement: function (error, element) {
        },
        debug: false,
        highlight: function (element, errorClass, validClass) {
            $wrapper = $(element).parents('div:first');
            $wrapper.find('img.error').remove();
            if ($wrapper.hasClass('jqTransformSelectWrapper') || $wrapper.children('textarea').length) {
                $wrapper.css('position', 'relative');
                if (element.type == 'radio') {
              		$wrapper.prevAll('.form-label:first').addClass('form-label-error').append('<img class="error" src="//www.fujitsu.com/us/resources/design/stylesheets/images/error.gif" alt="Error" width="21" height="19" />');
                }
                else {
              		$wrapper.append('<img class="error" src="//www.fujitsu.com/us/resources/design/stylesheets/images/error.gif" alt="Error" width="21" height="19" />');
                }
            }
            $(element).parents('.form-field:first').addClass(errorClass).removeClass(validClass);
        },
        unhighlight: function (element, errorClass, validClass) {
            $wrapper = $(element).parents('div:first');
            if (element.type == 'radio') {
                $wrapper.prevAll('.form-label:first').removeClass('form-label-error').find('img.error').remove();
            }
            else {
                $wrapper.find('img.error').remove();
            }
            $(element).parents('.form-field:first').removeClass(errorClass).addClass(validClass);
        },
        showErrors: function (errorMap, errorList) {
            var $form = this.currentForm;
            var $el = $('.validation-messages', $form);
            var message = '';
            if (this.numberOfInvalids() > 0) {
                message = 'Please fill out the required fields.';
            }
            this.defaultShowErrors();
            setValidationMessage($el, message);
        }
    });

    $('form li.main-cat input[type="checkbox"]').each(function () {
        checkSelection($(this));
    });

    $('form li.main-cat input[type="checkbox"]').change(function () {
        checkSelection($(this));
    });

    $('form li.sub-cat a').click(function () {
        //look for main cat
        var $wrapper = $(this).parents('ul').eq(1);
        //find main cat checkbox
        var $main = $wrapper.find('li.main-cat input[type="checkbox"]');

        //is it checked?
        if (!$main.is(':checked')) {
            var $input = $(this).next('input[type="checkbox"]');
            //trigger the changes for main & subcat
            $main.trigger('click').trigger('change');
            $input.trigger('click').trigger("change");
        }
    });

    $('form.validate select').each(function () {
        $(this).prev('ul:first').find('a').bind('click keyup', function () {
            if ($(this).parents('ul:first').next('select').hasClass('error')) {
                $('form.validate').validate().form();
            }
        });
    });

    // add tooltip 
    $('label.tooltip').tooltip();

    $('.toggle-radios input').change(function () {
        var $radio = $(this);
        var $wrapper = $radio.parents('.toggle-radios:first');
        var $container = $('.toggle-content.toggle-' + $radio.val());
        if ($radio.is(':checked')) {
            $('input, select', $container).each(function () {
                if ($(this).data('required')) {
                    $(this).addClass('required');
                }
            })
            $container.show();
        }
        else {
            $container.hide();
            $('input.required, select.required', $container).data('required', true);
            $('input.required, select.required', $container).removeClass('required');
        }
    });

    if ($('input[value=private]').is(':checked')) {
        $('input[value=business]').change();
    }

    if ($('.toggle-content').length) {
        $('.toggle-content').hide();
        var id = $('input[type="radio"]:checked').val();
        if ($('.toggle-' + id).length) {
            $('.toggle-' + id).show();
        }
    }

    if ($('#business-box').length) {
        $('input[name=client]').click(function () {
            if ($('input[value=business]').is(':checked')) {
                $('#industry').addClass('required');
                $('#business-box').slideDown(500);
            }
            else {
                $('#business-box').slideUp(500);
                $('#industry').removeClass('required');
            }
        });
    }

    // ----- ie select focus ----- //
    if ($('.jqTransformSelectWrapper').length) {
        $('.jqTransformSelectWrapper ul li a').focus(function () {
            $(this).addClass('lightgrey');
        });
        $('.jqTransformSelectWrapper ul li a').blur(function () {
            $(this).removeClass('lightgrey');
        });
    }

    if ($('.normal-text').length) {
        $('.normal-text').each(function () {
            if (!$(this).html().length) {
                $el = $(this).clone(true);
                $(this).parents('.form-field:first').prepend($el);
                $(this).remove();
            }
        });
    }

    //--- set teaserbox header height---
    var tCols = 3;
    if ($('#bodyarea').hasClass('body4span') || $('#bodyarea').hasClass('body4span-noleftnav')) {
        tCols = 4;
    }
    if ($('#bodyarea').hasClass('body5span')) {
        tCols = 5;
    }

    if ($('div.teaser div.teaser-container h2').length) {
        var tHeight = 25;
        var count = 0;
        $('div.teaser div.teaser-container h2 a span').each(function (i) {
            count++;
            if ($(this).height() >= tHeight) {
                var row = parseInt(i / tCols);
                tHeight = $(this).height();
                for (a = 0; a < tCols; a++) {
                    $('div.teaser div.teaser-container h2 a span:eq(' + (a + (row * tCols)) + ')').css('height', (tHeight) + 'px');
                }
            }

            if (count == tCols) {
                count = 0;
            }
        });
    }

    //--- set bannerelement header height---
    var bCols = 2;
    if ($('#bodyarea').hasClass('body5span')) {
        bCols = 3;
    }

    if ($('div.bannerelement h2').length) {
        var bHeight = 25;
        var count = 0;
        $('div.bannerelement h2 a span').each(function (i) {
            count++;
            if ($(this).height() >= bHeight) {
                var row = parseInt(i / bCols);
                bHeight = $(this).height();
                for (a = 0; a < bCols; a++) {
                    $('div.bannerelement h2 a span:eq(' + (a + (row * bCols)) + ')').css('height', (bHeight) + 'px');
                }
            }

            if (count == bCols) {
                count = 0;
            }
        });
    }
});

function checkSelection($cb) {
    var $main_cat = $cb.parents('li:first');
    var $sub_cat = $main_cat.nextAll('li.sub-cat:first');
    if ($cb.is(':checked')) {
        $sub_cat.removeClass('disabled');
        $('input', $sub_cat).removeAttr('disabled').removeClass('disabled');
    }
    else {
        $sub_cat.addClass('disabled');
        $('input', $sub_cat).attr('checked', false).attr('disabled', 'disabled').addClass('disabled');
        $('input', $sub_cat).trigger('change');
    }
}

function setValidationMessage($el, message) {
    if (message) {
        message = "<span>" + message + "</span>";
    }
    $el.html(message);
}

/* add tooltip */
(function ($) {
    $.fn.tooltip = function () {
    	var imageSrc = '//www.fujitsu.com/us/resources/design/stylesheets/images/icons/info-icon.gif';
        this.each(function () {
            var tooltip = '<a href="#"><img class="bordernone tooltip-img" src="' + imageSrc + '" alt="' + $(this).attr('title') + '" width="10" height="10" /></a>';
            $(this).html($(this).html() + ' ' + tooltip).removeAttr('title');

            $('a', this).bind('mouseenter focus', function () {
                var pos = $(this).offset();
                $('#helptext').html($(':first', this).attr('alt'));
                $('#tooltip').css({ 'top': (pos.top - $('#tooltip').height() - 10), 'left': (pos.left + 5) }).fadeIn(300);
            });
            $('a', this).bind('mouseleave blur', function () {
                $('#tooltip').fadeOut(300);
            });
        });

    };
})(jQuery);

/* --- jq validate --- */
/**
* jQuery Validation Plugin 1.8.1
*
* http://bassistance.de/jquery-plugins/jquery-plugin-validation/
* http://docs.jquery.com/Plugins/Validation
*
* Copyright (c) 2006 - 2011 JÃƒÆ’Ã‚Â¶rn Zaefferer
*
* Dual licensed under the MIT and GPL licenses:
*   http://www.opensource.org/licenses/mit-license.php
*   http://www.gnu.org/licenses/gpl.html
*/

(function ($) {
    $.extend($.fn, {
        // http://docs.jquery.com/Plugins/Validation/validate
        validate: function (options) {
            // if nothing is selected, return nothing; can't chain anyway
            if (!this.length) {
                options && options.debug && window.console && console.warn("nothing selected, can't validate, returning nothing");
                return;
            }

            // check if a validator for this form was already created
            var validator = $.data(this[0], 'validator');
            if (validator) {
                return validator;
            }

            validator = new $.validator(options, this[0]);
            $.data(this[0], 'validator', validator);

            if (validator.settings.onsubmit) {

                // allow suppresing validation by adding a cancel class to the submit button
                this.find("input, button").filter(".cancel").click(function () {
                    validator.cancelSubmit = true;
                });

                // when a submitHandler is used, capture the submitting button
                if (validator.settings.submitHandler) {
                    this.find("input, button").filter(":submit").click(function () {
                        validator.submitButton = this;
                    });
                }

                // validate the form on submit
                this.submit(function (event) {
                    if (validator.settings.debug)
                    // prevent form submit to be able to see console output
                        event.preventDefault();

                    function handle() {
                        if (validator.settings.submitHandler) {
                            if (validator.submitButton) {
                                // insert a hidden input as a replacement for the missing submit button
                                var hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);
                            }
                            validator.settings.submitHandler.call(validator, validator.currentForm);
                            if (validator.submitButton) {
                                // and clean up afterwards; thanks to no-block-scope, hidden can be referenced
                                hidden.remove();
                            }
                            return false;
                        }
                        return true;
                    }

                    // prevent submit for invalid forms or custom submit handlers
                    if (validator.cancelSubmit) {
                        validator.cancelSubmit = false;
                        return handle();
                    }
                    if (validator.form()) {
                        if (validator.pendingRequest) {
                            validator.formSubmitted = true;
                            return false;
                        }
                        return handle();
                    } else {
                        validator.focusInvalid();
                        return false;
                    }
                });
            }

            return validator;
        },
        // http://docs.jquery.com/Plugins/Validation/valid
        valid: function () {
            if ($(this[0]).is('form')) {
                return this.validate().form();
            } else {
                var valid = true;
                var validator = $(this[0].form).validate();
                this.each(function () {
                    valid &= validator.element(this);
                });
                return valid;
            }
        },
        // attributes: space seperated list of attributes to retrieve and remove
        removeAttrs: function (attributes) {
            var result = {},
      $element = this;
            $.each(attributes.split(/\s/), function (index, value) {
                result[value] = $element.attr(value);
                $element.removeAttr(value);
            });
            return result;
        },
        // http://docs.jquery.com/Plugins/Validation/rules
        rules: function (command, argument) {
            var element = this[0];

            if (command) {
                var settings = $.data(element.form, 'validator').settings;
                var staticRules = settings.rules;
                var existingRules = $.validator.staticRules(element);
                switch (command) {
                    case "add":
                        $.extend(existingRules, $.validator.normalizeRule(argument));
                        staticRules[element.name] = existingRules;
                        if (argument.messages)
                            settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);
                        break;
                    case "remove":
                        if (!argument) {
                            delete staticRules[element.name];
                            return existingRules;
                        }
                        var filtered = {};
                        $.each(argument.split(/\s/), function (index, method) {
                            filtered[method] = existingRules[method];
                            delete existingRules[method];
                        });
                        return filtered;
                }
            }

            var data = $.validator.normalizeRules(
    $.extend(
      {},
      $.validator.metadataRules(element),
      $.validator.classRules(element),
      $.validator.attributeRules(element),
      $.validator.staticRules(element)
    ), element);

            // make sure required is at front
            if (data.required) {
                var param = data.required;
                delete data.required;
                data = $.extend({ required: param }, data);
            }

            return data;
        }
    });

    // Custom selectors
    $.extend($.expr[":"], {
        // http://docs.jquery.com/Plugins/Validation/blank
        blank: function (a) { return !$.trim("" + a.value); },
        // http://docs.jquery.com/Plugins/Validation/filled
        filled: function (a) { return !!$.trim("" + a.value); },
        // http://docs.jquery.com/Plugins/Validation/unchecked
        unchecked: function (a) { return !a.checked; }
    });

    // constructor for validator
    $.validator = function (options, form) {
        this.settings = $.extend(true, {}, $.validator.defaults, options);
        this.currentForm = form;
        this.init();
    };

    $.validator.format = function (source, params) {
        if (arguments.length == 1)
            return function () {
                var args = $.makeArray(arguments);
                args.unshift(source);
                return $.validator.format.apply(this, args);
            };
        if (arguments.length > 2 && params.constructor != Array) {
            params = $.makeArray(arguments).slice(1);
        }
        if (params.constructor != Array) {
            params = [params];
        }
        $.each(params, function (i, n) {
            source = source.replace(new RegExp("\\{" + i + "\\}", "g"), n);
        });
        return source;
    };

    $.extend($.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusInvalid: true,
            errorContainer: $([]),
            errorLabelContainer: $([]),
            onsubmit: true,
            ignore: [],
            ignoreTitle: false,
            onfocusin: function (element) {
                this.lastActive = element;

                // hide error label and remove error class on focus if enabled
                if (this.settings.focusCleanup && !this.blockFocusCleanup) {
                    this.settings.unhighlight && this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
                    this.addWrapper(this.errorsFor(element)).hide();
                }
            },
            onfocusout: function (element) {
                if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {
                    this.element(element);
                }
            },
            onkeyup: function (element) {
                if (element.name in this.submitted || element == this.lastElement) {
                    this.element(element);
                }
            },
            onclick: function (element) {
                // click on selects, radiobuttons and checkboxes
                if (element.name in this.submitted)
                    this.element(element);
                // or option elements, check parent select in that case
                else if (element.parentNode.name in this.submitted)
                    this.element(element.parentNode);
            },
            highlight: function (element, errorClass, validClass) {
                if (element.type === 'radio') {
                    this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                } else {
                    $(element).addClass(errorClass).removeClass(validClass);
                }
            },
            unhighlight: function (element, errorClass, validClass) {
                if (element.type === 'radio') {
                    this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                } else {
                    $(element).removeClass(errorClass).addClass(validClass);
                }
            }
        },

        // http://docs.jquery.com/Plugins/Validation/Validator/setDefaults
        setDefaults: function (settings) {
            $.extend($.validator.defaults, settings);
        },

        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            accept: "Please enter a value with a valid extension.",
            maxlength: $.validator.format("Please enter no more than {0} characters."),
            minlength: $.validator.format("Please enter at least {0} characters."),
            rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $.validator.format("Please enter a value between {0} and {1}."),
            max: $.validator.format("Please enter a value less than or equal to {0}."),
            min: $.validator.format("Please enter a value greater than or equal to {0}.")
        },

        autoCreateRanges: false,

        prototype: {
            init: function () {
                this.labelContainer = $(this.settings.errorLabelContainer);
                this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);
                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();

                var groups = (this.groups = {});
                $.each(this.settings.groups, function (key, value) {
                    $.each(value.split(/\s/), function (index, name) {
                        groups[name] = key;
                    });
                });
                var rules = this.settings.rules;
                $.each(rules, function (key, value) {
                    rules[key] = $.validator.normalizeRule(value);
                });

                function delegate(event) {
                    var validator = $.data(this[0].form, "validator"),
          eventType = "on" + event.type.replace(/^validate/, "");
                    validator.settings[eventType] && validator.settings[eventType].call(validator, this[0]);
                }
                $(this.currentForm)
        .validateDelegate(":text, :password, :file, select, textarea", "focusin focusout keyup", delegate)
        .validateDelegate(":radio, :checkbox, select, option", "click", delegate);

                if (this.settings.invalidHandler)
                    $(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
            },

            // http://docs.jquery.com/Plugins/Validation/Validator/form
            form: function () {
                this.checkForm();
                $.extend(this.submitted, this.errorMap);
                this.invalid = $.extend({}, this.errorMap);
                if (!this.valid())
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                this.showErrors();
                return this.valid();
            },

            checkForm: function () {
                this.prepareForm();
                for (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) {
                    this.check(elements[i]);
                }
                return this.valid();
            },

            // http://docs.jquery.com/Plugins/Validation/Validator/element
            element: function (element) {
                element = this.clean(element);
                this.lastElement = element;
                this.prepareElement(element);
                this.currentElements = $(element);
                var result = this.check(element);
                if (result) {
                    delete this.invalid[element.name];
                } else {
                    this.invalid[element.name] = true;
                }
                if (!this.numberOfInvalids()) {
                    // Hide error containers on last error
                    this.toHide = this.toHide.add(this.containers);
                }
                this.showErrors();
                return result;
            },

            // http://docs.jquery.com/Plugins/Validation/Validator/showErrors
            showErrors: function (errors) {
                if (errors) {
                    // add items to error list and map
                    $.extend(this.errorMap, errors);
                    this.errorList = [];
                    for (var name in errors) {
                        this.errorList.push({
                            message: errors[name],
                            element: this.findByName(name)[0]
                        });
                    }
                    // remove items from success list
                    this.successList = $.grep(this.successList, function (element) {
                        return !(element.name in errors);
                    });
                }
                this.settings.showErrors
        ? this.settings.showErrors.call(this, this.errorMap, this.errorList)
        : this.defaultShowErrors();
            },

            // http://docs.jquery.com/Plugins/Validation/Validator/resetForm
            resetForm: function () {
                if ($.fn.resetForm)
                    $(this.currentForm).resetForm();
                this.submitted = {};
                this.prepareForm();
                this.hideErrors();
                this.elements().removeClass(this.settings.errorClass);
            },

            numberOfInvalids: function () {
                return this.objectLength(this.invalid);
            },

            objectLength: function (obj) {
                var count = 0;
                for (var i in obj)
                    count++;
                return count;
            },

            hideErrors: function () {
                this.addWrapper(this.toHide).hide();
            },

            valid: function () {
                return this.size() == 0;
            },

            size: function () {
                return this.errorList.length;
            },

            focusInvalid: function () {
                if (this.settings.focusInvalid) {
                    try {
                        $(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])
          .filter(":visible")
          .focus()
                        // manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
          .trigger("focusin");
                    } catch (e) {
                        // ignore IE throwing errors when focusing hidden elements
                    }
                }
            },

            findLastActive: function () {
                var lastActive = this.lastActive;
                return lastActive && $.grep(this.errorList, function (n) {
                    return n.element.name == lastActive.name;
                }).length == 1 && lastActive;
            },

            elements: function () {
                var validator = this,
        rulesCache = {};

                // select all valid inputs inside the form (no submit or reset buttons)
                return $(this.currentForm)
      .find("input, select, textarea")
      .not(":submit, :reset, :image, [disabled]")
      .not(this.settings.ignore)
      .filter(function () {
          !this.name && validator.settings.debug && window.console && console.error("%o has no name assigned", this);

          // select only the first element for each name, and only those with rules specified
          if (this.name in rulesCache || !validator.objectLength($(this).rules()))
              return false;

          rulesCache[this.name] = true;
          return true;
      });
            },

            clean: function (selector) {
                return $(selector)[0];
            },

            errors: function () {
                return $(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext);
            },

            reset: function () {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = $([]);
                this.toHide = $([]);
                this.currentElements = $([]);
            },

            prepareForm: function () {
                this.reset();
                this.toHide = this.errors().add(this.containers);
            },

            prepareElement: function (element) {
                this.reset();
                this.toHide = this.errorsFor(element);
            },

            check: function (element) {
                element = this.clean(element);

                // if radio/checkbox, validate first element in group instead
                if (this.checkable(element)) {
                    element = this.findByName(element.name).not(this.settings.ignore)[0];
                }

                var rules = $(element).rules();
                var dependencyMismatch = false;
                for (var method in rules) {
                    var rule = { method: method, parameters: rules[method] };
                    try {
                        var result = $.validator.methods[method].call(this, element.value.replace(/\r/g, ""), element, rule.parameters);

                        // if a method indicates that the field is optional and therefore valid,
                        // don't mark it as valid when there are no other rules
                        if (result == "dependency-mismatch") {
                            dependencyMismatch = true;
                            continue;
                        }
                        dependencyMismatch = false;

                        if (result == "pending") {
                            this.toHide = this.toHide.not(this.errorsFor(element));
                            return;
                        }

                        if (!result) {
                            this.formatAndAdd(element, rule);
                            return false;
                        }
                    } catch (e) {
                        this.settings.debug && window.console && console.log("exception occured when checking element " + element.id
             + ", check the '" + rule.method + "' method", e);
                        throw e;
                    }
                }
                if (dependencyMismatch)
                    return;
                if (this.objectLength(rules))
                    this.successList.push(element);
                return true;
            },

            // return the custom message for the given element and validation method
            // specified in the element's "messages" metadata
            customMetaMessage: function (element, method) {
                if (!$.metadata)
                    return;

                var meta = this.settings.meta
        ? $(element).metadata()[this.settings.meta]
        : $(element).metadata();

                return meta && meta.messages && meta.messages[method];
            },

            // return the custom message for the given element name and validation method
            customMessage: function (name, method) {
                var m = this.settings.messages[name];
                return m && (m.constructor == String
        ? m
        : m[method]);
            },

            // return the first defined argument, allowing empty strings
            findDefined: function () {
                for (var i = 0; i < arguments.length; i++) {
                    if (arguments[i] !== undefined)
                        return arguments[i];
                }
                return undefined;
            },

            defaultMessage: function (element, method) {
                return this.findDefined(
        this.customMessage(element.name, method),
        this.customMetaMessage(element, method),
                // title is never undefined, so handle empty string as undefined
        !this.settings.ignoreTitle && element.title || undefined,
        $.validator.messages[method],
        "<strong>Warning: No message defined for " + element.name + "</strong>"
      );
            },

            formatAndAdd: function (element, rule) {
                var message = this.defaultMessage(element, rule.method),
        theregex = /\$?\{(\d+)\}/g;
                if (typeof message == "function") {
                    message = message.call(this, rule.parameters, element);
                } else if (theregex.test(message)) {
                    message = jQuery.format(message.replace(theregex, '{$1}'), rule.parameters);
                }
                this.errorList.push({
                    message: message,
                    element: element
                });

                this.errorMap[element.name] = message;
                this.submitted[element.name] = message;
            },

            addWrapper: function (toToggle) {
                if (this.settings.wrapper)
                    toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
                return toToggle;
            },

            defaultShowErrors: function () {
                for (var i = 0; this.errorList[i]; i++) {
                    var error = this.errorList[i];
                    this.settings.highlight && this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
                    this.showLabel(error.element, error.message);
                }
                if (this.errorList.length) {
                    this.toShow = this.toShow.add(this.containers);
                }
                if (this.settings.success) {
                    for (var i = 0; this.successList[i]; i++) {
                        this.showLabel(this.successList[i]);
                    }
                }
                if (this.settings.unhighlight) {
                    for (var i = 0, elements = this.validElements(); elements[i]; i++) {
                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
                    }
                }
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show();
            },

            validElements: function () {
                return this.currentElements.not(this.invalidElements());
            },

            invalidElements: function () {
                return $(this.errorList).map(function () {
                    return this.element;
                });
            },

            showLabel: function (element, message) {
                var label = this.errorsFor(element);
                if (label.length) {
                    // refresh error/success class
                    label.removeClass().addClass(this.settings.errorClass);

                    // check if we have a generated label, replace the message then
                    label.attr("generated") && label.html(message);
                } else {
                    // create label
                    label = $("<" + this.settings.errorElement + "/>")
          .attr({ "for": this.idOrName(element), generated: true })
          .addClass(this.settings.errorClass)
          .html(message || "");
                    if (this.settings.wrapper) {
                        // make sure the element is visible, even in IE
                        // actually showing the wrapped element is handled elsewhere
                        label = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
                    }
                    if (!this.labelContainer.append(label).length)
                        this.settings.errorPlacement
            ? this.settings.errorPlacement(label, $(element))
            : label.insertAfter(element);
                }
                if (!message && this.settings.success) {
                    label.text("");
                    typeof this.settings.success == "string"
          ? label.addClass(this.settings.success)
          : this.settings.success(label);
                }
                this.toShow = this.toShow.add(label);
            },

            errorsFor: function (element) {
                var name = this.idOrName(element);
                return this.errors().filter(function () {
                    return $(this).attr('for') == name;
                });
            },

            idOrName: function (element) {
                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },

            checkable: function (element) {
                return /radio|checkbox/i.test(element.type);
            },

            findByName: function (name) {
                // select by name and filter by form for performance over form.find("[name=...]")
                var form = this.currentForm;
                return $(document.getElementsByName(name)).map(function (index, element) {
                    return element.form == form && element.name == name && element || null;
                });
            },

            getLength: function (value, element) {
                switch (element.nodeName.toLowerCase()) {
                    case 'select':
                        return $("option:selected", element).length;
                    case 'input':
                        if (this.checkable(element))
                            return this.findByName(element.name).filter(':checked').length;
                }
                return value.length;
            },

            depend: function (param, element) {
                return this.dependTypes[typeof param]
        ? this.dependTypes[typeof param](param, element)
        : true;
            },

            dependTypes: {
                "boolean": function (param, element) {
                    return param;
                },
                "string": function (param, element) {
                    return !!$(param, element.form).length;
                },
                "function": function (param, element) {
                    return param(element);
                }
            },

            optional: function (element) {
                return !$.validator.methods.required.call(this, $.trim(element.value), element) && "dependency-mismatch";
            },

            startRequest: function (element) {
                if (!this.pending[element.name]) {
                    this.pendingRequest++;
                    this.pending[element.name] = true;
                }
            },

            stopRequest: function (element, valid) {
                this.pendingRequest--;
                // sometimes synchronization fails, make sure pendingRequest is never < 0
                if (this.pendingRequest < 0)
                    this.pendingRequest = 0;
                delete this.pending[element.name];
                if (valid && this.pendingRequest == 0 && this.formSubmitted && this.form()) {
                    $(this.currentForm).submit();
                    this.formSubmitted = false;
                } else if (!valid && this.pendingRequest == 0 && this.formSubmitted) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                    this.formSubmitted = false;
                }
            },

            previousValue: function (element) {
                return $.data(element, "previousValue") || $.data(element, "previousValue", {
                    old: null,
                    valid: true,
                    message: this.defaultMessage(element, "remote")
                });
            }
        },

        classRuleSettings: {
            required: { required: true },
            email: { email: true },
            url: { url: true },
            date: { date: true },
            dateISO: { dateISO: true },
            dateDE: { dateDE: true },
            number: { number: true },
            numberDE: { numberDE: true },
            digits: { digits: true },
            creditcard: { creditcard: true }
        },

        addClassRules: function (className, rules) {
            className.constructor == String ?
      this.classRuleSettings[className] = rules :
      $.extend(this.classRuleSettings, className);
        },

        classRules: function (element) {
            var rules = {};
            var classes = $(element).attr('class');
            classes && $.each(classes.split(' '), function () {
                if (this in $.validator.classRuleSettings) {
                    $.extend(rules, $.validator.classRuleSettings[this]);
                }
            });
            return rules;
        },

        attributeRules: function (element) {
            var rules = {};
            var $element = $(element);

            for (var method in $.validator.methods) {
                var value = $element.attr(method);
                if (value) {
                    rules[method] = value;
                }
            }

            // maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text inputs
            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
                delete rules.maxlength;
            }

            return rules;
        },

        metadataRules: function (element) {
            if (!$.metadata) return {};

            var meta = $.data(element.form, 'validator').settings.meta;
            return meta ?
      $(element).metadata()[meta] :
      $(element).metadata();
        },

        staticRules: function (element) {
            var rules = {};
            var validator = $.data(element.form, 'validator');
            if (validator.settings.rules) {
                rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
            }
            return rules;
        },

        normalizeRules: function (rules, element) {
            // handle dependency check
            $.each(rules, function (prop, val) {
                // ignore rule when param is explicitly false, eg. required:false
                if (val === false) {
                    delete rules[prop];
                    return;
                }
                if (val.param || val.depends) {
                    var keepRule = true;
                    switch (typeof val.depends) {
                        case "string":
                            keepRule = !!$(val.depends, element.form).length;
                            break;
                        case "function":
                            keepRule = val.depends.call(element, element);
                            break;
                    }
                    if (keepRule) {
                        rules[prop] = val.param !== undefined ? val.param : true;
                    } else {
                        delete rules[prop];
                    }
                }
            });

            // evaluate parameters
            $.each(rules, function (rule, parameter) {
                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
            });

            // clean number parameters
            $.each(['minlength', 'maxlength', 'min', 'max'], function () {
                if (rules[this]) {
                    rules[this] = Number(rules[this]);
                }
            });
            $.each(['rangelength', 'range'], function () {
                if (rules[this]) {
                    rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
                }
            });

            if ($.validator.autoCreateRanges) {
                // auto-create ranges
                if (rules.min && rules.max) {
                    rules.range = [rules.min, rules.max];
                    delete rules.min;
                    delete rules.max;
                }
                if (rules.minlength && rules.maxlength) {
                    rules.rangelength = [rules.minlength, rules.maxlength];
                    delete rules.minlength;
                    delete rules.maxlength;
                }
            }

            // To support custom messages in metadata ignore rule methods titled "messages"
            if (rules.messages) {
                delete rules.messages;
            }

            return rules;
        },

        // Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
        normalizeRule: function (data) {
            if (typeof data == "string") {
                var transformed = {};
                $.each(data.split(/\s/), function () {
                    transformed[this] = true;
                });
                data = transformed;
            }
            return data;
        },

        // http://docs.jquery.com/Plugins/Validation/Validator/addMethod
        addMethod: function (name, method, message) {
            $.validator.methods[name] = method;
            $.validator.messages[name] = message != undefined ? message : $.validator.messages[name];
            if (method.length < 3) {
                $.validator.addClassRules(name, $.validator.normalizeRule(name));
            }
        },

        methods: {
            // http://docs.jquery.com/Plugins/Validation/Methods/required
            required: function (value, element, param) {
                // check if dependency is met
                if (!this.depend(param, element))
                    return "dependency-mismatch";
                switch (element.nodeName.toLowerCase()) {
                    case 'select':
                        // could be an array for select-multiple or a string, both are fine this way
                        var val = $(element).val();
                        return val && val.length > 0;
                    case 'input':
                        if (this.checkable(element))
                            return this.getLength(value, element) > 0;
                    default:
                        return $.trim(value).length > 0;
                }
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/remote
            remote: function (value, element, param) {
                if (this.optional(element))
                    return "dependency-mismatch";

                var previous = this.previousValue(element);
                if (!this.settings.messages[element.name])
                    this.settings.messages[element.name] = {};
                previous.originalMessage = this.settings.messages[element.name].remote;
                this.settings.messages[element.name].remote = previous.message;

                param = typeof param == "string" && { url: param} || param;

                if (this.pending[element.name]) {
                    return "pending";
                }
                if (previous.old === value) {
                    return previous.valid;
                }

                previous.old = value;
                var validator = this;
                this.startRequest(element);
                var data = {};
                data[element.name] = value;
                $.ajax($.extend(true, {
                    url: param,
                    mode: "abort",
                    port: "validate" + element.name,
                    dataType: "json",
                    data: data,
                    success: function (response) {
                        validator.settings.messages[element.name].remote = previous.originalMessage;
                        var valid = response === true;
                        if (valid) {
                            var submitted = validator.formSubmitted;
                            validator.prepareElement(element);
                            validator.formSubmitted = submitted;
                            validator.successList.push(element);
                            validator.showErrors();
                        } else {
                            var errors = {};
                            var message = response || validator.defaultMessage(element, "remote");
                            errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;
                            validator.showErrors(errors);
                        }
                        previous.valid = valid;
                        validator.stopRequest(element, valid);
                    }
                }, param));
                return "pending";
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/minlength
            minlength: function (value, element, param) {
                return this.optional(element) || this.getLength($.trim(value), element) >= param;
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/maxlength
            maxlength: function (value, element, param) {
                return this.optional(element) || this.getLength($.trim(value), element) <= param;
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/rangelength
            rangelength: function (value, element, param) {
                var length = this.getLength($.trim(value), element);
                return this.optional(element) || (length >= param[0] && length <= param[1]);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/min
            min: function (value, element, param) {
                return this.optional(element) || value >= param;
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/max
            max: function (value, element, param) {
                return this.optional(element) || value <= param;
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/range
            range: function (value, element, param) {
                return this.optional(element) || (value >= param[0] && value <= param[1]);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/email
            email: function (value, element) {
                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
                return this.optional(element) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(value);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/url
            url: function (value, element) {
                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
                return this.optional(element) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/date
            date: function (value, element) {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/dateISO
            dateISO: function (value, element) {
                return this.optional(element) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(value);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/number
            number: function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(value);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/digits
            digits: function (value, element) {
                return this.optional(element) || /^\d+$/.test(value);
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/creditcard
            // based on http://en.wikipedia.org/wiki/Luhn
            creditcard: function (value, element) {
                if (this.optional(element))
                    return "dependency-mismatch";
                // accept only digits and dashes
                if (/[^0-9-]+/.test(value))
                    return false;
                var nCheck = 0,
        nDigit = 0,
        bEven = false;

                value = value.replace(/\D/g, "");

                for (var n = value.length - 1; n >= 0; n--) {
                    var cDigit = value.charAt(n);
                    var nDigit = parseInt(cDigit, 10);
                    if (bEven) {
                        if ((nDigit *= 2) > 9)
                            nDigit -= 9;
                    }
                    nCheck += nDigit;
                    bEven = !bEven;
                }

                return (nCheck % 10) == 0;
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/accept
            accept: function (value, element, param) {
                param = typeof param == "string" ? param.replace(/,/g, '|') : "png|jpe?g|gif";
                return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i"));
            },

            // http://docs.jquery.com/Plugins/Validation/Methods/equalTo
            equalTo: function (value, element, param) {
                // bind to the blur event of the target in order to revalidate whenever the target field is updated
                // TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
                var target = $(param).unbind(".validate-equalTo").bind("blur.validate-equalTo", function () {
                    $(element).valid();
                });
                return value == target.val();
            }

        }

    });

    // deprecated, use $.validator.format instead
    $.format = $.validator.format;
})(jQuery);

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()
; (function ($) {
    var pendingRequests = {};
    // Use a prefilter if available (1.5+)
    if ($.ajaxPrefilter) {
        $.ajaxPrefilter(function (settings, _, xhr) {
            var port = settings.port;
            if (settings.mode == "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                pendingRequests[port] = xhr;
            }
        });
    } else {
        // Proxy ajax
        var ajax = $.ajax;
        $.ajax = function (settings) {
            var mode = ("mode" in settings ? settings : $.ajaxSettings).mode,
        port = ("port" in settings ? settings : $.ajaxSettings).port;
            if (mode == "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                return (pendingRequests[port] = ajax.apply(this, arguments));
            }
            return ajax.apply(this, arguments);
        };
    }
})(jQuery);

// provides cross-browser focusin and focusout events
// IE has native support, in other browsers, use event caputuring (neither bubbles)

// provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
// handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target
; (function ($) {
    // only implement if not provided by jQuery core (since 1.4)
    if (!jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener) {
        $.each({
            focus: 'focusin',
            blur: 'focusout'
        }, function (original, fix) {
            $.event.special[fix] = {
                setup: function () {
                    this.addEventListener(original, handler, true);
                },
                teardown: function () {
                    this.removeEventListener(original, handler, true);
                },
                handler: function (e) {
                    arguments[0] = $.event.fix(e);
                    arguments[0].type = fix;
                    return $.event.handle.apply(this, arguments);
                }
            };
            function handler(e) {
                e = $.event.fix(e);
                e.type = fix;
                return $.event.handle.call(this, e);
            }
        });
    };
    $.extend($.fn, {
        validateDelegate: function (delegate, type, handler) {
            return this.bind(type, function (event) {
                var target = $(event.target);
                if (target.is(delegate)) {
                    return handler.apply(target, arguments);
                }
            });
        }
    });
})(jQuery);

function SetCookie(cookie_name, cookie_value, cookie_days_alive) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + cookie_days_alive);
    var c_value = escape(cookie_value) + ((cookie_days_alive == null) ? "" : "; expires=" + exdate.toUTCString()) + "; path=/us";
    document.cookie = cookie_name + "=" + c_value;
}

function ReadCookie(cookie_name) {
    var i, x, y, ARRcookies = document.cookie.split(";");
    for (i=0;i<ARRcookies.length;i++)
    {
        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
        y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
        x = x.replace(/^\s+|\s+$/g, "");
        if (x == cookie_name) {
            return unescape(y);
        }
    }
}

$(document).ready(function () {
    var activateCookieBar;
	activateCookieBar = j$('body').hasClass("cookiebar");

	if (activateCookieBar)
	{
        if (!ReadCookie('cookie_policy_accepted'))
			$.get('/us/resources/controls/cookie-allowance.html', function (data) {
                $("#cookie-allowance").html(data.toString());
                $("#cookie-allowance").show();
            });
    }
	
    $('.image-gallery').multimediaBanner();
    $('.multimedia-banner').multimediaBanner();

    if ((j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
        DD_belatedPNG.fix('.image-gallery .main-content a img, .image-gallery div.image-description-container, .image-gallery div.description');
        DD_belatedPNG.fix('.promotion-banner ul, .promotion-banner ul li, .promotion-banner img, .promotion-banner .price-tag, .promotion-banner .price-tag div, .promotion-banner .teaser, .promotion-banner .last');
        DD_belatedPNG.fix('.multimedia-banner ul li img, .multimedia-banner .zoom-in, .multimedia-banner .zoom-out, .triangle');
    }

    $('a.zoomable').zoomable();
    $('.image-container, .image-container-bg').imageHeadlineCaption();
	$('.image-container, .image-container-no-bg').imageHeadlineCaption();

    // open external links in new window
    openNewWindow();
    
    // rss in single-row accordion link
    $('div.single-row span.headline-rss a').click(function(e){ 
      //IE 9 & other browsers
      if(e.stopPropagation()){
        e.stopPropagation();
      }
      //IE 8 or lower
      else {
        e.cancelBubble = true;
      };
      window.location.href = e.currentTarget.getAttribute('href');
    });
});

function SetCookieAllowance() {
    SetCookie('cookie_policy_accepted', 'true', 999);
    window.location.reload();
}

function setOptgroups() {
    if ($('optgroup').length) {
        $('optgroup').each(function (i) {
            $(this).after('<option value="' + $(this).attr('key') + '">' + $(this).attr('label') + '</option>');
            $(this).parents('.form-field:first').append('<select class="subselect" title="' + $(this).attr('key') + '" id="optgroup-' + $(this).attr('key') + '">' + $(this).html() + '</select>');

            $sel = $(this).parents('select:first');
            $sel.data('name', $sel.attr('name'));

            $(this).parents('select:first').unbind().change(function () {
                var $select = $(this);
                //$select.data('name',$select.attr('name'));
                $wrapper = $('[title=' + $(this).val() + ']').parents('.jqTransformSelectWrapper:first');
                $sub = $(this).parents('.form-field:first').find('.subselect');
                $sub.hide();
                $wrapper.show();

                $sub.find('select').unbind().change(function () {
                    $('input[type=hidden][name="' + $select.data('name') + '"]').val($(this).val());
                });

                if ($('input[type=hidden][name="' + $select.data('name') + '"]').length) {
                    var val = $('[title=' + $(this).val() + ']').val();
                    $('input[type=hidden][name="' + $select.data('name') + '"]').val(val);
                }
                else {
                    $('select[name="' + $select.data('name') + '"]').attr('name', $select.data('name') + '_sub');
                    $wrapper.parents('form:first').append('<input type="hidden" name="' + $select.data('name') + '" value="' + $('[title=' + $(this).val() + ']').val() + '" title="' + $select.data('name') + '" />');
                }

                if (!$('[title=' + $(this).val() + ']').length) {
                    $('input[type=hidden][name="' + $select.data('name') + '"]').val($(this).val());
                }

                $inner = $('div.single-row').find('.content .innerframe');
                if ($inner.length) {
                    var height = 0;
                    var padding = 0;
                    var margin = 0;
                    $('.subselect').each(function () {
                        if ($(this).css('display') == 'block') {
                            height += $(this).height();
                            padding += parseInt($(this).css('paddingBottom'));
                            margin += parseInt($(this).css('marginBottom'));
                        }
                    });

                    if ($wrapper.css('display') === 'block') {
                        $inner.animate({height :  ($inner.data('height')+height+padding+margin)},80);
                    }
                    else {
                        $inner.animate({height :  ($inner.data('height')+height+padding+margin)},80);
                    }
                }
            });
            $(this).remove();
        });
    }
}

/*
*
* jqTransform
* by mathieu vilaplana mvilaplana@dfc-e.com
* Designer ghyslain armand garmand@dfc-e.com
*
*
* Version 1.0 25.09.08
* Version 1.1 06.08.09
* Add event click on Checkbox and Radio
* Auto calculate the size of a select element
* Can now, disabled the elements
* Correct bug in ff if click on select (overflow=hidden)
* No need any more preloading !!
* 
******************************************** */
(function ($) {
    var defaultOptions = { preloadImg: true };
    var jqTransformImgPreloaded = false;

    var jqTransformPreloadHoverFocusImg = function (strImgUrl) {
        //guillemets to remove for ie
        strImgUrl = strImgUrl.replace(/^url\((.*)\)/, '$1').replace(/^\"(.*)\"$/, '$1');
        var imgHover = new Image();
        imgHover.src = strImgUrl.replace(/\.([a-zA-Z]*)$/, '-hover.$1');
        var imgFocus = new Image();
        imgFocus.src = strImgUrl.replace(/\.([a-zA-Z]*)$/, '-focus.$1');
    };

    /***************************
    Labels
    ***************************/
    var jqTransformGetLabel = function (objfield) {
        var selfForm = $(objfield.get(0).form);
        var oLabel = objfield.next();
        if (!oLabel.is('label')) {
            oLabel = objfield.prev();
            if (oLabel.is('label')) {
                var inputname = objfield.attr('id');
                if (inputname) {
                    oLabel = selfForm.find('label[for="' + inputname + '"]');
                }
            }
        }
        if(oLabel.is('label')){return oLabel;}
        return false;
    };

    /* Hide all open selects */
    var jqTransformHideSelect = function (oTarget) {
        var ulVisible = $('.jqTransformSelectWrapper ul:visible');
        ulVisible.each(function () {
            var oSelect = $(this).parents(".jqTransformSelectWrapper:first").find("select").get(0);
            //do not hide if click on the label object associated to the select
            if (!(oTarget && oSelect.oLabel && oSelect.oLabel.get(0) == oTarget.get(0))) { $(this).hide(); }
        });
    };
    /* Check for an external click */
    var jqTransformCheckExternalClick = function (event) {
        if ($(event.target).parents('.jqTransformSelectWrapper').length === 0) { jqTransformHideSelect($(event.target)); }
    };

    /* Apply document listener */
    var jqTransformAddDocumentListener = function () {
        $(document).mousedown(jqTransformCheckExternalClick);
    };

    /* Add a new handler for the reset action */
    var jqTransformReset = function (f) {
        var sel;
        $('.jqTransformSelectWrapper select', f).each(function () { sel = (this.selectedIndex < 0) ? 0 : this.selectedIndex; $('ul', $(this).parent()).each(function () { $('a:eq(' + sel + ')', this).click(); }); });
        $('a.jqTransformCheckbox, a.jqTransformRadio', f).removeClass('jqTransformChecked');
        $('input:checkbox, input:radio', f).each(function () { if (this.checked) { $('a', $(this).parent()).addClass('jqTransformChecked'); } });
    };

    /***************************
    Buttons
    ***************************/    
    $.fn.jqTransInputButton = function(){
        return this.each(function(){
            var newBtn = $('<div class="'+ this.className +' jqTransformButtonWrapper"><div class="btn-bottom"><div class="btn-top-left"></div><div class="btn-top-right"></div><button id="'+ this.id +'" name="'+ this.name +'" type="'+ this.type +'" class="jqTransformButton">'+ $(this).attr('value') +'</button><div class="btn-bottom-right"></div></div></div>')
                .hover(function(){newBtn.addClass('jqTransformButton_hover');},function(){newBtn.removeClass('jqTransformButton_hover')})
                .mousedown(function(){newBtn.addClass('jqTransformButton_click')})
                .mouseup(function(){newBtn.removeClass('jqTransformButton_click')});

            if(typeof this.onclick == 'function'){
                $('button', newBtn).click(this.onclick);
            }
            $(this).replaceWith(newBtn);
        });
    };

    /***************************
    Text Fields 
    ***************************/
    $.fn.jqTransInputText = function () {
        return this.each(function () {
            var $input = $(this);

            if ($input.hasClass('jqtranformdone') || !$input.is('input')) { return; }
            $input.addClass('jqtranformdone');

            var oLabel = jqTransformGetLabel($(this));
            oLabel && oLabel.bind('click', function () { $input.focus(); });

            var inputSize = $input.width();
            if ($input.hasClass('use-size') && $input.attr('size')) {
                inputSize = $input.attr('size') * 10;
                $input.css('width', inputSize);
            }

            $input.addClass("jqTransformInput").wrap('<div class="jqTransformInputWrapper"><div class="jqTransformInputInner"><div></div></div></div>');
            var $wrapper = $input.parent().parent().parent();
            $wrapper.css("width", inputSize + 10);
            $input
        .focus(function () { $wrapper.addClass("jqTransformInputWrapper_focus"); })
        .blur(function () { $wrapper.removeClass("jqTransformInputWrapper_focus"); })
        .hover(function () { $wrapper.addClass("jqTransformInputWrapper_hover"); }, function () { $wrapper.removeClass("jqTransformInputWrapper_hover"); })
      ;

            /* If this is safari we need to add an extra class */
            $.browser.safari && $wrapper.addClass('jqTransformSafari');
            $.browser.safari && $input.css('width', $wrapper.width() + 16);
            this.wrapper = $wrapper;
        });
    };

    /***************************
    Check Boxes 
    ***************************/
    $.fn.jqTransCheckBox = function () {
        return this.each(function () {
            if ($(this).hasClass('jqTransformHidden')) { return; }

            var $input = $(this);
            var inputSelf = this;

            //set the click on the label
            var oLabel = jqTransformGetLabel($input);
            oLabel && oLabel.click(function (e) { aLink.trigger('click'); return false; });

            var aLink = $('<a href="#" class="jqTransformCheckbox"></a>');
            //wrap and add the link
            $input.addClass('jqTransformHidden').wrap('<span class="jqTransformCheckboxWrapper"></span>').parent().prepend(aLink);
            //on change, change the class of the link
            $input.change(function (e) {
                this.checked && aLink.addClass('jqTransformChecked') || aLink.removeClass('jqTransformChecked');
                return true;
            });
            // Click Handler, trigger the click and change event on the input
            aLink.click(function () {
                //do nothing if the original input is disabled
                if ($input.attr('disabled')) { return false; }
                //trigger the envents on the input object
                $input.trigger('click').trigger("change");
                return false;
            });

            aLink.keydown(function (e) {
                if (e.keyCode == 32) {
                    e.preventDefault();
                    $input.trigger('click').trigger("change");
                    return false;
                }
            });

            // set the default state
            this.checked && aLink.addClass('jqTransformChecked');
        });
    };

    /***************************
    Radio Buttons 
    ***************************/
    $.fn.jqTransRadio = function () {
        return this.each(function () {
            if ($(this).hasClass('jqTransformHidden')) { return; }

            var $input = $(this);
            var inputSelf = this;

            oLabel = jqTransformGetLabel($input);
            oLabel && oLabel.click(function () { aLink.trigger('click'); });
            if (oLabel.length) {
                if (oLabel.parents('.radio-wrapper:first, .radio-wrapper-right:first').hasClass('vertical')) {
                    oLabel.after('<div class="clear"></div>');
                }
            }

            var aLink = $('<a href="#" class="jqTransformRadio" rel="' + this.name + '"></a>');
            $input.addClass('jqTransformHidden').wrap('<span class="jqTransformRadioWrapper"></span>').parent().prepend(aLink);

            $input.change(function () {
                inputSelf.checked && aLink.addClass('jqTransformChecked') || aLink.removeClass('jqTransformChecked');
                return true;
            });
            // Click Handler
            aLink.click(function () {
                if ($input.attr('disabled')) { return false; }
                $input.trigger('click').trigger('change');

                // uncheck all others of same name input radio elements
                $('input[name="' + $input.attr('name') + '"]', inputSelf.form).not($input).each(function () {
                    $(this).attr('type') == 'radio' && $(this).trigger('change');
                });
                return false;
            });

            aLink.keydown(function (e) {
                if (e.keyCode == 32 || e.keyCode == 13) {
                    if ($input.attr('disabled')) { return false; }
                    $input.trigger('click').trigger('change');

                    // uncheck all others of same name input radio elements
                    $('input[name="' + $input.attr('name') + '"]', inputSelf.form).not($input).each(function () {
                        $(this).attr('type') == 'radio' && $(this).trigger('change');
                    });
                    return false;
                }
                if (e.keyCode == 38 || e.keyCode == 39) { // right or up key
                    e.preventDefault();
                    var $inp = $input.parents('.radio-wrapper:first, .radio-wrapper-right:first').find('input[type=radio]');
                    $inp.each(function (i) {
                        if ($input.attr('id') == $(this).attr('id') && !$(this).attr('disabled')) {
                            $obj = $(this).parents('.radio-wrapper:first, .radio-wrapper-right:first').find('input[type=radio]').eq(1 + i);
                            $obj.trigger('click').trigger('change');
                            $('input[name="' + $obj.attr('name') + '"]', inputSelf.form).not($obj).each(function () {
                                $(this).attr('type') == 'radio' && $(this).trigger('change');
                            });
                        }
                    });
                    $input.parents('.radio-wrapper:first, .radio-wrapper-right:first').find('.jqTransformChecked').focus();
                    return false;
                }
                if (e.keyCode == 37 || e.keyCode == 40) { // left or down key
                    e.preventDefault();
                    var $inp = $input.parents('.radio-wrapper:first, .radio-wrapper-right:first').find('input[type=radio]');
                    $inp.each(function (i) {
                        if ($input.attr('id') == $(this).attr('id') && !$(this).attr('disabled')) {
                            $obj = $(this).parents('.radio-wrapper:first, .radio-wrapper-right:first').find('input[type=radio]').eq((i - 1));
                            $obj.trigger('click').trigger('change');
                            $('input[name="' + $obj.attr('name') + '"]', inputSelf.form).not($obj).each(function () {
                                $(this).attr('type') == 'radio' && $(this).trigger('change');
                            });
                        }
                    });
                    $input.parents('.radio-wrapper:first, .radio-wrapper-right:first').find('.jqTransformChecked').focus();
                    return false;
                }
            });

            // set the default state
            inputSelf.checked && aLink.addClass('jqTransformChecked');
        });
    };

    /***************************
    TextArea 
    ***************************/
    $.fn.jqTransTextarea = function () {
        return this.each(function () {
            var textarea = $(this);

            if (textarea.hasClass('jqtransformdone')) { return; }
            textarea.addClass('jqtransformdone');

            oLabel = jqTransformGetLabel(textarea);
            oLabel && oLabel.click(function () { textarea.focus(); });

            var strTable = '<table cellspacing="0" cellpadding="0" border="0" class="jqTransformTextarea">';
            strTable += '<tr><td id="jqTransformTextarea-tl"></td><td id="jqTransformTextarea-tm"></td><td id="jqTransformTextarea-tr"></td></tr>';
            strTable += '<tr><td id="jqTransformTextarea-ml">&nbsp;</td><td id="jqTransformTextarea-mm"><div></div></td><td id="jqTransformTextarea-mr">&nbsp;</td></tr>';
            strTable += '<tr><td id="jqTransformTextarea-bl"></td><td id="jqTransformTextarea-bm"></td><td id="jqTransformTextarea-br"></td></tr>';
            strTable += '</table>';
            var oTable = $(strTable)
          .insertAfter(textarea)
          .hover(function () {
              !oTable.hasClass('jqTransformTextarea-focus') && oTable.addClass('jqTransformTextarea-hover');
          }, function () {
              oTable.removeClass('jqTransformTextarea-hover');
          })
        ;

            textarea
        .focus(function () { oTable.removeClass('jqTransformTextarea-hover').addClass('jqTransformTextarea-focus'); })
        .blur(function () { oTable.removeClass('jqTransformTextarea-focus'); })
        .appendTo($('#jqTransformTextarea-mm div', oTable))
      ;
            this.oTable = oTable;
            if ($.browser.safari) {
                $('#jqTransformTextarea-mm', oTable)
          .addClass('jqTransformSafariTextarea')
          .find('div')
            .css('height', textarea.height())
            .css('width', textarea.width())
        ;
            }
        });
    };

    /***************************
    Select 
    ***************************/
    $.fn.jqTransSelect = function () {
        return this.each(function (index) {
            var $select = $(this);

            if ($select.hasClass('jqTransformHidden')) { return; }
            if ($select.attr('multiple')) { return; }

            var oLabel = jqTransformGetLabel($select);
            /* First thing we do is Wrap it */
            var $wrapper = $select
        .addClass('jqTransformHidden')
        .wrap('<div class="jqTransformSelectWrapper"></div>')
        .parent()
        .css({ zIndex: 50 - index })
      ;

            if ($select.hasClass('subselect')) {
                $wrapper.data('height', $(this).height());
                $wrapper.addClass('subselect');
                $select.removeClass('subselect');
            }

            /* Now add the html for the select */
            $wrapper.prepend('<div><span></span><a href="#" class="jqTransformSelectOpen"></a></div><ul></ul>');
            var $ul = $('ul', $wrapper).css('width', $select.width()).hide();
            /* Now we add the options */
            $('option, optgroup', this).each(function (i) {
                var oLi = $('<li><a href="#" index="' + i + '">' + $(this).html() + '</a></li>');
                $ul.append(oLi);
            });

            /* Add click handler to the a */
            $ul.find('a').click(function () {
                $('a.selected', $wrapper).removeClass('selected');
                $(this).addClass('selected');
                /* Fire the onchange event */
                if ($select[0].selectedIndex != $(this).attr('index')) {
                    $select[0].selectedIndex = $(this).attr('index');
                    $select.trigger('change');
                    // check for filterlist and disable other selections within the contentfilter
                    if ($('.contentfilter').length) {

                        $filter = $('.contentfilter').find('.filter-container');
                        $filter.removeClass('disabled').find('select').removeAttr('disabled');
                        $filter.find('select').removeAttr('disabled');
                        $filter.find('button').removeAttr('disabled');
                        if ($select[0].selectedIndex != 0) {
                            $filter.not($ul.parents('.filter-container:first')).each(function () {
                                $(this).addClass('disabled').find('select').attr('disabled', 'disabled');
                                $(this).find('button').attr('disabled', 'disabled');
                            });
                        }
                    }
                }
                $select[0].selectedIndex = $(this).attr('index');
                $('span:eq(0)', $wrapper).html($(this).html());
                $ul.hide();
                if (document.activeElement.className != 'jqTransformSelectOpen') {
                    $('a.jqTransformSelectOpen', $wrapper).focus();
                    $('a', $ul).removeClass('lightgrey');
                }
                return false;
            });
            /* Set the default */
            $('a:eq(' + this.selectedIndex + ')', $ul).click();
            $('span:first', $wrapper).click(function () { $("a.jqTransformSelectOpen", $wrapper).trigger('click'); });
            //oLabel && oLabel.click(function(){$("a.jqTransformSelectOpen",$wrapper).trigger('click');});
            this.oLabel = oLabel;

            /* Apply the click handler to the Open */
            var oLinkOpen = $('a.jqTransformSelectOpen', $wrapper)
        .bind('click', function (event) {
            event.preventDefault();

            //Check if box is already open to still allow toggle, but close all other selects
            if ($ul.css('display') == 'none') { jqTransformHideSelect(); }
            if ($select.attr('disabled')) { return false; }
            $ul.slideToggle('fast', function () {
                var offSet = ($('a.selected', $ul).offset().top - $ul.offset().top);
                $ul.animate({ scrollTop: offSet });
            });
            return false;
        }).focus(function () {
            $obj = $wrapper;
            var a = $select[0].selectedIndex;
            $(document).unbind().keydown(function (e) {
                if (e.keyCode == 38) { // Up
                    e.preventDefault();
                    a > 0 ? a-- : a = ($ul.find('li').length - 1);
                    selectVal(a, $obj);
                    return false;
                }
                if (e.keyCode == 40) { // Down
                    e.preventDefault();
                    a < ($ul.find('li').length - 1) ? a++ : a = 0;
                    selectVal(a, $obj);
                    return false;
                }
            });
        });

            function selectVal(i, $obj) {
                if ($('ul', $obj).css('display') == 'block') {
                    $('ul li a', $obj).blur();
                    $('ul li a:eq(' + i + ')', $obj).focus();
                }
                else {
                    $('ul li a:eq(' + i + ')', $obj).trigger('click');
                    //             $select[0].selectedIndex = i;
                }
            }
            ;

            // Set the new width
            var iSelectWidth = $select.outerWidth();
            var oSpan = $('span:first', $wrapper);
            var newWidth = (iSelectWidth > oSpan.innerWidth()) ? iSelectWidth + oLinkOpen.outerWidth() : $wrapper.width();
            if (!(j$.browser.msie && j$.browser.version.substr(0, 1) == '6')) {
                $wrapper.css('width', (newWidth));
                $ul.css('width', newWidth - 2);
            }
            else {
                $wrapper.css('width', (newWidth - 1));
                $ul.css('width', newWidth - 1);
            }
            oSpan.css({ width: iSelectWidth });

            // Calculate the height if necessary, less elements that the default height
            //show the ul to calculate the block, if ul is not displayed li height value is 0
            $ul.css({ display: 'block', visibility: 'hidden' });
            var iSelectHeight = ($('li', $ul).length) * ($('li:first', $ul).height()); //+1 else bug ff
            (iSelectHeight < ($ul.height() - 5)) && $ul.css({ height: iSelectHeight, 'overflow-y': 'auto' }); //hidden else bug with ff
            $ul.css({ display: 'none', visibility: 'visible' });

        });
    };
    $.fn.jqTransform = function (options) {
        var opt = $.extend({}, defaultOptions, options);

        /* each form */
        return this.each(function () {
            var selfForm = $(this);
            if (selfForm.hasClass('jqtransformdone')) { return; }
            selfForm.addClass('jqtransformdone');

            $('input:submit, input:reset, input[type="button"]', this).jqTransInputButton();
            $('input:text, input:password', this).jqTransInputText();
            $('input:checkbox', this).jqTransCheckBox();
            $('input:radio', this).jqTransRadio();
            $('textarea', this).jqTransTextarea();

            if ($('select', this).jqTransSelect().length > 0) { jqTransformAddDocumentListener(); }
            selfForm.bind('reset', function () { var action = function () { jqTransformReset(this); }; window.setTimeout(action, 10); });
        }); /* End Form each */
    }; /* End the Plugin */
})(jQuery);

/* flash print for Firefox */
var FlashPrintFix = {};
FlashPrintFix.createStyle = function (cssCode) {
    var styleElement = document.createElement("style");

    styleElement.type = "text/css";
    if (styleElement.styleSheet) {
        styleElement.styleSheet.cssText = cssCode;
    } else {
        styleElement.appendChild(document.createTextNode(cssCode));
    }

    document.getElementsByTagName("head")[0].appendChild(styleElement);
};

FlashPrintFix.needPrintFix = function () {
    var need_fix = /firefox|opera|chrome/i.test(navigator.userAgent);
    return need_fix;
};

if (FlashPrintFix.needPrintFix()) {
    FlashPrintFix.createStyle(
        "@media screen {\n" +
        ".flashScreenshot { display: none; }\n" +
        "}\n" +
        "@media print {\n" +
        ".printableFlashObj { height:0; display: none; };\n" +
        ".flashScreenshot { display: block; border: 0; outline: none; }\n" +
        "}"
    );
}

FlashPrintFix.setImg = function (objId, imgData) {
    var obj = document.getElementById(objId);
    if (obj === null) {
        throw new Error("Can't find node with id '" + objId + "'");
    }

    obj.setAttribute("class", "printableFlashObj");

    var container = obj.parentNode;
    if (container.nodeName === "EMBED") {
        container = container.parentNode;
    }

    var img = document.getElementById(objId + "_screenshot");
    if (img === null) {
        img = document.createElement("img");
        img.setAttribute("id", objId + "_screenshot");
        img.setAttribute("class", "flashScreenshot");
        container.appendChild(img);
    }

    img.src = "data:image/png;base64," + imgData;
};

function random(min, max) {
    if (min > max) { return -1; }
    if (min == max) { return min; }
    var r;
    do { r = Math.random(); }
    while (r == 1.0);
    return min + parseInt(r * (max - min + 1));
}

// flash blur funtion
var flashObject = null;
function removeFlashFocus(shiftPressed) {
    var player = flashObject.data('player'), shiftIndex = player ? 2 : 1;
    document.getElementsByName(flashObject.attr('name'))[0].executePlayerCommand('removeShiftFocus');
    document.getElementsByName(flashObject.attr('name'))[0].executePlayerCommand('removeFocus');
    flashObject.removeAttr('tabindex').blur();
    if (shiftPressed) {
        $("a[tabindex != '-1']").eq(flashObject.data('index') - shiftIndex)[0].focus();
    } else {
        $("a[tabindex != '-1']").eq(flashObject.data('index') + 1)[0].focus();
    }
    return false;
}

/* Multimedia Banner Plugin */
(function ($) {
    $.fn.multimediaBanner = function () {
        this.each(function (bannerIndex) {
            var $wrapper = $(this);
            var visibleThumbs = 8;
            var $content = $wrapper.find('ul.content');
            var contentWidth = $content.width();
            var contentHeight = $content.height();
            var largeView = false;
            var initialHeight = contentHeight;
            var ready = true;
            var shiftKey = false;
            var tabKey = false;
            // set active start slide to 0
            $content.data('no', 0);
            $content.data('first', 0);

            // image gallery or multimedia banner?
            var image = false, banner = false;
            $wrapper.hasClass('image-gallery') ? image = true : banner = true;

            // large zoom view?
            if (banner && $wrapper.hasClass('large')) {
                largeView = true;
            }

            // get number of images
            var imgCount = $content.find('li > img, object, embed').not('.thumb').length;

            //set browser depend opacity and ul width value needed for ie6 - default values
            var op = 1;
            var ulOffset = 2;

			if (($.browser.msie && (parseInt($.browser.version.substr(0, 1)) <=8))) {
                op = 0.7;
                ulOffset = 4;
            }

            if (($.browser.msie && (parseInt($.browser.version.substr(0, 1)) == 6))) {
                op = 0.9;
                ulOffset = 4;
            }

            if (($.browser.msie && (parseInt($.browser.version.substr(0, 2)) < 9))) {
                $wrapper.find('embed, object').attr('tabindex', '-1');
            }

            $wrapper.next('.shortcuts').find('a').attr('tabindex', '-1');

            function hideResponse() {
                $wrapper.find('.response').fadeOut(200);
            };

            function showResponse() {
                $wrapper.find('.response').fadeIn(200);
            };

            if (imgCount > 1) {
                /* create image gallery navigation */
                if (image) {
          			$wrapper.append('<a class="left inactive" href="#" tabindex="-1"><img src="//www.fujitsu.com/us/resources/design/stylesheets/images/image-gallery/image-gallery-left.png" height="89" width="41" alt="Previous Image" /></a><a class="right" href="#" tabindex="-1"><img src="//www.fujitsu.com/us/resources/design/stylesheets/images/image-gallery/image-gallery-right.png" height="89" width="41" alt="Next Image" /></a>').data('no', 0).find('a.left, a.right').css('opacity', '0');

                    // create hover effect
                    $wrapper.find('a.left, a.right, a.nav').hover(
            function () { $(this).animate({ opacity: op }, 200); },
            function () { $(this).animate({ opacity: 0 }, 200); }
          );

                    // add back/forward event
                    $wrapper.find('a.left').click(function () {
                        var no = $content.data('no');
                        if (no > 0) {
                            no--;
                            var first = $content.data('first');
                            if (no < first) { setVisibleThumbs((first - 1), true); }
                            changeSlide(no);
                        }
                        return false;
                    });
                    $wrapper.find('a.right').click(function (e) {
                        var no = $content.data('no');
                        if (no < ($content.find('li').length - 1)) {
                            no++;
                            var first = $content.data('first');
                            if ((visibleThumbs) == (no - first)) { setVisibleThumbs((first + 1), true); }
                            changeSlide(no);
                        }
                        return false;
                    });
                }

                /* create thumbnails */
                $wrapper.addClass('multimedia-slideshow');
                $wrapper.append('<div class="thumb-wrapper"><div class="thumb-content-wrapper"><div class="indicator" /><ul class="gallery-thumbs"/></div></div>');
                var $thumbWrapperContainer = $wrapper.find('.thumb-wrapper');
                var $indicator = $wrapper.find('.indicator');
                var $thumbContainer = $wrapper.find('.gallery-thumbs');
                var $thumbWrapper = $wrapper.find('.thumb-content-wrapper');

                // check for first slide response
                if($content.find('li:first img').not('.thumb').hasClass('no-flag')) {
                  hideResponse();  
                }

                // set click event to thumbnails
                $content.find('li').each(function (i) {
                    if ($(this).find('embed, object').length) {
                        $obj = $(this).find('img.thumb');
                    } else {
                        var $obj = $(this).find('img.thumb').length ? $(this).find('img.thumb') : $(this).find('img');
                    }
                    $obj.clone().appendTo($thumbContainer).wrap('<li/>').attr('height', '40').removeAttr('width').wrap('<a href="#" class="nav" />').parents('li:first').find('a.nav').bind('click focus', function (e) {
                        if ($content.data('no') != i) {
                            moveThumbs($obj, i, e);
                            changeSlide(i);
                        }
                        return false;
                    }).blur(function () { $thumbContainer.find('li').removeClass('focus'); });
                    if ($obj.hasClass('thumb')) {
                        $obj.remove();
                    }
                    $('img', this).each(function(){
                      if($(this).hasClass('zoom')) {
                        $(this).parents('li:first').addClass('zoom');
                      }
                    });
                });

                var $li = $thumbContainer.find('li').eq(0);
                var liWidth = $li.outerWidth() + parseInt($li.css('marginLeft')) + parseInt($li.css('marginRight'));
				
				//WI 6021 -START - this code is commented to resolve thumbnail disappearing issue in image gallery on browser ZOOM change
                //$thumbContainer.add($thumbWrapper).css('width', (imgCount * liWidth) + ulOffset);
				//WI 6021 - END

                function moveThumbs($obj, i, e) {
                    if (e.type == 'focus') {
                        var first = $content.data('first');
                        if (imgCount > visibleThumbs) {
                            if ((i - first) >= (visibleThumbs - 1)) {
                                moveThumbsRight(true);
                            }
                            else if (i <= first) {
                                moveThumbsLeft(true);
                            }
                        }
                    }
                }

                // store visible thumbs
                function setVisibleThumbs(first, thumbs) {
                    (first == 0) ? $wrapper.find('a.thumb-left').addClass('inactive') : $wrapper.find('a.thumb-left').removeClass('inactive');
                    var left = (first * liWidth);
                    $thumbWrapper.animate({ left: '-' + left + 'px' }, 80);
                    ((first + visibleThumbs) == imgCount) ? $wrapper.find('a.thumb-right').addClass('inactive') : $wrapper.find('a.thumb-right').removeClass('inactive');
                    if (thumbs) {
                        $wrapper.find('a.thumb-left, a.thumb-right').not('.inactive').animate({ opacity: (op) });
                    }
                    else {
                        $wrapper.find('a.thumb-left, a.thumb-right').addClass('inactive');
                    }
                    $content.data('first', first);
                }

                // check for more than 8 images
                if (imgCount > visibleThumbs) {

                    // ie6 specific class
                    $wrapper.addClass('more-than-eight');

                    // init visible thumbnails
                    setVisibleThumbs(0);

                    // create thumb navigation
                    $thumbWrapper.data('show', 8);
                    $wrapper.append('<a href="#" class="thumb-left inactive thumb-navi" tabindex="-1">&nbsp;</a><a href="#" class="thumb-right thumb-navi" tabindex="-1">&nbsp;</a>').find('.thumb-navi').css({ opacity: 0 });

                    var moveThumbsRight = function (thumbs) {
                        var first = $content.data('first') + 1;
                        if ((first + visibleThumbs) <= imgCount) {
                            $content.data('first', first);
                            setVisibleThumbs(first, thumbs);
                        }
                    };
                    var moveThumbsLeft = function (thumbs) {
                        var first = $content.data('first');
                        first > 0 ? first-- : null;
                        if ((first + visibleThumbs) >= 0) {
                            $content.data('first', first);
                            setVisibleThumbs(first, thumbs);
                        }
                    };

                    // set hover event to thumbnail section
                    $wrapper.hover(
            function (e) { $wrapper.find('.thumb-navi').not('.inactive').animate({ opacity: (op) }, 80); },
            function (e) { $wrapper.find('.thumb-navi').not('.inactive').animate({ opacity: 0 }, 80); }
           );

                    // set clik events to thumnail navigation 
                    $wrapper.find('a.thumb-right').click(function () {
                        moveThumbsRight(true);
                        return false;
                    });
                    $wrapper.find('a.thumb-left').click(function () {
                        moveThumbsLeft(true);
                        return false;
                    });
                }

                // detect shift key to set taborder for description links
                $wrapper.keydown(function (e) {
                    var key = e.keyCode || e.which;
                    if (key === 9) {
                        tabKey = true;
                        if (e.shiftKey) {
                            shiftKey = true;
                        }
                        else {
                            shiftKey = false;
                        }
                    }
                    else {
                        tabKey = false;
                    }
                });

                // generate description and get the first one        
                if (image) {
                    $wrapper.append('<div class="image-description-container"/>');
                    var $description = $wrapper.find('.image-description-container');
                    $description.html($content.find('li:first .description').html());

                    // bind blur/focus event to thumbnails and description links
                    $thumbContainer.find('li a').each(function (i) {
                        $(this).blur(function () {
                            var $now = $content.find('li').eq(i);
                            var $description = $wrapper.find('.image-description-container');
                            if ($description.find('a').length) {
                                if (!shiftKey) {
                                    $description.find('a').focus().blur(function(){
                                        if (!shiftKey) {
                                            if ($thumbContainer.find('li a').eq((i + 1)).length) {
                                                $thumbContainer.find('li a').eq((i + 1))[0].focus();
                                            }
                                        }
                                        else {
                                            if ($thumbContainer.find('li a').eq((i - 1)).length) {
                                                $thumbContainer.find('li a').eq((i - 1))[0].focus();
                                            }
                                            else {
                                                $thumbContainer.find('li a').eq(0)[0].focus();
                                            }
                                        }
                                    });
                                }
                            }
                        });
                    });
                }

                // enable dragging and bind events
                if (banner) {
                    function enableDraggable() {
                        var startX, startY, diffX, diffY, imgLeft, imgTop, drag = false;
                        var $img = $content.find('li img.draggable');
                        var $drag = $img.parent('li');
                        var realHeight = $img.data('realHeight');
                        var realWidth = $img.data('realWidth');

                        // check for large view and animate the container to oversize
                        if (largeView) {
                            if (realHeight > initialHeight) {
                                $wrapper.addClass('visible');
                                var maxHeight = 500;
                                if (realHeight < maxHeight) {
                                    maxHeight = contentHeight = realHeight;
                                }
                                else {
                                    contentHeight = maxHeight;
                                }
                                $drag.parent('ul').animate({ height: maxHeight }, 200);
                            }
                        }
                        diffX = ((realWidth - contentWidth) * -1);
                        diffY = ((realHeight - contentHeight) * -1);
                        $drag.css({ left: (diffX / 2), top: (diffY / 2), width: realWidth, height: realHeight });
                        $drag.mousedown(function (e) {
                            if (!drag) {
                                e.preventDefault();
                                var pos = $drag.position();
                                imgLeft = pos.left;
                                imgTop = pos.top;
                                startX = e.pageX;
                                startY = e.pageY;
                                drag = true;
                            }
                            return false;
                        });

                        $(document).mousemove(function (e) {
                            e.preventDefault();
                            if (drag) {
                                setPosition(e.pageX, e.pageY);
                            }
                        }).mouseup(function () {
                            if (drag) {
                                drag = false;
                            }
                        }).keydown(function (e) {
                            var pos = $drag.position();
                            imgLeft = pos.left;
                            imgTop = pos.top;
                                var keyCode = e.keyCode || e.which;
                            // move zoomed image left
                            if (keyCode == 37) { imgLeft += 10; }
                            // move zoomed image right
                            if (keyCode == 39) { imgLeft -= 10; }
                            // move zoomed image up
                            if (keyCode == 38) { imgTop += 10; }
                            // move zoomed image down
                            if (keyCode == 40) { imgTop -= 10; }
                            // close zoom view with escape
                            if (keyCode == 27 || keyCode == 13) {
                                $zoomOut.trigger('click');
                                $thumbContainer.find('li a').eq($content.data('no')).focus();
                                return;
                            }
                            setPosition(imgLeft, imgTop, true);
                            return false;
                        });

                        function setPosition(cX, cY, key) {
                            var posX = (imgLeft + cX - startX);
                            var posY = (imgTop + cY - startY);
                            if (key) {
                                var posX = cX;
                                var posY = cY;
                            }
                            var x = 0, y = 0;
                            if (realWidth < contentWidth) {
                                x = $drag.css('left');
                            } else {
                                if (posX <= 0) {
                                    x = posX;
                                    if (x < diffX) { x = diffX; }
                                }
                            }
                            if (realHeight < contentHeight) {
                                y = $drag.css('top');
                            } else {
                                if (posY <= 0) {
                                    y = posY;
                                    if (y < diffY) { y = diffY; }
                                }
                            }
                            $drag.css({ left: x, top: y, position: 'absolute' });
                        }
                    };

                    // zoom image and make image draggable
                    function zoomIn() {
                        var $img = $content.find('li').eq($content.data('no')).find('img.zoom');
                        $img.css({ height: $img.data('realHeight'), width: $img.data('realWidth') }).addClass('draggable');
                        enableDraggable();
                    };

                    // zoom image out and unbind draggable funciton
                    function zoomOut() {
                        disableDraggable();
                    };

                    // check for zoomable image and add zoom function
                    if ($content.find('li img.zoom').length) {
                        $content.find('li').each(function (i) {
                            if ($(this).find('img').hasClass('zoom')) {
                                $(this).find('img.zoom').attr('height', initialHeight).removeAttr('width');
                                $thumbContainer.find('li a').eq(i).focus(function (e) {
                                    $(this).keydown(function (e) {
                                        var keyCode = e.keyCode || e.which;
                                        if (keyCode == 13 && $wrapper.find('.zoom-in-show').length) {
                                            $zoomIn.trigger('click');
                                            return false;
                                        }
                                    }).blur(function () {
                                        $(this).unbind('keydown');
                                    });
                                });
                            }
                        });
                        $wrapper.append('<a href="#" class="zoom-in" tabindex="-1" /><a href="#" class="zoom-out" />');
                        var $zoomIn = $wrapper.find('a.zoom-in');
                        var $zoomOut = $wrapper.find('a.zoom-out');

                        // add zoom-in functionality
                        $zoomIn.click(function (e) {
                            e.preventDefault();
                            $zoomIn.removeClass('zoom-in-show');
                            $zoomOut.addClass('zoom-out-show');
                            hideResponse();
                            zoomIn();
                            return false;
                        });

                        // add zoom-out functionality
                        $zoomOut.click(function (e) {
                            e.preventDefault();
                            $zoomIn.addClass('zoom-in-show');
                            $zoomOut.removeClass('zoom-out-show');
                            if(!$content.find('li img.draggable').hasClass('no-flag')) {
                            	showResponse();
                            }
                            zoomOut();
                            return false;
                        });
                    }

                    // show / hide zoomIn, zoomOut
                    function showHideZoom(i) {
                        if ($zoomIn && $zoomOut) {
                            if ($content.find('li').eq(i).find('img.zoom').length) {
                                $zoomIn.addClass('zoom-in-show');
                                $zoomOut.removeClass('zoom-out-show');
                            }
                            else {
                                $zoomIn.removeClass('zoom-in-show');
                                $zoomOut.removeClass('zoom-out-show');
                            }
                        }
                    };

                    // disable dragging and unbind events
                    function disableDraggable() {
                        var $img = $content.find('li img.draggable');
                        var $drag = $img.parent('li');
                        var time = 0;
                        if (largeView) {
                            time = 200;
                            $wrapper.removeClass('visible');
                        }
                        $drag.parent('ul').add($drag).animate({ height: initialHeight }, time, function () {
                            $drag.removeAttr('style');
                            $img.unbind().removeAttr('style').removeClass('draggable');
                            if (!$('.draggable').length) {
                                $(document).unbind('mousemove mouseup keydown');
                            }
                        });
                    };
                }

                // init thumbnails
                var $thumbs = $wrapper.find('.gallery-thumbs li');
                $thumbs.eq(0).addClass('active');
                $thumbs.not(':first').css('opacity', '0.5');
                $thumbs.hover(
          function () { $(this).not('.active').animate({ opacity: 1 }, 80); },
          function () { $thumbs.not('.active').animate({ opacity: 0.5 }, 80); }
        );

                /* init content images */
                $content.find('li').css('opacity', '0');
                $content.find('li:first').css('opacity', '1').addClass('active');
                $content.find('li > img').each(function () {
                    var img = $(this)[0];
                    var $self = $(this), width, height;
                    if ($.browser.msie) {
                        var image = new Image;
                        image.src = $(img).attr("src");
                        $self.data('realHeight', image.height);
                        $self.data('realWidth', image.width);
                    }
                    else {
                        $("<img/>").attr("src", $(img).attr("src")).load(function () {
                            width = this.width;
                            height = this.height;
                            $self.data('realHeight', height);
                            $self.data('realWidth', width);
                        });
                    }
                    $self.data('height', $self.attr('height'));
                    $self.data('width', $self.attr('width'));
                });

                if (banner) {
                    showHideZoom(0);
                }

                /* change slides */
                function changeSlide(i) {
                    ready = false;
                    var $active = $content.find('li').eq($content.data('no'));
                    var $now = $content.find('li').eq(i);

                    if (banner) {
                        zoomOut();
                        var $flash = $active.find('embed, object');
                        if ($flash.length && $flash.attr('allowfullscreen')) {
                            document.getElementsByName($flash.attr('name'))[0].executePlayerCommand('pause');
                        }
                        if ($now.find('embed, object').length || $now.find('.no-flag').length) {
                            hideResponse();
                        }
                        else {
                            showResponse();
                        }
                        showHideZoom(i);
                    }
                    else {
                        // check arrow visibility        
                        $wrapper.find('a.right, a.left').removeClass('inactive');
                        if (i == (imgCount - 1)) { $wrapper.find('a.right').addClass('inactive'); }
                        else if (i == 0) { $wrapper.find('a.left').addClass('inactive'); }

                        // check for description
                        $thumbs.find('a.nav').removeAttr('tabindex');
                        if ($now.find('.description').length) {
                            $description.html($now.find('.description').html());
                            if ($description.hasClass('hidden')) { $description.fadeIn(80); }
                            if($description.find('a.new-window').length) { 
                              openNewWindow($description.find('a.new-window')); 
                            }
                        }
                        else {
                            $description.fadeOut(100).addClass('hidden');
                        }
                    }

                    $content.data('no', i);

                    // set indicator & active thumb
                    var pos = $thumbs.eq(i).position();
                    $thumbContainer.find('.active').animate({ opacity: 0.5 }, 80, function () {
                        $(this).removeClass('active');
                        $thumbs.eq(i).addClass('active').animate({ opacity: 1 }, 80);
                    });

                    $indicator.animate({ left: pos.left }, 100);

                    // show/hide image
                    $now.addClass('active').stop(true).animate({ opacity: 1 }, 80, function () {
                        $active.css({ 'opacity': '0' }).removeClass('active');
                        $(this).css('opacity', '1');
                        if ($now.find('embed, object').length) {
                            var tabables = $("a[tabindex != '-1']");
                            var index = tabables.index($thumbContainer.find('li a').eq(i));
                            flashObject = $now.find('embed, object');
                            flashObject.data('player', false);
                            if ($.browser.msie) {
                                flashObject.attr('tabindex', '-1');
                                flashObject.keydown(function (e) {
                                    return false;
                                });
                                flashObject.keyup(function (e) {
                                    return false;
                                });
                                flashObject.blur(function () {
                                    $(this).unbind('keyup, keydown');
                                    document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeShiftFocus');
                                    document.getElementsByName($(this).attr('name'))[0].executePlayerCommand('removeFocus');
                                });
                            }
                            flashObject.data('index', index);
                            if (($.browser.msie && parseInt($.browser.version.substr(0, 2)) > 8) || !$.browser.msie) {
                                flashObject.focus();
                            } else {
                                window.setTimeout(function () {
                                    flashObject.focus();
                                }, 250
              	  );
                            }
                        }
                        ready = true;
                    });
                };
            }
            else {
                $wrapper.addClass('image-gallery-single');
            }
        });
    };
})(jQuery);

/* Zoom Contenbt Images */
(function ($) {
    $.fn.zoomable = function () {
        this.each(function () {
            var $link = $(this);
            var $imgSrc = $(this).attr('href');
            var $big = false;
            $link.append('<div class="open-zoom" />');
            var $thumb = $('img', this);
           $('.open-zoom', this).css('top', $thumb.css('height'));

            // bind click event
            $link.click(function (e) {
                e.preventDefault();
                $('.zoomed-image').remove();
                var pos = $link.offset();
                $('body').append('<div class="zoomed-image"><img src="' + $imgSrc + '" alt="" /><a class="close-zoom" href="#" /></div>');
                $imgContainer = $('div.zoomed-image');
                $imgContainer.css('top', pos.top + 'px');
                $img = $imgContainer.find('img').load(function () {
                    var width = $(this).width();
                    var height = $(this).height();

					if (width > 980) {
                        height = height * (980 / width);
                        width = 980;
                    }
                    $imgContainer.css({
                }).animate({
                    'marginLeft': '-' + ((width + 2) / 2) + 'px',
                    'width': width + 'px',
                    'height': height + 'px'
                }, 200).find('a.close-zoom').focus();
                $(this).attr({
                    'width': width,
                    'height': height
                });
            });
            $imgContainer.find('a.close-zoom').click(function (e) {
                $imgContainer.remove();
                $link.focus();
                return false;
            });
            return false;
        });
    });
    $(document).mouseup(function (e)
	{
		if ($(".zoomed-image").length)
		{
            if ($(e.target).parents(".zoomed-image").length == 0)
			{
				$imgContainer.remove();
				return false;
			}
        }
	});
};
})( jQuery );

(function( $ ){
$.fn.pagenate = function () {
    this.each(function () {
        var $wrapper = $(this);
        var $navi = $wrapper.find('ul');
        var $content = $('.pagenate-content-wrapper.' + $wrapper.attr('id'));
        var $contentList = $content.find('ul.pagenate-content');
        var $next = $wrapper.find('p.next a');
        var $prev = $wrapper.find('p.previous a');

        // hide all content
        $contentList.children('li').hide();

        $navi.children('li').each(function (i) {
            // store index to element
            $(this).data('index', i);
            // show active content
            if ($(this).find('strong').length) {
                $contentList.children('li').eq(i).show();
                showHideNextPrev(i);
            }
            // add click events to pagenate
            $(this).click(function () {
                $navi.find('li strong').replaceWith('<a href="#">' + $navi.find('li strong').html() + '</a>');
                $(this).html('<strong class="current">' + $('a', this).html() + '</strong> ');
                $contentList.children('li').hide().eq(i).show();
                showHideNextPrev(i);
                j$("a.new-window").each(function () {
                    openNewWindow($(this));
                });
                return false;
            });
        });

        // add click event to "next" link
        $next.click(function () {
            var index = $navi.find('li strong').parent().data('index');
            $navi.find('li').eq(index).next().trigger('click');
            showHideNextPrev((index + 1));
            return false;
        });

        // add click event to "previous" link
        $prev.click(function () {
            var index = $navi.find('li strong').parent().data('index');
            $navi.find('li').eq(index).prev().trigger('click');
            showHideNextPrev((index - 1));
            return false;
        });

        function showHideNextPrev(i) {
            $next.add($prev).show();
            if (i == 0) {
                $prev.hide();
            }
            else if ($navi.find('li').length == (i + 1)) {
                $next.hide();
            }
        }
    });
};
})(jQuery);

/* Image Caption + Headline */
(function($){
  $.fn.imageHeadlineCaption = function() {
    this.each(function() {
      // IE 6 doubleclass Selector
      $('.image-container-bg.alignright').addClass('image-container-bg-right');
      $('.image-container-bg.alignleft').addClass('image-container-bg-left');
	  $('.image-container-no-bg.alignright').addClass('image-container-no-bg-right');
      $('.image-container-no-bg.alignleft').addClass('image-container-no-bg-left');
      
      var $mopfer = $(this).find('img');
	  var width;
	  if ($mopfer[0] != 'undefined') 
		width = $mopfer[0].width;
	  else 
        width = $mopfer.width();
      $(this).css('width', width+ 'px');
    });
  };
})( jQuery );

// MICROSITES
function getElementsByClassNameFuj(node, classname) {
    var a = [];
    var re = new RegExp('(^| )' + classname + '( |$)');
    var els = node.getElementsByTagName("*");

    for (var i = 0, j = els.length; i < j; i++) {
        if (re.test(els[i].className)) {

            a.push(els[i]);
        }
    }
    return a;
}
function ActiveNavButton() {
    var url = document.URL.substring(document.URL.indexOf(document.domain) + document.domain.length);
    if (url.lastIndexOf("/") == url.length - 1) {
        url = url + "index.html";
    }
    if (getElementsByClassNameFuj(document.body, "menu-bar").length > 0) {
        var ulTag = getElementsByClassNameFuj(document.body, "menu-bar")[0].getElementsByTagName("ul");
        for (var i = 0; i < ulTag[0].getElementsByTagName("li").length; i++) {
            var liTag = ulTag[0].getElementsByTagName("li")[i];
            if (liTag.innerHTML.indexOf(url) != -1) {
                liTag.className = liTag.className + " active";
            }
        }
    }
}

// TABS
var hideNextTab = "";
function hideTabLink(tabId) {
    var ulTag = getElementsByClassNameFuj(document.body, "tablist clearfix")[0];
    for (var i = 0; i < ulTag.getElementsByTagName("li").length; i++) {
        var liTag = ulTag.getElementsByTagName("li")[i];
        if (liTag.innerHTML.indexOf('href="#a' + tabId + '"') != -1) {
            var parent = liTag.parentNode;
            parent.removeChild(liTag);
        }
    }
}
function GetFirstTab() {
    var tabsToHide = hideNextTab.split("|");
    var firstTabAux = 0;
    var idFirstTab = "#a";
    if (hideNextTab.indexOf("#a01") != -1) {
        for (var i = 0; i < tabsToHide.length; i++) {
            if (tabsToHide[i] != "") {
                var firstTab = parseInt(tabsToHide[i].substring(tabsToHide[i].indexOf("#a") + 2));
                if (firstTabAux == 0) { firstTabAux = firstTab; }
                else { if (firstTabAux == firstTab - 1) { firstTabAux = firstTab; } }
            }
        }
        if (firstTabAux > 9) { idFirstTab = idFirstTab + firstTabAux; }
        else { idFirstTab = idFirstTab + "0" + firstTabAux; }
    }
    return idFirstTab;
}
function GetLastTab(lastTab) {
    var tabsToHide = hideNextTab.split("|");
    var totalTabsNumber = parseInt(lastTab.substring(lastTab.indexOf("#a") + 2));
    var lastTabAux = 0;
    var idLastTab = "#a";
    if (hideNextTab.indexOf(totalTabsNumber) != -1) {
        for (var i = tabsToHide.length - 1; i > -1; i--) {
            if (tabsToHide[i] != "") {
                var lastTabIndex = parseInt(tabsToHide[i].substring(tabsToHide[i].indexOf("#a") + 2));
                if (lastTabAux == 0) { lastTabAux = lastTabIndex; }
                else { if (lastTabAux == lastTabIndex + 1) { lastTabAux = lastTabIndex; } }
            }
        }
        if (lastTabAux > 9) { idLastTab = idLastTab + lastTabAux; }
        else { idLastTab = idLastTab + "0" + lastTabAux; }
    }
    return idLastTab;
}
function hideNextPrev(numberTotalTabs) {
    var divTag = getElementsByClassNameFuj(document.body, "next-prev");
    var tabsToHide = hideNextTab.split("|");
    var totalTabs = parseInt(numberTotalTabs.substring(numberTotalTabs.indexOf("#a") + 2));
    var idFirstTab = GetFirstTab();
    var idLastTab = GetLastTab(numberTotalTabs);
	
	// Next arrows
    for (var x = 0; x < tabsToHide.length; x++) {
        if (tabsToHide[x] != "") {
            var changed = false;
            for (var i = 0; i < divTag.length; i++) {
                var liTag = divTag[i].getElementsByTagName("li");
                for (var j = 0; j < liTag.length; j++) {
                    var aTag = liTag[j].getElementsByTagName("a");
                    //if (aTag[0].getAttribute("href") == idLastTab && hideNextTab.indexOf(idLastTab) != -1) {
					if (aTag[0].getAttribute("href").indexOf(idLastTab) != -1 && hideNextTab.indexOf(idLastTab) != -1) {
                        var parent = liTag[j].parentNode;
                        parent.removeChild(liTag[j]);
                    }
                    else if (aTag[0].getAttribute("href") == idFirstTab && hideNextTab.indexOf(idFirstTab) != -1) {
						var parent = liTag[j].parentNode;
                        parent.removeChild(liTag[j]);
                    }
                    else {
                        if (aTag[0].getAttribute("href") == tabsToHide[x]) {
                            var aHref = aTag[0].getAttribute("href");
                            var total = 0;
                            if (!changed) {
                                total = parseInt(aHref.substring(2)) + 1;
                            }
                            else {
                                total = parseInt(aHref.substring(2)) - 1;
                            }
                            if (total < 9) {
                                aTag[0].setAttribute("href", "#a0" + total.toString());
                                changed = true;
                            }
                            else {
                                aTag[0].setAttribute("href", "#a" + total.toString());
                                changed = true;
                            }
							j = liTag.length; // Exit when find the tab
                        }
                    }
                }
            }
        }
    }
	// Prev arrows
	for (var x = tabsToHide.length - 1; x >= 0; x--) {
        if (tabsToHide[x] != "") {
            var changed = false;
            for (var i = divTag.length - 1; i >= 0; i--) {
                var liTag = divTag[i].getElementsByTagName("li");
                for (var j = liTag.length - 1; j >= 0; j--) {
                    var aTag = liTag[j].getElementsByTagName("a");
                    if (aTag[0].getAttribute("href") == idLastTab && hideNextTab.indexOf(idLastTab) != -1) {
                        var parent = liTag[j].parentNode;
                        parent.removeChild(liTag[j]);
                    }
                    else if (aTag[0].getAttribute("href") == idFirstTab && hideNextTab.indexOf(idFirstTab) != -1) {
						var parent = liTag[j].parentNode;
                        parent.removeChild(liTag[j]);
                    }
                    else {
                        if (aTag[0].getAttribute("href") == tabsToHide[x]) {
                            var aHref = aTag[0].getAttribute("href");
                            var total = 0;
                            if (!changed) {
                                total = parseInt(aHref.substring(2)) - 1;
                            }
                            else {
                                total = parseInt(aHref.substring(2)) + 1;
                            }
                            if (total < 9) {
                                aTag[0].setAttribute("href", "#a0" + total.toString());
                                changed = true;
                            }
                            else {
                                aTag[0].setAttribute("href", "#a" + total.toString());
                                changed = true;
                            }
							j = -1; // Exit when find the tab
                        }
                    }
                }
            }
        }
    }
}
// END TABS

function GetAleat() {
    var d = new Date();
    return d.getTime();
};

$(document).ready(function(){	
	// Click events
	$("[id$='-list-submit']").click(function(event){ 
		var id = $(this).attr('id');
		var category = id.substring(0, id.lastIndexOf("-list-submit"));
		var filter = $("#filter-" + category).val();
		var address = $("#routingPath").val() + "/" + category + "/" + filter;
		window.location = address;
		event.preventDefault();
	});
	
	$("[id$='-list-nested-submit']").click(function(event){ 
		var id = $(this).attr('id');
		var category = id.substring(0, id.lastIndexOf("-list-nested-submit"));
		var filter = $("#filter-" + category).val();
		var filter2 = $("#optgroup-" + filter).val();
		if (filter2 != null) {
			if (filter2 != "")
				filter = filter2;
		}
		var address = $("#routingPath").val() + "/" + category + "/" + filter;
		window.location = address;
		event.preventDefault();
	});
	
	$('#multifilter-submit').click(function(event){ 
		var address = $("#routingPath").val();
		var id = "";
		var category = "";
		var filter = "";
		var filterOptGroup = "";
		$("[id^=filtermulti-]").each(function () {
			id = "#" + $(this).attr('id');
			filter = $(id).val();
			if (filter != "-1")
			{
				category = id.substring("#filtermulti-".length);
				filterOptGroup = $("#optgroup-" + filter).val();
				if (filterOptGroup != null && filterOptGroup != "") {
					if (filterOptGroup != filter)
					{
						category = category + "-" + filter;
						filter = filterOptGroup;
					}
				}
				address += "/" + category + "/" + filter;
			}
		});
		window.location = address + "/";
		event.preventDefault();
	});
    $('.load-registrer-download').each(function () {
        var aleat = GetAleat();
        var tcmDownload = $(this).attr('id');
        var link = $(this);
        var pathPage = window.location.pathname;
        var actionData = { tcm_download: tcmDownload, path_Page: pathPage };
        $.get('/us/webForms/download_file-register.aspx?a=' + aleat, actionData, function (data) {
            link.attr('href', data);
        });
    });

	// My FujitsuProfile
	var name = "loggedUser";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) 
    {
	  var c = ca[i].replace(/^\s+|\s+$/g,'');
      if (c.indexOf(name)==0) 
	  {
	     var userName = c.substring(name.length,c.length).replace('=','');
	     $("#logout").css("display","none");
	     $("#loggin").css("display","block");
		 $("#user-name-siggned").append(userName);
	  }
    }

	// Edit my profile
    if ($('#private').length) 
    {
        var isChecked = $("#private")[0].checked;

        if(isChecked == true)
        {
            $("#business").change();
        }
    }
});

// PDUT
var obj =null ;
$(document).ready(function () {
    //Add jQuery.parseJSON to jQuery 1.3
    $.extend({
        error: function (msg) { throw msg; },
        parseJSON: function (data) {
            if (typeof data !== "string" || !data) {
                return null;
            }
            data = jQuery.trim(data);
            if (/^[\],:{}\s]*$/.test(data.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@")
            .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]")
            .replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                return window.JSON && window.JSON.parse ?
                window.JSON.parse(data) :
                (new Function("return " + data))();
            } else {
                jQuery.error("Invalid JSON: " + data);
            }
        }
    });

    $('.filters .select').change(function () {
        var parametersOption = 'FillCombos';
        var parametersSearchFilters = '';
        var parametersComponentId = $('.hdResultsComponentId').val();
        var parametersTemplateDynamicId = $('.hdResultsDynamicTemplateId').val();
        var parametersPrefilter = $('.hdPreFilter').val();
        var counter = 0;
        var dropSelected = $(this).val();

        $(".filters .select").each(function () {
            counter++;

            parametersSearchFilters += counter + "#" + $(this).attr("name") + '~' + $(this).val() + '|';
        });

        var aleat = GetAleat();
        var actionData = {
            parameters_Option: parametersOption,
            parameters_SearchFilters: parametersSearchFilters,
            parameters_ComponentId: parametersComponentId,
            parameters_TemplateDynamicId: parametersTemplateDynamicId,
            parameters_FilterResult: parametersPrefilter
        };
        $('#wait').show();
        $.post('/us/webForms/pdut-search.aspx?a=' + aleat, actionData, function (data) {
            
		  try
		{
             obj = $.parseJSON(data);	
		}
		catch(err)		
		{
			obj = data;
		}
            $('.filters .select').each(function () {
                var nameSelect = $(this).attr("name");

                for (var i = 0; i < obj.length; i++) {
                    if (nameSelect == obj[i].Title)
                    {
                        $(this).find('option').remove();
                        $(this).append($('<option>').text($('.hdSelectValue').val()).attr('value', ''));
                        for (var j = 0; j < obj[i].Value.length; j++)
                        {
                            if (obj[i].Value[j].selected) {
                                $(this).append($('<option>').text(obj[i].Value[j].value).attr('value', obj[i].Value[j].value).attr('selected', 'selected'));
                            } else {
                                $(this).append($('<option>').text(obj[i].Value[j].value).attr('value', obj[i].Value[j].value));
                            }
                        }
                    }
                }

            });
            $('#wait').hide();
		});
    });

    $("#SubmitSearch").click(function () {
        var parametersSearch = '';
        parametersSearch = GetSearchFilter();
        $('.hdSearchField').val(parametersSearch);

        var linkResultsPage = $('.hdLinkPageResult').val();
        $("#searchFilters").attr("action", linkResultsPage);
    });

    $(".resultsSearch").ready(function () {
        if ($('.resultsSearch').length > 0) {
            SearchProducts();
        }
    });

    $('a.pagination_page').live('click', function() {
        var page = $(this).text();
        $('.hdResultsStart').val(page);
        SearchProducts();
        return false;
    });

    $('a.new-window').live('click', function (e) {
	    e.preventDefault();
	    var url = $(this).attr("href");
        window.open(url, 'newWindow');
    });

    $(".loginAccess").click(function () {
        var pass = $(".passwordAccess").val();
        if ((pass.indexOf(">") > -1) || (pass.indexOf("<") > -1)) {
            return false;
        }
    });

    function SearchProducts() {
        var parametersOption = 'Search';
        var parametersStart = $('.hdResultsStart').val();
        var parametersElementsShow = $('.hdResultsElementsShow').val();
        var parametersLinkField = $('.hdLinkFieldDetail').val();
        var parametersSearch = $('.hdResultsSearchField').val();
        var parametersFieldsShow = $('.hdResultsFields').val();
        var parametersComponentId = $('.hdResultsComponentId').val();
        var parametersTemplateDynamicId = $('.hdResultsDynamicTemplateId').val();
        var parametersTabFilterField = $('.hdResultsTabFilterField').val();
        var parametersKeyPDUT = $('.hdResultsKeyPDUT').val();
        var parametersFilterResult = $('.hdResultsFilter').val();
        var parametersFormatResult = $('.hdResultsFormatResult').val();
        var parametersLogicalOperator = $('.hdResultsLogicalOperator').val();
		var parametersFullWidthFields = $('.hdResultsFullWidthFields').val();
		var parametersSubsidiariePath = $('.hdSubsidiariePath').val();

        var aleat = GetAleat();
        var actionData = { parameters_Option: parametersOption, parameters_search: parametersSearch, 
            parameters_fields_show: parametersFieldsShow, parameters_link_field: parametersLinkField, 
            parameters_ComponentId: parametersComponentId, parameters_TemplateDynamicId: parametersTemplateDynamicId, 
            parameters_elements_show: parametersElementsShow, parameters_start: parametersStart, 
            parameters_TabFilterField: parametersTabFilterField, parameters_KeyPDUT: parametersKeyPDUT, 
            parameters_FilterResult: parametersFilterResult, parameters_FormatResult: parametersFormatResult, 
            parameters_LogicalOperator: parametersLogicalOperator, parameters_SubsidiariePath: parametersSubsidiariePath
        };
        $('#wait').show();
        $.post('/us/webForms/pdut-search.aspx?a=' + aleat, actionData, function (data) {
           
		   try
		{
             obj = $.parseJSON(data);	
		}
		catch(err)		
		{
			obj = data;
		}
            var result = ShowResults(obj);
            $('.resultsSearch').html(result);

            if (obj.tabs.length > 0) {
                setTabNav({
   		            wrapper: "div.tabnav",
                    tabs_wrapper: ".tablist",
                    btn_next_prev: ".next-prev a",
                    content: "div.content",
                    corner_img_left_top: "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-lt.gif",
                    corner_img_left_bottom: "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-lb.gif",
                    corner_img_right_bottom: "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-rb.gif",
                    corner_img_right_top: "//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/corner-rt.gif"
                });
            }
            $('#wait').hide();
        });
    }

    function ShowResults(objResults) {
        var htmlResult = '';

        if (objResults.tables.length > 0) {
            $('.resultFound').html(objResults.totalResults + ' ' + $('.hdResultsFound').val());
            if (objResults.formatResults == 'Tabs') {
                htmlResult = '<div class="tabnav clearfix">';
                htmlResult += ShowTabs(objResults);
            }
            else {
                htmlResult += '<div class="frameV"><div class="frameH">';
            }

            htmlResult += ShowTablesProducts(objResults);

            if (objResults.formatResults == 'Pagination') {
                htmlResult += ShowPagination(objResults);
            }

            if (objResults.formatResults == 'Tabs') {
                htmlResult += '</div>';
            }
            else {
                htmlResult += '</div></div>';
            }
        }
        else {
            htmlResult = '<p>' + $('.hdSearchNotResults').val() + ' <br /><br /><a href="javascript:history.back()">' + $('.hdGoBackPage').val() + '</a></p>';
        }

        return htmlResult;
    }

    function ShowPagination(obj) {
        var pagination = obj.pag;
        var contentPag = '';
        if (pagination.length > 0) {
            contentPag += '<div class="pagination">';
            for (var i = 0; i < pagination.length; i++) {
                contentPag += pagination[i];
            }
            contentPag += '</div>';
        }
        return contentPag;
    }

    function ShowTabs(obj) {
        var tabs = obj.tabs;
        var contentTabs = '';
        var indexTab = 0;
        if (tabs.length > 0) {
            contentTabs += '<ul class="tablist clearfix">';
            for (var i = 0; i < tabs.length; i++) {
                indexTab++;
                contentTabs += '<li><a href="#' + GetIndexTab(indexTab) + '">' + tabs[i] + '</a></li>';
            }
            contentTabs += '</ul>';
        }
        return contentTabs;
    }

    function ShowTablesProducts(obj) {
        var tables = obj.tables;
        var tabs = obj.tabs;
        var formatResults = obj.formatResults;
        var content = '';
        var indexTable = 0;

        for (var i = 0; i < tables.length; i++) {
            indexTable++;
            if (tabs.length > 0) {
                content += '<div class="content emphasis" id="' + GetIndexTab(indexTable) + '">';
                content += '<div class="headline"><h2 class="red-heading">' + tabs[i] + '</h2></div>';
            }
            else {
                content += '<div class="content emphasis">';
            }

            content += '<table class="standard-min fixed" cellspacing="0" cellpadding="0">';
            content += GetHeaders(tables[i].headers, tables[i].fullWidth);
            content += GetRowsTable(tables[i].rows, tables[i].fullWidth);
            content += '</table>';

            if (formatResults == "Tabs") {
                content += GetNextPrevHrefTab(indexTable, tabs.length);
            }
            content += '</div>';
        }

        return content;
    }

    function GetHeaders(headers, fullWidth) {
        var contentHeader = '';
        var fullWidthStyle = '';
        contentHeader += '<tr>';
        for (var i = 0; i < headers.length; i++) {
            if (fullWidth[i]) {
                fullWidthStyle = 'class="nowrap" ';
            }
            else {
                fullWidthStyle = '';
            }
            contentHeader += '<th align="center" valign="top" ' + fullWidthStyle + 'scope="col">' + headers[i].title + '</th>';
        }
        contentHeader += '</tr>';
        return contentHeader;
    }

    function GetRowsTable(rowsTable, fullWidth) {
        var contentTable = '';
        for (var i = 0; i < rowsTable.length; i++) {
            contentTable += '<tr>' + GetCelsTable(rowsTable[i].cel, fullWidth) + '</tr>';
        }
        return contentTable;
    }

    function GetCelsTable(celsTable, fullWidth) {
        var contentCels = '';
        for (var i = 0; i < celsTable.length; i++) {
            if (fullWidth[i]) {
                fullWidthStyle = 'class="nowrap" ';
            }
            else {
                fullWidthStyle = '';
            }
            contentCels += '<td valign="top"' + fullWidthStyle + '>' + celsTable[i] + '</td>';
        }
        return contentCels;
    }

    function GetSearchFilter() {
        var search = '';

        $('.filters .text').each(function () {
            if ($(this).val() != "") {
                search += 'INPUT#' + $(this).attr("name") + '~' + $(this).val() + '|';
            }
        });

        $('.filters .select').each(function () {
            if ($(this).val() != "") {
                search += 'COMBO BOX#' + $(this).attr("name") + '~' + $(this).val() + '|';
            }
        });

        $('.filters .radio').each(function () {
            if ($(this).is(':checked')) {
                search += 'RADIO BUTTON#' + $(this).attr("name") + '~' + $(this).val() + '|';
            }
        });

        $('.filters .checkbox').each(function () {
            if ($(this).is(':checked')) {
                search += 'CHECK BOX#' + $(this).attr("name") + '~' + $(this).val() + '|';
            }
        });

        return search;
    }

    function GetNextPrevHrefTab(indexTab, totalTabs) {
        var nextPrevTabs = '';
        if (totalTabs > 1) {
            nextPrevTabs += '<div class="next-prev">';
            nextPrevTabs += '<ul>';
            if (indexTab == 1) {
                nextPrevTabs += '<li><a href="#' + GetIndexTab(indexTab + 1) + '">';
                nextPrevTabs += '<img src="//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/arrow-next.gif" width="13" height="13" title="Next" alt="Next" />';
                nextPrevTabs += '</a></li>';
            }
            else {
                if (indexTab < totalTabs) {
                    nextPrevTabs += '<li><a href="#' + GetIndexTab(indexTab - 1) + '">';
                    nextPrevTabs += '<img src="//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/arrow-prev.gif" width="13" height="13" title="Prev" alt="Prev" />';
                    nextPrevTabs += '</a></li>';
                    nextPrevTabs += '<li><a href="#' + GetIndexTab(indexTab + 1) + '">';
                    nextPrevTabs += '<img src="//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/arrow-next.gif" width="13" height="13" title="Next" alt="Next" />';
                    nextPrevTabs += '</a></li>';
                }
                else {
                    nextPrevTabs += '<li><a href="#' + GetIndexTab(indexTab - 1) + '">';
                    nextPrevTabs += '<img src="//www.fujitsu.com/us/resources/design/stylesheets/images/css_images/ajax/tabnav/arrow-prev.gif" width="13" height="13" title="Prev" alt="Prev" />';
                    nextPrevTabs += '</a></li>';
                }
            }
            nextPrevTabs += '</ul>';
            nextPrevTabs += '</div>';
        }
        return nextPrevTabs;
    }

    function GetIndexTab(index) {
        var ret = '';
        if (index < 10) {
            ret = 'a0' + index;
        }
        else {
            ret = 'a' + index;
        }
        return ret;
    }
});

/*----------PRODUCT FINDER----------*/
function FinderForm(eID)
{
	var vCheckForm = eID.split("|")[0];
	var check = document.getElementById(eID);
	var inputFilter = document.getElementById('inputFilter').value;
	

	if(check.checked == true)
	{
		ChecksControl (check.id, check.name, true);
		inputFilter += eID + "||";
		if (document.getElementById('firstCheckedCategory').value == "" )
			{document.getElementById('firstCheckedCategory').value = check.id.split('|')[0];}
	}
	else
	{
		ChecksControl (check.id, check.name, false);
		inputFilter = inputFilter.replace(eID + "||", "");
	}
	document.getElementById('inputFilter').value = inputFilter;
	ShowHideContent();
}
function ShowHideContent()
{
	var numProducts = document.getElementById("numberProducts").value;
	var inputFilters = document.getElementById("inputFilter").value;
	var filters = GetFilterValues(inputFilters);
	
	var productsCounter = 0;
	var productsResults = [];

	for (var i=0;i<numProducts;i++)
	{
		var product = document.getElementById('product' + i);
		var names = product.getAttribute("name");

		if (ShowHideProducts(names, filters))
		{
			document.getElementById('product' + i).style.display = "block";
			var arrNames = names.split('||');
			
			for(var y=0;y<arrNames.length;y++)
			{
				if(arrNames[y] != ""){
					if ($.inArray(arrNames[y], productsResults) == -1)
					{	productsResults.push(arrNames[y]); }
				}
			}
		}
		else
		{
			document.getElementById('product' + i).style.display = "none";
			productsCounter++;
		}
	}
	if(inputFilters == "")
	{
		ShowBanner(true);
		ShowClearDiv(false);
	}
	else
	{
		ShowBanner(false);
		ShowClearDiv(true);
	}

	if (productsCounter==numProducts)
	{
		document.getElementById('no-results').style.display = "block";
		ShowBanner(true);
	}
	else
	{ document.getElementById('no-results').style.display = "none"; }

	DisableChecks(productsResults, filters);
}
function ShowHideProducts(productFeatures, featuresToFilter)
{
	var containsFeature = true;
	var resultsInformation = [];
	var isInProduct = "";

	if (featuresToFilter.isEmpty != "true")
	{
		for (var cat in featuresToFilter)
		{
			isInProduct = "";
			if (cat != "isEmpty")
			{
			  var feat = featuresToFilter[cat].split('|');
			  for(var i=0; i<feat.length;i++)
			  {
			    if (productFeatures.indexOf(cat + "|" + feat[i]) != -1)
			    {isInProduct+="true";}
			    else
		    	{isInProduct+="false";}
			  }
			  resultsInformation.push(isInProduct);
			}
		}
	}
	else
	{
		resultsInformation.push("true");
	}
	if (resultsInformation.length == 0)
	{
		return false;
	}
	for(var i=0;i<resultsInformation.length;i++)
	{
		if (resultsInformation[i].indexOf("true") == -1)
		{return false;}
	}
	return containsFeature;
}
function ShowBanner(show)
{
	var id_banner = document.getElementById('product-finder-banner');
	if (show == true)
	{	$(id_banner).removeClass("finder-hide");}
	else
	{	$(id_banner).addClass("finder-hide");}
}
function ShowClearDiv(show)
{
	var id_banner = document.getElementById('clear');
	if (show == true)
	{	id_banner.style.display = "block";}
	else
	{id_banner.style.display = "none";}
}
function ClearAll()
{
	var numForms = document.getElementById("formIds").value.split('|');
	for (var i=0;i<numForms.length;i++)
	{
		var  vCheckForm = numForms[i];
		if(vCheckForm != '')
    {
	    var frm = document.getElementById(vCheckForm);
			for (x=0;x<frm.elements.length;x++)
			{
				if(document.getElementById(frm.elements[x].id).checked == true)
				{	ChecksControl (frm.elements[x].id, frm.elements[x].name, false);}
			}
		}
	}
	document.getElementById('inputFilter').value = "";
	document.getElementById('firstCheckedCategory').value = "";
	ShowHideContent();
	ShowClearDiv(false);
}
function ShowHideContentFirstLoaded()
{
	var fForms = document.getElementById("formIds").value.split('|');
	var showClearButton = false;
	if (document.getElementById('inputFilter').value != "")
	{
		if (navigator.appName.toLowerCase().indexOf('internet explorer') != -1)
		{
			ShowChecksAndValuesForExplorer(true, false);
		}
		ShowHideContent();
		showClearButton = true;
	}
	else
	{
		if (navigator.appName.toLowerCase().indexOf('internet explorer') != -1)
		{ ShowChecksAndValuesForExplorer(true, true); }
		else
		{ ShowChecksAndValuesForExplorer(false, true); }
		ShowHideContent();
	}
	ShowClearDiv(showClearButton);
}
function ShowChecksAndValuesForExplorer(showChecksSquares, fillInputFilter)
{
	var fForms = document.getElementById("formIds").value.split('|');
	for (var i=0;i<fForms.length;i++)
	{
		var  vCheckForm = fForms[i];
		if(vCheckForm != '')
    {
	    var frm = document.getElementById(vCheckForm);
			for (var x=0;x<frm.elements.length;x++)
			{
				var typeInput = document.getElementById(frm.elements[x].id).type;
				var checkBoxObject = document.getElementById(frm.elements[x].id);
				if(checkBoxObject.checked == true)
				{
					if (fillInputFilter == true)
					{document.getElementById('inputFilter').value += frm.elements[x].id + "||";}
					if (showChecksSquares == true)
					{	ChecksControl (checkBoxObject.id, checkBoxObject.name, true);}
				}
			}
		}
	}
}
function DisableChecks(resultsProducts, filteredItms)
{
	var fForms = document.getElementById("formIds").value.split('|');
	var reloadForm = false;
	var allFormsEnabled = true;
	var firstChckdCateg = document.getElementById('firstCheckedCategory').value;
		
	if(firstChckdCateg != '')
	{
		var frm = document.getElementById(firstChckdCateg);
		var itIsChecked = false;
		for (var x=0;x<frm.elements.length;x++)
		{
			var chckBoxObject = document.getElementById(frm.elements[x].id);
			if (chckBoxObject.checked)
			{
				itIsChecked= true;
				allFormsEnabled = false;
			}
			if (chckBoxObject.disabled == true)
				{
					chckBoxObject.disabled = false;
					var element = chckBoxObject.name + "_lb";
					var id_element = document.getElementById(element);
					$(id_element).removeClass("fchecked-gray-disabled");
				}
		}
		if (itIsChecked == false)
		{
			var inptFilt = document.getElementById('inputFilter').value;
			if (inptFilt != '')
			{
				firstChckdCateg = inptFilt.substring(0,inptFilt.indexOf('|'));
				document.getElementById('firstCheckedCategory').value = firstChckdCateg;
		
				frm = document.getElementById(firstChckdCateg);
				for (var x=0;x<frm.elements.length;x++)
				{
					chckBoxObject = document.getElementById(frm.elements[x].id);
					if (chckBoxObject.disabled == true)
					{
						chckBoxObject.disabled = false;
						var element = chckBoxObject.name + "_lb";
						var id_element = document.getElementById(element);
						$(id_element).removeClass("fchecked-gray-disabled");
					}
				}
			}
			else
				{firstChckdCateg = "";}
		}
	}
		
	for (var i=0;i<fForms.length;i++)
	{
		var  vCheckForm = fForms[i];
		if(vCheckForm != '' && vCheckForm != firstChckdCateg)
    {
	    var frm = document.getElementById(vCheckForm);
			for (var x=0;x<frm.elements.length;x++)
			{
				var typeInput = document.getElementById(frm.elements[x].id).type;
				var checkBoxObject = document.getElementById(frm.elements[x].id);
				if($.inArray(checkBoxObject.id, resultsProducts) == -1)
				{
					checkBoxObject.disabled = true;
					var element = checkBoxObject.name + "_lb";
					var id_element = document.getElementById(element);
					$(id_element).addClass("fchecked-gray-disabled");
					if (checkBoxObject.checked)
					{
						ChecksControl (checkBoxObject.id, checkBoxObject.name, false);
						document.getElementById("inputFilter").value = document.getElementById("inputFilter").value.replace(checkBoxObject.id + "||", "");
						reloadForm = true;
					}
					allFormsEnabled = false;
				}
				else
				{
					if (checkBoxObject.checked != true)
					{
						checkBoxObject.disabled = false;
						var element = checkBoxObject.name + "_lb";
						var id_element = document.getElementById(element);
						$(id_element).removeClass("fchecked-gray-disabled");
					}
				}
			}
		}
	}
	if (reloadForm == true)
	{	ShowHideContent();}
	if (allFormsEnabled == true)
	{	document.getElementById('firstCheckedCategory').value = '';}
}
function ChecksControl (elementId, elementName, check)
{
	var element = elementName + "_lb";
	var lbcheck = elementName + "_ch";
	var id_lbcheck = document.getElementById(lbcheck);
	var id_element = document.getElementById(element);
	if (check == true)
	{
		$(id_element).addClass("fchecked-gray");
		$(id_lbcheck).removeClass("funchecked");
		$(id_lbcheck).addClass("fchecked");
	}
	else
	{
	  document.getElementById(elementId).checked = false;
		$(id_element).removeClass("fchecked-gray");
		$(id_lbcheck).removeClass("fchecked");
		$(id_lbcheck).addClass("funchecked");
	}
}

function GetFilterValues(inputFilters)
{
	var filters = inputFilters.split("||");
	
	var categoriesObj = {"isEmpty": "true"};
	
	for(var i=0; i<filters.length;i++)
	{
	  if (filters[i]!= "")
	  {
	    var category = filters[i].split("|")[0];
	    var feature = filters[i].split("|")[1];

	    if (categoriesObj[category] == null)
	    {
	      categoriesObj[category] = feature;
	      categoriesObj["isEmpty"] = false;
	    }
	    else
	    {
	    	categoriesObj[category] += "|" + feature;
	    }
	  }
	}
	return categoriesObj;
}
/*---------- Listing Pagination Starts----------*/
$(document).ready(function(){
var navigation_html="" ;
var show_per_page=0;
		if(document.getElementById("ShowPagination")!=null)
		{
			if(document.getElementById("show_per_page").value !=null && document.getElementById("show_per_page").value!="" && document.getElementById("show_per_page").value!=0)	
			show_per_page= document.getElementById("show_per_page").value;
			else
			show_per_page= 10;
			
			var showPagination= document.getElementById("ShowPagination").value;
		}
		if(showPagination =='show pagination')
		{
        var number_of_items = $('#DivListPagination').children().children().size();
        var number_of_pages = Math.ceil(number_of_items/show_per_page);
        var last_page=number_of_pages;
        $('#current_page').val(0);
        $('#show_per_page').val(show_per_page);
	
        var current_link = 0;
		var page_interval=3;
        var iniPagination = 0;
                var iStart = 1;
                var minRange = Math.max(iniPagination, iStart - 3);
                var maxRange = Math.min(last_page, iStart + 3);
		var count=0;
       while(number_of_pages > current_link){
						if(current_link<maxRange)
						{
						  navigation_html += '<a class="pagination_page"  onclick="go_to_page(' + current_link +',' + maxRange +','+last_page+', '+ page_interval +')"  style="cursor:pointer;" longdesc="' + current_link +'">'+ (current_link + 1) +'<\/a>';
						  if(current_link==1)				
							navigation_html+='<span class="pagination_dot" id="spandot1" style="display:none">...</span>';
						}
						
						else if(current_link==maxRange || current_link!=last_page-1)
						{
							if(count==0)
							{
								navigation_html+='<span class="pagination_dot" id="spandot">...</span>';
							}						
							navigation_html += '<a class="pagination_page"  onclick="go_to_page(' + current_link +',' + maxRange +','+last_page+', '+ page_interval +')"  style="cursor:pointer; display:none" longdesc="' + current_link +'">'+ (current_link + 1) +'<\/a>';

								navigation_html+='<span class="pagination_dot" id="spandot'+current_link+'" style="display:none">...</span>';		
							count++;
						}
						else if(current_link==last_page-1)
						{
							navigation_html += '<a class="pagination_page"  onclick="go_to_page(' + current_link +',' + maxRange +','+last_page+', '+ page_interval +')"  style="cursor:pointer;" longdesc="' + current_link +'">'+ (current_link + 1) +'<\/a>';
						}
					current_link++;
				}
        $('#page_navigation').html(navigation_html);    
        $('#page_navigation .pagination_page:first').addClass('active');
        $('#DivListPagination').children().children().css('display', 'none');
        $('#DivListPagination').children().children().slice(0, show_per_page).css('display', 'block');
		$( "ul.filterlist" ).each(function( ULIndex ) {			
			var visibleLIs = $( this ).children('li:visible').length;
			if(visibleLIs>0)
			{
                                //show month name heading
  
            }
			else
			{
                //hide month name heading
				var H3MonthHeading = $(this).prev();
				H3MonthHeading.hide();
			}
		});
}        
});

function go_to_page(page_num, maxrange, last_page, page_interval){
        var show_per_page = parseInt($('#show_per_page').val());       
        start_from = page_num * show_per_page;
        end_on = start_from + show_per_page;
        $('#DivListPagination').children().children().css('display', 'none').slice(start_from, end_on).css('display', 'block');
		$( "ul.filterlist" ).each(function( ULIndex ) {
			var visibleLIs = $( this ).children('li:visible').length;			
			var H3MonthHeading = $(this).prev();	
			if(visibleLIs>0)
			{
				H3MonthHeading.show();
            }
			else
			{
				H3MonthHeading.hide();
			}
		});
		var temppage=page_num-page_interval;
		if(page_num>=3 && page_num<last_page-2)
		{
			for(var clink=page_num-3; clink<page_num+3;clink++)
			{
				$('.pagination_page[longdesc=' + clink +']').removeAttr("style");
				$('.pagination_page[longdesc=' + clink +']').css({cursor:"pointer"});
			    $('#spandot').show();
			
				if(page_num<=last_page-2)
				 $('#spandot'+(last_page-2)+'').show();
				if(page_num>=last_page-4)
					$('#spandot'+(last_page-2)+'').hide();
				if(page_num==3)
					$('#spandot').hide();
			}
			if(page_num>4)
			{
				for(var hidenext=page_num-4;hidenext>0;hidenext--)
				{
					$('.pagination_page[longdesc=' + hidenext +']').css('display', 'none');
					$('.pagination_page[longdesc=' + hidenext +']').css({cursor:"pointer"});
					
				}
			}
			if(page_num >=4 )
			{
			  for(var hideback=page_num+3; hideback<last_page-1;hideback++)
				{
						$('.pagination_page[longdesc=' + hideback+']').css('display', 'none');
						$('.pagination_page[longdesc=' + hideback+']').css({cursor:"pointer"});
				}
			}
			

		}
		else if(page_num>=0 && page_num<=3)
		{
				for(var clink=1; clink<=page_num+3;clink++)
				{
					$('.pagination_page[longdesc=' + clink +']').removeAttr("style");
					$('.pagination_page[longdesc=' + clink +']').css({cursor:"pointer"});
				}
				for(var hidlast=page_num+4;hidlast<last_page-1;hidlast++)
				{
						$('.pagination_page[longdesc=' + hidlast+']').css('display', 'none');
						$('.pagination_page[longdesc=' + hidlast+']').css({cursor:"pointer"});
				}
				
				if(last_page>=4)
				{
					$('#spandot').hide();
					$('#spandot'+(last_page-2)+'').show();
				}
		}		
		else if(page_num ==last_page-1)
		{
				for(var clink=page_num-3; clink<=last_page;clink++)
				{
					$('.pagination_page[longdesc=' + clink +']').removeAttr("style");
					$('.pagination_page[longdesc=' + clink +']').css({cursor:"pointer"});
				}
				for(var hidlast=1;hidlast<=last_page-5;hidlast++)
				{
						$('.pagination_page[longdesc=' + hidlast+']').css('display', 'none');
						$('.pagination_page[longdesc=' + hidlast+']').css({cursor:"pointer"});
				}
				
					$('#spandot').show();
					$('#spandot'+(last_page-2)+'').hide();
		}
		
		if(document.getElementById("IsEventpage")!=null)
		{
	   	   var Isevent=document.getElementById("IsEventpage").value;
		   if(Isevent=="yes")
		  {
			 $('#DivListPagination tr th').parent().css('display', 'block')
		  }
	   }
	$('.pagination_page[longdesc=' + page_num +']').addClass('active').siblings('.active').removeClass('active');
        $('#current_page').val(page_num);
}
/*----------Listing Pagination Ends----------*/
/*----------------Cookies start --------------*/
if ( typeof String.prototype.startsWith != 'function' ) {
  String.prototype.startsWith = function( str ) {
    return this.substring( 0, str.length ) === str;
  }
};
function SetJPcookie ( )
{
	var URL=window.location.pathname
	if(URL.startsWith("/jp/") && (!URL.startsWith("/jp/group/")))
	{
		var d=new Date();
		var exdate = new Date();
		exdate.setDate(exdate.getDate() + 1825);
		
		var milisecvalue = (d.getTime() - d.getMilliseconds()) / 1000            
		var remdomvalue = Math.floor(Math.random() * 999999999 + 100000000)
		var cookie_value='OIC'+ milisecvalue +'.'+ remdomvalue ;
		var cookie_Name="FujitsuWebsite_common_01"
		var c_value =cookie_value + "; expires=" + exdate.toUTCString() + "; path=/; domain=.fujitsu.com";
		document.cookie = cookie_Name + "=" + c_value;			
  }
}
/*--------------------End Cookies ------------------*/

