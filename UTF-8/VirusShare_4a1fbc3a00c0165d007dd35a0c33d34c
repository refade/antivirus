jQuery.noConflict();

function getCookie(name) {
    var matches = document.cookie.match(new RegExp(
        "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
    ));
    return matches ? decodeURIComponent(matches[1]) : undefined;
}

function setCookie(name, value, options) {
    options = options || {};

    var expires = options.expires;

    if (typeof expires == "number" && expires) {
        var d = new Date();
        d.setTime(d.getTime() + expires * 1000);
        expires = options.expires = d;
    }
    if (expires && expires.toUTCString) {
        options.expires = expires.toUTCString();
    }

    value = encodeURIComponent(value);

    var updatedCookie = name + "=" + value;

    for (var propName in options) {
        updatedCookie += "; " + propName;
        var propValue = options[propName];
        if (propValue !== true) {
            updatedCookie += "=" + propValue;
        }
    }

    document.cookie = updatedCookie;
}

function deleteCookie(name, options) {
    options = options || {};
    options['expires'] = -1;
    setCookie(name, "", options);
}

function logging(id)
{
    var i = new Image();
    i.src = document.location.protocol + "//www.giveawayoftheday.com/log.php?id="+id+"&r=" + Math.round(100000 * Math.random());
}

function isChrome()
{
    return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
}

function isChromePushSupport()
{
    return isChrome() && 'serviceWorker' in navigator;
}

var common_actions = (function($) {
    return {
        conf: {
            search_url: '',
            is_ie9: false,
            twitter_acc: 'https://twitter.com/GiveawayotDay',
            fb_app_id: '',
            project: '',
            locale: '',
            safari_push: {
                enabled: 0,
                enabled_subprojects: 0,
                website_uid: '',
                url: '',
                token_url: ''
            }
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);

            $('input[placeholder], textarea[placeholder]').placeholder();
            if(Modernizr.mq('only all')) {
                $('.header_side').clone().attr('id', 'header_side2').addClass((this.conf.is_ie9 ? 'closed ' : '') + 'st-menu st-effect-1').appendTo('.st-container');
            }

            this.bindActions();
        },

        bindActions: function() {
            var that = this;
            //that.rowResize();
            //$(window).on('resize',function(e) {that.rowResize(e);});
            $(window).on('resize',function(e) {that.subResize(e);});
            $(function(e) {that.subResize(e);});
            $('.header_search .button').on('click', function(e) {that.showSearchInput(e)});
            $(document).on('mouseup', function (e) {that.hideSearchInput(e)});
            $(document).on('keypress', function(e) {that.runSearch(e)});
            $(document).on('click', '.curr_lang', function(e) {that.showLanguageMenu(e)});
            $(document).on('mouseup', function (e) {that.hideLanguageMenu(e)});
            $('.like_block').on('mousemove', function(e){that.showSocialPlusoneButtons(e)});
            $('.header .header_nav_trig').on('click', function(e){that.openSideMenu(e)});
            $(document).on('click', '.st-menu .header_nav_trig', function(e){that.closeSideMenu(e)});
            $('.language').on('change', function(e){that.selectLanguage(e)});

            $('#topMessageClose').on('click', function(e) {
                $('#topMessageBanner').hide();
                return false;
            });
/*            if (that.conf.safari_push.enabled && 'safari' in window && 'pushNotification' in window.safari) {
                that.getSafariNotificationPermission();
            }*/
        },

        getSafariNotificationPermission: function () {
            var permissionData = window.safari.pushNotification.permission(this.conf.safari_push.website_uid);
            this.checkSafariNotificationPermission(permissionData);
        },

        checkSafariNotificationPermission: function(permissionData) {
            var that = this;
            if (permissionData.permission === 'default') {
                var webservice_url = that.conf.safari_push.url.split('?')[0];
                window.safari.pushNotification.requestPermission(
                    webservice_url,
                    that.conf.safari_push.website_uid,
                    {locale: that.conf.locale},
                    that.checkSafariNotificationPermission
                );
            } else if (permissionData.permission === 'denied') {
                console.log('safari_push: denied');
            } else if (permissionData.permission === 'granted') {
                if (that.conf.safari_push.enabled_subprojects) {
                    $.ajax({
                        type: 'POST',
                        url: that.conf.safari_push.token_url,
                        data: {token: permissionData.deviceToken, locale: that.conf.locale},
                        dataType: 'json'
                    }).done(function (resp) {
                        if (!resp.status) {
                            console.log('Not registered for this pro.');
                        } else {
                            console.log('User already subscribed.');
                        }
                    });
                }
            }
        },

        showSearchInput: function(e) {
            var $target = $(e.target);
            var par = $target.parents('.header_search');
            if (!par.hasClass('active')) {
                par.addClass('active');
                var search_width = '';
                if (this.conf.project!='win') {
                    if (Modernizr.mq('(max-width: 1036px)')) {
                        search_width = $(document).width() - 60 - 63;
                        $('.inputbox_wrap').css('width', search_width);
                        $('.header_logo').hide();
                    }
                }
                else
                if (Modernizr.mq('(min-width: 720px) and (max-width: 1036px)')) {
                    search_width = Math.round($(document).width()/2) - 135 - 80;
                    $('.inputbox_wrap').css('width', search_width);
                } else if (Modernizr.mq('(max-width: 720px)')) {
                    search_width = $(document).width() - 60 - 63;
                    $('.inputbox_wrap').css('width', search_width);
                    $('.header_logo').hide();
                }
                $('.header_search .inputbox').focus();
            }
        },

        hideSearchInput: function(e) {
            var container = $('.header_search .inputbox, .curr_lang, .st-menu');
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $('.header_search').removeClass('active');
                $('.inputbox_wrap').css('width', '');
                $('.header_logo:hidden').show();
                if (this.conf.is_ie9)
                {
                    $('#header_side2').removeClass('opened');
                    $('#header_side2').addClass('closed');
                }
                $('.st-container').removeClass('st-menu-open');
                $('html').removeClass('overflow');
            }
        },

        hideLanguageMenu: function(e) {
            var container = $('.languages, .curr_lang');
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $('.curr_lang').removeClass('active');
                $('.languages').slideUp(300);
            }
        },

        runSearch: function(e) {
            var that = this;
            var $target = $(e.target);
            var search_str = $.trim($target.val());
            if(e.which == 13 && search_str && $target.hasClass('inputbox') && $('.header_search').hasClass('active')) {
                var s_url = that.conf.search_url;
                s_url += (s_url.split('?')[1] ? '&' : '?') + 's=' + search_str;
                window.location.replace(s_url);
            }
        },

        showLanguageMenu: function(e) {
            $(e.currentTarget).toggleClass('active').next('.languages').slideToggle(300);
        },

        showSocialPlusoneButtons: function(e) {
            var $target = $(e.target);
            $target.hide();

            var $parent = $target.parent();
            if($parent.find('.like_block_rendered').length) {
                return;
            }

            var $buttons = $('<ul></ul>');
            $buttons.addClass('like_block_rendered');
            $target.after($buttons);

            if ($buttons.children().length == 0) {
                var $li_fb = $('<li></li>');
                $li_fb.html('<div id="fb-root"></div><div class="fb-like" data-href="https://www.facebook.com/giveawayotday/" data-layout="button" data-action="like" data-show-faces="false" data-share="false"></div>');
                $buttons.append($li_fb);
                downloadShareForm.fbInit(this.conf.fb_app_id);

                var $li_tw = $('<li></li>');
                $li_tw.html('<a href="https://twitter.com/GiveawayotDay" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow</a>');
                $buttons.append($li_tw);
                if(typeof (twttr) != 'undefined') {
                    twttr.widgets.load();
                } else {
                    $.getScript("//platform.twitter.com/widgets.js");
                }

                var $li_g = $('<li></li>');
                $li_g.html('<a target="_blank" href="https://plus.google.com/+giveawayoftheday/posts"><img alt="Google+" src="https://ssl.gstatic.com/images/icons/gplus-16.png"></a>');
                $buttons.append($li_g);
            }
        },

        showSocialFbLikeButton: function(e){

            var current_url = 'https://www.facebook.com/giveawayotday/';
            e.target.style.display = 'none';
            var parent = e.target.parentNode;

            if (!parent || parent.getElementsByClassName('prog_soc').length)
                return;
            parent.innerHTML = '';
            var span = document.createElement('span');
            span.className = 'like_link opened';
            parent.appendChild(span);

            var iframe = document.createElement('iframe');
            iframe.src = 'https://www.facebook.com/plugins/like.php?locale=en_US&href=' + encodeURIComponent(current_url) + '&send=false&layout=button&width=86&show_faces=false&action=like&colorscheme=light&font&height=20';
            iframe.style.border = 'none';
            iframe.style.overflow = 'hidden';
            iframe.style.width = '49px';
            iframe.style.height = '20px';
            iframe.setAttribute('allowtransparency', 'true');
            span.appendChild(iframe);
        },

        showSocialTwLikeButton: function(e){

            var current_url = 'https://www.facebook.com/giveawayotday/';
            e.target.style.display = 'none';
            var parent = e.target.parentNode;

            if (!parent || parent.getElementsByClassName('twitter-follow-button').length)
                return;

            parent.innerHTML = '<a href="' + this.conf.twitter_acc + '" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false"></a>';;
            if(typeof (twttr) != 'undefined') {
                twttr.widgets.load();
            } else {
                $.getScript("//platform.twitter.com/widgets.js");
            }
        },

        rowResize: function() {
            var $prev = $('.col1.prev');
            var $offers = $('.col2.offers');
            if($prev.length && $offers.length) {
                var height = '';
                //$prev.css('height', height);
                //$offers.css('height', height);
                if(Modernizr.mq('(min-width: 1037px)')) {
                    height = Math.max($prev.outerHeight(), $offers.outerHeight());
                }
                //$prev.css('height', height);
                //$offers.css('height', height);
            }
            //var $max_height = Math.max($('.right_clmn').outerHeight(), $('.right_col').outerHeight(), $('.left_col').outerHeight());
            //$('.right_clmn').css('height', $max_height);
            ////$('.right_col').css('height', $max_height);
            //$('.left_col').css('height', $max_height);

            /*var $h1_1 = $('.banner'),
                $h1_2 = $('.top'),
                $h2 = $('.soft');

            $('.soft, .top').css('min-height', 0);
            if ($(window).width() > 1420){
                if ($h1_1.outerHeight() + $h1_2.outerHeight() > $h2.outerHeight()) {
                    $h2.css('min-height', $h1_1.outerHeight() + $h1_2.outerHeight());
                } else {
                    $h1_2.css('min-height', $h2.outerHeight() - $h1_1.outerHeight());
                }
            } else if ($(window).width() < 1421 && $(window).width() > 1020){
                if ($h1_2.outerHeight() > $h2.outerHeight()) {
                    $h2.css('min-height', $h1_2.outerHeight());
                } else {
                    $h1_2.css('min-height', $h2.outerHeight());
                }
            } else{
                $('.soft, .top').css('min-height',0);
            }*/
        },

        subResize: function(e) {
            if(Modernizr.mq('(max-width: 720px)'))
               $('#new-sub').removeClass('subs-col col2-2');
            else
                $('#new-sub').addClass('subs-col col2-2');
        },

        openSideMenu: function(e) {
            if (this.conf.is_ie9)
            {
                $('#header_side2').removeClass('closed');
                $('#header_side2').addClass('opened');
            }
            $('.st-container').addClass('st-effect-1 st-menu-open');
            $('html').addClass('overflow');
        },

        closeSideMenu: function(e) {
            if (this.conf.is_ie9)
            {
                $('#header_side2').removeClass('opened');
                $('#header_side2').addClass('closed');
            }
            $('.st-container').removeClass('st-menu-open');
            $('html').removeClass('overflow');
        },

        selectLanguage: function (e) {
            location.href = $(e.target).val();
        },

        defineFooterGiveawaysColumnsHeight: function () {
            var max_height = '';
            var $right = $('.right_clmn');
            var $left = $('.left_col');
            var $middle = $('.right_col');
            if (Modernizr.mq('(min-width: 1436px)')) {
                max_height = Math.max($right.outerHeight(), $middle.outerHeight(), $left.outerHeight());
                $right.css('height', max_height);
            } else if (Modernizr.mq('(min-width: 720px)')) {
                max_height = Math.max($middle.outerHeight(), $left.outerHeight());
                $right.css('height', '');
            }
            $middle.css('height', max_height);
            $left.css('height', max_height);
        }
    };
})(jQuery);

var post_actions = (function($){
    return {
        conf: {
            post_id: 0,
            is_active: 0,
            is_competition: 0,
            read_more: 'Read more',

            desc_more: {
                cont: '.prog_descr',
                btn: '.show_more a',
                class: 'content_hidden'
            },
            vote: {
                cont: '.wrap_votes',
                positive: 'positive',
                negative: 'negative',
                send_url: '',
                negative_form_cont: '[data-remodal-id=modal]',
                negative_form: false
            },
            negative_form: {
                holder: '[data-remodal-id=modal]',
                content: '#remodal-content',
                url: ''
            },
            last_comments: {
                cont: '.wrap_last_comments',
                send_url: ''
            }
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);

            this.resizePostBlock();
            this.updateRequirements();
            this.bindActions();
        },

        bindActions: function() {
            var that = this;

            if(!$(that.conf.vote.cont).hasClass('disabled')) {
                $(that.conf.vote.cont).on('click', 'span', function (e) {
                    e.preventDefault();
                    that.addVote(e)                                        
                });
            }
            
            if(!$(that.conf.last_comments.cont).hasClass('disabled')) {
                $(that.conf.last_comments.cont).on('click', '.last_comments', function (e) {
                    that.showOtherComments(e);
                });
                if (location.hash.indexOf('comment-') !== -1) {
                    $(that.conf.last_comments.cont).find('.last_comments').click();
                }
            }
            
            $(document).on('confirmation', '.remodal', function (e) {that.validateNegativeVoteForm(e)});
            $(window).on('resize', function(e) {that.resizePostBlock(e); that.updateRequirements()});



            var $desc = $('.competition-content .prog_descr:first');
            var descr_height = $desc.prop('scrollHeight');
            if (this.conf.is_active && descr_height >= 445) {
                $desc.addClass(this.conf.desc_more.class).append('<div class="show_more"><hr><a href="#">' + this.conf.read_more + '<i></i></a></div>');
            }

            $(that.conf.desc_more.btn).on('click', function(e){that.showFullDescription(e)});

            $(".join-competition_btn").click(function(){
                $.scrollTo('#gleam-widget', {duration: 300});
                return false;
            });

            $.localScroll({duration:300});
        },

        addVote: function(e) {
            var that = this;
            var $target = $(e.target);
            if ($target.hasClass(that.conf.vote.positive)) {
                that.addPositiveVote();
            } else if($target.hasClass(that.conf.vote.negative)) {
                that.addNegativeVote();
            }
        },

        addPositiveVote: function() {
            var that = this;
            var data = {
                post_id:that.conf.post_id,
                type:'positive'
            };
            that.sendVote(data).done(function (resp) {
                if (!resp.status) {
                    alert(resp.msg);
                } else {
                    $(that.conf.vote.cont + ' .'+that.conf.vote.positive).html(resp.thumber_positive);
                    $(that.conf.vote.cont + ' .'+that.conf.vote.negative).html(resp.thumber_negative);
                    comments_actions.showThanksText();
                }
                $(that.conf.vote.cont).off('click', 'span');
                $(that.conf.vote.cont).addClass('disabled');
            });
        },

        addNegativeVote: function(e) {
            var that = this;
            that.getNegativeForm();
        },

        getNegativeForm: function() {
            var that = this;
            if($(that.conf.negative_form.content).is(':empty')) {
                $.get(that.conf.negative_form.url, function(data) {
                    $(that.conf.negative_form.content).html(data);
                    
                    // Remove question v5 for competition
                    if (that.conf.is_competition) {
                        $('#v5').parent().remove();
                    } 
                });
            }
            this.conf.negative_form.obj = $(that.conf.negative_form.holder).remodal({hashTracking: false, closeOnConfirm: false});
            this.conf.negative_form.obj.open();
        },

        sendVote: function(data) {
            return $.ajax({
                type: 'POST',
                url: this.conf.vote.send_url,
                data: data,
                dataType: 'json'
            });
        },

        validateNegativeVoteForm: function(e) {
            var checkedElement = $('input[name=reasons]:checked');
            var error_text = '';
            if (!$("#other_reason").val() && ($("input[name='reasons']:checked").val()==6)) {
                error_text = this.conf.error_no_description_text;
                $('#other_reason').addClass('error');
                $('#other_reason').on('keydown', function(e){$(this).removeClass('error');});
            }
            if (!checkedElement.length) {
                error_text = this.conf.error_no_reason_text;
            }
            if (error_text) {
                $('#votedown_err').html(error_text);
                $('#votedown_err').show();
                return false;
            }

            this.confirmNegativeVoteForm();

            return false;
        },

        confirmNegativeVoteForm: function() {
            var that = this;
            $('#mess').html('');
            var checked_reason = $("input[name='reasons']:checked").val();

            var data = {
                post_id: that.conf.post_id,
                type: 'negative',
                reason: checked_reason,
                comment: $("#other_reason").val()
            };
            that.sendVote(data).done(function (resp) {
                if (!resp.status) {
                    alert(resp.msg);
                } else {
                    $(that.conf.vote.cont + ' .'+that.conf.vote.positive).html(resp.thumber_positive);
                    $(that.conf.vote.cont + ' .'+that.conf.vote.negative).html(resp.thumber_negative);
                }
                that.conf.negative_form.obj.close();
                $(that.conf.vote.cont).off('click', 'span');
                $(that.conf.vote.cont).addClass('disabled');
            });
        },
        
        showOtherComments: function(e) {
            e.preventDefault();
            var that = this;
            $('#comments_loading').show();
            
            var data = {
                post_id: that.conf.post_id
            };
            
            return $.ajax({
                type: 'GET',
                url: that.conf.last_comments.send_url,
                data: data,
                dataType: 'json'
            }).done(function (resp) {
                if (!resp.status) {
                    alert(resp.msg);
                } else {
                    $('#comments_loading').hide();
                    $(that.conf.last_comments.cont).html(resp.comments);
                    that.resizePostBlock();

                    if (location.hash.indexOf('comment-') !== -1) {
                        setTimeout(function () {
                            $.scrollTo(location.hash);
                        }, 50);
                    }
                }
            });
        },

        recalculateTimerParams: function() {
            if(!this.conf.is_active)
                return;

            var $timer = $('.timer');
            var timer_height = $timer.outerHeight();
            if (timer_height > 150) {
                var style = '<style>.timer .left:before {border-top-width: '+Math.round(timer_height/2)+'px; border-bottom-width: '+Math.round(timer_height/2)+'px;}</style>'
                $('html > head').append(style);
            }
        },

        updateRequirements: function() {
            if (this.conf.is_active)
                return;

            if (Modernizr.mq('(min-width: 1036px) and (max-width: 1436px)')) {
                var cgb_top = 0;
                if ($('.cgb_wrapper').length) {
                    cgb_top = $('.cgb_wrapper').outerHeight()+20;
                }
                $(".requirements").css({top: $('.download').outerHeight() + cgb_top + 20});
            }
            else
                $(".requirements").removeAttr('style');
        },

        resizePostBlock: function(e) {
            if(this.conf.is_active) {
                var padding_top = $('.requirements').outerHeight();

                if ($('.cgb_wrapper').length) {
                    padding_top = padding_top + $('.cgb_wrapper').outerHeight();
                }

                if(padding_top) {
                    if(!Modernizr.mq('(min-width: 1036px)')) {
                        padding_top = '';
                    }
                    $('.right_col').css('padding-top', padding_top);
                }
                //this.recalculateTimerParams();
            } else {
                var margin_top = $('.requirements').outerHeight() + $('.download').outerHeight() + 20;
                if ($('.cgb_wrapper').length) {
                    margin_top = margin_top + $('.cgb_wrapper').outerHeight()+20;
                }
                if(!Modernizr.mq('(min-width: 1036px)')) {
                    margin_top = '';
                }
                $('.offers').css('margin-top', margin_top);
            }
            /*var $comments_cont = $('#comment_conteiner');
            var $comments = $('#comments');
            var $softupdates_cont = $('#updates_conteiner');
            var cont_height = Math.max($comments.outerHeight(), $softupdates_cont.outerHeight());
            $comments_cont.height(cont_height);
            $softupdates_cont.height(cont_height);

            var doc_width = $(document).width();*/
            //Featured titles
            //if (doc_width > 720) {
            //    var $featured_blocks = $('.wrap_items .prog_item');
            //    var featured_blocks_h = $featured_blocks.map(function() { return $(this).outerHeight(); }).get();
            //    $featured_blocks.css('height', Math.max.apply(null, featured_blocks_h));
            //}
            //Show/hide fake featured.
            //if (doc_width > 1418)
            //    $('.prog_item_empty').show();
            //else
            //    $('.prog_item_empty').hide();

            //Description
            //if (doc_width > 1036 && doc_width < 1436) {
            //    var instruction_h = $('.instruction').length > 0 ? $('.instruction').outerHeight() : $('.download').outerHeight();
            //    var desc_height = $('.timer').outerHeight() + instruction_h + $('.requirements').outerHeight() - $('.ads_wrap').outerHeight();
            //    /*                    console.log('timer - ' + jQuery('.timer').outerHeight() );
            //     console.log('instruction - ' + jQuery('.instruction').outerHeight() );
            //     console.log('download - ' + jQuery('.download').outerHeight() );
            //     console.log('requirements - ' + jQuery('.requirements').outerHeight() );
            //     console.log('ads_wrap - ' + jQuery('.ads_wrap').outerHeight() );
            //     console.log('desc_height - ' + desc_height);
            //     console.log('---------------------------------------------');*/
            //    $('.prog_descr').outerHeight(desc_height);
            //}
        },

        showFullDescription: function(e) {
            e.preventDefault();
            var $target = $(e.target);
            $target.parents(this.conf.desc_more.cont).removeClass(this.conf.desc_more.class);
        }
    };
})(jQuery);

var comments_actions = (function($) {
    return {
        conf: {
            post_id: 0,
            comment_id: 0,
            lang_id: 0,
            vote_url: '',
            add_comment_url: '',
            translate_comment_url: '',
            //rating_actions: '.cmnt_options .rght a',
            rating_actions: '.votelinks a',
            up_class: 'comment-up',
            down_class: 'comment-down',
            rating: '.comment-rating',
            positive_rating: 'green',
            reply_class: 'link_reply',
            cancel_class: 'link_cancel',
            wrap_comment_form: '.wrap_form',
            comment_form: '#comment_form',
            comments_holder: '.wrap_comments',
            reply_text: 'Reply',
            cancel_text: 'Cancel',
            wrap_comment_reply: 'form_reply',
            replies_notice: 'replies_notice',
            // translate_button: 'link_translate' 
            translate_button: 'translate_button',
            
            fb_app_id: '',
            show_fb_comments: false,
            comment_form_hidden: false
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
            $(this.conf.comment_form).find('[name="content"]').val("");
        },
        
        onLoadActions: function (e) {
            this.checkIsNeedFBinit(e);
        },        

        bindActions: function() {
            var that = this;
            $(that.conf.comments_holder).on('click', that.conf.rating_actions, function (e) {that.voteToComment(e)});
            $(that.conf.comments_holder).on('click', '.'+that.conf.reply_class, function(e) {that.showReplyForm(e)});
            $(that.conf.comments_holder).on('click', '.'+that.conf.cancel_class, function(e) {that.cancelReplyForm(e)});
            $(that.conf.comment_form).on('submit', function(e) {that.validateCommentForm(e)});
            $(that.conf.comment_form).on('change', '#'+that.conf.replies_notice, function(e) {that.setDenialRepliesNotice(e)});
            $(that.conf.comment_form).on('click', '[name="content"]', function(e) {that.showCommentFormFields()});
            $(that.conf.comments_holder).on('click', '.'+that.conf.translate_button, function(e) {that.commentTranslate(e)});
            
            $(function(e) {that.onLoadActions(e)});
            
            $(document).on('scroll.fbInit', function(e) {that.checkIsNeedFBinit(e)});
            $('.fb_link').on('click', function(e) {that.showFBCommentsForm(e)});
            $(document).on('fb.loaded', function (e, resp) {that.scrollToCommentIfHash()});
            //$(document).on('fb.comment_create', function (e, resp) {that.onFbCommentCreate(resp)});
            //$(document).on('fb.comment_remove', function (e, resp) {that.onFbCommentRemove(resp)});

        },
        
        fbInit: function (app_id) {
            var that = this;
            var fb_params = { status: true, cookie: true, xfbml: true, version: 'v2.10', appId: app_id };
            if (typeof (FB) != 'undefined') {
                that.fbInitEvents(fb_params);
            } else {
                $.getScript("//connect.facebook.net/"+this.langToFbLang(that.conf.lang)+"/sdk.js", function () {
                    that.fbInitEvents(fb_params);
                });
            }
        },
        fbInitEvents: function (fb_params) {
            FB.init(fb_params);
            FB.Event.subscribe('xfbml.render', function(resp){$(document).trigger('fb.loaded', resp)});
            FB.Event.subscribe('comment.create', function(resp){$(document).trigger('fb.comment_create', resp)});
            FB.Event.subscribe('comment.remove', function(resp){$(document).trigger('fb.comment_remove', resp)});
        },

        checkIsNeedFBinit: function (e) {
            if (!$('.fb_wrap').is(":visible")) {
                return;
            }
            var comments_wrap = $('#comment_conteiner').offset().top;
            var cur_scroll = $(e.target).scrollTop() + $(window).height();
            if (cur_scroll >= comments_wrap) {
                this.fbInit(this.conf.fb_app_id);
                $(document).off('scroll.fbInit');
            }
        },

        showFBCommentsForm: function (e) {
            if (this.conf.show_fb_comments) {
                $.scrollTo('.fb_wrap', {duration: 100});
                return;
            }
           var $com_cont = $('#comment_conteiner');
            var h = $com_cont.height();
            $com_cont.height(h);
            var $fb = $('.fb_wrap');
            var $fb_loader = $fb.find('.fb-loading');
            $fb.show();
            $fb_loader.show();
            this.fbInit(this.conf.fb_app_id);
            $(document).on('fb.loaded', function () {
                $com_cont.height('');
                $fb_loader.hide();
            });
            $(document).off('scroll.fbInit');
            this.conf.comment_form_hidden = true;
            $(this.conf.wrap_comment_form).hide();
            $('.link_fb').hide();
        },
        /*
        onFbCommentCreate: function (resp) {
            var data = {
                object_id: this.conf.object_id,
                object_type: this.conf.object_type,
                type: 'create'

            };
            this.sendPostRequest(this.conf.fb_comm_url, data);
        },

        onFbCommentRemove: function (resp) {
            var data = {
                object_id: this.conf.object_id,
                object_type: this.conf.object_type,
                type: 'remove'
            };
            this.sendPostRequest(this.conf.fb_comm_url, data);
        },
        */
        sendPostRequest: function (url, data) {
            $.ajax({
                type: 'POST',
                url: url,
                data: data,
                dataType: 'json'
            });
        },

        scrollToCommentIfHash: function () {
            if (location.hash.indexOf('comment-') !== -1) {
                setTimeout(function () {
                    $.scrollTo(location.hash);
                }, 1000);
            }
        },
        langToFbLang: function(lang) {
            var fb_lang = {
                'ar': 'ar_AR',
                'de': 'de_DE',
                'el': 'el_GR',
                'en': 'en_US',
                'es': 'es_ES',
                'fr': 'fr_FR',
                'it': 'it_IT',
                'ja': 'ja_JP',
                'nl': 'nl_NL',
                'pt': 'pt_BR',
                'ro': 'ro_RO',
                'ru': 'ru_RU',
                'tr': 'tr_TR'
            };

            return lang in fb_lang ? fb_lang[lang] : 'en_US';
        },        
        
        showCommentFormFields: function () {
            var $form = $(this.conf.comment_form);
            var $content = $form.find('[name=content]');
            $content.addClass('height80');
            if (!this.conf.user_id) {
                $form.find('.top_wrap.first').fadeIn(600);
                $form.find('.top_wrap.second').fadeIn(600);
            }
            $form.find('.c-input-submit').fadeIn(600);
            $form.find('.gray').fadeIn(600);
            
            $('#googlerecaptcha').show();
            /*
            if (this.conf.recaptcha.enabled) {
                var $grecaptcha = $("#googlerecaptcha");
                if (!$grecaptcha.length || $grecaptcha.is(":empty")) {
                    $form.find('.submit-block').addClass('height80');
                    $form.find('.c-voting').addClass('flright');
                    this.recaptchaInit();
                }
            }
            */
        },        

        voteToComment: function(e) {
            e.preventDefault();
            var that = this;
            var $link = $(e.target);
            if($link.parent().hasClass('no_vote')) {
                return false;
            }
            var comment_id = $link.parents('.cmnt').data('cid');
            var type = $link.attr('class') == that.conf.up_class ? 'up' : 'down';

            var data = {
                comment_id: comment_id,
                type: type
            };

            $.ajax({
                type: 'POST',
                url: this.conf.vote_url,
                data: data,
                dataType: 'json'
            }).done(function(resp) {
                if (!resp.status) {
                    alert(resp.msg);
                } else {
                    var $rating_cont = $link.nextAll(that.conf.rating);
                    var rating_val = '';
                    if(resp.rating > 0) {
                        rating_val += '(+' + resp.rating + ')';
                        $rating_cont.addClass(that.conf.positive_rating);
                    } else {
                        rating_val += '(' + resp.rating + ')';
                        $rating_cont.removeClass(that.conf.positive_rating);
                    }
                    $rating_cont.html(rating_val);
                }
                $link.parent().addClass('no_vote');
//                            $(that.conf.actions_holder).off('click', 'a');
            });
        },

        showThanksText: function () {
            var that = this;
            $('html,body').animate({
                scrollTop: $(that.conf.comments_holder).offset().top
            }, 500);
            $('.rate_thx').fadeIn(1200);
        },

        showReplyForm: function(e) {
            e.preventDefault();

            var that = this;
            var $link = $(e.target);
            var $comment_form = $(that.conf.wrap_comment_form);
            var parent_id = $link.closest('.cmnt[data-parent="0"]').data('cid') || 0;
            var reply_id = $link.closest('.cmnt').data('cid') || 0;
            var parent_author = $link.closest('.cmnt').data("author");

            $.scrollTo($(window).scrollTop() - $comment_form.height() + "px");

            $('.' + that.conf.cancel_class).addClass(that.conf.reply_class).removeClass(that.conf.cancel_class).html(that.conf.reply_text);
            
            $link.parents('.cmnt_options').after($comment_form);

            //$comment_form.find('h2').hide();
            $comment_form.find('#comment_parent').val(parent_id);
            $comment_form.find('#comment_reply').val(reply_id);
            $link.removeClass(that.conf.reply_class).addClass(that.conf.cancel_class).html(that.conf.cancel_text);
            $comment_form.addClass(that.conf.wrap_comment_reply);
            $comment_form.find('textarea').focus().val(parent_author ? parent_author + ", " : "");
            $('.link_fb').hide();
            if (that.conf.comment_form_hidden) {
                $comment_form.show();
            }
        },

        cancelReplyForm: function(e) {
            e.preventDefault();
            
            var that = this;
            var $link = $(e.target);
            var $comment_form = $(that.conf.wrap_comment_form);

            $('.wrap_fb_and_link').before($comment_form);
            
            //$comment_form.find('h2').show();
            $comment_form.find('#comment_parent').val(0);
            $comment_form.find('#comment_reply').val(0);
            $comment_form.removeClass(that.conf.wrap_comment_reply);
            $link.addClass(that.conf.reply_class).removeClass(that.conf.cancel_class).html(that.conf.reply_text);
            $comment_form.find('textarea').val('');

            $.scrollTo($(window).scrollTop() + $comment_form.height() + "px");
            if (this.conf.comment_form_hidden) {
                $comment_form.hide();
            } else {
                $('.link_fb').show();
            }
        },

        validateCommentForm: function(e) {
            e.preventDefault();
            var that = this;
            var $form = $(e.currentTarget);
            var $content = $form.find('[name=content]');
            if (!$content.hasClass('height80')) {
                this.showCommentFormFields();
                return;
            }            
            var $form = $(e.target);
            var name = $form.find('[name=name]').val();
            var email = $form.find('[name=email]').val();
            var content = $form.find('[name=content]').val();
            var parent = $form.find('#comment_parent').val();
            var reply = $form.find('#comment_reply').val();
            var replies_notice = $form.find('#replies_notice').prop('checked') ? '1' : '0';


            var error = false;
            if(!name || !email || !content) {
                if (!name) {
                    this.addErrorToField($form.find('[name=name]'));
                }
                if (!email) {
                    this.addErrorToField($form.find('[name=email]'));
                }
                if (!content) {
                    this.addErrorToField($form.find('[name=content]'));
                }
                $('.comments_error').html(this.conf.no_fields_text).show();

                error = true;
            }

            var re = /.+@.+\..+/i;
            if (!re.test(email)) {
                this.addErrorToField($form.find('[name=email]'));
                $('.comments_error').html(this.conf.no_fields_text).show();

                error = true;
            }
            
            //if($(".g-recaptcha").is(":visible")) {
            if(!$("#googlerecaptcha").is(":empty")) {
                if(!$('#g-recaptcha-response').val()){
                    alert('Wrong recaptcha!');
                    error = true;                
                }    
            }

            if (error) {
                return false;
            }

            $('.comments_error').html("");


            var data = {
                name: name,
                email: email,
                content: content,
                parent: parent,
                reply: reply,
                replies_notice: replies_notice,
                post_id: this.conf.post_id,
                lang_id: this.conf.lang_id,
                g_recaptcha_response: $('#g-recaptcha-response').val()
            };

            this.submitCommentForm(data);
        },

        addErrorToField: function ($field) {
            $field.addClass('error').keyup(function () {
                $field.removeClass('error').unbind('keyup');
            });
        },

        submitCommentForm: function(data) {
            var that = this;
            var $button = $('#comment_form [type="submit"]');
            var $loading = $('.comment_form_loading');
            
            $button.prop('disabled', true);
            $loading.css("display", "inline-block");

            $.ajax({
                type: 'POST',
                url: this.conf.add_comment_url,
                data: data,
                dataType: 'json'
            }).done(function(resp) {
                $button.prop('disabled', false);
                $loading.css("display", "none");
                $(that.conf.wrap_comment_form).find('textarea').val("");
                if (!resp.status) {
                    $('.comments_error').html(resp.msg).show();
                } else {
                    $('.link_cancel').click();
                    if (data.parent > 0) {
                        $('#comment-' + data.parent).append(resp.comment);
                    } else {
                        var $parent = $('#comments_container');
                        var $sibling_is_top = $parent.children('.cmnt.is_top:last');
                        if ($sibling_is_top.length) {
                            $sibling_is_top.after(resp.comment);
                        } else {
                            $parent.prepend(resp.comment);
                        }
                        //$('#comments_container').prepend(resp.comment);
                    }
                    $.scrollTo('#comment-' + resp.comment_id, {duration: 100});
                                       
                    if (resp.show_captcha) {
                        //$('#googlerecaptcha').empty();
                        if($("#googlerecaptcha").is(":empty")) {
                            renderRecaptcha();
                        } else {
                            grecaptcha.reset();
                        }
                    }
                }
            });
        },

        setDenialRepliesNotice: function (e) {
            var $checkbox = $(e.target);
            var options = {
                path: '/',
                domain: '.' + check_user_lang.conf.domain
            };
            if ($checkbox.prop("checked")) {
                options.expires = 0;
                setCookie('denial_replies_notice', '', options);
            } else {
                options.expires = 365 * 24 * 3600;
                setCookie('denial_replies_notice', 1, options);
            }
        },

        commentTranslate: function (e) {
            e.preventDefault();

            var $button = $(e.target);

            if ($button.hasClass("original")) {
                this.setCommentOriginal($button);
            } else {
                this.setCommentTranslate($button);
            }
        },
        setCommentTranslate: function ($button) {
            var $comment = $button.closest('.cmnt');

            if ($comment.find('.translate_loading').length === 0) {
                // $button.after('<div class="comment_form_loading"></div>');
                
                //$comment.find('img.load').attr("style", "");
                $('img#load-'+$button.data('id')).attr("style", "");
            }

            var data = {
                comment_id: $button.data('id')
            };

            $.ajax({
                type: 'GET',
                url: this.conf.translate_comment_url,
                data: data,
                dataType: 'json'
            }).done(function(resp) {
                if (resp.status) {
                    $('#comment-' + $button.data('id') + ' > .comment_content').hide();
                    $('#comment-' + $button.data('id') + ' > .comment_translate').html(resp.content).show();
                    $button.addClass("original").html($button.data("original"));
                } else {
                    alert(resp.error);
                }
                //$button.next('.comment_form_loading').remove();
                
                //$comment.find('img.load').attr("style", "display: none;");
                $('img#load-'+$button.data('id')).attr("style", "display: none;")
                
//                $comment.find('.translate_loading').remove();
//                if (resp.status) {
//                    $button.addClass("disabled gray");
//                    $comment.children('.cmnt_options').after('<div class="comment_translate">' + resp.content + '</div>');
//                } else {
//                    $comment.children('.cmnt_options').after('<div class="comment_translate error">' + resp.error + '</div>');
//                }
            });
        },
        setCommentOriginal: function ($button) {
            $('#comment-' + $button.data('id') + ' > .comment_content').show();
            $('#comment-' + $button.data('id') + ' > .comment_translate').hide();
            $button.removeClass("original").html($button.data("translate"));
        }
    };
})(jQuery);

var language_support = (function($) {
    return {
        conf: {
            wrap: 'lang_wrap',
            selected_wrap: 'selected_lang_wrap',
            lang_holder: 'one_lang_holder',
            add_btn: 'lang_add',
            del_btn: 'lang_del',
            val_holder: 'lang_val',
            hidden: '#lang_support'
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
        },

        bindActions: function() {
            var that = this;
            $('.'+that.conf.wrap).on('click', '.'+that.conf.lang_holder, function (e) {that.highlightLang(e)});
            $('.'+that.conf.wrap).on('click', '.'+that.conf.add_btn, function (e) {that.addLang(e)});
            $('.'+that.conf.selected_wrap).on('click', '.'+that.conf.del_btn, function (e) {that.delLang(e)});
            $('.program_form').on('submit', function(e) {that.getSelectedLangs(e)});
        },

        highlightLang: function(e) {
            var $target = $(e.currentTarget);
            $('.'+this.conf.lang_holder).removeClass('active');
            $target.addClass('active');
        },

        addLang: function(e) {
            var $target = $(e.target);
            var lang = this.getLangFromTarget($target);
            $('.'+this.conf.selected_wrap).append(this.renderSelected(lang));
            $target.parents('.'+this.conf.lang_holder).remove();
        },

        getLangFromTarget: function($target) {
            return $target.parents('.'+this.conf.lang_holder).find('.'+this.conf.val_holder).text();
        },

        delLang: function(e) {
            var $target = $(e.target);
            var lang = this.getLangFromTarget($target);
            $('.'+this.conf.wrap).append(this.renderSupported(lang));
            $target.parents('.'+this.conf.lang_holder).remove();
        },

        renderSelected: function(lang) {
            return '<div class="'+this.conf.lang_holder+'">' +
                        '<span class="'+this.conf.del_btn+'"></span>' +
                        '<span class="'+this.conf.val_holder+'">' +lang + '</span>' +
                    '</div>';
        },

        renderSupported: function(lang) {
            return '<div class="'+this.conf.lang_holder+'">' +
                        '<span class="'+this.conf.val_holder+'">' +lang + '</span>' +
                        '<span class="'+this.conf.add_btn+'"></span>' +
                    '</div>';
        },

        getSelectedLangs: function(e) {
            var selected_lang = [];
            $('.'+this.conf.selected_wrap+' .'+this.conf.val_holder).each(function() {
                selected_lang.push($(this).text());
            });
            $(this.conf.hidden).val(selected_lang.join(','));
        }
    };
})(jQuery);

var downloadShareForm = (function($) {
    return {        
        conf: {
            form_url: '',
            social_url: '',
            email_url: '',
            form_id: '#soc_download',
            post_id: 1,
            post_title: '',
            post_url: '',
            fb_app_id: '',
            landing_url: '',
            is_auth: 0,
            start: 0,
            test_mode: 0
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.fbInit(this.conf.fb_app_id);
            this.bindActions();           
        },

        fbInit: function (app_id) {
            var that = this;
            var fb_params = { status: true, cookie: true, xfbml: true, version: 'v2.5', appId: app_id };
            if(typeof (FB) != 'undefined') {
                FB.init(fb_params);                                
            } else {
                $.getScript("//connect.facebook.net/en_US/sdk.js", function () {
                    FB.init(fb_params);                       
                });
            }
            var initializedInterval = setInterval(function () {
                if (typeof (FB) !== 'undefined'/* && FB.__globalCallbacks*/) {
                    for (var i in FB.__globalCallbacks) { // check empty
                        clearInterval(initializedInterval);

                        if (location.hash.indexOf('comment-') !== -1) {
                            setTimeout(function () {
                                $.scrollTo(location.hash);
                            }, 1000);
                        }

                        return;
                    }
                }
            }, 100);
        },

        bindActions: function() {
            var that = this;
            $('.download_btn, .second_btn, .label_link').on('click', function(e) {that.showShareForm(e); _gaq.push(['_trackPageview', '/downloads']); });
            $(document).on('click', '.close_btn', function(e) {that.closeShareForm(e)});
            $(document).on('click', 'block .btn_download', function(e) {that.closeShareForm(e)});
            $(document).on('click', '.return_a', function(e) {that.returnToShareForm(e)});
            $(document).on('click', '#fb_dshare', function(e) {that.fbShare(e)});
            $(document).on('click', '#tw_dshare', function(e) {that.twShare(e)});
            //$(window).on('message', function(e) {that.checkTwShare(e)});
            $(document).on('click', "#ask_link", function(e) {that.sendLinkToEmail(e)});
            $(document).on('keypress', function(e) {that.checkSendLinkToEmail(e)});

            if(that.conf.start) {
                $(window).on('load', function(e) {that.showShareForm(e);});
            }
        },

        showShareForm: function(e) {
            e.preventDefault();
            var that = this;

            if(!that.conf.start && that.openLanding()) {
                return false;
            }

            var $form = $(that.conf.form_id);
            if(!$form.length) {
                $.get(that.conf.form_url, {pid: that.conf.post_id}, function (data) {
                    if(data.auth) {
                        window.location.href = data.content;
                    } else {
                        $('body').append(data.content);
                        $(that.conf.form_id).show();
                        $(document.body).addClass('overflow');
                        
                        //Check if user logged in with Facebook
                        FB.getLoginStatus(function(response) {
                            that.statusChangeCallback(response);
                          });                         
                    }
                },
                'json');
            } else {
                $form.show();
                $(document.body).addClass('overflow');
            }
            that.log(4304);            
        },
        openLanding: function() {
            if(!this.conf.landing_url) return false;
            if (getCookie('cgb_lan')) return false;

            setCookie('cgb_lan', 1, {expires: 14*24*60*60, path: '/', domain: '.giveawayoftheday.com'});
            window.open(this.conf.post_url + '?start');
            location.href = this.conf.landing_url;

            return true;
        },

        closeShareForm: function(e) {
            //e.preventDefault();
            $(this.conf.form_id).hide();
            $(document.body).removeClass('overflow');
        },

        returnToShareForm: function(e) {
            e.preventDefault();
            var $target = $(e.target);
            $target.parents('.block').hide();
            $('#soc_download_inner').show();
        },

        checkSendLinkToEmail: function(e) {
            var $target = $(e.target);
            if (e.which == 13 && $target.attr('id') == 'download_email') {
                $('#ask_link').click();
            }
        },

        sendLinkToEmail: function(e) {
            e.preventDefault();
            var that = this;
            var email = $("#download_email").val();
            if (!that.validateEmail(email)) {
                alert('Wrong email!');
                return;
            }
            
            if($("div").is(".email_steam_keys")) {
                if(!$('#g-recaptcha-response').val()){
                    alert('Wrong recaptcha!');
                    return;                
                }                
            }

            var params = {
                pid: that.conf.post_id,
                email: email,
                subscribe: $("#subs").attr('checked'),
                g_recaptcha_response: $('#g-recaptcha-response').val()
            };
            $.ajax({
                url: that.conf.email_url,
                type: 'POST',
                data: params,
                success: function (response) {
                    if (response.status) {
                        $("#soc_download_inner").hide();
                        $("#soc_download_inner").after(response.content);
                        that.log(4322);
                    }
                }
            });
        },

        log: function(id) {
            var i = new Image();
            i.src = document.location.protocol + "//www.giveawayoftheday.com/log.php?id="+id+"&r=" + Math.round(100000 * Math.random());
        },

        fbShare: function(e) {
            e.preventDefault();
            var that = this;
            FB.ui({
                method: 'feed',
                name: that.conf.post_title + ' goes FREE for 24 hours.',
                link: that.conf.post_url,
                picture: '',
                description: '',
                href: location.href,
                display: 'popup'
            }, function(response) {
                if (typeof(response) == "undefined")
                   var answer = "undefined";
                else
                   var answer = jQuery.stringify(response);
                $.ajax({
                    type: 'POST',
                    url: '/ajax/posts/fblog',
                    data: {url : encodeURIComponent(that.conf.post_url), fbanswer: answer},
                    dataType: 'json'
                });
                that.showLink('facebook', response && response.post_id ? response.post_id : 0);
                _gaq.push(['_trackPageview', '/facebookshare']);
/*                if (response && response.post_id) {
                    that.showLink('facebook', response.post_id);
                    _gaq.push(['_trackPageview', '/facebookshare']);
                }*/
            });
        },

        twShare: function(e) {
            e.preventDefault();
            var that = this;
            window.open(that.tweetUrlBuilder({url: that.conf.post_url, text: that.conf.post_title}), 'Tweet', 'height=500,width=700');
        },

        tweetUrlBuilder: function(o) {
            return [
                'https://twitter.com/intent/tweet?tw_p=tweetbutton',
                '&url=', encodeURI(o.url),
                '&text=', o.text
            ].join('');
        },

        checkTwShare: function(e) {
            var that = this;
            if(e && e.originalEvent.data){
                var data;
                try{
                    data = JSON.parse(e.originalEvent.data);
                }catch(e){
                    // Don't care.
                }
                if(data && data.params && data.params.indexOf('tweet') > -1){
                    that.showLink('twitter');
                }
            }
        },

        showLink: function(soc_type, soc_post) {
            var that = this;
            var params = {
                pid: that.conf.post_id,
                soc_post: soc_post
            };

            $.ajax({
                url: that.conf.social_url+'/'+soc_type,
                type: 'POST',
                data: params,
                success: function (response) {
                    if (response.status) {
                        sd_form = $("#sd_table_cell").html();
                        $("#soc_download_inner").hide();
                        $("#soc_download_inner").after(response.content);
                        that.log(4322);
                    }
                }
            });
        },

        validateEmail: function (email) {
            var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;

            return re.test(email);
        },
        
        statusChangeCallback: function (response) {
            //console.log('statusChangeCallback');
            //console.log(response);
            //
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
              // Logged into your app and Facebook.              
              this.afterFbLogin();
            } else {                             
              // The person is not logged into your app or we are unable to tell.
            //      document.getElementById('status').innerHTML = 'Please log ' +
            //        'into this app.';
            
                $('#fb_login').show();
                $('#fb_dshare').hide();
            }
        }, 
        
        afterFbLogin: function () {
            var that = this;
            FB.api('/me', function(response) {
              //console.log('Successful login for: ' + response.name);
          //      document.getElementById('status').innerHTML =
          //        'Thanks for logging in, ' + response.name + '!';

                //console.log('user_id: ' + response.id);               
                
                //Set gaotd_auth_fb cookie
                $.get(that.conf.set_auth_fb_cookie_url, {fb_user_id: response.id, post_id: that.conf.post_id}, 
                    function (data) {}, 'json');                

                $('#fb_login').hide();
                $('#fb_dshare').show();
            });
        },
        
        loginViaFacebook: function() {
            var that = this;
            FB.login(function(response) {
              that.checkLoginState();
            }, {scope: 'public_profile,email'});    
        },
        
        checkLoginState: function() {
            var that = this;
            FB.getLoginStatus(function(response) {
              that.statusChangeCallback(response);
            });
        }        
        
    };
})(jQuery);



var gaotd_countdown = (function($){
    return {
        render_sec: function(holder, until, texts) {
            var hours = texts['hours'] || 'hours';
            var mins = texts['mins'] || 'mins';
            var secs = texts['secs'] || 'secs';
            $(holder).countdown({
                until: until,
                timezone: 0,
                format: 'HMS',
                layout: '<span class="countdown-row countdown-show3">' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{h<}<span class="diggit">{h10}</span><span class="diggit">{h1}</span>{h>}</span>' +
                '<span class="countdown-period">' + hours + '</span>' +
                '</span>' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{m<}<span class="diggit">{m10}</span><span class="diggit">{m1}</span>{m>}</span>' +
                '<span class="countdown-period">' + mins + '</span>' +
                '</span>' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{s<}<span class="diggit">{s10}</span><span class="diggit">{s1}</span>{s>}</span>' +
                '<span class="countdown-period">' + secs + '</span></span>' +
                '</span>'
            });
        },
        render_days: function(holder, until, texts) {
            var days = texts['days'] || 'days';
            var hours = texts['hours'] || 'hours';
            var mins = texts['mins'] || 'mins';
            $(holder).countdown({
                until: until,
                timezone: 0,
                format: 'DHM',
                layout: '<span class="countdown-row countdown-show3">' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{d<}<span class="diggit">{d10}</span><span class="diggit">{d1}</span>{d>}</span>' +
                '<span class="countdown-period">' + days + '</span>' +
                '</span>' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{h<}<span class="diggit">{h10}</span><span class="diggit">{h1}</span>{h>}</span>' +
                '<span class="countdown-period">' + hours + '</span>' +
                '</span>' +
                '<span class="countdown-section">' +
                '<span class="countdown-amount">{m<}<span class="diggit">{m10}</span><span class="diggit">{m1}</span>{m>}</span>' +
                '<span class="countdown-period">' + mins + '</span></span>' +
                '</span>'
            });
        },
        render: function(holder, until, texts) {
            if ($(holder).length>0) {
                var today = new Date();
                var diff = Math.abs( until.getTime() - today.getTime());
                var diffDays = Math.floor( diff / (1000 * 3600 * 24));
                if (diffDays >= 1)
                    this.render_days(holder, until, texts);
                else
                    this.render_sec(holder, until, texts);
            }
        }
    }
})(jQuery);

var subscribe_action = (function($) {
    return {
        conf: {
            post_id: 0,
            subscribe: {
                btn: '#featured_subscribe',
                field: '#featured_email',
                url: '',
                error: 'subscribe_error'
            }
        },
        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
        },
        bindActions: function() {
            var that = this;
            $(that.conf.subscribe.btn).on('click', function(e){that.featuredSubscribe(e)});
            $(document).on('keypress', function(e) {that.checkSubscribeIsSubmit(e)});
        },

        featuredSubscribe: function (e) {
            var that = this;
            var email = $(that.conf.subscribe.field).val();
            $('.subscribe_error').html('').css('');
            if (!email || !downloadShareForm.validateEmail(email)) {
                $(that.conf.subscribe.field).addClass('error');
                return;
            }

            $.ajax({
                type: 'POST',
                url: that.conf.subscribe.url,
                data: {email: email, pid: that.conf.post_id},
                dataType: 'json'
            }).done(function (resp) {
                if (!resp.status) {
                    $(that.conf.subscribe.field).addClass('error');
                } else {
                    respinmarkup = '<label class="thnks green">'+resp.content+'</label>';
                    if ($('.subscribe_block').length) { //если такой элемент существует
                        $('.subscribe_block').html(respinmarkup);
                    } else if ($('#subscribe_with_game_block').length) {
                        $('#subscribe_with_game_block').html(respinmarkup);
                    }
                }
            });
        },

        checkSubscribeIsSubmit: function(e) {
            var $target = $(e.target);
            if(e.which == 13 && '#' + $target.attr('id') == this.conf.subscribe.field) {
                $(this.conf.subscribe.btn).click();
            }
        }
    }
})(jQuery);

var subscribe_popup_form = (function($) {
    return {
        conf: {
            form_id: '#subscribe_popup_form',
            popup_button: '.call_subscribe_form',
            subscribe: {
                btn: '#featured_subscribe_popup',
                field: '#featured_email_popup',
                url: '',
                error: 'subscribe_error'
            }
        },
        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
        },
        bindActions: function () {
            var that = this;
            $(that.conf.popup_button).on('click', function(e) {that.showSubscribeForm(e)});
            $(document).on('keypress', function(e) {that.checkSubscribeIsSubmit(e)});
        },
        showSubscribeForm: function(e) {
            e.preventDefault();
            
            var that = this;
            var $form = $(that.conf.form_id);
            if(!$form.length) {
                var that = this;
                $.get(that.conf.form_url, {}, function (data) {
                    $('body').append(data.content);
                    $(that.conf.form_id).show();
                    that.bindFromActions(e, $(that.conf.form_id));
                    $(document.body).addClass('overflow');
                },
                'json');
            } else {
                $form.show();
                $(document.body).addClass('overflow');
            }
        },

        closeSubscribeForm: function() {
            $(this.conf.form_id).hide();
            $(document.body).removeClass('overflow');
        },

        bindFromActions: function (e, $form) {
            var that = this;
            $form.find('.close_btn').click(function () { that.closeSubscribeForm(e); });
            $(that.conf.subscribe.btn).click(function () { that.featuredSubscribe(e); })
        },

        featuredSubscribe: function (e) {
            var that = this;
            var email = $(that.conf.subscribe.field).val();
            $('.subscribe_error').html('').css('');
            if (!email || !downloadShareForm.validateEmail(email)) {
                $(that.conf.subscribe.field).addClass('error');
                return;
            }

            $.ajax({
                type: 'POST',
                url: that.conf.subscribe.url,
                data: {email: email, pid: that.conf.post_id},
                dataType: 'json'
            }).done(function (resp) {
                if (!resp.status) {
                    $(that.conf.subscribe.field).addClass('error');
                } else {
                    $('#subscribe_popup_form .subscribe_block').html('<label class="thnks green">'+resp.content+'</label>');
                    setTimeout(function () {
                        that.closeSubscribeForm();
                    }, 2000);
                }
            });
        },

        checkSubscribeIsSubmit: function(e) {
            var $target = $(e.target);
            if(e.which == 13 && '#' + $target.attr('id') == this.conf.subscribe.field) {
                $(this.conf.subscribe.btn).click();
            }
        }
    };
})(jQuery);

var help_translate_popup_form = (function($) {
    return {
        conf: {
            form_id: '#help_translate_popup_form',
            popup_button: '#help_translate',
            formform_id: '#translateform',
            send: {
                btn: '#send_btn',
                field_name: '#h-name',
                field_email: '#h-email',
                field_descr: '#h-descr',
                field_sdescr: '#h-short_descr',
                url: ''
            }
        },
        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
        },
        bindActions: function () {
            var that = this;
            $(that.conf.popup_button).on('click', function(e) {that.showForm(e); return false;});
            $(document).on('keypress', function(e) {that.checkIsSubmit(e)});
            $(window).resize(function(e) {that.resize(e)})
        },
        showForm: function(e) {
            e.preventDefault();

            var that = this;
            var $form = $(that.conf.form_id);
            if(!$form.length) {
                var that = this;
                $.get(that.conf.form_url, {}, function (data) {
                    $('body').append(data.content);
                    $(that.conf.form_id).show();
                    that.resize(e);
                    that.bindFromActions(e, $(that.conf.form_id));
                    $(document.body).addClass('overflow');
                },
                'json');
            } else {
                $form.show();
                $(document.body).addClass('overflow');
            }
        },

        closeForm: function() {
            $(this.conf.form_id).hide();
            $(document.body).removeClass('overflow');
        },

        bindFromActions: function (e, $form) {
            var that = this;
            $form.find('.close_btn').click(function () { that.closeForm(e); });
            $(that.conf.send.btn).click(function () { that.sendTranslate(e); return false; })
        },

        sendTranslate: function (e) {
            var that = this;
            var name  = $(that.conf.send.field_name);
            var error =  $(that.conf.form_id + ' .error');
            $(that.conf.form_id + ' #captchaerror').hide();
            error.css('');
            var allok = true;
            if (name.val() == '') {
                name.addClass('error-input');
                allok = false;
            }
            else  name.removeClass('error-input');
            var email = $(that.conf.send.field_email);
            if (email.val()=='' || !downloadShareForm.validateEmail(email.val())) {
                email.addClass('error-input');
                allok = false;
            }
            else email.removeClass('error-input');

            var short_d = $('#h-descr');
            if (short_d.val() == '') {
                short_d.addClass('error-input');
                allok = false;
            }
            else  short_d.removeClass('error-input');

            var h_content = $('#h-short_descr');
            if (h_content.val() == '') {
                h_content.addClass('error-input');
                allok = false;
            }
            else h_content.removeClass('error-input');

            if (!allok) {
                error.css('visibility','visible');
                $(that.conf.form_id+ ' .block').animate({scrollTop:0},100);
                return;
            }

            $.ajax({
                type: 'POST',
                url: that.conf.send.url,
                data: $(that.conf.formform_id).serialize(),
                dataType: 'json'
            }).done(function (resp) {
                if (!resp.status) {
                    $(that.conf.send.field).addClass('error');
                    if (resp.wrongcaptcha)  {
                        error.css('visibility','visible');
                        $(that.conf.form_id + ' #captchaerror').show();
                        $(that.conf.form_id+ ' .block').animate({scrollTop:0},100);
                    }
                } else {
                    $(that.conf.form_id + ' ' + that.conf.formform_id+', '+ that.conf.form_id + ' .modal_title').hide();
                    $(that.conf.form_id + ' .thankyoublock').show();
                    setTimeout(function () {
                        that.closeForm();
                    }, 2000);
                }
            });
        },

        checkIsSubmit: function(e) {
            var $target = $(e.target);
            if(e.which == 13 && '#' + $target.attr('id') == this.conf.send.field) {
                $(this.conf.send.btn).click();
            }
        },

        resize: function(e) {
            var that = this;
            $(that.conf.form_id + ' .h-descr2').height($(that.conf.form_id + ' .h-descr1').height());
            $(that.conf.form_id + ' .h-short_descr2').height($(that.conf.form_id + ' .h-short_descr1').height());
            if (Modernizr.mq('(max-width: 1036px)')) {
                $(that.conf.send.field_name).attr('placeholder','Enter your name*');
                $(that.conf.send.field_email).attr('placeholder','Enter your email*');
            }
            else {
                $(that.conf.send.field_name).attr('placeholder','');
                $(that.conf.send.field_email).attr('placeholder','');
            }

        }
    };
})(jQuery);


var share_iphone_popup= (function($) {
    return {
        conf: {
            form_id: '#share_iphone_popup',
            popup_button: '.download_logging',
            form_url: '',
            post_url: '',
            post_title: '',
            fb_app_id: '',
            post_id: '',
            is_test_mode: false
        },
        init: function(settings) {
            $.extend(true, this.conf, settings);
            var cookie_name = 'p_sh_'+this.conf.post_id;
            if (!getCookie(cookie_name) && !getCookie('p_x_'+this.conf.post_id))
            this.bindActions();
            setCookie(cookie_name, '1', {expires: 24*60*60*30, path: '/', domain: '.giveawayoftheday.com'});

        },
        bindActions: function () {
            var that = this;
            $(that.conf.popup_button).on('click', function(e) { setTimeout(function() { that.showShareForm(e); logging(5103) },2000);
                return that.conf.is_test_mode ? false : true;
            });
        },
        showShareForm: function(e) {
            if (getCookie('p_x_'+this.conf.post_id))
                return true;

            e.preventDefault();

            var that = this;
            var $form = $(that.conf.form_id);
            if(!$form.length) {
                var that = this;
                $.get(that.conf.form_url, {}, function (data) {
                        $('body').append(data.content);
                        $(that.conf.form_id).show();
                        that.bindFromActions(e, $(that.conf.form_id));
                        $(document.body).addClass('overflow');
                    },
                    'json');
            } else {
                $form.show();
                $(document.body).addClass('overflow');
            }
        },

        closeShareForm: function() {
            setCookie('p_x_'+this.conf.post_id, '1', {expires: 24*60*60*30, path: '/', domain: '.giveawayoftheday.com'});
            $(this.conf.form_id).hide();
            $(document.body).removeClass('overflow');
        },

        bindFromActions: function (e, $form) {
            var that = this;
            $form.find('.close_div').click(function () { that.closeShareForm(e);return false; });
            $form.find('.fb').on('click',function(e) {
                logging(5104);
                location.href="https://www.facebook.com/dialog/share?app_id="+that.conf.fb_app_id+"&display=popup&href="+that.conf.post_url+"&redirect_uri="+that.conf.post_url;
                return false;
            });
            $form.find('.tweeter').on('click',function(e) {
                logging(5105);
                location.href="http://twitter.com/share?url="+that.conf.tweet_url+"&text=%23giveaway%20%23iPhone%20The%20%22"+that.conf.post_title+"%22%20app%20for%20iPhone";
                return false;
            });
            $form.find('.google').on('click',function(e) {
                logging(5106);
                location.href="https://plus.google.com/share?url="+that.conf.post_url;
                return false;
            });
        }
    };
})(jQuery);




var check_user_lang = (function($) {
    return {
        conf: {
            is_lang_redirect: false,
            subdomains_json: '',
            domain: '',
            path: ''
        },
        init: function(settings) {
            $.extend(true, this.conf, settings);
            this.bindActions();
        },
        bindActions: function() {
            var that = this;
            if (this.conf.is_lang_redirect) {
                that.lang_redirect();
            }
        },

        lang_redirect: function() {
            if (getCookie('lang') == 1) {
                return;
            }

            setCookie('lang', 1, {path: '/', expires: 24*60*60, domain: '.' + this.conf.domain});
            var subdomain = document.location.hostname.split('.');
            subdomain = subdomain[0];
            if (subdomain != 'www') {
                return;
            }

            var lang_domain = 'www';
            var subdomains = JSON.parse(this.conf.subdomains_json);
            $.each(subdomains, function(url, lang) {
                if (navigator.language == lang['code'] || navigator.language.indexOf(lang['code']+'-') >= 0) {
                    lang_domain = url;
                }
            });

            if (lang_domain == subdomain) {
                return;
            }

            location.href = 'http://' + lang_domain + '.'+this.conf.domain + '/' + this.conf.path;
        }
    }
})(jQuery);


var chrome_push_notifications_banner = (function($) {
    return {
        conf: {
            subscribe_id: '#chromePushYes',
            close_id: '#chromePushNo',
            chromePushBanner_id: "#chromePushBanner",
            bannerSocBtns_id: "#bannerSocBtns",
            chromeSubscribeAfterDeny_id: "#chromeSubscribeAfterDeny",
            is_test_mode: 0
        },
        isValidBrowser: function() {
            return isChrome() && 'serviceWorker' in navigator;
        },
        init: function(settings) {
            var that = this;
            if (!that.isValidBrowser()) return false;

            $.extend(true, this.conf, settings);
            
            this.bindActions();
            
            
            //Показ баннера со ссылкой на инструкции подписки для отказавшихся
            if (/* that.is_test_mode && */ Notification.permission == 'denied') {
               console.log('Notification.permission: denied - show instructions');
               setCookie('push_chrome_denied', '1', 
                        {expires: 24*60*60*30, path: '/', domain: '.giveawayoftheday.com'});
                $(that.conf.bannerSocBtns_id).hide();
                $(that.conf.chromeSubscribeAfterDeny_id).show();
                logging(5122);
                return false;
            }            
            
    
            if (!getCookie('push_google_chrome_banner_closed') && 
                !getCookie('push_chrome_allow') && 
                ('serviceWorker' in navigator) &&
                Notification.permission != 'granted') {
                $(that.conf.chromePushBanner_id).show();
                logging(5116);
                $(that.conf.bannerSocBtns_id).hide();
            }
            
            //Подписка отказавшихся ранее, а потом разрешивших
            if(getCookie('push_chrome_denied') && Notification.permission === 'granted') {
                this.clickSubscribe(true);
                //deleteCookie('push_chrome_denied');
                setCookie('push_chrome_denied', '',
                    {expires: -1, path: '/', domain: '.giveawayoftheday.com'});
                console.log('re-subscribe');
                logging(5128);
            }               
        },
        bindActions: function () {
            var that = this;
            $(that.conf.subscribe_id).on('click', function(e) {
                that.clickSubscribe(e);
            });
            $(that.conf.close_id).on('click', function(e) {
                that.clickClose(e);
            });            
        },
        clickClose: function (e) {
            var that = this;
            $(that.conf.chromePushBanner_id).hide();
            setCookie('push_google_chrome_banner_closed', '1', 
                        {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
           
            logging(5118);
            return false;
        },
/*         
        clickSubscribe: function (e) {
            var that = this;
            //if (!getCookie('push_google_chrome')) {
                if ('serviceWorker' in navigator) {
                    //setCookie('push_google_chrome', '1', 
                    //    {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
                    if (subscribeDevice(chrome_push_user_id)) {
                        navigator.serviceWorker.register('/service-worker.js?loc='+locale+'&hash='+chrome_push_user_id, {
                            //scope: './'
                            scope: '/'
                        }).then(function(registration) {registration.update() }).catch(function(error) {
                            // registration failed
                            console.log('Registration failed with ' + error);
                        });
                    }
                    //$(that.conf.chromePushBanner_id).hide();
                }
            //}            
            logging(5117);
            return false;
        }        
*/        
        clickSubscribe: function (e) {
            var that = this;
            //if (!getCookie('push_google_chrome')) {
                if ('serviceWorker' in navigator) {
                    //setCookie('push_google_chrome', '1', 
                    //    {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
                    subscribeDevice(chrome_push_user_id);
                    navigator.serviceWorker.register('/service-worker.js?loc='+locale+'&hash='+chrome_push_user_id, {
                        //scope: './'
                        scope: '/'
                    }).then(function(registration) {registration.update() }).catch(function(error) {
                        // registration failed
                        console.log('Registration failed with ' + error);
                    });
                    
                    //$(that.conf.chromePushBanner_id).hide();
                }
            //}            
            logging(5117);
            return false;
        }
       
    }
})(jQuery);

// Для подписки на уведомления в Firefox используем тот же баннер,
// который используется для подписки в Chrome.
var firefox_push_notifications_banner = (function($) {
    return {
        conf: {
            subscribe_id: '#chromePushYes',
            close_id: '#chromePushNo',
            chromePushBanner_id: "#chromePushBanner",
            bannerSocBtns_id: "#bannerSocBtns",
            chromeSubscribeAfterDeny_id: "#chromeSubscribeAfterDeny",
            is_test_mode: 0
        },
        isValidBrowser: function() {
            isFirefox = typeof InstallTrigger !== 'undefined';
            return isFirefox && 'serviceWorker' in navigator;
        },  
        init: function(settings) {
            var that = this;
            if (!that.isValidBrowser()) return false;

            $.extend(true, this.conf, settings);
            
// Only for test mode 
/*
if (this.conf.is_test_mode) {
    console.log('this is test mode');
} else {
    console.log('this in NOT test mode');
    return false;
} 
*/
            this.bindActions();
            
            
            //Показ баннера со ссылкой на инструкции подписки для отказавшихся
            /*
            if (// that.is_test_mode && 
                Notification.permission == 'denied') {
               console.log('Notification.permission: denied - show instructions');
               setCookie('push_chrome_denied', '1', 
                        {expires: 24*60*60*30, path: '/', domain: '.giveawayoftheday.com'});
                $(that.conf.bannerSocBtns_id).hide();
                $(that.conf.chromeSubscribeAfterDeny_id).show();
                logging(5122);
                return false;
            }            
            */
    
            if (!getCookie('push_firefox_banner_closed') && 
                !getCookie('push_firefox_allow') && 
                ('serviceWorker' in navigator) &&
                Notification.permission != 'granted') {
                $(that.conf.chromePushBanner_id).show();
                logging(6960);
                $(that.conf.bannerSocBtns_id).hide();
            }
            
            //Подписка отказавшихся ранее, а потом разрешивших
            if(getCookie('push_firefox_denied') && Notification.permission === 'granted') {
                this.clickSubscribe(true);
                //deleteCookie('push_chrome_denied');
                setCookie('push_firefox_denied', '',
                    {expires: -1, path: '/', domain: '.giveawayoftheday.com'});
                console.log('re-subscribe');
                //logging(5128);
            }               
        }, 
        bindActions: function () {
            var that = this;
            $(that.conf.subscribe_id).on('click', function(e) {
                that.clickSubscribe(e);
            });
            $(that.conf.close_id).on('click', function(e) {
                that.clickClose(e);
            });            
        }, 
        clickClose: function (e) {
            var that = this;
            $(that.conf.chromePushBanner_id).hide();
            setCookie('push_firefox_banner_closed', '1', 
                        {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
           
            //logging(5118);
            return false;
        },
        clickSubscribe: function (e) {
            var that = this;
            //if (!getCookie('push_google_chrome')) {
                if ('serviceWorker' in navigator) {
                    //setCookie('push_google_chrome', '1', 
                    //    {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
                    subscribeDeviceFirefox(chrome_push_user_id);
                    navigator.serviceWorker.register('/service-worker.js?loc='+locale+'&hash='+chrome_push_user_id, {
                        //scope: './'
                        scope: '/'
                    }).then(function(registration) {registration.update() }).catch(function(error) {
                        // registration failed
                        console.log('Registration failed with ' + error);
                    });
                    
                    //$(that.conf.chromePushBanner_id).hide();
                }
            //}            
            //logging(5117);
            return false;
        }        
    }
})(jQuery);
/*
var chrome_push_notifications_banner_test2 = (function($) {
    return {
        conf: {
            is_bind: false,
            is_test_mode: 0,
            modal_chrome_notif_id: '#modal_chrome_notif',
            no_btn_modal_chrome_id: '#no_btn_modal_chrome',
            yes_btn_modal_chrome_id: '#yes_btn_modal_chrome',
            close_btn_modal_chrome_id: '#close_btn_modal_chrome'
        },
        isValidBrowser: function() {
            return isChrome() && 'serviceWorker' in navigator;
        },
        init: function(settings) {
            var that = this;
            if (!that.isValidBrowser()) return false;

            $.extend(true, this.conf, settings);
            
        },
        // Значения source: 
        // download_page_from_email
        // download_page_direct_link
        // popup_after_sharing
        // download_page_ajax_link
        showModal: function(source) {
            //Тестовый режим
            //if (this.conf.is_test_mode != 1)  return false;
            
            var that = this;
            if (!that.isValidBrowser()) return false;
            
            this.bindActions();

            if (!getCookie('push_google_chrome_no_test2') && 
                 Notification.permission != 'granted' && 
                 Notification.permission != 'denied'&&
                 !getCookie('push_chrome_allow_test2')) {
                switch (source) {
                    case 'download_page_from_email':
                        $(this.conf.modal_chrome_notif_id).show();
                        logging(5165);
                        break;
                    case 'download_page_direct_link':
                        $(this.conf.modal_chrome_notif_id).show();
                        logging(5165);                    
                        break;
                    case 'popup_after_sharing':
                        downloadShareForm.closeShareForm();
                        $(this.conf.modal_chrome_notif_id).show();
                        logging(5165);                    
                        break;
                    case 'download_page_ajax_link':
                        $(this.conf.modal_chrome_notif_id).show();
                        logging(5165);                    
                        break;                
                }                
            }
        },
        bindActions: function () {
            var that = this;
            if (that.is_bind) return false;
            
            $(that.conf.yes_btn_modal_chrome_id).on('click', function(e) {
                that.clickYes(e);
            });
            
            $(that.conf.no_btn_modal_chrome_id).on('click', function(e) {
                that.clickNo(e);
            });    
            
            $(that.conf.close_btn_modal_chrome_id).on('click', function(e) {
                that.clickClose(e);
            });              
            
            that.is_bind = true;
        },             
        clickYes: function (e) {            
            var that = this;
            if ('serviceWorker' in navigator) {
                subscribeDevice(chrome_push_user_id);
                navigator.serviceWorker.register('/service-worker.js?loc='+locale+'&hash='+chrome_push_user_id, {
                    scope: '/'
                }).then(function(registration) {registration.update() }).catch(function(error) {
                    // registration failed
                    console.log('Registration failed with ' + error);
                }); 
            }  
            $(this.conf.modal_chrome_notif_id).hide();
            
            logging(5166);
            return false;
        },
        clickNo: function (e) {
            var that = this;
            $(that.conf.modal_chrome_notif_id).hide();
            setCookie('push_google_chrome_no_test2', '1', 
                        {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
           
            logging(5167);
            return false;
        },        
        clickClose: function (e) {
            var that = this;
            $(that.conf.modal_chrome_notif_id).hide();
            //setCookie('push_google_chrome_banner_closed', '1', 
            //            {expires: 24*60*60*7, path: '/', domain: '.giveawayoftheday.com'});
           
            logging(5168);
            return false;
        }        
    }
})(jQuery);
*/

var achecker = (function($) {
    return {
        conf: {
            blocks_num: {
                300: {
                    'rest': 'ab', //&f=300
                    'fdm': 'fdm300',
                    'si': 'si',
                    'photo': 'photo300'
                },
                728: {
                    'rest': 'ab', //&f=728
                    'fdm': 'fdm728',
                    'si': 'si728',
                    'photo': 'photo'
                }
            },
            link: 'https://android.giveawayoftheday.com/web/bannerinf.js?body=1',
            class: 'aa-',
            is_mobile: false,
            show_rest: false,
            enabled: false,
            from: ''
        },
        ba: false,
        banner_num: 1,

        init: function(settings) {
            $.extend(true, this.conf, settings);
            if (!this.conf.enabled) {
                return;
            }
            this.ba = new BlockAdBlock({
                checkOnLoad: true,
                resetOnEnd: true
            });
            this.bindActions();
        },

        bindActions: function() {
            var that = this;
            that.ba.on(true, function (e) {that.replaceAdv(e)});
        },

        createBanner: function(block, type) {
            var id = 'inf_bnr_' + this.banner_num;
            var script = document.createElement('script');
            script.src = this.conf.link + '&num='+ type + '&from=' + this.conf.from + '&dnm='+id;
            var d = document.createElement('div');
            d.id = id;
            d.style.overflow = 'hidden';
            block.insertBefore(d, block.firstChild);
            if (script) {
                block.insertBefore(script, block.firstChild);
            }
            this.banner_num++;
        },

        getSize: function(classname) {
            var expr = new RegExp(this.conf.class + "\\d+");
            var size_class = classname.match(expr);
            if (!size_class) {
                return false;
            }
            var size = size_class[0].replace(this.conf.class, '');
            if (size == 336 || this.conf.is_mobile) {
                size = 300;
            }

            return size;
        },

        replaceAdv: function(e) {
            var adv_blocks = document.querySelectorAll("div[class*='"+this.conf.class+"'], span[class*='"+this.conf.class+"']");
            var used_blocks = {300:{}, 728:{}};
            var size = 0;
            for (var i = 0; i < adv_blocks.length; i++) {
                size = this.getSize(adv_blocks[i].className);
                if (i == 0 && this.conf.show_rest) {
                    this.createBanner(adv_blocks[i], this.conf.blocks_num[size]['rest']);
                    $('.col1.giveaway_day').addClass('need_pad');
                } else {
                    if (this.conf.is_mobile) {
                        this.createBanner(adv_blocks[i], 'static_inf');
                    } else {
                        var cur_block = this.conf.blocks_num[size];
                        var block_showed = false;
                        for (var type in cur_block) {
                            if (!cur_block.hasOwnProperty(type) || type == 'rest') {
                                continue;
                            }
                            if (used_blocks[type] == "undefined" || !used_blocks[type]) {
                                this.createBanner(adv_blocks[i], cur_block[type]);
                                used_blocks[type] = true;
                                block_showed = true;
                                break;
                            }
                        }
                        if (!block_showed) {
                            this.createBanner(adv_blocks[i], cur_block['fdm']);
                        }
                    }
                }
            }
        }
    }
})(jQuery);

function preventDefault(e) {
    e = e || window.event;
    if (e.preventDefault)
        e.preventDefault();
    e.returnValue = false;
}

function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
        preventDefault(e);
        return false;
    }
}

function disableScroll() {
    if (window.addEventListener) // older FF
        window.addEventListener('DOMMouseScroll', preventDefault, false);
    window.onwheel = preventDefault; // modern standard
    window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
    window.ontouchmove  = preventDefault; // mobile
    document.onkeydown  = preventDefaultForScrollKeys;
}

function enableScroll() {
    if (window.removeEventListener)
        window.removeEventListener('DOMMouseScroll', preventDefault, false);
    window.onmousewheel = document.onmousewheel = null;
    window.onwheel = null;
    window.ontouchmove = null;
    document.onkeydown = null;
}

var away_bnr = (function($) {
    return {
        conf: {
            enabled: false,
            is_showed_on_no_active: false,
            idle_interval: 5000,
            is_open: false
        },

        init: function(settings) {
            $.extend(true, this.conf, settings);
            if (this.conf.enabled) {
                this.bindActions();
            }
        },

        bindActions: function() {
            var that = this;
            $(document).on('mousedown.away_bnr keydown.away_bnr mousemove.away_bnr scroll.away_bnr', function (e) {
                that.isActive(e);
            });
            $('.close_onload_btn').on('click', function (e) {
                e.preventDefault();
                that.showBanner();
            });
            $(document).on('click', function (e) {
                that.checkCloseBanner(e);
            });
            this.timer = setTimeout(function () {
                that.isNotActive();
            }, that.conf.idle_interval);
        },

        showBanner: function () {
            var that = this;
            if (that.conf.is_open) {
                return;
            }

            var left_start = $('.close_onload_btn').offset()['left'];
            var top_start = $('.close_onload_btn').offset()['top'];
            var left_end = $(window).width()/2 - $(".bil_onnoactive").outerWidth()/2;
            var top_end = $(window).height()/2 - $(".bil_onnoactive").outerHeight()/2 + $(window).scrollTop();

            $(".bil_onnoactive")
                .clone()
                .css({
                    'position': 'absolute',
                    'z-index': '11100',
                    left: left_start,
                    top: top_start,
                    width: 50,
                    height: 50,
                })
                .appendTo("body")
                .animate({
                        opacity: 1,
                        left: left_end,
                        top: top_end,
                        width: $(".bil_onnoactive").outerWidth(),
                        height: $(".bil_onnoactive").outerHeight()
                    }, {
                        duration: 1000,
                        start: function () {
                            $(".bil_onnoactive").hide();
                            $(this).show();
                            $('#billion_onnoactive').show();
                        },
                        complete: function () {
                            $(this).remove();
                            disableScroll();
                            $(".bil_onnoactive").show();
                            that.conf.is_open = true;
                        }
                    }
                );
        },

        checkCloseBanner: function (e) {
            if (!this.conf.is_open) {
                return;
            }
            e.preventDefault();
            var $container = $('.bil_onnoactive, .close_onload_btn');
            if (!$container.is(e.target) && $container.has(e.target).length === 0) {
                this.closeBanner();
            }
        },

        closeBanner: function () {
            this.conf.is_open = false;
            $('#billion_onnoactive').fadeOut(200);
            enableScroll();
            $(".bil_onnoactive")
                .clone()
                .css({
                    'position': 'absolute',
                    'z-index': '11100',
                    top: $(".bil_onnoactive").offset().top,
                    left: $(".bil_onnoactive").offset().left
                })
                .appendTo("body")
                .animate({
                        opacity: 0.05,
                        left: $('.close_onload_btn').offset().left,
                        top: $('.close_onload_btn').offset().top,
                        width: 20,
                        height: 20
                    }, 1000,
                    function() {
                        $(this).remove();
                    }
                );
        },

        isActive: function (e) {
            var that = this;
            if (that.conf.is_open && that.conf.is_showed_on_no_active) {
                 $(document).off('.away_bnr');
                that.closeBanner();
                //that.conf.is_showed_on_no_active = false;

                return;
            }
            clearTimeout(that.timer);
            that.timer = setTimeout(function () {
                that.isNotActive();
            }, that.conf.idle_interval);
        },

        isNotActive: function (e) {
            if (this.conf.is_open) {
                return;
            }
            this.conf.is_showed_on_no_active = true;
            this.showBanner();
        }
    };
})(jQuery);