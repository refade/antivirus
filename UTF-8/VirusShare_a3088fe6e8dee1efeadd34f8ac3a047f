/*!
 * https://github.com/es-shims/es5-shim
 * @license es5-shim Copyright 2009-2015 by contributors, MIT License
 * see https://github.com/es-shims/es5-shim/blob/v4.5.9/LICENSE
 */
(function(t,r){"use strict";if(typeof define==="function"&&define.amd){define(r)}else if(typeof exports==="object"){module.exports=r()}else{t.returnExports=r()}})(this,function(){var t=Array;var r=t.prototype;var e=Object;var n=e.prototype;var i=Function;var a=i.prototype;var o=String;var f=o.prototype;var u=Number;var l=u.prototype;var s=r.slice;var c=r.splice;var v=r.push;var h=r.unshift;var p=r.concat;var y=r.join;var d=a.call;var g=a.apply;var w=Math.max;var b=Math.min;var T=n.toString;var m=typeof Symbol==="function"&&typeof Symbol.toStringTag==="symbol";var D;var S=Function.prototype.toString,x=/^\s*class /,O=function isES6ClassFn(t){try{var r=S.call(t);var e=r.replace(/\/\/.*\n/g,"");var n=e.replace(/\/\*[.\s\S]*\*\//g,"");var i=n.replace(/\n/gm," ").replace(/ {2}/g," ");return x.test(i)}catch(a){return false}},j=function tryFunctionObject(t){try{if(O(t)){return false}S.call(t);return true}catch(r){return false}},E="[object Function]",I="[object GeneratorFunction]",D=function isCallable(t){if(!t){return false}if(typeof t!=="function"&&typeof t!=="object"){return false}if(m){return j(t)}if(O(t)){return false}var r=T.call(t);return r===E||r===I};var M;var U=RegExp.prototype.exec,F=function tryRegexExec(t){try{U.call(t);return true}catch(r){return false}},N="[object RegExp]";M=function isRegex(t){if(typeof t!=="object"){return false}return m?F(t):T.call(t)===N};var C;var k=String.prototype.valueOf,A=function tryStringObject(t){try{k.call(t);return true}catch(r){return false}},R="[object String]";C=function isString(t){if(typeof t==="string"){return true}if(typeof t!=="object"){return false}return m?A(t):T.call(t)===R};var P=e.defineProperty&&function(){try{var t={};e.defineProperty(t,"x",{enumerable:false,value:t});for(var r in t){return false}return t.x===t}catch(n){return false}}();var $=function(t){var r;if(P){r=function(t,r,n,i){if(!i&&r in t){return}e.defineProperty(t,r,{configurable:true,enumerable:false,writable:true,value:n})}}else{r=function(t,r,e,n){if(!n&&r in t){return}t[r]=e}}return function defineProperties(e,n,i){for(var a in n){if(t.call(n,a)){r(e,a,n[a],i)}}}}(n.hasOwnProperty);var J=function isPrimitive(t){var r=typeof t;return t===null||r!=="object"&&r!=="function"};var Y=u.isNaN||function isActualNaN(t){return t!==t};var Z={ToInteger:function ToInteger(t){var r=+t;if(Y(r)){r=0}else if(r!==0&&r!==1/0&&r!==-(1/0)){r=(r>0||-1)*Math.floor(Math.abs(r))}return r},ToPrimitive:function ToPrimitive(t){var r,e,n;if(J(t)){return t}e=t.valueOf;if(D(e)){r=e.call(t);if(J(r)){return r}}n=t.toString;if(D(n)){r=n.call(t);if(J(r)){return r}}throw new TypeError},ToObject:function(t){if(t==null){throw new TypeError("can't convert "+t+" to object")}return e(t)},ToUint32:function ToUint32(t){return t>>>0}};var z=function Empty(){};$(a,{bind:function bind(t){var r=this;if(!D(r)){throw new TypeError("Function.prototype.bind called on incompatible "+r)}var n=s.call(arguments,1);var a;var o=function(){if(this instanceof a){var i=g.call(r,this,p.call(n,s.call(arguments)));if(e(i)===i){return i}return this}else{return g.call(r,t,p.call(n,s.call(arguments)))}};var f=w(0,r.length-n.length);var u=[];for(var l=0;l<f;l++){v.call(u,"$"+l)}a=i("binder","return function ("+y.call(u,",")+"){ return binder.apply(this, arguments); }")(o);if(r.prototype){z.prototype=r.prototype;a.prototype=new z;z.prototype=null}return a}});var G=d.bind(n.hasOwnProperty);var B=d.bind(n.toString);var H=d.bind(s);var W=g.bind(s);var L=d.bind(f.slice);var X=d.bind(f.split);var q=d.bind(f.indexOf);var K=d.bind(v);var Q=d.bind(n.propertyIsEnumerable);var V=d.bind(r.sort);var _=t.isArray||function isArray(t){return B(t)==="[object Array]"};var tt=[].unshift(0)!==1;$(r,{unshift:function(){h.apply(this,arguments);return this.length}},tt);$(t,{isArray:_});var rt=e("a");var et=rt[0]!=="a"||!(0 in rt);var nt=function properlyBoxed(t){var r=true;var e=true;var n=false;if(t){try{t.call("foo",function(t,e,n){if(typeof n!=="object"){r=false}});t.call([1],function(){"use strict";e=typeof this==="string"},"x")}catch(i){n=true}}return!!t&&!n&&r&&e};$(r,{forEach:function forEach(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=-1;var i=Z.ToUint32(e.length);var a;if(arguments.length>1){a=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.forEach callback must be a function")}while(++n<i){if(n in e){if(typeof a==="undefined"){t(e[n],n,r)}else{t.call(a,e[n],n,r)}}}}},!nt(r.forEach));$(r,{map:function map(r){var e=Z.ToObject(this);var n=et&&C(this)?X(this,""):e;var i=Z.ToUint32(n.length);var a=t(i);var o;if(arguments.length>1){o=arguments[1]}if(!D(r)){throw new TypeError("Array.prototype.map callback must be a function")}for(var f=0;f<i;f++){if(f in n){if(typeof o==="undefined"){a[f]=r(n[f],f,e)}else{a[f]=r.call(o,n[f],f,e)}}}return a}},!nt(r.map));$(r,{filter:function filter(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i=[];var a;var o;if(arguments.length>1){o=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.filter callback must be a function")}for(var f=0;f<n;f++){if(f in e){a=e[f];if(typeof o==="undefined"?t(a,f,r):t.call(o,a,f,r)){K(i,a)}}}return i}},!nt(r.filter));$(r,{every:function every(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i;if(arguments.length>1){i=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.every callback must be a function")}for(var a=0;a<n;a++){if(a in e&&!(typeof i==="undefined"?t(e[a],a,r):t.call(i,e[a],a,r))){return false}}return true}},!nt(r.every));$(r,{some:function some(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i;if(arguments.length>1){i=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.some callback must be a function")}for(var a=0;a<n;a++){if(a in e&&(typeof i==="undefined"?t(e[a],a,r):t.call(i,e[a],a,r))){return true}}return false}},!nt(r.some));var it=false;if(r.reduce){it=typeof r.reduce.call("es5",function(t,r,e,n){return n})==="object"}$(r,{reduce:function reduce(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);if(!D(t)){throw new TypeError("Array.prototype.reduce callback must be a function")}if(n===0&&arguments.length===1){throw new TypeError("reduce of empty array with no initial value")}var i=0;var a;if(arguments.length>=2){a=arguments[1]}else{do{if(i in e){a=e[i++];break}if(++i>=n){throw new TypeError("reduce of empty array with no initial value")}}while(true)}for(;i<n;i++){if(i in e){a=t(a,e[i],i,r)}}return a}},!it);var at=false;if(r.reduceRight){at=typeof r.reduceRight.call("es5",function(t,r,e,n){return n})==="object"}$(r,{reduceRight:function reduceRight(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);if(!D(t)){throw new TypeError("Array.prototype.reduceRight callback must be a function")}if(n===0&&arguments.length===1){throw new TypeError("reduceRight of empty array with no initial value")}var i;var a=n-1;if(arguments.length>=2){i=arguments[1]}else{do{if(a in e){i=e[a--];break}if(--a<0){throw new TypeError("reduceRight of empty array with no initial value")}}while(true)}if(a<0){return i}do{if(a in e){i=t(i,e[a],a,r)}}while(a--);return i}},!at);var ot=r.indexOf&&[0,1].indexOf(1,2)!==-1;$(r,{indexOf:function indexOf(t){var r=et&&C(this)?X(this,""):Z.ToObject(this);var e=Z.ToUint32(r.length);if(e===0){return-1}var n=0;if(arguments.length>1){n=Z.ToInteger(arguments[1])}n=n>=0?n:w(0,e+n);for(;n<e;n++){if(n in r&&r[n]===t){return n}}return-1}},ot);var ft=r.lastIndexOf&&[0,1].lastIndexOf(0,-3)!==-1;$(r,{lastIndexOf:function lastIndexOf(t){var r=et&&C(this)?X(this,""):Z.ToObject(this);var e=Z.ToUint32(r.length);if(e===0){return-1}var n=e-1;if(arguments.length>1){n=b(n,Z.ToInteger(arguments[1]))}n=n>=0?n:e-Math.abs(n);for(;n>=0;n--){if(n in r&&t===r[n]){return n}}return-1}},ft);var ut=function(){var t=[1,2];var r=t.splice();return t.length===2&&_(r)&&r.length===0}();$(r,{splice:function splice(t,r){if(arguments.length===0){return[]}else{return c.apply(this,arguments)}}},!ut);var lt=function(){var t={};r.splice.call(t,0,0,1);return t.length===1}();$(r,{splice:function splice(t,r){if(arguments.length===0){return[]}var e=arguments;this.length=w(Z.ToInteger(this.length),0);if(arguments.length>0&&typeof r!=="number"){e=H(arguments);if(e.length<2){K(e,this.length-t)}else{e[1]=Z.ToInteger(r)}}return c.apply(this,e)}},!lt);var st=function(){var r=new t(1e5);r[8]="x";r.splice(1,1);return r.indexOf("x")===7}();var ct=function(){var t=256;var r=[];r[t]="a";r.splice(t+1,0,"b");return r[t]==="a"}();$(r,{splice:function splice(t,r){var e=Z.ToObject(this);var n=[];var i=Z.ToUint32(e.length);var a=Z.ToInteger(t);var f=a<0?w(i+a,0):b(a,i);var u=b(w(Z.ToInteger(r),0),i-f);var l=0;var s;while(l<u){s=o(f+l);if(G(e,s)){n[l]=e[s]}l+=1}var c=H(arguments,2);var v=c.length;var h;if(v<u){l=f;var p=i-u;while(l<p){s=o(l+u);h=o(l+v);if(G(e,s)){e[h]=e[s]}else{delete e[h]}l+=1}l=i;var y=i-u+v;while(l>y){delete e[l-1];l-=1}}else if(v>u){l=i-u;while(l>f){s=o(l+u-1);h=o(l+v-1);if(G(e,s)){e[h]=e[s]}else{delete e[h]}l-=1}}l=f;for(var d=0;d<c.length;++d){e[l]=c[d];l+=1}e.length=i-u+v;return n}},!st||!ct);var vt=r.join;var ht;try{ht=Array.prototype.join.call("123",",")!=="1,2,3"}catch(pt){ht=true}if(ht){$(r,{join:function join(t){var r=typeof t==="undefined"?",":t;return vt.call(C(this)?X(this,""):this,r)}},ht)}var yt=[1,2].join(undefined)!=="1,2";if(yt){$(r,{join:function join(t){var r=typeof t==="undefined"?",":t;return vt.call(this,r)}},yt)}var dt=function push(t){var r=Z.ToObject(this);var e=Z.ToUint32(r.length);var n=0;while(n<arguments.length){r[e+n]=arguments[n];n+=1}r.length=e+n;return e+n};var gt=function(){var t={};var r=Array.prototype.push.call(t,undefined);return r!==1||t.length!==1||typeof t[0]!=="undefined"||!G(t,0)}();$(r,{push:function push(t){if(_(this)){return v.apply(this,arguments)}return dt.apply(this,arguments)}},gt);var wt=function(){var t=[];var r=t.push(undefined);return r!==1||t.length!==1||typeof t[0]!=="undefined"||!G(t,0)}();$(r,{push:dt},wt);$(r,{slice:function(t,r){var e=C(this)?X(this,""):this;return W(e,arguments)}},et);var bt=function(){try{[1,2].sort(null);[1,2].sort({});return true}catch(t){}return false}();var Tt=function(){try{[1,2].sort(/a/);return false}catch(t){}return true}();var mt=function(){try{[1,2].sort(undefined);return true}catch(t){}return false}();$(r,{sort:function sort(t){if(typeof t==="undefined"){return V(this)}if(!D(t)){throw new TypeError("Array.prototype.sort callback must be a function")}return V(this,t)}},bt||!mt||!Tt);var Dt=!Q({toString:null},"toString");var St=Q(function(){},"prototype");var xt=!G("x","0");var Ot=function(t){var r=t.constructor;return r&&r.prototype===t};var jt={$window:true,$console:true,$parent:true,$self:true,$frame:true,$frames:true,$frameElement:true,$webkitIndexedDB:true,$webkitStorageInfo:true,$external:true};var Et=function(){if(typeof window==="undefined"){return false}for(var t in window){try{if(!jt["$"+t]&&G(window,t)&&window[t]!==null&&typeof window[t]==="object"){Ot(window[t])}}catch(r){return true}}return false}();var It=function(t){if(typeof window==="undefined"||!Et){return Ot(t)}try{return Ot(t)}catch(r){return false}};var Mt=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"];var Ut=Mt.length;var Ft=function isArguments(t){return B(t)==="[object Arguments]"};var Nt=function isArguments(t){return t!==null&&typeof t==="object"&&typeof t.length==="number"&&t.length>=0&&!_(t)&&D(t.callee)};var Ct=Ft(arguments)?Ft:Nt;$(e,{keys:function keys(t){var r=D(t);var e=Ct(t);var n=t!==null&&typeof t==="object";var i=n&&C(t);if(!n&&!r&&!e){throw new TypeError("Object.keys called on a non-object")}var a=[];var f=St&&r;if(i&&xt||e){for(var u=0;u<t.length;++u){K(a,o(u))}}if(!e){for(var l in t){if(!(f&&l==="prototype")&&G(t,l)){K(a,o(l))}}}if(Dt){var s=It(t);for(var c=0;c<Ut;c++){var v=Mt[c];if(!(s&&v==="constructor")&&G(t,v)){K(a,v)}}}return a}});var kt=e.keys&&function(){return e.keys(arguments).length===2}(1,2);var At=e.keys&&function(){var t=e.keys(arguments);return arguments.length!==1||t.length!==1||t[0]!==1}(1);var Rt=e.keys;$(e,{keys:function keys(t){if(Ct(t)){return Rt(H(t))}else{return Rt(t)}}},!kt||At);var Pt=new Date(-0xc782b5b342b24).getUTCMonth()!==0;var $t=new Date(-0x55d318d56a724);var Jt=new Date(14496624e5);var Yt=$t.toUTCString()!=="Mon, 01 Jan -45875 11:59:59 GMT";var Zt;var zt;var Gt=$t.getTimezoneOffset();if(Gt<-720){Zt=$t.toDateString()!=="Tue Jan 02 -45875";zt=!/^Thu Dec 10 2015 \d\d:\d\d:\d\d GMT[-\+]\d\d\d\d(?: |$)/.test(Jt.toString())}else{Zt=$t.toDateString()!=="Mon Jan 01 -45875";zt=!/^Wed Dec 09 2015 \d\d:\d\d:\d\d GMT[-\+]\d\d\d\d(?: |$)/.test(Jt.toString())}var Bt=d.bind(Date.prototype.getFullYear);var Ht=d.bind(Date.prototype.getMonth);var Wt=d.bind(Date.prototype.getDate);var Lt=d.bind(Date.prototype.getUTCFullYear);var Xt=d.bind(Date.prototype.getUTCMonth);var qt=d.bind(Date.prototype.getUTCDate);var Kt=d.bind(Date.prototype.getUTCDay);var Qt=d.bind(Date.prototype.getUTCHours);var Vt=d.bind(Date.prototype.getUTCMinutes);var _t=d.bind(Date.prototype.getUTCSeconds);var tr=d.bind(Date.prototype.getUTCMilliseconds);var rr=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];var er=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var nr=function daysInMonth(t,r){return Wt(new Date(r,t,0))};$(Date.prototype,{getFullYear:function getFullYear(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);if(t<0&&Ht(this)>11){return t+1}return t},getMonth:function getMonth(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);var r=Ht(this);if(t<0&&r>11){return 0}return r},getDate:function getDate(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);var r=Ht(this);var e=Wt(this);if(t<0&&r>11){if(r===12){return e}var n=nr(0,t+1);return n-e+1}return e},getUTCFullYear:function getUTCFullYear(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);if(t<0&&Xt(this)>11){return t+1}return t},getUTCMonth:function getUTCMonth(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);var r=Xt(this);if(t<0&&r>11){return 0}return r},getUTCDate:function getUTCDate(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);var r=Xt(this);var e=qt(this);if(t<0&&r>11){if(r===12){return e}var n=nr(0,t+1);return n-e+1}return e}},Pt);$(Date.prototype,{toUTCString:function toUTCString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Kt(this);var r=qt(this);var e=Xt(this);var n=Lt(this);var i=Qt(this);var a=Vt(this);var o=_t(this);return rr[t]+", "+(r<10?"0"+r:r)+" "+er[e]+" "+n+" "+(i<10?"0"+i:i)+":"+(a<10?"0"+a:a)+":"+(o<10?"0"+o:o)+" GMT"}},Pt||Yt);$(Date.prototype,{toDateString:function toDateString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=this.getDay();var r=this.getDate();var e=this.getMonth();var n=this.getFullYear();return rr[t]+" "+er[e]+" "+(r<10?"0"+r:r)+" "+n}},Pt||Zt);if(Pt||zt){Date.prototype.toString=function toString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=this.getDay();var r=this.getDate();var e=this.getMonth();var n=this.getFullYear();var i=this.getHours();var a=this.getMinutes();var o=this.getSeconds();var f=this.getTimezoneOffset();var u=Math.floor(Math.abs(f)/60);var l=Math.floor(Math.abs(f)%60);return rr[t]+" "+er[e]+" "+(r<10?"0"+r:r)+" "+n+" "+(i<10?"0"+i:i)+":"+(a<10?"0"+a:a)+":"+(o<10?"0"+o:o)+" GMT"+(f>0?"-":"+")+(u<10?"0"+u:u)+(l<10?"0"+l:l)};if(P){e.defineProperty(Date.prototype,"toString",{configurable:true,enumerable:false,writable:true})}}var ir=-621987552e5;var ar="-000001";var or=Date.prototype.toISOString&&new Date(ir).toISOString().indexOf(ar)===-1;var fr=Date.prototype.toISOString&&new Date(-1).toISOString()!=="1969-12-31T23:59:59.999Z";var ur=d.bind(Date.prototype.getTime);$(Date.prototype,{toISOString:function toISOString(){if(!isFinite(this)||!isFinite(ur(this))){throw new RangeError("Date.prototype.toISOString called on non-finite value.")}var t=Lt(this);var r=Xt(this);t+=Math.floor(r/12);r=(r%12+12)%12;var e=[r+1,qt(this),Qt(this),Vt(this),_t(this)];t=(t<0?"-":t>9999?"+":"")+L("00000"+Math.abs(t),0<=t&&t<=9999?-4:-6);for(var n=0;n<e.length;++n){e[n]=L("00"+e[n],-2)}return t+"-"+H(e,0,2).join("-")+"T"+H(e,2).join(":")+"."+L("000"+tr(this),-3)+"Z"}},or||fr);var lr=function(){try{return Date.prototype.toJSON&&new Date(NaN).toJSON()===null&&new Date(ir).toJSON().indexOf(ar)!==-1&&Date.prototype.toJSON.call({toISOString:function(){return true}})}catch(t){return false}}();if(!lr){Date.prototype.toJSON=function toJSON(t){var r=e(this);var n=Z.ToPrimitive(r);if(typeof n==="number"&&!isFinite(n)){return null}var i=r.toISOString;if(!D(i)){throw new TypeError("toISOString property is not callable")}return i.call(r)}}var sr=Date.parse("+033658-09-27T01:46:40.000Z")===1e15;var cr=!isNaN(Date.parse("2012-04-04T24:00:00.500Z"))||!isNaN(Date.parse("2012-11-31T23:59:59.000Z"))||!isNaN(Date.parse("2012-12-31T23:59:60.000Z"));var vr=isNaN(Date.parse("2000-01-01T00:00:00.000Z"));if(vr||cr||!sr){var hr=Math.pow(2,31)-1;var pr=Y(new Date(1970,0,1,0,0,0,hr+1).getTime());Date=function(t){var r=function Date(e,n,i,a,f,u,l){var s=arguments.length;var c;if(this instanceof t){var v=u;var h=l;if(pr&&s>=7&&l>hr){var p=Math.floor(l/hr)*hr;var y=Math.floor(p/1e3);v+=y;h-=y*1e3}c=s===1&&o(e)===e?new t(r.parse(e)):s>=7?new t(e,n,i,a,f,v,h):s>=6?new t(e,n,i,a,f,v):s>=5?new t(e,n,i,a,f):s>=4?new t(e,n,i,a):s>=3?new t(e,n,i):s>=2?new t(e,n):s>=1?new t(e instanceof t?+e:e):new t}else{c=t.apply(this,arguments)}if(!J(c)){$(c,{constructor:r},true)}return c};var e=new RegExp("^"+"(\\d{4}|[+-]\\d{6})"+"(?:-(\\d{2})"+"(?:-(\\d{2})"+"(?:"+"T(\\d{2})"+":(\\d{2})"+"(?:"+":(\\d{2})"+"(?:(\\.\\d{1,}))?"+")?"+"("+"Z|"+"(?:"+"([-+])"+"(\\d{2})"+":(\\d{2})"+")"+")?)?)?)?"+"$");var n=[0,31,59,90,120,151,181,212,243,273,304,334,365];var i=function dayFromMonth(t,r){var e=r>1?1:0;return n[r]+Math.floor((t-1969+e)/4)-Math.floor((t-1901+e)/100)+Math.floor((t-1601+e)/400)+365*(t-1970)};var a=function toUTC(r){var e=0;var n=r;if(pr&&n>hr){var i=Math.floor(n/hr)*hr;var a=Math.floor(i/1e3);e+=a;n-=a*1e3}return u(new t(1970,0,1,0,0,e,n))};for(var f in t){if(G(t,f)){r[f]=t[f]}}$(r,{now:t.now,UTC:t.UTC},true);r.prototype=t.prototype;$(r.prototype,{constructor:r},true);var l=function parse(r){var n=e.exec(r);if(n){var o=u(n[1]),f=u(n[2]||1)-1,l=u(n[3]||1)-1,s=u(n[4]||0),c=u(n[5]||0),v=u(n[6]||0),h=Math.floor(u(n[7]||0)*1e3),p=Boolean(n[4]&&!n[8]),y=n[9]==="-"?1:-1,d=u(n[10]||0),g=u(n[11]||0),w;var b=c>0||v>0||h>0;if(s<(b?24:25)&&c<60&&v<60&&h<1e3&&f>-1&&f<12&&d<24&&g<60&&l>-1&&l<i(o,f+1)-i(o,f)){w=((i(o,f)+l)*24+s+d*y)*60;w=((w+c+g*y)*60+v)*1e3+h;if(p){w=a(w)}if(-864e13<=w&&w<=864e13){return w}}return NaN}return t.parse.apply(this,arguments)};$(r,{parse:l});return r}(Date)}if(!Date.now){Date.now=function now(){return(new Date).getTime()}}var yr=l.toFixed&&(8e-5.toFixed(3)!=="0.000"||.9.toFixed(0)!=="1"||1.255.toFixed(2)!=="1.25"||0xde0b6b3a7640080.toFixed(0)!=="1000000000000000128");var dr={base:1e7,size:6,data:[0,0,0,0,0,0],multiply:function multiply(t,r){var e=-1;var n=r;while(++e<dr.size){n+=t*dr.data[e];dr.data[e]=n%dr.base;n=Math.floor(n/dr.base)}},divide:function divide(t){var r=dr.size;var e=0;while(--r>=0){e+=dr.data[r];dr.data[r]=Math.floor(e/t);e=e%t*dr.base}},numToString:function numToString(){var t=dr.size;var r="";while(--t>=0){if(r!==""||t===0||dr.data[t]!==0){var e=o(dr.data[t]);if(r===""){r=e}else{r+=L("0000000",0,7-e.length)+e}}}return r},pow:function pow(t,r,e){return r===0?e:r%2===1?pow(t,r-1,e*t):pow(t*t,r/2,e)},log:function log(t){var r=0;var e=t;while(e>=4096){r+=12;e/=4096}while(e>=2){r+=1;e/=2}return r}};var gr=function toFixed(t){var r,e,n,i,a,f,l,s;r=u(t);r=Y(r)?0:Math.floor(r);if(r<0||r>20){throw new RangeError("Number.toFixed called with invalid number of decimals")}e=u(this);if(Y(e)){return"NaN"}if(e<=-1e21||e>=1e21){return o(e)}n="";if(e<0){n="-";e=-e}i="0";if(e>1e-21){a=dr.log(e*dr.pow(2,69,1))-69;f=a<0?e*dr.pow(2,-a,1):e/dr.pow(2,a,1);f*=4503599627370496;a=52-a;if(a>0){dr.multiply(0,f);l=r;while(l>=7){dr.multiply(1e7,0);l-=7}dr.multiply(dr.pow(10,l,1),0);l=a-1;while(l>=23){dr.divide(1<<23);l-=23}dr.divide(1<<l);dr.multiply(1,1);dr.divide(2);i=dr.numToString()}else{dr.multiply(0,f);dr.multiply(1<<-a,0);i=dr.numToString()+L("0.00000000000000000000",2,2+r)}}if(r>0){s=i.length;if(s<=r){i=n+L("0.0000000000000000000",0,r-s+2)+i}else{i=n+L(i,0,s-r)+"."+L(i,s-r)}}else{i=n+i}return i};$(l,{toFixed:gr},yr);var wr=function(){try{return 1..toPrecision(undefined)==="1"}catch(t){return true}}();var br=l.toPrecision;$(l,{toPrecision:function toPrecision(t){return typeof t==="undefined"?br.call(this):br.call(this,t)}},wr);if("ab".split(/(?:ab)*/).length!==2||".".split(/(.?)(.?)/).length!==4||"tesst".split(/(s)*/)[1]==="t"||"test".split(/(?:)/,-1).length!==4||"".split(/.?/).length||".".split(/()()/).length>1){(function(){var t=typeof/()??/.exec("")[1]==="undefined";var r=Math.pow(2,32)-1;f.split=function(e,n){var i=String(this);if(typeof e==="undefined"&&n===0){return[]}if(!M(e)){return X(this,e,n)}var a=[];var o=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,u,l,s,c;var h=new RegExp(e.source,o+"g");if(!t){u=new RegExp("^"+h.source+"$(?!\\s)",o)}var p=typeof n==="undefined"?r:Z.ToUint32(n);l=h.exec(i);while(l){s=l.index+l[0].length;if(s>f){K(a,L(i,f,l.index));if(!t&&l.length>1){l[0].replace(u,function(){for(var t=1;t<arguments.length-2;t++){if(typeof arguments[t]==="undefined"){l[t]=void 0}}})}if(l.length>1&&l.index<i.length){v.apply(a,H(l,1))}c=l[0].length;f=s;if(a.length>=p){break}}if(h.lastIndex===l.index){h.lastIndex++}l=h.exec(i)}if(f===i.length){if(c||!h.test("")){K(a,"")}}else{K(a,L(i,f))}return a.length>p?H(a,0,p):a}})()}else if("0".split(void 0,0).length){f.split=function split(t,r){if(typeof t==="undefined"&&r===0){return[]}return X(this,t,r)}}var Tr=f.replace;var mr=function(){var t=[];"x".replace(/x(.)?/g,function(r,e){K(t,e)});return t.length===1&&typeof t[0]==="undefined"}();if(!mr){f.replace=function replace(t,r){var e=D(r);var n=M(t)&&/\)[*?]/.test(t.source);if(!e||!n){return Tr.call(this,t,r)}else{var i=function(e){var n=arguments.length;var i=t.lastIndex;t.lastIndex=0;var a=t.exec(e)||[];t.lastIndex=i;K(a,arguments[n-2],arguments[n-1]);return r.apply(this,a)};return Tr.call(this,t,i)}}}var Dr=f.substr;var Sr="".substr&&"0b".substr(-1)!=="b";$(f,{substr:function substr(t,r){var e=t;if(t<0){e=w(this.length+t,0)}return Dr.call(this,e,r)}},Sr);var xr="	\n\x0B\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003"+"\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028"+"\u2029\ufeff";var Or="\u200b";var jr="["+xr+"]";var Er=new RegExp("^"+jr+jr+"*");var Ir=new RegExp(jr+jr+"*$");var Mr=f.trim&&(xr.trim()||!Or.trim());$(f,{trim:function trim(){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}return o(this).replace(Er,"").replace(Ir,"")}},Mr);var Ur=d.bind(String.prototype.trim);var Fr=f.lastIndexOf&&"abc\u3042\u3044".lastIndexOf("\u3042\u3044",2)!==-1;$(f,{lastIndexOf:function lastIndexOf(t){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}var r=o(this);var e=o(t);var n=arguments.length>1?u(arguments[1]):NaN;var i=Y(n)?Infinity:Z.ToInteger(n);var a=b(w(i,0),r.length);var f=e.length;var l=a+f;while(l>0){l=w(0,l-f);var s=q(L(r,l,a+f),e);if(s!==-1){return l+s}}return-1}},Fr);var Nr=f.lastIndexOf;$(f,{lastIndexOf:function lastIndexOf(t){return Nr.apply(this,arguments)}},f.lastIndexOf.length!==1);if(parseInt(xr+"08")!==8||parseInt(xr+"0x16")!==22){parseInt=function(t){var r=/^[\-+]?0[xX]/;return function parseInt(e,n){var i=Ur(String(e));var a=u(n)||(r.test(i)?16:10);return t(i,a)}}(parseInt)}if(1/parseFloat("-0")!==-Infinity){parseFloat=function(t){return function parseFloat(r){var e=Ur(String(r));var n=t(e);return n===0&&L(e,0,1)==="-"?-0:n}}(parseFloat)}if(String(new RangeError("test"))!=="RangeError: test"){var Cr=function toString(){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}var t=this.name;if(typeof t==="undefined"){t="Error"}else if(typeof t!=="string"){t=o(t)}var r=this.message;if(typeof r==="undefined"){r=""}else if(typeof r!=="string"){r=o(r)}if(!t){return r}if(!r){return t}return t+": "+r};Error.prototype.toString=Cr}if(P){var kr=function(t,r){if(Q(t,r)){var e=Object.getOwnPropertyDescriptor(t,r);if(e.configurable){e.enumerable=false;Object.defineProperty(t,r,e)}}};kr(Error.prototype,"message");if(Error.prototype.message!==""){Error.prototype.message=""}kr(Error.prototype,"name")}if(String(/a/gim)!=="/a/gim"){var Ar=function toString(){var t="/"+this.source+"/";if(this.global){t+="g"}if(this.ignoreCase){t+="i"}if(this.multiline){t+="m"}return t};RegExp.prototype.toString=Ar}});
//# sourceMappingURL=es5-shim.map

/*!
 * https://github.com/es-shims/es5-shim
 * @license es5-shim Copyright 2009-2015 by contributors, MIT License
 * see https://github.com/es-shims/es5-shim/blob/v4.5.9/LICENSE
 */
(function(e,t){"use strict";if(typeof define==="function"&&define.amd){define(t)}else if(typeof exports==="object"){module.exports=t()}else{e.returnExports=t()}})(this,function(){var e=Function.call;var t=Object.prototype;var r=e.bind(t.hasOwnProperty);var n=e.bind(t.propertyIsEnumerable);var o=e.bind(t.toString);var i;var c;var f;var a;var l=r(t,"__defineGetter__");if(l){i=e.bind(t.__defineGetter__);c=e.bind(t.__defineSetter__);f=e.bind(t.__lookupGetter__);a=e.bind(t.__lookupSetter__)}var u=function isPrimitive(e){return e==null||typeof e!=="object"&&typeof e!=="function"};if(!Object.getPrototypeOf){Object.getPrototypeOf=function getPrototypeOf(e){var r=e.__proto__;if(r||r===null){return r}else if(o(e.constructor)==="[object Function]"){return e.constructor.prototype}else if(e instanceof Object){return t}else{return null}}}var p=function doesGetOwnPropertyDescriptorWork(e){try{e.sentinel=0;return Object.getOwnPropertyDescriptor(e,"sentinel").value===0}catch(t){return false}};if(Object.defineProperty){var s=p({});var b=typeof document==="undefined"||p(document.createElement("div"));if(!b||!s){var O=Object.getOwnPropertyDescriptor}}if(!Object.getOwnPropertyDescriptor||O){var d="Object.getOwnPropertyDescriptor called on a non-object: ";Object.getOwnPropertyDescriptor=function getOwnPropertyDescriptor(e,o){if(u(e)){throw new TypeError(d+e)}if(O){try{return O.call(Object,e,o)}catch(i){}}var c;if(!r(e,o)){return c}c={enumerable:n(e,o),configurable:true};if(l){var p=e.__proto__;var s=e!==t;if(s){e.__proto__=t}var b=f(e,o);var y=a(e,o);if(s){e.__proto__=p}if(b||y){if(b){c.get=b}if(y){c.set=y}return c}}c.value=e[o];c.writable=true;return c}}if(!Object.getOwnPropertyNames){Object.getOwnPropertyNames=function getOwnPropertyNames(e){return Object.keys(e)}}if(!Object.create){var y;var j=!({__proto__:null}instanceof Object);var v=function shouldUseActiveX(){if(!document.domain){return false}try{return!!new ActiveXObject("htmlfile")}catch(e){return false}};var _=function getEmptyViaActiveX(){var e;var t;t=new ActiveXObject("htmlfile");var r="script";t.write("<"+r+"></"+r+">");t.close();e=t.parentWindow.Object.prototype;t=null;return e};var w=function getEmptyViaIFrame(){var e=document.createElement("iframe");var t=document.body||document.documentElement;var r;e.style.display="none";t.appendChild(e);e.src="javascript:";r=e.contentWindow.Object.prototype;t.removeChild(e);e=null;return r};if(j||typeof document==="undefined"){y=function(){return{__proto__:null}}}else{y=function(){var e=v()?_():w();delete e.constructor;delete e.hasOwnProperty;delete e.propertyIsEnumerable;delete e.isPrototypeOf;delete e.toLocaleString;delete e.toString;delete e.valueOf;var t=function Empty(){};t.prototype=e;y=function(){return new t};return new t}}Object.create=function create(e,t){var r;var n=function Type(){};if(e===null){r=y()}else{if(e!==null&&u(e)){throw new TypeError("Object prototype may only be an Object or null")}n.prototype=e;r=new n;r.__proto__=e}if(t!==void 0){Object.defineProperties(r,t)}return r}}var m=function doesDefinePropertyWork(e){try{Object.defineProperty(e,"sentinel",{});return"sentinel"in e}catch(t){return false}};if(Object.defineProperty){var P=m({});var E=typeof document==="undefined"||m(document.createElement("div"));if(!P||!E){var h=Object.defineProperty,g=Object.defineProperties}}if(!Object.defineProperty||h){var z="Property description must be an object: ";var T="Object.defineProperty called on non-object: ";var x="getters & setters can not be defined on this javascript engine";Object.defineProperty=function defineProperty(e,r,n){if(u(e)){throw new TypeError(T+e)}if(u(n)){throw new TypeError(z+n)}if(h){try{return h.call(Object,e,r,n)}catch(o){}}if("value"in n){if(l&&(f(e,r)||a(e,r))){var p=e.__proto__;e.__proto__=t;delete e[r];e[r]=n.value;e.__proto__=p}else{e[r]=n.value}}else{var s="get"in n;var b="set"in n;if(!l&&(s||b)){throw new TypeError(x)}if(s){i(e,r,n.get)}if(b){c(e,r,n.set)}}return e}}if(!Object.defineProperties||g){Object.defineProperties=function defineProperties(e,t){if(g){try{return g.call(Object,e,t)}catch(r){}}Object.keys(t).forEach(function(r){if(r!=="__proto__"){Object.defineProperty(e,r,t[r])}});return e}}if(!Object.seal){Object.seal=function seal(e){if(Object(e)!==e){throw new TypeError("Object.seal can only be called on Objects.")}return e}}if(!Object.freeze){Object.freeze=function freeze(e){if(Object(e)!==e){throw new TypeError("Object.freeze can only be called on Objects.")}return e}}try{Object.freeze(function(){})}catch(S){Object.freeze=function(e){return function freeze(t){if(typeof t==="function"){return t}else{return e(t)}}}(Object.freeze)}if(!Object.preventExtensions){Object.preventExtensions=function preventExtensions(e){if(Object(e)!==e){throw new TypeError("Object.preventExtensions can only be called on Objects.")}return e}}if(!Object.isSealed){Object.isSealed=function isSealed(e){if(Object(e)!==e){throw new TypeError("Object.isSealed can only be called on Objects.")}return false}}if(!Object.isFrozen){Object.isFrozen=function isFrozen(e){if(Object(e)!==e){throw new TypeError("Object.isFrozen can only be called on Objects.")}return false}}if(!Object.isExtensible){Object.isExtensible=function isExtensible(e){if(Object(e)!==e){throw new TypeError("Object.isExtensible can only be called on Objects.")}var t="";while(r(e,t)){t+="?"}e[t]=true;var n=r(e,t);delete e[t];return n}}});
//# sourceMappingURL=es5-sham.map

/*! jQuery v1.8.3 jquery.com | jquery.org/license */
(function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i="data-"+n.replace(P,"-$1").toLowerCase();r=e.getAttribute(i);if(typeof r=="string"){try{r=r==="true"?!0:r==="false"?!1:r==="null"?null:+r+""===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t==="data"&&v.isEmptyObject(e[t]))continue;if(t!=="toJSON")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):n==="input"&&Et.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):n==="option"?t.selected=e.defaultSelected:n==="input"||n==="textarea"?t.defaultValue=e.defaultValue:n==="script"&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(v.expando)}function Mt(e){return typeof e.getElementsByTagName!="undefined"?e.getElementsByTagName("*"):typeof e.querySelectorAll!="undefined"?e.querySelectorAll("*"):[]}function _t(e){Et.test(e.type)&&(e.defaultChecked=e.checked)}function Qt(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Jt.length;while(i--){t=Jt[i]+n;if(t in e)return t}return r}function Gt(e,t){return e=t||e,v.css(e,"display")==="none"||!v.contains(e.ownerDocument,e)}function Yt(e,t){var n,r,i=[],s=0,o=e.length;for(;s<o;s++){n=e[s];if(!n.style)continue;i[s]=v._data(n,"olddisplay"),t?(!i[s]&&n.style.display==="none"&&(n.style.display=""),n.style.display===""&&Gt(n)&&(i[s]=v._data(n,"olddisplay",nn(n.nodeName)))):(r=Dt(n,"display"),!i[s]&&r!=="none"&&v._data(n,"olddisplay",r))}for(s=0;s<o;s++){n=e[s];if(!n.style)continue;if(!t||n.style.display==="none"||n.style.display==="")n.style.display=t?i[s]||"":"none"}return e}function Zt(e,t,n){var r=Rt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function en(e,t,n,r){var i=n===(r?"border":"content")?4:t==="width"?1:0,s=0;for(;i<4;i+=2)n==="margin"&&(s+=v.css(e,n+$t[i],!0)),r?(n==="content"&&(s-=parseFloat(Dt(e,"padding"+$t[i]))||0),n!=="margin"&&(s-=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0)):(s+=parseFloat(Dt(e,"padding"+$t[i]))||0,n!=="padding"&&(s+=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0));return s}function tn(e,t,n){var r=t==="width"?e.offsetWidth:e.offsetHeight,i=!0,s=v.support.boxSizing&&v.css(e,"boxSizing")==="border-box";if(r<=0||r==null){r=Dt(e,t);if(r<0||r==null)r=e.style[t];if(Ut.test(r))return r;i=s&&(v.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+en(e,t,n||(s?"border":"content"),i)+"px"}function nn(e){if(Wt[e])return Wt[e];var t=v("<"+e+">").appendTo(i.body),n=t.css("display");t.remove();if(n==="none"||n===""){Pt=i.body.appendChild(Pt||v.extend(i.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!Ht||!Pt.createElement)Ht=(Pt.contentWindow||Pt.contentDocument).document,Ht.write("<!doctype html><html><body>"),Ht.close();t=Ht.body.appendChild(Ht.createElement(e)),n=Dt(t,"display"),i.body.removeChild(Pt)}return Wt[e]=n,n}function fn(e,t,n,r){var i;if(v.isArray(t))v.each(t,function(t,i){n||sn.test(e)?r(e,i):fn(e+"["+(typeof i=="object"?t:"")+"]",i,n,r)});else if(!n&&v.type(t)==="object")for(i in t)fn(e+"["+i+"]",t[i],n,r);else r(e,t)}function Cn(e){return function(t,n){typeof t!="string"&&(n=t,t="*");var r,i,s,o=t.toLowerCase().split(y),u=0,a=o.length;if(v.isFunction(n))for(;u<a;u++)r=o[u],s=/^\+/.test(r),s&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[s?"unshift":"push"](n)}}function kn(e,n,r,i,s,o){s=s||n.dataTypes[0],o=o||{},o[s]=!0;var u,a=e[s],f=0,l=a?a.length:0,c=e===Sn;for(;f<l&&(c||!u);f++)u=a[f](n,r,i),typeof u=="string"&&(!c||o[u]?u=t:(n.dataTypes.unshift(u),u=kn(e,n,r,i,u,o)));return(c||!u)&&!o["*"]&&(u=kn(e,n,r,i,"*",o)),u}function Ln(e,n){var r,i,s=v.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((s[r]?e:i||(i={}))[r]=n[r]);i&&v.extend(!0,e,i)}function An(e,n,r){var i,s,o,u,a=e.contents,f=e.dataTypes,l=e.responseFields;for(s in l)s in r&&(n[l[s]]=r[s]);while(f[0]==="*")f.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(s in a)if(a[s]&&a[s].test(i)){f.unshift(s);break}if(f[0]in r)o=f[0];else{for(s in r){if(!f[0]||e.converters[s+" "+f[0]]){o=s;break}u||(u=s)}o=o||u}if(o)return o!==f[0]&&f.unshift(o),r[o]}function On(e,t){var n,r,i,s,o=e.dataTypes.slice(),u=o[0],a={},f=0;e.dataFilter&&(t=e.dataFilter(t,e.dataType));if(o[1])for(n in e.converters)a[n.toLowerCase()]=e.converters[n];for(;i=o[++f];)if(i!=="*"){if(u!=="*"&&u!==i){n=a[u+" "+i]||a["* "+i];if(!n)for(r in a){s=r.split(" ");if(s[1]===i){n=a[u+" "+s[0]]||a["* "+s[0]];if(n){n===!0?n=a[r]:a[r]!==!0&&(i=s[0],o.splice(f--,0,i));break}}}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(l){return{state:"parsererror",error:n?l:"No conversion from "+u+" to "+i}}}u=i}return{state:"success",data:t}}function Fn(){try{return new e.XMLHttpRequest}catch(t){}}function In(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $n(){return setTimeout(function(){qn=t},0),qn=v.now()}function Jn(e,t){v.each(t,function(t,n){var r=(Vn[t]||[]).concat(Vn["*"]),i=0,s=r.length;for(;i<s;i++)if(r[i].call(e,t,n))return})}function Kn(e,t,n){var r,i=0,s=0,o=Xn.length,u=v.Deferred().always(function(){delete a.elem}),a=function(){var t=qn||$n(),n=Math.max(0,f.startTime+f.duration-t),r=n/f.duration||0,i=1-r,s=0,o=f.tweens.length;for(;s<o;s++)f.tweens[s].run(i);return u.notifyWith(e,[f,i,n]),i<1&&o?n:(u.resolveWith(e,[f]),!1)},f=u.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:qn||$n(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=v.Tween(e,f.opts,t,n,f.opts.specialEasing[t]||f.opts.easing);return f.tweens.push(i),i},stop:function(t){var n=0,r=t?f.tweens.length:0;for(;n<r;n++)f.tweens[n].run(1);return t?u.resolveWith(e,[f,t]):u.rejectWith(e,[f,t]),this}}),l=f.props;Qn(l,f.opts.specialEasing);for(;i<o;i++){r=Xn[i].call(f,e,l,f.opts);if(r)return r}return Jn(f,l),v.isFunction(f.opts.start)&&f.opts.start.call(e,f),v.fx.timer(v.extend(a,{anim:f,queue:f.opts.queue,elem:e})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Qn(e,t){var n,r,i,s,o;for(n in e){r=v.camelCase(n),i=t[r],s=e[n],v.isArray(s)&&(i=s[1],s=e[n]=s[0]),n!==r&&(e[r]=s,delete e[n]),o=v.cssHooks[r];if(o&&"expand"in o){s=o.expand(s),delete e[r];for(n in s)n in e||(e[n]=s[n],t[n]=i)}else t[r]=i}}function Gn(e,t,n){var r,i,s,o,u,a,f,l,c,h=this,p=e.style,d={},m=[],g=e.nodeType&&Gt(e);n.queue||(l=v._queueHooks(e,"fx"),l.unqueued==null&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,h.always(function(){h.always(function(){l.unqueued--,v.queue(e,"fx").length||l.empty.fire()})})),e.nodeType===1&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],v.css(e,"display")==="inline"&&v.css(e,"float")==="none"&&(!v.support.inlineBlockNeedsLayout||nn(e.nodeName)==="inline"?p.display="inline-block":p.zoom=1)),n.overflow&&(p.overflow="hidden",v.support.shrinkWrapBlocks||h.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t){s=t[r];if(Un.exec(s)){delete t[r],a=a||s==="toggle";if(s===(g?"hide":"show"))continue;m.push(r)}}o=m.length;if(o){u=v._data(e,"fxshow")||v._data(e,"fxshow",{}),"hidden"in u&&(g=u.hidden),a&&(u.hidden=!g),g?v(e).show():h.done(function(){v(e).hide()}),h.done(function(){var t;v.removeData(e,"fxshow",!0);for(t in d)v.style(e,t,d[t])});for(r=0;r<o;r++)i=m[r],f=h.createTween(i,g?u[i]:0),d[i]=u[i]||v.style(e,i),i in u||(u[i]=f.start,g&&(f.end=f.start,f.start=i==="width"||i==="height"?1:0))}}function Yn(e,t,n,r,i){return new Yn.prototype.init(e,t,n,r,i)}function Zn(e,t){var n,r={height:e},i=0;t=t?1:0;for(;i<4;i+=2-t)n=$t[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function tr(e){return v.isWindow(e)?e:e.nodeType===9?e.defaultView||e.parentWindow:!1}var n,r,i=e.document,s=e.location,o=e.navigator,u=e.jQuery,a=e.$,f=Array.prototype.push,l=Array.prototype.slice,c=Array.prototype.indexOf,h=Object.prototype.toString,p=Object.prototype.hasOwnProperty,d=String.prototype.trim,v=function(e,t){return new v.fn.init(e,t,n)},m=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,g=/\S/,y=/\s+/,b=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,E=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,S=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,T=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,N=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,C=/^-ms-/,k=/-([\da-z])/gi,L=function(e,t){return(t+"").toUpperCase()},A=function(){i.addEventListener?(i.removeEventListener("DOMContentLoaded",A,!1),v.ready()):i.readyState==="complete"&&(i.detachEvent("onreadystatechange",A),v.ready())},O={};v.fn=v.prototype={constructor:v,init:function(e,n,r){var s,o,u,a;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if(typeof e=="string"){e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3?s=[null,e,null]:s=w.exec(e);if(s&&(s[1]||!n)){if(s[1])return n=n instanceof v?n[0]:n,a=n&&n.nodeType?n.ownerDocument||n:i,e=v.parseHTML(s[1],a,!0),E.test(s[1])&&v.isPlainObject(n)&&this.attr.call(e,n,!0),v.merge(this,e);o=i.getElementById(s[2]);if(o&&o.parentNode){if(o.id!==s[2])return r.find(e);this.length=1,this[0]=o}return this.context=i,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return v.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),v.makeArray(e,this))},selector:"",jquery:"1.8.3",length:0,size:function(){return this.length},toArray:function(){return l.call(this)},get:function(e){return e==null?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=v.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,t==="find"?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return v.each(this,e,t)},ready:function(e){return v.ready.promise().done(e),this},eq:function(e){return e=+e,e===-1?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(l.apply(this,arguments),"slice",l.call(arguments).join(","))},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:[].sort,splice:[].splice},v.fn.init.prototype=v.fn,v.extend=v.fn.extend=function(){var e,n,r,i,s,o,u=arguments[0]||{},a=1,f=arguments.length,l=!1;typeof u=="boolean"&&(l=u,u=arguments[1]||{},a=2),typeof u!="object"&&!v.isFunction(u)&&(u={}),f===a&&(u=this,--a);for(;a<f;a++)if((e=arguments[a])!=null)for(n in e){r=u[n],i=e[n];if(u===i)continue;l&&i&&(v.isPlainObject(i)||(s=v.isArray(i)))?(s?(s=!1,o=r&&v.isArray(r)?r:[]):o=r&&v.isPlainObject(r)?r:{},u[n]=v.extend(l,o,i)):i!==t&&(u[n]=i)}return u},v.extend({noConflict:function(t){return e.$===v&&(e.$=a),t&&e.jQuery===v&&(e.jQuery=u),v},isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){if(e===!0?--v.readyWait:v.isReady)return;if(!i.body)return setTimeout(v.ready,1);v.isReady=!0;if(e!==!0&&--v.readyWait>0)return;r.resolveWith(i,[v]),v.fn.trigger&&v(i).trigger("ready").off("ready")},isFunction:function(e){return v.type(e)==="function"},isArray:Array.isArray||function(e){return v.type(e)==="array"},isWindow:function(e){return e!=null&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return e==null?String(e):O[h.call(e)]||"object"},isPlainObject:function(e){if(!e||v.type(e)!=="object"||e.nodeType||v.isWindow(e))return!1;try{if(e.constructor&&!p.call(e,"constructor")&&!p.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||p.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return!e||typeof e!="string"?null:(typeof t=="boolean"&&(n=t,t=0),t=t||i,(r=E.exec(e))?[t.createElement(r[1])]:(r=v.buildFragment([e],t,n?null:[]),v.merge([],(r.cacheable?v.clone(r.fragment):r.fragment).childNodes)))},parseJSON:function(t){if(!t||typeof t!="string")return null;t=v.trim(t);if(e.JSON&&e.JSON.parse)return e.JSON.parse(t);if(S.test(t.replace(T,"@").replace(N,"]").replace(x,"")))return(new Function("return "+t))();v.error("Invalid JSON: "+t)},parseXML:function(n){var r,i;if(!n||typeof n!="string")return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(s){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&v.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&g.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(C,"ms-").replace(k,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,n,r){var i,s=0,o=e.length,u=o===t||v.isFunction(e);if(r){if(u){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s<o;)if(n.apply(e[s++],r)===!1)break}else if(u){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s<o;)if(n.call(e[s],s,e[s++])===!1)break;return e},trim:d&&!d.call("\ufeff\u00a0")?function(e){return e==null?"":d.call(e)}:function(e){return e==null?"":(e+"").replace(b,"")},makeArray:function(e,t){var n,r=t||[];return e!=null&&(n=v.type(e),e.length==null||n==="string"||n==="function"||n==="regexp"||v.isWindow(e)?f.call(r,e):v.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(c)return c.call(t,e,n);r=t.length,n=n?n<0?Math.max(0,r+n):n:0;for(;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,s=0;if(typeof r=="number")for(;s<r;s++)e[i++]=n[s];else while(n[s]!==t)e[i++]=n[s++];return e.length=i,e},grep:function(e,t,n){var r,i=[],s=0,o=e.length;n=!!n;for(;s<o;s++)r=!!t(e[s],s),n!==r&&i.push(e[s]);return i},map:function(e,n,r){var i,s,o=[],u=0,a=e.length,f=e instanceof v||a!==t&&typeof a=="number"&&(a>0&&e[0]&&e[a-1]||a===0||v.isArray(e));if(f)for(;u<a;u++)i=n(e[u],u,r),i!=null&&(o[o.length]=i);else for(s in e)i=n(e[s],s,r),i!=null&&(o[o.length]=i);return o.concat.apply([],o)},guid:1,proxy:function(e,n){var r,i,s;return typeof n=="string"&&(r=e[n],n=e,e=r),v.isFunction(e)?(i=l.call(arguments,2),s=function(){return e.apply(n,i.concat(l.call(arguments)))},s.guid=e.guid=e.guid||v.guid++,s):t},access:function(e,n,r,i,s,o,u){var a,f=r==null,l=0,c=e.length;if(r&&typeof r=="object"){for(l in r)v.access(e,n,l,r[l],1,o,i);s=1}else if(i!==t){a=u===t&&v.isFunction(i),f&&(a?(a=n,n=function(e,t,n){return a.call(v(e),n)}):(n.call(e,i),n=null));if(n)for(;l<c;l++)n(e[l],r,a?i.call(e[l],l,n(e[l],r)):i,u);s=1}return s?e:f?n.call(e):c?n(e[0],r):o},now:function(){return(new Date).getTime()}}),v.ready.promise=function(t){if(!r){r=v.Deferred();if(i.readyState==="complete")setTimeout(v.ready,1);else if(i.addEventListener)i.addEventListener("DOMContentLoaded",A,!1),e.addEventListener("load",v.ready,!1);else{i.attachEvent("onreadystatechange",A),e.attachEvent("onload",v.ready);var n=!1;try{n=e.frameElement==null&&i.documentElement}catch(s){}n&&n.doScroll&&function o(){if(!v.isReady){try{n.doScroll("left")}catch(e){return setTimeout(o,50)}v.ready()}}()}}return r.promise(t)},v.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){O["[object "+t+"]"]=t.toLowerCase()}),n=v(i);var M={};v.Callbacks=function(e){e=typeof e=="string"?M[e]||_(e):v.extend({},e);var n,r,i,s,o,u,a=[],f=!e.once&&[],l=function(t){n=e.memory&&t,r=!0,u=s||0,s=0,o=a.length,i=!0;for(;a&&u<o;u++)if(a[u].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,a&&(f?f.length&&l(f.shift()):n?a=[]:c.disable())},c={add:function(){if(a){var t=a.length;(function r(t){v.each(t,function(t,n){var i=v.type(n);i==="function"?(!e.unique||!c.has(n))&&a.push(n):n&&n.length&&i!=="string"&&r(n)})})(arguments),i?o=a.length:n&&(s=t,l(n))}return this},remove:function(){return a&&v.each(arguments,function(e,t){var n;while((n=v.inArray(t,a,n))>-1)a.splice(n,1),i&&(n<=o&&o--,n<=u&&u--)}),this},has:function(e){return v.inArray(e,a)>-1},empty:function(){return a=[],this},disable:function(){return a=f=n=t,this},disabled:function(){return!a},lock:function(){return f=t,n||c.disable(),this},locked:function(){return!f},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],a&&(!r||f)&&(i?f.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},v.extend({Deferred:function(e){var t=[["resolve","done",v.Callbacks("once memory"),"resolved"],["reject","fail",v.Callbacks("once memory"),"rejected"],["notify","progress",v.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return v.Deferred(function(n){v.each(t,function(t,r){var s=r[0],o=e[t];i[r[1]](v.isFunction(o)?function(){var e=o.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+"With"](this===i?n:this,[e])}:n[s])}),e=null}).promise()},promise:function(e){return e!=null?v.extend(e,r):r}},i={};return r.pipe=r.then,v.each(t,function(e,s){var o=s[2],u=s[3];r[s[1]]=o.add,u&&o.add(function(){n=u},t[e^1][2].disable,t[2][2].lock),i[s[0]]=o.fire,i[s[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=l.call(arguments),r=n.length,i=r!==1||e&&v.isFunction(e.promise)?r:0,s=i===1?e:v.Deferred(),o=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?l.call(arguments):r,n===u?s.notifyWith(t,n):--i||s.resolveWith(t,n)}},u,a,f;if(r>1){u=new Array(r),a=new Array(r),f=new Array(r);for(;t<r;t++)n[t]&&v.isFunction(n[t].promise)?n[t].promise().done(o(t,f,n)).fail(s.reject).progress(o(t,a,u)):--i}return i||s.resolveWith(f,n),s.promise()}}),v.support=function(){var t,n,r,s,o,u,a,f,l,c,h,p=i.createElement("div");p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0];if(!n||!r||!n.length)return{};s=i.createElement("select"),o=s.appendChild(i.createElement("option")),u=p.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:r.getAttribute("href")==="/a",opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:u.value==="on",optSelected:o.selected,getSetAttribute:p.className!=="t",enctype:!!i.createElement("form").enctype,html5Clone:i.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:i.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},u.checked=!0,t.noCloneChecked=u.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",h=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",h)),u=i.createElement("input"),u.value="t",u.setAttribute("type","radio"),t.radioValue=u.value==="t",u.setAttribute("checked","checked"),u.setAttribute("name","t"),p.appendChild(u),a=i.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=u.checked,a.removeChild(u),a.appendChild(p);if(p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})f="on"+l,c=f in p,c||(p.setAttribute(f,"return;"),c=typeof p[f]=="function"),t[l+"Bubbles"]=c;return v(function(){var n,r,s,o,u="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=i.getElementsByTagName("body")[0];if(!a)return;n=i.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=i.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",s=r.getElementsByTagName("td"),s[0].style.cssText="padding:0;margin:0;border:0;display:none",c=s[0].offsetHeight===0,s[0].style.display="",s[1].style.display="none",t.reliableHiddenOffsets=c&&s[0].offsetHeight===0,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=r.offsetWidth===4,t.doesNotIncludeMarginInBodyOffset=a.offsetTop!==1,e.getComputedStyle&&(t.pixelPosition=(e.getComputedStyle(r,null)||{}).top!=="1%",t.boxSizingReliable=(e.getComputedStyle(r,null)||{width:"4px"}).width==="4px",o=i.createElement("div"),o.style.cssText=r.style.cssText=u,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),typeof r.style.zoom!="undefined"&&(r.innerHTML="",r.style.cssText=u+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=r.offsetWidth===3,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=r.offsetWidth!==3,n.style.zoom=1),a.removeChild(n),n=r=s=o=null}),a.removeChild(p),n=r=s=o=u=a=p=null,t}();var D=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;v.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(v.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?v.cache[e[v.expando]]:e[v.expando],!!e&&!B(e)},data:function(e,n,r,i){if(!v.acceptData(e))return;var s,o,u=v.expando,a=typeof n=="string",f=e.nodeType,l=f?v.cache:e,c=f?e[u]:e[u]&&u;if((!c||!l[c]||!i&&!l[c].data)&&a&&r===t)return;c||(f?e[u]=c=v.deletedIds.pop()||v.guid++:c=u),l[c]||(l[c]={},f||(l[c].toJSON=v.noop));if(typeof n=="object"||typeof n=="function")i?l[c]=v.extend(l[c],n):l[c].data=v.extend(l[c].data,n);return s=l[c],i||(s.data||(s.data={}),s=s.data),r!==t&&(s[v.camelCase(n)]=r),a?(o=s[n],o==null&&(o=s[v.camelCase(n)])):o=s,o},removeData:function(e,t,n){if(!v.acceptData(e))return;var r,i,s,o=e.nodeType,u=o?v.cache:e,a=o?e[v.expando]:v.expando;if(!u[a])return;if(t){r=n?u[a]:u[a].data;if(r){v.isArray(t)||(t in r?t=[t]:(t=v.camelCase(t),t in r?t=[t]:t=t.split(" ")));for(i=0,s=t.length;i<s;i++)delete r[t[i]];if(!(n?B:v.isEmptyObject)(r))return}}if(!n){delete u[a].data;if(!B(u[a]))return}o?v.cleanData([e],!0):v.support.deleteExpando||u!=u.window?delete u[a]:u[a]=null},_data:function(e,t,n){return v.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&v.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),v.fn.extend({data:function(e,n){var r,i,s,o,u,a=this[0],f=0,l=null;if(e===t){if(this.length){l=v.data(a);if(a.nodeType===1&&!v._data(a,"parsedAttrs")){s=a.attributes;for(u=s.length;f<u;f++)o=s[f].name,o.indexOf("data-")||(o=v.camelCase(o.substring(5)),H(a,o,l[o]));v._data(a,"parsedAttrs",!0)}}return l}return typeof e=="object"?this.each(function(){v.data(this,e)}):(r=e.split(".",2),r[1]=r[1]?"."+r[1]:"",i=r[1]+"!",v.access(this,function(n){if(n===t)return l=this.triggerHandler("getData"+i,[r[0]]),l===t&&a&&(l=v.data(a,e),l=H(a,e,l)),l===t&&r[1]?this.data(r[0]):l;r[1]=n,this.each(function(){var t=v(this);t.triggerHandler("setData"+i,r),v.data(this,e,n),t.triggerHandler("changeData"+i,r)})},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){v.removeData(this,e)})}}),v.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=v._data(e,t),n&&(!r||v.isArray(n)?r=v._data(e,t,v.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),r=n.length,i=n.shift(),s=v._queueHooks(e,t),o=function(){v.dequeue(e,t)};i==="inprogress"&&(i=n.shift(),r--),i&&(t==="fx"&&n.unshift("inprogress"),delete s.stop,i.call(e,o,s)),!r&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v._data(e,n)||v._data(e,n,{empty:v.Callbacks("once memory").add(function(){v.removeData(e,t+"queue",!0),v.removeData(e,n,!0)})})}}),v.fn.extend({queue:function(e,n){var r=2;return typeof e!="string"&&(n=e,e="fx",r--),arguments.length<r?v.queue(this[0],e):n===t?this:this.each(function(){var t=v.queue(this,e,n);v._queueHooks(this,e),e==="fx"&&t[0]!=="inprogress"&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},delay:function(e,t){return e=v.fx?v.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,s=v.Deferred(),o=this,u=this.length,a=function(){--i||s.resolveWith(o,[o])};typeof e!="string"&&(n=e,e=t),e=e||"fx";while(u--)r=v._data(o[u],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(a));return a(),s.promise(n)}});var j,F,I,q=/[\t\r\n]/g,R=/\r/g,U=/^(?:button|input)$/i,z=/^(?:button|input|object|select|textarea)$/i,W=/^a(?:rea|)$/i,X=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,V=v.support.getSetAttribute;v.fn.extend({attr:function(e,t){return v.access(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})},prop:function(e,t){return v.access(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return e=v.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,s,o,u;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,this.className))});if(e&&typeof e=="string"){t=e.split(y);for(n=0,r=this.length;n<r;n++){i=this[n];if(i.nodeType===1)if(!i.className&&t.length===1)i.className=e;else{s=" "+i.className+" ";for(o=0,u=t.length;o<u;o++)s.indexOf(" "+t[o]+" ")<0&&(s+=t[o]+" ");i.className=v.trim(s)}}}return this},removeClass:function(e){var n,r,i,s,o,u,a;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,this.className))});if(e&&typeof e=="string"||e===t){n=(e||"").split(y);for(u=0,a=this.length;u<a;u++){i=this[u];if(i.nodeType===1&&i.className){r=(" "+i.className+" ").replace(q," ");for(s=0,o=n.length;s<o;s++)while(r.indexOf(" "+n[s]+" ")>=0)r=r.replace(" "+n[s]+" "," ");i.className=e?v.trim(r):""}}}return this},toggleClass:function(e,t){var n=typeof e,r=typeof t=="boolean";return v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(n==="string"){var i,s=0,o=v(this),u=t,a=e.split(y);while(i=a[s++])u=r?u:!o.hasClass(i),o[u?"addClass":"removeClass"](i)}else if(n==="undefined"||n==="boolean")this.className&&v._data(this,"__className__",this.className),this.className=this.className||e===!1?"":v._data(this,"__className__")||""})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;n<r;n++)if(this[n].nodeType===1&&(" "+this[n].className+" ").replace(q," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,s=this[0];if(!arguments.length){if(s)return n=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(s,"value"))!==t?r:(r=s.value,typeof r=="string"?r.replace(R,""):r==null?"":r);return}return i=v.isFunction(e),this.each(function(r){var s,o=v(this);if(this.nodeType!==1)return;i?s=e.call(this,r,o.val()):s=e,s==null?s="":typeof s=="number"?s+="":v.isArray(s)&&(s=v.map(s,function(e){return e==null?"":e+""})),n=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()];if(!n||!("set"in n)||n.set(this,s,"value")===t)this.value=s})}}),v.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,s=e.type==="select-one"||i<0,o=s?null:[],u=s?i+1:r.length,a=i<0?u:s?i:0;for(;a<u;a++){n=r[a];if((n.selected||a===i)&&(v.support.optDisabled?!n.disabled:n.getAttribute("disabled")===null)&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){t=v(n).val();if(s)return t;o.push(t)}}return o},set:function(e,t){var n=v.makeArray(t);return v(e).find("option").each(function(){this.selected=v.inArray(v(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var s,o,u,a=e.nodeType;if(!e||a===3||a===8||a===2)return;if(i&&v.isFunction(v.fn[n]))return v(e)[n](r);if(typeof e.getAttribute=="undefined")return v.prop(e,n,r);u=a!==1||!v.isXMLDoc(e),u&&(n=n.toLowerCase(),o=v.attrHooks[n]||(X.test(n)?F:j));if(r!==t){if(r===null){v.removeAttr(e,n);return}return o&&"set"in o&&u&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r)}return o&&"get"in o&&u&&(s=o.get(e,n))!==null?s:(s=e.getAttribute(n),s===null?t:s)},removeAttr:function(e,t){var n,r,i,s,o=0;if(t&&e.nodeType===1){r=t.split(y);for(;o<r.length;o++)i=r[o],i&&(n=v.propFix[i]||i,s=X.test(i),s||v.attr(e,i,""),e.removeAttribute(V?i:n),s&&n in e&&(e[n]=!1))}},attrHooks:{type:{set:function(e,t){if(U.test(e.nodeName)&&e.parentNode)v.error("type property can't be changed");else if(!v.support.radioValue&&t==="radio"&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return j&&v.nodeName(e,"button")?j.get(e,t):t in e?e.value:null},set:function(e,t,n){if(j&&v.nodeName(e,"button"))return j.set(e,t,n);e.value=t}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,s,o,u=e.nodeType;if(!e||u===3||u===8||u===2)return;return o=u!==1||!v.isXMLDoc(e),o&&(n=v.propFix[n]||n,s=v.propHooks[n]),r!==t?s&&"set"in s&&(i=s.set(e,r,n))!==t?i:e[n]=r:s&&"get"in s&&(i=s.get(e,n))!==null?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):z.test(e.nodeName)||W.test(e.nodeName)&&e.href?0:t}}}}),F={get:function(e,n){var r,i=v.prop(e,n);return i===!0||typeof i!="boolean"&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?v.removeAttr(e,n):(r=v.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},V||(I={name:!0,id:!0,coords:!0},j=v.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(I[n]?r.value!=="":r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=i.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},v.each(["width","height"],function(e,t){v.attrHooks[t]=v.extend(v.attrHooks[t],{set:function(e,n){if(n==="")return e.setAttribute(t,"auto"),n}})}),v.attrHooks.contenteditable={get:j.get,set:function(e,t,n){t===""&&(t="false"),j.set(e,t,n)}}),v.support.hrefNormalized||v.each(["href","src","width","height"],function(e,n){v.attrHooks[n]=v.extend(v.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return r===null?t:r}})}),v.support.style||(v.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=t+""}}),v.support.optSelected||(v.propHooks.selected=v.extend(v.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),v.support.enctype||(v.propFix.enctype="encoding"),v.support.checkOn||v.each(["radio","checkbox"],function(){v.valHooks[this]={get:function(e){return e.getAttribute("value")===null?"on":e.value}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]=v.extend(v.valHooks[this],{set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>=0}})});var $=/^(?:textarea|input|select)$/i,J=/^([^\.]*|)(?:\.(.+)|)$/,K=/(?:^|\s)hover(\.\S+|)\b/,Q=/^key/,G=/^(?:mouse|contextmenu)|click/,Y=/^(?:focusinfocus|focusoutblur)$/,Z=function(e){return v.event.special.hover?e:e.replace(K,"mouseenter$1 mouseleave$1")};v.event={add:function(e,n,r,i,s){var o,u,a,f,l,c,h,p,d,m,g;if(e.nodeType===3||e.nodeType===8||!n||!r||!(o=v._data(e)))return;r.handler&&(d=r,r=d.handler,s=d.selector),r.guid||(r.guid=v.guid++),a=o.events,a||(o.events=a={}),u=o.handle,u||(o.handle=u=function(e){return typeof v=="undefined"||!!e&&v.event.triggered===e.type?t:v.event.dispatch.apply(u.elem,arguments)},u.elem=e),n=v.trim(Z(n)).split(" ");for(f=0;f<n.length;f++){l=J.exec(n[f])||[],c=l[1],h=(l[2]||"").split(".").sort(),g=v.event.special[c]||{},c=(s?g.delegateType:g.bindType)||c,g=v.event.special[c]||{},p=v.extend({type:c,origType:l[1],data:i,handler:r,guid:r.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:h.join(".")},d),m=a[c];if(!m){m=a[c]=[],m.delegateCount=0;if(!g.setup||g.setup.call(e,i,h,u)===!1)e.addEventListener?e.addEventListener(c,u,!1):e.attachEvent&&e.attachEvent("on"+c,u)}g.add&&(g.add.call(e,p),p.handler.guid||(p.handler.guid=r.guid)),s?m.splice(m.delegateCount++,0,p):m.push(p),v.event.global[c]=!0}e=null},global:{},remove:function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d,m,g=v.hasData(e)&&v._data(e);if(!g||!(h=g.events))return;t=v.trim(Z(t||"")).split(" ");for(s=0;s<t.length;s++){o=J.exec(t[s])||[],u=a=o[1],f=o[2];if(!u){for(u in h)v.event.remove(e,u+t[s],n,r,!0);continue}p=v.event.special[u]||{},u=(r?p.delegateType:p.bindType)||u,d=h[u]||[],l=d.length,f=f?new RegExp("(^|\\.)"+f.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(c=0;c<d.length;c++)m=d[c],(i||a===m.origType)&&(!n||n.guid===m.guid)&&(!f||f.test(m.namespace))&&(!r||r===m.selector||r==="**"&&m.selector)&&(d.splice(c--,1),m.selector&&d.delegateCount--,p.remove&&p.remove.call(e,m));d.length===0&&l!==d.length&&((!p.teardown||p.teardown.call(e,f,g.handle)===!1)&&v.removeEvent(e,u,g.handle),delete h[u])}v.isEmptyObject(h)&&(delete g.handle,v.removeData(e,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,s,o){if(!s||s.nodeType!==3&&s.nodeType!==8){var u,a,f,l,c,h,p,d,m,g,y=n.type||n,b=[];if(Y.test(y+v.event.triggered))return;y.indexOf("!")>=0&&(y=y.slice(0,-1),a=!0),y.indexOf(".")>=0&&(b=y.split("."),y=b.shift(),b.sort());if((!s||v.event.customEvent[y])&&!v.event.global[y])return;n=typeof n=="object"?n[v.expando]?n:new v.Event(y,n):new v.Event(y),n.type=y,n.isTrigger=!0,n.exclusive=a,n.namespace=b.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,h=y.indexOf(":")<0?"on"+y:"";if(!s){u=v.cache;for(f in u)u[f].events&&u[f].events[y]&&v.event.trigger(n,r,u[f].handle.elem,!0);return}n.result=t,n.target||(n.target=s),r=r!=null?v.makeArray(r):[],r.unshift(n),p=v.event.special[y]||{};if(p.trigger&&p.trigger.apply(s,r)===!1)return;m=[[s,p.bindType||y]];if(!o&&!p.noBubble&&!v.isWindow(s)){g=p.delegateType||y,l=Y.test(g+y)?s:s.parentNode;for(c=s;l;l=l.parentNode)m.push([l,g]),c=l;c===(s.ownerDocument||i)&&m.push([c.defaultView||c.parentWindow||e,g])}for(f=0;f<m.length&&!n.isPropagationStopped();f++)l=m[f][0],n.type=m[f][1],d=(v._data(l,"events")||{})[n.type]&&v._data(l,"handle"),d&&d.apply(l,r),d=h&&l[h],d&&v.acceptData(l)&&d.apply&&d.apply(l,r)===!1&&n.preventDefault();return n.type=y,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(s.ownerDocument,r)===!1)&&(y!=="click"||!v.nodeName(s,"a"))&&v.acceptData(s)&&h&&s[y]&&(y!=="focus"&&y!=="blur"||n.target.offsetWidth!==0)&&!v.isWindow(s)&&(c=s[h],c&&(s[h]=null),v.event.triggered=y,s[y](),v.event.triggered=t,c&&(s[h]=c)),n.result}return},dispatch:function(n){n=v.event.fix(n||e.event);var r,i,s,o,u,a,f,c,h,p,d=(v._data(this,"events")||{})[n.type]||[],m=d.delegateCount,g=l.call(arguments),y=!n.exclusive&&!n.namespace,b=v.event.special[n.type]||{},w=[];g[0]=n,n.delegateTarget=this;if(b.preDispatch&&b.preDispatch.call(this,n)===!1)return;if(m&&(!n.button||n.type!=="click"))for(s=n.target;s!=this;s=s.parentNode||this)if(s.disabled!==!0||n.type!=="click"){u={},f=[];for(r=0;r<m;r++)c=d[r],h=c.selector,u[h]===t&&(u[h]=c.needsContext?v(h,this).index(s)>=0:v.find(h,this,null,[s]).length),u[h]&&f.push(c);f.length&&w.push({elem:s,matches:f})}d.length>m&&w.push({elem:this,matches:d.slice(m)});for(r=0;r<w.length&&!n.isPropagationStopped();r++){a=w[r],n.currentTarget=a.elem;for(i=0;i<a.matches.length&&!n.isImmediatePropagationStopped();i++){c=a.matches[i];if(y||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))n.data=c.data,n.handleObj=c,o=((v.event.special[c.origType]||{}).handle||c.handler).apply(a.elem,g),o!==t&&(n.result=o,o===!1&&(n.preventDefault(),n.stopPropagation()))}}return b.postDispatch&&b.postDispatch.call(this,n),n.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return e.which==null&&(e.which=t.charCode!=null?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,s,o,u=n.button,a=n.fromElement;return e.pageX==null&&n.clientX!=null&&(r=e.target.ownerDocument||i,s=r.documentElement,o=r.body,e.pageX=n.clientX+(s&&s.scrollLeft||o&&o.scrollLeft||0)-(s&&s.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(s&&s.scrollTop||o&&o.scrollTop||0)-(s&&s.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&u!==t&&(e.which=u&1?1:u&2?3:u&4?2:0),e}},fix:function(e){if(e[v.expando])return e;var t,n,r=e,s=v.event.fixHooks[e.type]||{},o=s.props?this.props.concat(s.props):this.props;e=v.Event(r);for(t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||i),e.target.nodeType===3&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){v.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?v.event.trigger(i,null,t):v.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},v.event.handle=v.event.dispatch,v.removeEvent=i.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]=="undefined"&&(e[r]=null),e.detachEvent(r,n))},v.Event=function(e,t){if(!(this instanceof v.Event))return new v.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?tt:et):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),this[v.expando]=!0},v.Event.prototype={preventDefault:function(){this.isDefaultPrevented=tt;var e=this.originalEvent;if(!e)return;e.preventDefault?e.preventDefault():e.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=tt;var e=this.originalEvent;if(!e)return;e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=tt,this.stopPropagation()},isDefaultPrevented:et,isPropagationStopped:et,isImmediatePropagationStopped:et},v.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,s=e.handleObj,o=s.selector;if(!i||i!==r&&!v.contains(r,i))e.type=s.origType,n=s.handler.apply(this,arguments),e.type=t;return n}}}),v.support.submitBubbles||(v.event.special.submit={setup:function(){if(v.nodeName(this,"form"))return!1;v.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=v.nodeName(n,"input")||v.nodeName(n,"button")?n.form:t;r&&!v._data(r,"_submit_attached")&&(v.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),v._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&v.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){if(v.nodeName(this,"form"))return!1;v.event.remove(this,"._submit")}}),v.support.changeBubbles||(v.event.special.change={setup:function(){if($.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")v.event.add(this,"propertychange._change",function(e){e.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),v.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),v.event.simulate("change",this,e,!0)});return!1}v.event.add(this,"beforeactivate._change",function(e){var t=e.target;$.test(t.nodeName)&&!v._data(t,"_change_attached")&&(v.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&v.event.simulate("change",this.parentNode,e,!0)}),v._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||t.type!=="radio"&&t.type!=="checkbox")return e.handleObj.handler.apply(this,arguments)},teardown:function(){return v.event.remove(this,"._change"),!$.test(this.nodeName)}}),v.support.focusinBubbles||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){v.event.simulate(t,e.target,v.event.fix(e),!0)};v.event.special[t]={setup:function(){n++===0&&i.addEventListener(e,r,!0)},teardown:function(){--n===0&&i.removeEventListener(e,r,!0)}}}),v.fn.extend({on:function(e,n,r,i,s){var o,u;if(typeof e=="object"){typeof n!="string"&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}r==null&&i==null?(i=n,r=n=t):i==null&&(typeof n=="string"?(i=r,r=t):(i=r,r=n,n=t));if(i===!1)i=et;else if(!i)return this;return s===1&&(o=i,i=function(e){return v().off(e),o.apply(this,arguments)},i.guid=o.guid||(o.guid=v.guid++)),this.each(function(){v.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if(typeof e=="object"){for(s in e)this.off(s,n,e[s]);return this}if(n===!1||typeof n=="function")r=n,n=t;return r===!1&&(r=et),this.each(function(){v.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return v(this.context).on(e,this.selector,t,n),this},die:function(e,t){return v(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return arguments.length===1?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){if(this[0])return v.event.trigger(e,t,this[0],!0)},toggle:function(e){var t=arguments,n=e.guid||v.guid++,r=0,i=function(n){var i=(v._data(this,"lastToggle"+e.guid)||0)%r;return v._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};i.guid=n;while(r<t.length)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return n==null&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},Q.test(t)&&(v.event.fixHooks[t]=v.event.keyHooks),G.test(t)&&(v.event.fixHooks[t]=v.event.mouseHooks)}),function(e,t){function nt(e,t,n,r){n=n||[],t=t||g;var i,s,a,f,l=t.nodeType;if(!e||typeof e!="string")return n;if(l!==1&&l!==9)return[];a=o(t);if(!a&&!r)if(i=R.exec(e))if(f=i[1]){if(l===9){s=t.getElementById(f);if(!s||!s.parentNode)return n;if(s.id===f)return n.push(s),n}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(f))&&u(t,s)&&s.id===f)return n.push(s),n}else{if(i[2])return S.apply(n,x.call(t.getElementsByTagName(e),0)),n;if((f=i[3])&&Z&&t.getElementsByClassName)return S.apply(n,x.call(t.getElementsByClassName(f),0)),n}return vt(e.replace(j,"$1"),t,n,r,a)}function rt(e){return function(t){var n=t.nodeName.toLowerCase();return n==="input"&&t.type===e}}function it(e){return function(t){var n=t.nodeName.toLowerCase();return(n==="input"||n==="button")&&t.type===e}}function st(e){return N(function(t){return t=+t,N(function(n,r){var i,s=e([],n.length,t),o=s.length;while(o--)n[i=s[o]]&&(n[i]=!(r[i]=n[i]))})})}function ot(e,t,n){if(e===t)return n;var r=e.nextSibling;while(r){if(r===t)return-1;r=r.nextSibling}return 1}function ut(e,t){var n,r,s,o,u,a,f,l=L[d][e+" "];if(l)return t?0:l.slice(0);u=e,a=[],f=i.preFilter;while(u){if(!n||(r=F.exec(u)))r&&(u=u.slice(r[0].length)||u),a.push(s=[]);n=!1;if(r=I.exec(u))s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=r[0].replace(j," ");for(o in i.filter)(r=J[o].exec(u))&&(!f[o]||(r=f[o](r)))&&(s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=o,n.matches=r);if(!n)break}return t?u.length:u?nt.error(e):L(e,a).slice(0)}function at(e,t,r){var i=t.dir,s=r&&t.dir==="parentNode",o=w++;return t.first?function(t,n,r){while(t=t[i])if(s||t.nodeType===1)return e(t,n,r)}:function(t,r,u){if(!u){var a,f=b+" "+o+" ",l=f+n;while(t=t[i])if(s||t.nodeType===1){if((a=t[d])===l)return t.sizset;if(typeof a=="string"&&a.indexOf(f)===0){if(t.sizset)return t}else{t[d]=l;if(e(t,r,u))return t.sizset=!0,t;t.sizset=!1}}}else while(t=t[i])if(s||t.nodeType===1)if(e(t,r,u))return t}}function ft(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function lt(e,t,n,r,i){var s,o=[],u=0,a=e.length,f=t!=null;for(;u<a;u++)if(s=e[u])if(!n||n(s,r,i))o.push(s),f&&t.push(u);return o}function ct(e,t,n,r,i,s){return r&&!r[d]&&(r=ct(r)),i&&!i[d]&&(i=ct(i,s)),N(function(s,o,u,a){var f,l,c,h=[],p=[],d=o.length,v=s||dt(t||"*",u.nodeType?[u]:u,[]),m=e&&(s||!t)?lt(v,h,e,u,a):v,g=n?i||(s?e:d||r)?[]:o:m;n&&n(m,g,u,a);if(r){f=lt(g,p),r(f,[],u,a),l=f.length;while(l--)if(c=f[l])g[p[l]]=!(m[p[l]]=c)}if(s){if(i||e){if(i){f=[],l=g.length;while(l--)(c=g[l])&&f.push(m[l]=c);i(null,g=[],f,a)}l=g.length;while(l--)(c=g[l])&&(f=i?T.call(s,c):h[l])>-1&&(s[f]=!(o[f]=c))}}else g=lt(g===o?g.splice(d,g.length):g),i?i(null,o,g,a):S.apply(o,g)})}function ht(e){var t,n,r,s=e.length,o=i.relative[e[0].type],u=o||i.relative[" "],a=o?1:0,f=at(function(e){return e===t},u,!0),l=at(function(e){return T.call(t,e)>-1},u,!0),h=[function(e,n,r){return!o&&(r||n!==c)||((t=n).nodeType?f(e,n,r):l(e,n,r))}];for(;a<s;a++)if(n=i.relative[e[a].type])h=[at(ft(h),n)];else{n=i.filter[e[a].type].apply(null,e[a].matches);if(n[d]){r=++a;for(;r<s;r++)if(i.relative[e[r].type])break;return ct(a>1&&ft(h),a>1&&e.slice(0,a-1).join("").replace(j,"$1"),n,a<r&&ht(e.slice(a,r)),r<s&&ht(e=e.slice(r)),r<s&&e.join(""))}h.push(n)}return ft(h)}function pt(e,t){var r=t.length>0,s=e.length>0,o=function(u,a,f,l,h){var p,d,v,m=[],y=0,w="0",x=u&&[],T=h!=null,N=c,C=u||s&&i.find.TAG("*",h&&a.parentNode||a),k=b+=N==null?1:Math.E;T&&(c=a!==g&&a,n=o.el);for(;(p=C[w])!=null;w++){if(s&&p){for(d=0;v=e[d];d++)if(v(p,a,f)){l.push(p);break}T&&(b=k,n=++o.el)}r&&((p=!v&&p)&&y--,u&&x.push(p))}y+=w;if(r&&w!==y){for(d=0;v=t[d];d++)v(x,m,a,f);if(u){if(y>0)while(w--)!x[w]&&!m[w]&&(m[w]=E.call(l));m=lt(m)}S.apply(l,m),T&&!u&&m.length>0&&y+t.length>1&&nt.uniqueSort(l)}return T&&(b=k,c=N),x};return o.el=0,r?N(o):o}function dt(e,t,n){var r=0,i=t.length;for(;r<i;r++)nt(e,t[r],n);return n}function vt(e,t,n,r,s){var o,u,f,l,c,h=ut(e),p=h.length;if(!r&&h.length===1){u=h[0]=h[0].slice(0);if(u.length>2&&(f=u[0]).type==="ID"&&t.nodeType===9&&!s&&i.relative[u[1].type]){t=i.find.ID(f.matches[0].replace($,""),t,s)[0];if(!t)return n;e=e.slice(u.shift().length)}for(o=J.POS.test(e)?-1:u.length-1;o>=0;o--){f=u[o];if(i.relative[l=f.type])break;if(c=i.find[l])if(r=c(f.matches[0].replace($,""),z.test(u[0].type)&&t.parentNode||t,s)){u.splice(o,1),e=r.length&&u.join("");if(!e)return S.apply(n,x.call(r,0)),n;break}}}return a(e,h)(r,t,s,n,z.test(e)),n}function mt(){}var n,r,i,s,o,u,a,f,l,c,h=!0,p="undefined",d=("sizcache"+Math.random()).replace(".",""),m=String,g=e.document,y=g.documentElement,b=0,w=0,E=[].pop,S=[].push,x=[].slice,T=[].indexOf||function(e){var t=0,n=this.length;for(;t<n;t++)if(this[t]===e)return t;return-1},N=function(e,t){return e[d]=t==null||t,e},C=function(){var e={},t=[];return N(function(n,r){return t.push(n)>i.cacheLength&&delete e[t.shift()],e[n+" "]=r},e)},k=C(),L=C(),A=C(),O="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),D="([*^$|!~]?=)",P="\\["+O+"*("+M+")"+O+"*(?:"+D+O+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+O+"*\\]",H=":("+M+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+P+")|[^:]|\\\\.)*|.*))\\)|)",B=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)",j=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),F=new RegExp("^"+O+"*,"+O+"*"),I=new RegExp("^"+O+"*([\\x20\\t\\r\\n\\f>+~])"+O+"*"),q=new RegExp(H),R=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,U=/^:not/,z=/[\x20\t\r\n\f]*[+~]/,W=/:not\($/,X=/h\d/i,V=/input|select|textarea|button/i,$=/\\(?!\\)/g,J={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),NAME:new RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+H),POS:new RegExp(B,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),needsContext:new RegExp("^"+O+"*[>+~]|"+B,"i")},K=function(e){var t=g.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},Q=K(function(e){return e.appendChild(g.createComment("")),!e.getElementsByTagName("*").length}),G=K(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==p&&e.firstChild.getAttribute("href")==="#"}),Y=K(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return t!=="boolean"&&t!=="string"}),Z=K(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!e.getElementsByClassName||!e.getElementsByClassName("e").length?!1:(e.lastChild.className="e",e.getElementsByClassName("e").length===2)}),et=K(function(e){e.id=d+0,e.innerHTML="<a name='"+d+"'></a><div name='"+d+"'></div>",y.insertBefore(e,y.firstChild);var t=g.getElementsByName&&g.getElementsByName(d).length===2+g.getElementsByName(d+0).length;return r=!g.getElementById(d),y.removeChild(e),t});try{x.call(y.childNodes,0)[0].nodeType}catch(tt){x=function(e){var t,n=[];for(;t=this[e];e++)n.push(t);return n}}nt.matches=function(e,t){return nt(e,null,null,t)},nt.matchesSelector=function(e,t){return nt(t,null,null,[e]).length>0},s=nt.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(i===1||i===9||i===11){if(typeof e.textContent=="string")return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(i===3||i===4)return e.nodeValue}else for(;t=e[r];r++)n+=s(t);return n},o=nt.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?t.nodeName!=="HTML":!1},u=nt.contains=y.contains?function(e,t){var n=e.nodeType===9?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&r.nodeType===1&&n.contains&&n.contains(r))}:y.compareDocumentPosition?function(e,t){return t&&!!(e.compareDocumentPosition(t)&16)}:function(e,t){while(t=t.parentNode)if(t===e)return!0;return!1},nt.attr=function(e,t){var n,r=o(e);return r||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):r||Y?e.getAttribute(t):(n=e.getAttributeNode(t),n?typeof e[t]=="boolean"?e[t]?t:null:n.specified?n.value:null:null)},i=nt.selectors={cacheLength:50,createPseudo:N,match:J,attrHandle:G?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:r?function(e,t,n){if(typeof t.getElementById!==p&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==p&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==p&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:Q?function(e,t){if(typeof t.getElementsByTagName!==p)return t.getElementsByTagName(e)}:function(e,t){var n=t.getElementsByTagName(e);if(e==="*"){var r,i=[],s=0;for(;r=n[s];s++)r.nodeType===1&&i.push(r);return i}return n},NAME:et&&function(e,t){if(typeof t.getElementsByName!==p)return t.getElementsByName(name)},CLASS:Z&&function(e,t,n){if(typeof t.getElementsByClassName!==p&&!n)return t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace($,""),e[3]=(e[4]||e[5]||"").replace($,""),e[2]==="~="&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),e[1]==="nth"?(e[2]||nt.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*(e[2]==="even"||e[2]==="odd")),e[4]=+(e[6]+e[7]||e[2]==="odd")):e[2]&&nt.error(e[0]),e},PSEUDO:function(e){var t,n;if(J.CHILD.test(e[0]))return null;if(e[3])e[2]=e[3];else if(t=e[4])q.test(t)&&(n=ut(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(t=t.slice(0,n),e[0]=e[0].slice(0,n)),e[2]=t;return e.slice(0,3)}},filter:{ID:r?function(e){return e=e.replace($,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace($,""),function(t){var n=typeof t.getAttributeNode!==p&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return e==="*"?function(){return!0}:(e=e.replace($,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[d][e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==p&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r,i){var s=nt.attr(r,e);return s==null?t==="!=":t?(s+="",t==="="?s===n:t==="!="?s!==n:t==="^="?n&&s.indexOf(n)===0:t==="*="?n&&s.indexOf(n)>-1:t==="$="?n&&s.substr(s.length-n.length)===n:t==="~="?(" "+s+" ").indexOf(n)>-1:t==="|="?s===n||s.substr(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r){return e==="nth"?function(e){var t,i,s=e.parentNode;if(n===1&&r===0)return!0;if(s){i=0;for(t=s.firstChild;t;t=t.nextSibling)if(t.nodeType===1){i++;if(e===t)break}}return i-=r,i===n||i%n===0&&i/n>=0}:function(t){var n=t;switch(e){case"only":case"first":while(n=n.previousSibling)if(n.nodeType===1)return!1;if(e==="first")return!0;n=t;case"last":while(n=n.nextSibling)if(n.nodeType===1)return!1;return!0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||nt.error("unsupported pseudo: "+e);return r[d]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?N(function(e,n){var i,s=r(e,t),o=s.length;while(o--)i=T.call(e,s[o]),e[i]=!(n[i]=s[o])}):function(e){return r(e,0,n)}):r}},pseudos:{not:N(function(e){var t=[],n=[],r=a(e.replace(j,"$1"));return r[d]?N(function(e,t,n,i){var s,o=r(e,null,i,[]),u=e.length;while(u--)if(s=o[u])e[u]=!(t[u]=s)}):function(e,i,s){return t[0]=e,r(t,null,s,n),!n.pop()}}),has:N(function(e){return function(t){return nt(e,t).length>0}}),contains:N(function(e){return function(t){return(t.textContent||t.innerText||s(t)).indexOf(e)>-1}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&!!e.checked||t==="option"&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!i.pseudos.empty(e)},empty:function(e){var t;e=e.firstChild;while(e){if(e.nodeName>"@"||(t=e.nodeType)===3||t===4)return!1;e=e.nextSibling}return!0},header:function(e){return X.test(e.nodeName)},text:function(e){var t,n;return e.nodeName.toLowerCase()==="input"&&(t=e.type)==="text"&&((n=e.getAttribute("type"))==null||n.toLowerCase()===t)},radio:rt("radio"),checkbox:rt("checkbox"),file:rt("file"),password:rt("password"),image:rt("image"),submit:it("submit"),reset:it("reset"),button:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&e.type==="button"||t==="button"},input:function(e){return V.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},active:function(e){return e===e.ownerDocument.activeElement},first:st(function(){return[0]}),last:st(function(e,t){return[t-1]}),eq:st(function(e,t,n){return[n<0?n+t:n]}),even:st(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:st(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:st(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:st(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}},f=y.compareDocumentPosition?function(e,t){return e===t?(l=!0,0):(!e.compareDocumentPosition||!t.compareDocumentPosition?e.compareDocumentPosition:e.compareDocumentPosition(t)&4)?-1:1}:function(e,t){if(e===t)return l=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],o=e.parentNode,u=t.parentNode,a=o;if(o===u)return ot(e,t);if(!o)return-1;if(!u)return 1;while(a)i.unshift(a),a=a.parentNode;a=u;while(a)s.unshift(a),a=a.parentNode;n=i.length,r=s.length;for(var f=0;f<n&&f<r;f++)if(i[f]!==s[f])return ot(i[f],s[f]);return f===n?ot(e,s[f],-1):ot(i[f],t,1)},[0,0].sort(f),h=!l,nt.uniqueSort=function(e){var t,n=[],r=1,i=0;l=h,e.sort(f);if(l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e},nt.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},a=nt.compile=function(e,t){var n,r=[],i=[],s=A[d][e+" "];if(!s){t||(t=ut(e)),n=t.length;while(n--)s=ht(t[n]),s[d]?r.push(s):i.push(s);s=A(e,pt(i,r))}return s},g.querySelectorAll&&function(){var e,t=vt,n=/'|\\/g,r=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,i=[":focus"],s=[":active"],u=y.matchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector||y.msMatchesSelector;K(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||i.push("\\["+O+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||i.push(":checked")}),K(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&i.push("[*^$]="+O+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||i.push(":enabled",":disabled")}),i=new RegExp(i.join("|")),vt=function(e,r,s,o,u){if(!o&&!u&&!i.test(e)){var a,f,l=!0,c=d,h=r,p=r.nodeType===9&&e;if(r.nodeType===1&&r.nodeName.toLowerCase()!=="object"){a=ut(e),(l=r.getAttribute("id"))?c=l.replace(n,"\\$&"):r.setAttribute("id",c),c="[id='"+c+"'] ",f=a.length;while(f--)a[f]=c+a[f].join("");h=z.test(e)&&r.parentNode||r,p=a.join(",")}if(p)try{return S.apply(s,x.call(h.querySelectorAll(p),0)),s}catch(v){}finally{l||r.removeAttribute("id")}}return t(e,r,s,o,u)},u&&(K(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),s.push("!=",H)}catch(n){}}),s=new RegExp(s.join("|")),nt.matchesSelector=function(t,n){n=n.replace(r,"='$1']");if(!o(t)&&!s.test(n)&&!i.test(n))try{var a=u.call(t,n);if(a||e||t.document&&t.document.nodeType!==11)return a}catch(f){}return nt(n,null,null,[t]).length>0})}(),i.pseudos.nth=i.pseudos.eq,i.filters=mt.prototype=i.pseudos,i.setFilters=new mt,nt.attr=v.attr,v.find=nt,v.expr=nt.selectors,v.expr[":"]=v.expr.pseudos,v.unique=nt.uniqueSort,v.text=nt.getText,v.isXMLDoc=nt.isXML,v.contains=nt.contains}(e);var nt=/Until$/,rt=/^(?:parents|prev(?:Until|All))/,it=/^.[^:#\[\.,]*$/,st=v.expr.match.needsContext,ot={children:!0,contents:!0,next:!0,prev:!0};v.fn.extend({find:function(e){var t,n,r,i,s,o,u=this;if(typeof e!="string")return v(e).filter(function(){for(t=0,n=u.length;t<n;t++)if(v.contains(u[t],this))return!0});o=this.pushStack("","find",e);for(t=0,n=this.length;t<n;t++){r=o.length,v.find(e,this[t],o);if(t>0)for(i=r;i<o.length;i++)for(s=0;s<r;s++)if(o[s]===o[i]){o.splice(i--,1);break}}return o},has:function(e){var t,n=v(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(v.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1),"not",e)},filter:function(e){return this.pushStack(ft(this,e,!0),"filter",e)},is:function(e){return!!e&&(typeof e=="string"?st.test(e)?v(e,this.context).index(this[0])>=0:v.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,s=[],o=st.test(e)||typeof e!="string"?v(e,t||this.context):0;for(;r<i;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&n.nodeType!==11){if(o?o.index(n)>-1:v.find.matchesSelector(n,e)){s.push(n);break}n=n.parentNode}}return s=s.length>1?v.unique(s):s,this.pushStack(s,"closest",e)},index:function(e){return e?typeof e=="string"?v.inArray(this[0],v(e)):v.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n=typeof e=="string"?v(e,t):v.makeArray(e&&e.nodeType?[e]:e),r=v.merge(this.get(),n);return this.pushStack(ut(n[0])||ut(r[0])?r:v.unique(r))},addBack:function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}}),v.fn.andSelf=v.fn.addBack,v.each({parent:function(e){var t=e.parentNode;return t&&t.nodeType!==11?t:null},parents:function(e){return v.dir(e,"parentNode")},parentsUntil:function(e,t,n){return v.dir(e,"parentNode",n)},next:function(e){return at(e,"nextSibling")},prev:function(e){return at(e,"previousSibling")},nextAll:function(e){return v.dir(e,"nextSibling")},prevAll:function(e){return v.dir(e,"previousSibling")},nextUntil:function(e,t,n){return v.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return v.dir(e,"previousSibling",n)},siblings:function(e){return v.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return v.sibling(e.firstChild)},contents:function(e){return v.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,r){var i=v.map(this,t,n);return nt.test(e)||(r=n),r&&typeof r=="string"&&(i=v.filter(r,i)),i=this.length>1&&!ot[e]?v.unique(i):i,this.length>1&&rt.test(e)&&(i=i.reverse()),this.pushStack(i,e,l.call(arguments).join(","))}}),v.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),t.length===1?v.find.matchesSelector(t[0],e)?[t[0]]:[]:v.find.matches(e,t)},dir:function(e,n,r){var i=[],s=e[n];while(s&&s.nodeType!==9&&(r===t||s.nodeType!==1||!v(s).is(r)))s.nodeType===1&&i.push(s),s=s[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)e.nodeType===1&&e!==t&&n.push(e);return n}});var ct="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",ht=/ jQuery\d+="(?:null|\d+)"/g,pt=/^\s+/,dt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vt=/<([\w:]+)/,mt=/<tbody/i,gt=/<|&#?\w+;/,yt=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,wt=new RegExp("<(?:"+ct+")[\\s/>]","i"),Et=/^(?:checkbox|radio)$/,St=/checked\s*(?:[^=]|=\s*.checked.)/i,xt=/\/(java|ecma)script/i,Tt=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Nt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Ct=lt(i),kt=Ct.appendChild(i.createElement("div"));Nt.optgroup=Nt.option,Nt.tbody=Nt.tfoot=Nt.colgroup=Nt.caption=Nt.thead,Nt.th=Nt.td,v.support.htmlSerialize||(Nt._default=[1,"X<div>","</div>"]),v.fn.extend({text:function(e){return v.access(this,function(e){return e===t?v.text(this):this.empty().append((this[0]&&this[0].ownerDocument||i).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(v.isFunction(e))return this.each(function(t){v(this).wrapAll(e.call(this,t))});if(this[0]){var t=v(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&e.firstChild.nodeType===1)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){v.nodeName(this,"body")||v(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(e,this),"before",this.selector)}},after:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(this,e),"after",this.selector)}},remove:function(e,t){var n,r=0;for(;(n=this[r])!=null;r++)if(!e||v.filter(e,[n]).length)!t&&n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),v.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n);return this},empty:function(){var e,t=0;for(;(e=this[t])!=null;t++){e.nodeType===1&&v.cleanData(e.getElementsByTagName("*"));while(e.firstChild)e.removeChild(e.firstChild)}return this},clone:function(e,t){return e=e==null?!1:e,t=t==null?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return v.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return n.nodeType===1?n.innerHTML.replace(ht,""):t;if(typeof e=="string"&&!yt.test(e)&&(v.support.htmlSerialize||!wt.test(e))&&(v.support.leadingWhitespace||!pt.test(e))&&!Nt[(vt.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(dt,"<$1></$2>");try{for(;r<i;r++)n=this[r]||{},n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(s){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ut(this[0])?this.length?this.pushStack(v(v.isFunction(e)?e():e),"replaceWith",e):this:v.isFunction(e)?this.each(function(t){var n=v(this),r=n.html();n.replaceWith(e.call(this,t,r))}):(typeof e!="string"&&(e=v(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;v(this).remove(),t?v(t).before(e):v(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,s,o,u,a=0,f=e[0],l=[],c=this.length;if(!v.support.checkClone&&c>1&&typeof f=="string"&&St.test(f))return this.each(function(){v(this).domManip(e,n,r)});if(v.isFunction(f))return this.each(function(i){var s=v(this);e[0]=f.call(this,i,n?s.html():t),s.domManip(e,n,r)});if(this[0]){i=v.buildFragment(e,this,l),o=i.fragment,s=o.firstChild,o.childNodes.length===1&&(o=s);if(s){n=n&&v.nodeName(s,"tr");for(u=i.cacheable||c-1;a<c;a++)r.call(n&&v.nodeName(this[a],"table")?Lt(this[a],"tbody"):this[a],a===u?o:v.clone(o,!0,!0))}o=s=null,l.length&&v.each(l,function(e,t){t.src?v.ajax?v.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):v.error("no ajax"):v.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Tt,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),v.buildFragment=function(e,n,r){var s,o,u,a=e[0];return n=n||i,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,e.length===1&&typeof a=="string"&&a.length<512&&n===i&&a.charAt(0)==="<"&&!bt.test(a)&&(v.support.checkClone||!St.test(a))&&(v.support.html5Clone||!wt.test(a))&&(o=!0,s=v.fragments[a],u=s!==t),s||(s=n.createDocumentFragment(),v.clean(e,n,s,r),o&&(v.fragments[a]=u&&s)),{fragment:s,cacheable:o}},v.fragments={},v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(n){var r,i=0,s=[],o=v(n),u=o.length,a=this.length===1&&this[0].parentNode;if((a==null||a&&a.nodeType===11&&a.childNodes.length===1)&&u===1)return o[t](this[0]),this;for(;i<u;i++)r=(i>0?this.clone(!0):this).get(),v(o[i])[t](r),s=s.concat(r);return this.pushStack(s,e,o.selector)}}),v.extend({clone:function(e,t,n){var r,i,s,o;v.support.html5Clone||v.isXMLDoc(e)||!wt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(kt.innerHTML=e.outerHTML,kt.removeChild(o=kt.firstChild));if((!v.support.noCloneEvent||!v.support.noCloneChecked)&&(e.nodeType===1||e.nodeType===11)&&!v.isXMLDoc(e)){Ot(e,o),r=Mt(e),i=Mt(o);for(s=0;r[s];++s)i[s]&&Ot(r[s],i[s])}if(t){At(e,o);if(n){r=Mt(e),i=Mt(o);for(s=0;r[s];++s)At(r[s],i[s])}}return r=i=null,o},clean:function(e,t,n,r){var s,o,u,a,f,l,c,h,p,d,m,g,y=t===i&&Ct,b=[];if(!t||typeof t.createDocumentFragment=="undefined")t=i;for(s=0;(u=e[s])!=null;s++){typeof u=="number"&&(u+="");if(!u)continue;if(typeof u=="string")if(!gt.test(u))u=t.createTextNode(u);else{y=y||lt(t),c=t.createElement("div"),y.appendChild(c),u=u.replace(dt,"<$1></$2>"),a=(vt.exec(u)||["",""])[1].toLowerCase(),f=Nt[a]||Nt._default,l=f[0],c.innerHTML=f[1]+u+f[2];while(l--)c=c.lastChild;if(!v.support.tbody){h=mt.test(u),p=a==="table"&&!h?c.firstChild&&c.firstChild.childNodes:f[1]==="<table>"&&!h?c.childNodes:[];for(o=p.length-1;o>=0;--o)v.nodeName(p[o],"tbody")&&!p[o].childNodes.length&&p[o].parentNode.removeChild(p[o])}!v.support.leadingWhitespace&&pt.test(u)&&c.insertBefore(t.createTextNode(pt.exec(u)[0]),c.firstChild),u=c.childNodes,c.parentNode.removeChild(c)}u.nodeType?b.push(u):v.merge(b,u)}c&&(u=c=y=null);if(!v.support.appendChecked)for(s=0;(u=b[s])!=null;s++)v.nodeName(u,"input")?_t(u):typeof u.getElementsByTagName!="undefined"&&v.grep(u.getElementsByTagName("input"),_t);if(n){m=function(e){if(!e.type||xt.test(e.type))return r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e)};for(s=0;(u=b[s])!=null;s++)if(!v.nodeName(u,"script")||!m(u))n.appendChild(u),typeof u.getElementsByTagName!="undefined"&&(g=v.grep(v.merge([],u.getElementsByTagName("script")),m),b.splice.apply(b,[s+1,0].concat(g)),s+=g.length)}return b},cleanData:function(e,t){var n,r,i,s,o=0,u=v.expando,a=v.cache,f=v.support.deleteExpando,l=v.event.special;for(;(i=e[o])!=null;o++)if(t||v.acceptData(i)){r=i[u],n=r&&a[r];if(n){if(n.events)for(s in n.events)l[s]?v.event.remove(i,s):v.removeEvent(i,s,n.handle);a[r]&&(delete a[r],f?delete i[u]:i.removeAttribute?i.removeAttribute(u):i[u]=null,v.deletedIds.push(r))}}}}),function(){var e,t;v.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=v.uaMatch(o.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),v.browser=t,v.sub=function(){function e(t,n){return new e.fn.init(t,n)}v.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function(r,i){return i&&i instanceof v&&!(i instanceof e)&&(i=e(i)),v.fn.init.call(this,r,i,t)},e.fn.init.prototype=e.fn;var t=e(i);return e}}();var Dt,Pt,Ht,Bt=/alpha\([^)]*\)/i,jt=/opacity=([^)]*)/,Ft=/^(top|right|bottom|left)$/,It=/^(none|table(?!-c[ea]).+)/,qt=/^margin/,Rt=new RegExp("^("+m+")(.*)$","i"),Ut=new RegExp("^("+m+")(?!px)[a-z%]+$","i"),zt=new RegExp("^([-+])=("+m+")","i"),Wt={BODY:"block"},Xt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:0,fontWeight:400},$t=["Top","Right","Bottom","Left"],Jt=["Webkit","O","Moz","ms"],Kt=v.fn.toggle;v.fn.extend({css:function(e,n){return v.access(this,function(e,n,r){return r!==t?v.style(e,n,r):v.css(e,n)},e,n,arguments.length>1)},show:function(){return Yt(this,!0)},hide:function(){return Yt(this)},toggle:function(e,t){var n=typeof e=="boolean";return v.isFunction(e)&&v.isFunction(t)?Kt.apply(this,arguments):this.each(function(){(n?e:Gt(this))?v(this).show():v(this).hide()})}}),v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Dt(e,"opacity");return n===""?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":v.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(!e||e.nodeType===3||e.nodeType===8||!e.style)return;var s,o,u,a=v.camelCase(n),f=e.style;n=v.cssProps[a]||(v.cssProps[a]=Qt(f,a)),u=v.cssHooks[n]||v.cssHooks[a];if(r===t)return u&&"get"in u&&(s=u.get(e,!1,i))!==t?s:f[n];o=typeof r,o==="string"&&(s=zt.exec(r))&&(r=(s[1]+1)*s[2]+parseFloat(v.css(e,n)),o="number");if(r==null||o==="number"&&isNaN(r))return;o==="number"&&!v.cssNumber[a]&&(r+="px");if(!u||!("set"in u)||(r=u.set(e,r,i))!==t)try{f[n]=r}catch(l){}},css:function(e,n,r,i){var s,o,u,a=v.camelCase(n);return n=v.cssProps[a]||(v.cssProps[a]=Qt(e.style,a)),u=v.cssHooks[n]||v.cssHooks[a],u&&"get"in u&&(s=u.get(e,!0,i)),s===t&&(s=Dt(e,n)),s==="normal"&&n in Vt&&(s=Vt[n]),r||i!==t?(o=parseFloat(s),r||v.isNumeric(o)?o||0:s):s},swap:function(e,t,n){var r,i,s={};for(i in t)s[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=s[i];return r}}),e.getComputedStyle?Dt=function(t,n){var r,i,s,o,u=e.getComputedStyle(t,null),a=t.style;return u&&(r=u.getPropertyValue(n)||u[n],r===""&&!v.contains(t.ownerDocument,t)&&(r=v.style(t,n)),Ut.test(r)&&qt.test(n)&&(i=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=u.width,a.width=i,a.minWidth=s,a.maxWidth=o)),r}:i.documentElement.currentStyle&&(Dt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],s=e.style;return i==null&&s&&s[t]&&(i=s[t]),Ut.test(i)&&!Ft.test(t)&&(n=s.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),s.left=t==="fontSize"?"1em":i,i=s.pixelLeft+"px",s.left=n,r&&(e.runtimeStyle.left=r)),i===""?"auto":i}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,r){if(n)return e.offsetWidth===0&&It.test(Dt(e,"display"))?v.swap(e,Xt,function(){return tn(e,t,r)}):tn(e,t,r)},set:function(e,n,r){return Zt(e,n,r?en(e,t,r,v.support.boxSizing&&v.css(e,"boxSizing")==="border-box"):0)}}}),v.support.opacity||(v.cssHooks.opacity={get:function(e,t){return jt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=v.isNumeric(t)?"alpha(opacity="+t*100+")":"",s=r&&r.filter||n.filter||"";n.zoom=1;if(t>=1&&v.trim(s.replace(Bt,""))===""&&n.removeAttribute){n.removeAttribute("filter");if(r&&!r.filter)return}n.filter=Bt.test(s)?s.replace(Bt,i):s+" "+i}}),v(function(){v.support.reliableMarginRight||(v.cssHooks.marginRight={get:function(e,t){return v.swap(e,{display:"inline-block"},function(){if(t)return Dt(e,"marginRight")})}}),!v.support.pixelPosition&&v.fn.position&&v.each(["top","left"],function(e,t){v.cssHooks[t]={get:function(e,n){if(n){var r=Dt(e,t);return Ut.test(r)?v(e).position()[t]+"px":r}}}})}),v.expr&&v.expr.filters&&(v.expr.filters.hidden=function(e){return e.offsetWidth===0&&e.offsetHeight===0||!v.support.reliableHiddenOffsets&&(e.style&&e.style.display||Dt(e,"display"))==="none"},v.expr.filters.visible=function(e){return!v.expr.filters.hidden(e)}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){var r,i=typeof n=="string"?n.split(" "):[n],s={};for(r=0;r<4;r++)s[e+$t[r]+t]=i[r]||i[r-2]||i[0];return s}},qt.test(e)||(v.cssHooks[e+t].set=Zt)});var rn=/%20/g,sn=/\[\]$/,on=/\r?\n/g,un=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,an=/^(?:select|textarea)/i;v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?v.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||an.test(this.nodeName)||un.test(this.type))}).map(function(e,t){var n=v(this).val();return n==null?null:v.isArray(n)?v.map(n,function(e,n){return{name:t.name,value:e.replace(on,"\r\n")}}):{name:t.name,value:n.replace(on,"\r\n")}}).get()}}),v.param=function(e,n){var r,i=[],s=function(e,t){t=v.isFunction(t)?t():t==null?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};n===t&&(n=v.ajaxSettings&&v.ajaxSettings.traditional);if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){s(this.name,this.value)});else for(r in e)fn(r,e[r],n,s);return i.join("&").replace(rn,"+")};var ln,cn,hn=/#.*$/,pn=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,dn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,vn=/^(?:GET|HEAD)$/,mn=/^\/\//,gn=/\?/,yn=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bn=/([?&])_=[^&]*/,wn=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,En=v.fn.load,Sn={},xn={},Tn=["*/"]+["*"];try{cn=s.href}catch(Nn){cn=i.createElement("a"),cn.href="",cn=cn.href}ln=wn.exec(cn.toLowerCase())||[],v.fn.load=function(e,n,r){if(typeof e!="string"&&En)return En.apply(this,arguments);if(!this.length)return this;var i,s,o,u=this,a=e.indexOf(" ");return a>=0&&(i=e.slice(a,e.length),e=e.slice(0,a)),v.isFunction(n)?(r=n,n=t):n&&typeof n=="object"&&(s="POST"),v.ajax({url:e,type:s,dataType:"html",data:n,complete:function(e,t){r&&u.each(r,o||[e.responseText,t,e])}}).done(function(e){o=arguments,u.html(i?v("<div>").append(e.replace(yn,"")).find(i):e)}),this},v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.each(["get","post"],function(e,n){v[n]=function(e,r,i,s){return v.isFunction(r)&&(s=s||i,i=r,r=t),v.ajax({type:n,url:e,data:r,success:i,dataType:s})}}),v.extend({getScript:function(e,n){return v.get(e,t,n,"script")},getJSON:function(e,t,n){return v.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?Ln(e,v.ajaxSettings):(t=e,e=v.ajaxSettings),Ln(e,t),e},ajaxSettings:{url:cn,isLocal:dn.test(ln[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":Tn},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":v.parseJSON,"text xml":v.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:Cn(Sn),ajaxTransport:Cn(xn),ajax:function(e,n){function T(e,n,s,a){var l,y,b,w,S,T=n;if(E===2)return;E=2,u&&clearTimeout(u),o=t,i=a||"",x.readyState=e>0?4:0,s&&(w=An(c,x,s));if(e>=200&&e<300||e===304)c.ifModified&&(S=x.getResponseHeader("Last-Modified"),S&&(v.lastModified[r]=S),S=x.getResponseHeader("Etag"),S&&(v.etag[r]=S)),e===304?(T="notmodified",l=!0):(l=On(c,w),T=l.state,y=l.data,b=l.error,l=!b);else{b=T;if(!T||e)T="error",e<0&&(e=0)}x.status=e,x.statusText=(n||T)+"",l?d.resolveWith(h,[y,T,x]):d.rejectWith(h,[x,T,b]),x.statusCode(g),g=t,f&&p.trigger("ajax"+(l?"Success":"Error"),[x,c,l?y:b]),m.fireWith(h,[x,T]),f&&(p.trigger("ajaxComplete",[x,c]),--v.active||v.event.trigger("ajaxStop"))}typeof e=="object"&&(n=e,e=t),n=n||{};var r,i,s,o,u,a,f,l,c=v.ajaxSetup({},n),h=c.context||c,p=h!==c&&(h.nodeType||h instanceof v)?v(h):v.event,d=v.Deferred(),m=v.Callbacks("once memory"),g=c.statusCode||{},b={},w={},E=0,S="canceled",x={readyState:0,setRequestHeader:function(e,t){if(!E){var n=e.toLowerCase();e=w[n]=w[n]||e,b[e]=t}return this},getAllResponseHeaders:function(){return E===2?i:null},getResponseHeader:function(e){var n;if(E===2){if(!s){s={};while(n=pn.exec(i))s[n[1].toLowerCase()]=n[2]}n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return E||(c.mimeType=e),this},abort:function(e){return e=e||S,o&&o.abort(e),T(0,e),this}};d.promise(x),x.success=x.done,x.error=x.fail,x.complete=m.add,x.statusCode=function(e){if(e){var t;if(E<2)for(t in e)g[t]=[g[t],e[t]];else t=e[x.status],x.always(t)}return this},c.url=((e||c.url)+"").replace(hn,"").replace(mn,ln[1]+"//"),c.dataTypes=v.trim(c.dataType||"*").toLowerCase().split(y),c.crossDomain==null&&(a=wn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===ln[1]&&a[2]===ln[2]&&(a[3]||(a[1]==="http:"?80:443))==(ln[3]||(ln[1]==="http:"?80:443)))),c.data&&c.processData&&typeof c.data!="string"&&(c.data=v.param(c.data,c.traditional)),kn(Sn,c,n,x);if(E===2)return x;f=c.global,c.type=c.type.toUpperCase(),c.hasContent=!vn.test(c.type),f&&v.active++===0&&v.event.trigger("ajaxStart");if(!c.hasContent){c.data&&(c.url+=(gn.test(c.url)?"&":"?")+c.data,delete c.data),r=c.url;if(c.cache===!1){var N=v.now(),C=c.url.replace(bn,"$1_="+N);c.url=C+(C===c.url?(gn.test(c.url)?"&":"?")+"_="+N:"")}}(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",c.contentType),c.ifModified&&(r=r||c.url,v.lastModified[r]&&x.setRequestHeader("If-Modified-Since",v.lastModified[r]),v.etag[r]&&x.setRequestHeader("If-None-Match",v.etag[r])),x.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(c.dataTypes[0]!=="*"?", "+Tn+"; q=0.01":""):c.accepts["*"]);for(l in c.headers)x.setRequestHeader(l,c.headers[l]);if(!c.beforeSend||c.beforeSend.call(h,x,c)!==!1&&E!==2){S="abort";for(l in{success:1,error:1,complete:1})x[l](c[l]);o=kn(xn,c,n,x);if(!o)T(-1,"No Transport");else{x.readyState=1,f&&p.trigger("ajaxSend",[x,c]),c.async&&c.timeout>0&&(u=setTimeout(function(){x.abort("timeout")},c.timeout));try{E=1,o.send(b,T)}catch(k){if(!(E<2))throw k;T(-1,k)}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var Mn=[],_n=/\?/,Dn=/(=)\?(?=&|$)|\?\?/,Pn=v.now();v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mn.pop()||v.expando+"_"+Pn++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(n,r,i){var s,o,u,a=n.data,f=n.url,l=n.jsonp!==!1,c=l&&Dn.test(f),h=l&&!c&&typeof a=="string"&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dn.test(a);if(n.dataTypes[0]==="jsonp"||c||h)return s=n.jsonpCallback=v.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o=e[s],c?n.url=f.replace(Dn,"$1"+s):h?n.data=a.replace(Dn,"$1"+s):l&&(n.url+=(_n.test(f)?"&":"?")+n.jsonp+"="+s),n.converters["script json"]=function(){return u||v.error(s+" was not called"),u[0]},n.dataTypes[0]="json",e[s]=function(){u=arguments},i.always(function(){e[s]=o,n[s]&&(n.jsonpCallback=r.jsonpCallback,Mn.push(s)),u&&v.isFunction(o)&&o(u[0]),u=o=t}),"script"}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),v.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=i.head||i.getElementsByTagName("head")[0]||i.documentElement;return{send:function(s,o){n=i.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){if(i||!n.readyState||/loaded|complete/.test(n.readyState))n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success")},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var Hn,Bn=e.ActiveXObject?function(){for(var e in Hn)Hn[e](0,1)}:!1,jn=0;v.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&Fn()||In()}:Fn,function(e){v.extend(v.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(v.ajaxSettings.xhr()),v.support.ajax&&v.ajaxTransport(function(n){if(!n.crossDomain||v.support.cors){var r;return{send:function(i,s){var o,u,a=n.xhr();n.username?a.open(n.type,n.url,n.async,n.username,n.password):a.open(n.type,n.url,n.async);if(n.xhrFields)for(u in n.xhrFields)a[u]=n.xhrFields[u];n.mimeType&&a.overrideMimeType&&a.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(u in i)a.setRequestHeader(u,i[u])}catch(f){}a.send(n.hasContent&&n.data||null),r=function(e,i){var u,f,l,c,h;try{if(r&&(i||a.readyState===4)){r=t,o&&(a.onreadystatechange=v.noop,Bn&&delete Hn[o]);if(i)a.readyState!==4&&a.abort();else{u=a.status,l=a.getAllResponseHeaders(),c={},h=a.responseXML,h&&h.documentElement&&(c.xml=h);try{c.text=a.responseText}catch(p){}try{f=a.statusText}catch(p){f=""}!u&&n.isLocal&&!n.crossDomain?u=c.text?200:404:u===1223&&(u=204)}}}catch(d){i||s(-1,d)}c&&s(u,f,c,l)},n.async?a.readyState===4?setTimeout(r,0):(o=++jn,Bn&&(Hn||(Hn={},v(e).unload(Bn)),Hn[o]=r),a.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var qn,Rn,Un=/^(?:toggle|show|hide)$/,zn=new RegExp("^(?:([-+])=|)("+m+")([a-z%]*)$","i"),Wn=/queueHooks$/,Xn=[Gn],Vn={"*":[function(e,t){var n,r,i=this.createTween(e,t),s=zn.exec(t),o=i.cur(),u=+o||0,a=1,f=20;if(s){n=+s[2],r=s[3]||(v.cssNumber[e]?"":"px");if(r!=="px"&&u){u=v.css(i.elem,e,!0)||n||1;do a=a||".5",u/=a,v.style(i.elem,e,u+r);while(a!==(a=i.cur()/o)&&a!==1&&--f)}i.unit=r,i.start=u,i.end=s[1]?u+(s[1]+1)*n:n}return i}]};v.Animation=v.extend(Kn,{tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;r<i;r++)n=e[r],Vn[n]=Vn[n]||[],Vn[n].unshift(t)},prefilter:function(e,t){t?Xn.unshift(e):Xn.push(e)}}),v.Tween=Yn,Yn.prototype={constructor:Yn,init:function(e,t,n,r,i,s){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=s||(v.cssNumber[n]?"":"px")},cur:function(){var e=Yn.propHooks[this.prop];return e&&e.get?e.get(this):Yn.propHooks._default.get(this)},run:function(e){var t,n=Yn.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Yn.propHooks._default.set(this),this}},Yn.prototype.init.prototype=Yn.prototype,Yn.propHooks={_default:{get:function(e){var t;return e.elem[e.prop]==null||!!e.elem.style&&e.elem.style[e.prop]!=null?(t=v.css(e.elem,e.prop,!1,""),!t||t==="auto"?0:t):e.elem[e.prop]},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):e.elem.style&&(e.elem.style[v.cssProps[e.prop]]!=null||v.cssHooks[e.prop])?v.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Yn.propHooks.scrollTop=Yn.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(r,i,s){return r==null||typeof r=="boolean"||!e&&v.isFunction(r)&&v.isFunction(i)?n.apply(this,arguments):this.animate(Zn(t,!0),r,i,s)}}),v.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=v.isEmptyObject(e),s=v.speed(t,n,r),o=function(){var t=Kn(this,v.extend({},e),s);i&&t.stop(!0)};return i||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return typeof e!="string"&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=e!=null&&e+"queueHooks",s=v.timers,o=v._data(this);if(n)o[n]&&o[n].stop&&i(o[n]);else for(n in o)o[n]&&o[n].stop&&Wn.test(n)&&i(o[n]);for(n=s.length;n--;)s[n].elem===this&&(e==null||s[n].queue===e)&&(s[n].anim.stop(r),t=!1,s.splice(n,1));(t||!r)&&v.dequeue(this,e)})}}),v.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),v.speed=function(e,t,n){var r=e&&typeof e=="object"?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};r.duration=v.fx.off?0:typeof r.duration=="number"?r.duration:r.duration in v.fx.speeds?v.fx.speeds[r.duration]:v.fx.speeds._default;if(r.queue==null||r.queue===!0)r.queue="fx";return r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},v.timers=[],v.fx=Yn.prototype.init,v.fx.tick=function(){var e,n=v.timers,r=0;qn=v.now();for(;r<n.length;r++)e=n[r],!e()&&n[r]===e&&n.splice(r--,1);n.length||v.fx.stop(),qn=t},v.fx.timer=function(e){e()&&v.timers.push(e)&&!Rn&&(Rn=setInterval(v.fx.tick,v.fx.interval))},v.fx.interval=13,v.fx.stop=function(){clearInterval(Rn),Rn=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fx.step={},v.expr&&v.expr.filters&&(v.expr.filters.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length});var er=/^(?:body|html)$/i;v.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){v.offset.setOffset(this,e,t)});var n,r,i,s,o,u,a,f={top:0,left:0},l=this[0],c=l&&l.ownerDocument;if(!c)return;return(r=c.body)===l?v.offset.bodyOffset(l):(n=c.documentElement,v.contains(n,l)?(typeof l.getBoundingClientRect!="undefined"&&(f=l.getBoundingClientRect()),i=tr(c),s=n.clientTop||r.clientTop||0,o=n.clientLeft||r.clientLeft||0,u=i.pageYOffset||n.scrollTop,a=i.pageXOffset||n.scrollLeft,{top:f.top+u-s,left:f.left+a-o}):f)},v.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return v.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(v.css(e,"marginTop"))||0,n+=parseFloat(v.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=v.css(e,"position");r==="static"&&(e.style.position="relative");var i=v(e),s=i.offset(),o=v.css(e,"top"),u=v.css(e,"left"),a=(r==="absolute"||r==="fixed")&&v.inArray("auto",[o,u])>-1,f={},l={},c,h;a?(l=i.position(),c=l.top,h=l.left):(c=parseFloat(o)||0,h=parseFloat(u)||0),v.isFunction(t)&&(t=t.call(e,n,s)),t.top!=null&&(f.top=t.top-s.top+c),t.left!=null&&(f.left=t.left-s.left+h),"using"in t?t.using.call(e,f):i.css(f)}},v.fn.extend({position:function(){if(!this[0])return;var e=this[0],t=this.offsetParent(),n=this.offset(),r=er.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(v.css(e,"marginTop"))||0,n.left-=parseFloat(v.css(e,"marginLeft"))||0,r.top+=parseFloat(v.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(v.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||i.body;while(e&&!er.test(e.nodeName)&&v.css(e,"position")==="static")e=e.offsetParent;return e||i.body})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);v.fn[e]=function(i){return v.access(this,function(e,i,s){var o=tr(e);if(s===t)return o?n in o?o[n]:o.document.documentElement[i]:e[i];o?o.scrollTo(r?v(o).scrollLeft():s,r?s:v(o).scrollTop()):e[i]=s},e,i,arguments.length,null)}}),v.each({Height:"height",Width:"width"},function(e,n){v.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){v.fn[i]=function(i,s){var o=arguments.length&&(r||typeof i!="boolean"),u=r||(i===!0||s===!0?"margin":"border");return v.access(this,function(n,r,i){var s;return v.isWindow(n)?n.document.documentElement["client"+e]:n.nodeType===9?(s=n.documentElement,Math.max(n.body["scroll"+e],s["scroll"+e],n.body["offset"+e],s["offset"+e],s["client"+e])):i===t?v.css(n,r,i,u):v.style(n,r,i,u)},n,o?i:t,o,null)}})}),e.jQuery=e.$=v,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return v})})(window);
/**
*    @name                            Elastic
*    @descripton                        Elastic is jQuery plugin that grow and shrink your textareas automatically
*    @version                        1.6.11
*    @requires                        jQuery 1.2.6+
*
*    @author                            Jan Jarfalk
*    @author-email                    jan.jarfalk@unwrongest.com
*    @author-website                    http://www.unwrongest.com
*
*    @licence                        MIT License - http://www.opensource.org/licenses/mit-license.php
*/

(function ($) {
    jQuery.fn.extend({
        elastic: function () {

            //    We will create a div clone of the textarea
            //    by copying these attributes from the textarea to the div.
            var mimics = [
                'paddingTop',
                'paddingRight',
                'paddingBottom',
                'paddingLeft',
                'fontSize',
                'lineHeight',
                'fontFamily',
                'width',
                'fontWeight',
                'border-top-width',
                'border-right-width',
                'border-bottom-width',
                'border-left-width',
                'borderTopStyle',
                'borderTopColor',
                'borderRightStyle',
                'borderRightColor',
                'borderBottomStyle',
                'borderBottomColor',
                'borderLeftStyle',
                'borderLeftColor'
            ];

            return this.each(function () {
                // Elastic only works on textareas
                if (this.type !== 'textarea' || jQuery(this).data('elastic')) {
                    return false;
                }

                var $textarea = jQuery(this),
                    $twin = jQuery('<div />').css({
                        'position': 'absolute',
                        'display': 'none',
                        'word-wrap': 'break-word',
                        'white-space': 'pre-wrap'
                    }),
                    lineHeight = parseInt($textarea.css('line-height'), 10) || parseInt($textarea.css('font-size'), '10'),
                    minheight = parseInt($textarea.css('height'), 10) || lineHeight * 3,
                    maxheight = parseInt($textarea.css('max-height'), 10) || Number.MAX_VALUE,
                    goalheight = 0;
                if ($textarea.css('box-sizing') == 'border-box') {
                    minheight = minheight - parseInt($textarea.css('padding-top'), 10) - parseInt($textarea.css('padding-bottom'), 10);
                }

                $textarea.data('elastic', true);

                // Opera returns max-height of -1 if not set
                if (maxheight < 0) { maxheight = Number.MAX_VALUE; }

                // Append the twin to the DOM
                // We are going to meassure the height of this, not the textarea.
                $twin.appendTo($textarea.parent());

                // Copy the essential styles (mimics) from the textarea to the twin
                var i = mimics.length;
                while (i--) {
                    $twin.css(mimics[i].toString(), $textarea.css(mimics[i].toString()));
                }

                // Updates the width of the twin. (solution for textareas with widths in percent)
                function setTwinWidth() {
                    var curatedWidth = Math.floor(parseInt($textarea.width(), 10));
                    if ($twin.width() !== curatedWidth) {
                        $twin.css({ 'width': curatedWidth + 'px' });

                        // Update height of textarea
                        update(true);
                    }
                }

                // Sets a given height and overflow state on the textarea

                function setInlineStyles(height, overflow) {
                    var curratedHeight = Math.floor(parseInt(height, 10));
                    $textarea.css({ resize: 'none' });
                    if ($textarea.height() !== curratedHeight) {
                        $textarea.css({ 'height': curratedHeight + 'px', 'overflow': overflow });
                    }
                }

                // This function will update the height of the textarea if necessary
                function update(forced) {

                    // Get curated content from the textarea.
                    var textareaContent = $textarea.val().replace(/&/g, '&amp;').replace(/ {2}/g, '&nbsp;').replace(/<|>/g, '&gt;').replace(/\n/g, '<br />');

                    // Compare curated content with curated twin.
                    var twinContent = $twin.html().replace(/<br>/ig, '<br />');

                    if (forced || textareaContent + '&nbsp;' !== twinContent) {

                        // Add an extra white space so new rows are added when you are at the end of a row.
                        $twin.html(textareaContent + '&nbsp;');

                        // Change textarea height if twin plus the height of one line differs more than 3 pixel from textarea height
                        if (Math.abs($twin.height() + lineHeight - $textarea.height()) > 3) {
                            var goalheight = (textareaContent.length === 0) ? $twin.height() : $twin.height() + lineHeight;

                            if (goalheight >= maxheight) {
                                setInlineStyles(maxheight, 'auto');
                            } else if (goalheight <= minheight) {
                                setInlineStyles(minheight, 'hidden');
                            } else {
                                setInlineStyles(goalheight, 'hidden');
                            }

                        }

                    }

                }

                // Hide scrollbars
                $textarea.css({ 'overflow': 'hidden' });

                // Update textarea size on keyup, change, cut and paste
                $textarea.bind('keyup change cut paste', function () {
                    update();
                });

                // Update width of twin if browser or textarea is resized (solution for textareas with widths in percent)
                $(window).bind('resize', setTwinWidth);
                $textarea.bind('resize', setTwinWidth);
                $textarea.bind('update', update);

                // Compact textarea on blur
                /*$textarea.bind('blur', function () {
                    if ($twin.height() < maxheight) {
                        if ($twin.height() > minheight) {
                            $textarea.height($twin.height());
                        } else {
                            //$textarea.height(minheight);
                            $textarea.css('height', minheight);
                        }
                    }
                });*/

                // And this line is to catch the browser paste event
                $textarea.bind('input paste', function (e) { setTimeout(update, 250); });

                // Run update once when elastic is initialized
                update();

            });

        }
    });
})(jQuery);

var Kontur = Kontur || {};

Kontur.Module = function (namespace, func, args) {

    var root = function () {
        return this;
    }(),
        parts = namespace.split('.'),
        part;

    while (part = parts.shift()) {
        root = root[part] = root[part] || {};
    }

    return func.apply(root, args || []);
};
Kontur.Module("Kontur.Global", function () {
    this.get = function () {
        return function () {
            return this;
        }();
    };
});
/* Simple JavaScript Inheritance
* By John Resig http://ejohn.org/
* MIT Licensed.
*/
// Inspired by base2 and Prototype
(function () {
    var initializing = false,
        fnTest = /xyz/.test(function () {
        xyz;
    }) ? /\b_super\b/ : /.*/;

    // The base Class implementation (does nothing)
    this.Class = function () {};

    // Create a new Class that inherits from this class
    Class.extend = function (prop) {
        var _super = this.prototype;

        // Instantiate a base class (but only create the instance,
        // don't run the init constructor)
        initializing = true;
        var prototype = new this();
        initializing = false;

        // Copy the properties over onto the new prototype
        for (var name in prop) {
            // Check if we're overwriting an existing function
            prototype[name] = typeof prop[name] == "function" && typeof _super[name] == "function" && fnTest.test(prop[name]) ? function (name, fn) {
                return function () {
                    var tmp = this._super;

                    // Add a new ._super() method that is the same method
                    // but on the super-class
                    this._super = _super[name];

                    // The method only need to be bound temporarily, so we
                    // remove it when we're done executing
                    var ret = fn.apply(this, arguments);
                    this._super = tmp;

                    return ret;
                };
            }(name, prop[name]) : prop[name];
        }

        // The dummy class constructor
        function Class() {
            // All construction is actually done in the init method
            if (!initializing && this.init) {
                this.init.apply(this, arguments);
            }
            //checkAbstractMethodsImplemented.apply(this, this); //note немножко магии
        }

        // Populate our constructed prototype object
        Class.prototype = prototype;

        // Enforce the constructor to be what we expect
        Class.prototype.constructor = Class;

        // And make this class extendable
        Class.extend = arguments.callee;

        return Class;
    };
})();

//
var abstractMethod = function abstractMethod(funcName) {
    throw Error("Метод " + funcName + " помечен как абстрактный и не реализован.");
};

// todo реф может магию использовать тока в debug ?
var checkAbstractMethodsImplemented = function checkAbstractMethodsImplemented(context) {
    var errors = [];
    for (var m in context) {
        try {
            if (context[m] == abstractMethod) context[m](m);
        } catch (e) {
            errors.push(e);
        }
    }
    if (errors.length > 0) throw Error(errors.join(' '));
};
if (!(window.Kontur && window.Kontur.GoogleTagManagerStrictMode)) {
    var _gaq = window._gaq || [];

    window.onerror = function (msg, url, line) {
        var preventErrorAlert = false,
            eventCategory = 'JS Error',
            label = 'Url: ' + document.location + '|Document: ' + (url || document.location) + '|Line: ' + line + '|UserAgent: ' + navigator.userAgent + '|Date: ' + new Date().toUTCString();

        _gaq.push(['_trackEvent', eventCategory, msg, label, 0, true]);

        if (typeof window['ga'] == 'function') {
            window.ga('send', 'event', eventCategory, msg, label);
    }

        return preventErrorAlert;
    };
}
/* Отслеживание событий */

Kontur.Module('Kontur.Counters.GoogleTagManager', function (global) {
    var window = global.get();

    this.sendEvent = function (eventName) {
        var dataLayer = window.dataLayer || [];
        dataLayer.push({ 'event': eventName });
    };
}, [Kontur.Global]);

Kontur.Module('Kontur.Counters.GoogleAnalytics', function ($, global, gaDimensions) {
    var window = global.get(),
        defaultCategory = 'events';

    this.sendEvent = function (eventName, value, eventCategory, eventLabel) {
        var paramsArray = getAnalyticParamsArray(eventName, value, eventCategory, eventLabel);
        var gaParams = getGaParameters();
        gaParams.push(paramsArray);

        if (typeof window['ga'] == 'function') {
            var analyticParams = getAnalyticParamsJson(eventName, value, eventCategory, eventLabel);
            window.ga('send', analyticParams);
        }
    };

    this.sendPageView = function (page) {
        if (typeof window['ga'] == 'function') {
            window.ga('set', 'page', page);
            window.ga('send', 'pageview');
        } else {
            var gaq = getGaParameters();
            gaq.push(['_trackPageview', page]);
        }
    };

    this.setParameter = function (key, value) {
        if (!gaDimensions || typeof gaDimensions['getDimensions'] != 'function') return;
        var dimensionIndex = $.inArray(key, gaDimensions.getDimensions());
        if (dimensionIndex == -1) return;
        var ga = window.ga || function () {
            window.console && window.console.log && window.console.log(arguments);
        };
        ga('set', 'dimension' + (dimensionIndex + 1), value);
    };

    function getGaParameters() {
        return window._gaq = window._gaq || [];
    }

    function getAnalyticParamsArray(eventName, value, eventCategory, eventLabel) {
        var category = eventCategory || defaultCategory;
        var paramsArray = ['_trackEvent', category, eventName];
        if (eventLabel) paramsArray.push(eventLabel);
        if (value) paramsArray.push(value);
        return paramsArray;
    }

    function getAnalyticParamsJson(eventName, value, eventCategory, eventLabel) {
        var category = eventCategory || defaultCategory;
        var analyticParams = {
            'hitType': 'event', // Required.
            'eventCategory': category // Required.
        };
        if (eventName) {
            analyticParams.eventAction = eventName;
        }
        if (value) {
            analyticParams.eventValue = parseInt(value) || 0; // Value is a number.
        }
        if (eventLabel) {
            analyticParams.eventLabel = eventLabel;
        }
        return analyticParams;
    }
}, [jQuery, Kontur.Global, Kontur.GaDimensions]);

Kontur.Module('Kontur.Counters.YandexMetrika', function (global) {
    var window = global.get(),
        defaultCategory = 'events';

    this.sendEvent = function (eventName, value, eventCategory, eventLabel) {
        var analyticParams = getAnalyticParamsJson(null, value, eventCategory, eventLabel);
        var yaCounter = getYandexCounter();
        if (yaCounter) {
            yaCounter.reachGoal(eventName, analyticParams);
        } else {
            window.pageEvents = window.pageEvents || [];
            window.pageEvents.push(eventName);
        }
    };

    this.sendPageView = function (page) {
        var yaCounter = getYandexCounter();

        if (yaCounter) {
            yaCounter.hit(page);
        }
    };

    function getYandexCounter() {
        var yname = null;
        for (var name in window) {
            if (name.indexOf('yaCounter') == 0) {
                yname = name;
                break;
            }
        }
        return yname ? (getYandexCounter = function getYandexCounter() {
            return window[yname];
        })() : null;
    }
    this.getYandexCounter = getYandexCounter;

    function getAnalyticParamsJson(eventName, value, eventCategory, eventLabel) {
        var category = eventCategory || defaultCategory;
        var analyticParams = {
            'hitType': 'event', // Required.
            'eventCategory': category // Required.
        };
        if (eventName) {
            analyticParams.eventAction = eventName;
        }
        if (value) {
            analyticParams.eventValue = parseInt(value) || 0; // Value is a number.
        }
        if (eventLabel) {
            analyticParams.eventLabel = eventLabel;
        }
        return analyticParams;
    }
}, [Kontur.Global]);

Kontur.Module('Kontur.Counters.LiveInternet', function ($, global) {
    var window = global.get();

    this.sendPageView = function (page, referrer) {
        var counter = getCurrentCounter();

        if (counter) {
            updateCounter(getBaseUrl(counter) + getRelativeUrl(page, referrer));
        }
    };

    function getCurrentCounter() {
        var elements = $('[src^="//counter.yadro.ru"]');

        return elements[0];
    }

    function getBaseUrl(counter) {
        var match = counter.src.match(/(\/\/counter.yadro.ru\/hit\?.*?)r/);

        return match[1];
    }

    function getRelativeUrl(page, referrer) {
        var origin = window.location.origin,
            screen = window.screen,
            document = window.document,
            referrerPart = 'r' + window.escape(referrer || document.referrer),
            screenPart = typeof screen != 'undefined' ? ';s' + screen.width + '*' + screen.height + '*' + (screen.colorDepth ? screen.colorDepth : screen.pixelDepth) : '',
            urlPart = ';u' + window.escape(origin + page),
            randomPart = ';' + window.Math.random();

        return referrerPart + screenPart + urlPart + randomPart;
    }

    function updateCounter(source) {
        var image = window.document.createElement('img');

        image.src = source;
    }
}, [jQuery, Kontur.Global]);

Kontur.Module("Kontur.Counters", function ($, global, gaDimensions, googleTagManager, googleAnalytics, yandexMetrika, liveInternet) {

    var me = this,
        initialized = false,
        window = global.get(),
        eventNameDecorator = null;

    me.registerPageView = function (page, referrer) {
        $(function () {
            googleAnalytics.sendPageView(page);
            yandexMetrika.sendPageView(page);
            liveInternet.sendPageView(page, referrer);

            if (window.console) {
                window.console.info('page view was registered: ' + page + ' (referrer: ' + referrer + ')');
            }
        });
    };

    me.setCustomParameter = function (key, value) {
        googleAnalytics.setParameter(key, value);
    };

    me.registerPageEvent = function (eventName, value, eventCategory, eventLabel) {
        if (document.readyState === 'complete') {
            register();
        } else {
            $(window).on("load", function () {
                register();
            });
        }
        function register() {
            var cleanedEventName = cleanEventName(eventName);

            if (window.Kontur && window.Kontur.GoogleTagManagerStrictMode) {
                googleTagManager.sendEvent(cleanedEventName);
            } else {
                googleAnalytics.sendEvent(cleanedEventName, value, eventCategory, eventLabel);
                yandexMetrika.sendEvent(cleanedEventName, value, eventCategory, eventLabel);
            }

            if (window.console) {
                window.console.info('event was registred: ' + cleanedEventName);
            }
        }
    };

    me.setEventNameDecorator = function (decorator) {
        if (typeof decorator === "function") {
            eventNameDecorator = decorator;
        }
    };

    me.initialize = function () {
        if (!initialized) {
            window['loadScriptAsync'] = function (src) {
                var script = document.createElement('script');
                script.type = 'text/javascript';
                script.async = true;
                script.src = src;
                var firstScript = document.getElementsByTagName('script')[0];
                firstScript.parentNode.insertBefore(script, firstScript);
            };

            //fallback
            window.RegisterPageEvent = me.registerPageEvent;
            initialized = true;
        }
    };

    function cleanEventName(eventName) {
        var cleanName = eventName.replace(/[&=?#]/g, '').replace(/(\/|-)+/g, '-').replace(/^-+|-+$/g, '');

        return eventNameDecorator != null ? eventNameDecorator(cleanName) : cleanName;
    }
}, [jQuery, Kontur.Global, Kontur.GaDimensions, Kontur.Counters.GoogleTagManager, Kontur.Counters.GoogleAnalytics, Kontur.Counters.YandexMetrika, Kontur.Counters.LiveInternet]);

/* Отслеживание событий */

Kontur.Module("Kontur.PageEvents", function ($, global, counters) {
    var initialized = false;
    this.initialize = function () {
        var window = global.get();

        if (!initialized) {
            $(window).on('pageEvent', function (e, eventName) {
                counters.registerPageEvent(eventName);
            });

            if (!(window.Kontur && window.Kontur.GoogleTagManagerStrictMode)) {
                $(window.document).on('click', '[data-event-name]:not(form)', function (e) {
                    var target = $(e.currentTarget);
                    var eventName = target.data('event-name');
                    var eventValue = target.data('event-value');
                    var eventCategory = target.data('event-category');
                    var eventLabel = target.data('event-label');
                    counters.registerPageEvent(eventName, eventValue, eventCategory, eventLabel);
                });

                $(window.document).on('submit', 'form', function () {
                    var form = $(this),
                        eventName = form.data('event') || form.data('event-name') || form.attr('action');
                    var eventValue = form.data('event-value');
                    var eventCategory = form.data('event-category');
                    var eventLabel = form.data('event-label');
                    counters.registerPageEvent('event-' + eventName + '-submit', eventValue, eventCategory, eventLabel);
                });
            }

            initialized = true;
        }
    };
}, [jQuery, Kontur.Global, Kontur.Counters]);

Kontur.Counters.initialize();
Kontur.PageEvents.initialize();
var Consultant = function (window, document, $) {
    'use strict';

    var defaultOptions = {
        chatOpen: null,
        widgetLocation: 'https://api.kontur.ru/chat-widget',
        widgetApi: 'https://api.kontur.ru/livechat/v1.1',
        chatWelcomeOpen: null,
        chatWelcomeAction: null,
        offlineAction: null
    },
        defaultDomainsTopics = {
        'diadoc.kontur.ru': 'Диадок',
        'diadoc-widget.kontur.ru': 'Диадок',
        'elba.kontur.ru': 'Эльба',
        'evrika.kontur.ru ': 'Контур.Бухгалтерия',
        'o.kontur.ru': 'Экстерн',
        'buhta.kontur.ru ': 'Контур.Бухгалтерия'
    },
        options,
        init,
        chat,
        showWindow,
        module = function module() {
        init.apply(this, arguments);
    };

    init = function init(params) {
        options = $.extend({}, defaultOptions, params);

        $.getScript(options.widgetLocation + '/widget.min.js').done(function () {
            initWidget();
        }).fail(function (jqxhr, settings, exception) {
            console.error('Онлайн консультант. Ошибка при загрузке виджета: ' + exception);
        });
    };

    showWindow = function showWindow() {
        if (!chat) {
            console.log('Онлайн консультант. Чат не инициализирован.');
            return;
        }
        runSafely(options.chatWelcomeOpen);
        chat.open();
    };

    module.prototype.showWindow = function () {
        showWindow.call(this);
    };

    function registerHandlers() {
        try {
            chat.subscribe('chatStarted', function () {
                runSafely(options.chatWelcomeAction);
            });

            chat.subscribe('mailSent', function () {
                runSafely(options.offlineAction);
            });
        } catch (e) {
            console.error('Онлайн консультант. Не удалось подписаться на события отправки сообщений: ' + e);
        }
    }

    function initWidget() {
        createChat();
        registerHandlers();
        triggerChatIsAvailableNow();
    }

    function createChat() {
        chat = new LiveChat({
            location: options.widgetLocation,
            params: {
                type: getChatType(),
                topic: getTopic(),
                hideMinimizedVersion: true
            }
        });
    }

    function getChatType() {
        return isIe() && isTrustedSite() ? 'widget' : 'window';
    }

    function getTopic() {
        if (options.topic) {
            return options.topic;
        }
        return defaultDomainsTopics[window.location.hostname];
    }

    function triggerChatIsAvailableNow() {
        $.ajax({
            type: "POST",
            url: options.widgetApi + '/topics/availability',
            dataType: 'json',
            crossDomain: true,
            data: JSON.stringify({ sourceURL: window.location.href }),
            success: function success(data) {
                if (true === data.isChatAvailableNow) {
                    $(window).trigger('OnlineConsultantCount', [1]);
                } else {
                    $(window).trigger('OnlineConsultantCount', [0]);
                }
            }
        });
    }

    function isIe(userAgent) {
        userAgent = userAgent || navigator.userAgent;
        return userAgent.indexOf('MSIE ') > -1 || userAgent.indexOf('Trident/') > -1 || userAgent.indexOf('Edge/') > -1;
    }

    function isTrustedSite() {
        var trustedZone = 'kontur.ru';
        var hostName = window.location.hostname;
        return hostName === trustedZone || endsWith(hostName, '.' + trustedZone);

        function endsWith(str, suffix) {
            return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }
    }

    function runSafely(v) {
        if (v && isFunction(v)) v();

        function isFunction(functionToCheck) {
            var getType = {};
            return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
        }
    }

    return module;
}(window, document, jQuery);
function InitPostSimpleFormAsync(form, params) {
    var defaultOptions = {
        serverErrorMessage: "Сервер временно недоступен",
        notAuthtorizedMessage: "Ошибка доступа. Попробуйте обновить страницу",
        timeout: 10000
    };
    var options = $.extend({}, defaultOptions, params);
    RemoveErrors(form);
    ShowFormChildren(form, options);
    var submitting = false;
    form.unbind('submit');
    form.bind('submit', function () {
        if (submitting) return false;

        if (options.beforeSendCallback) options.beforeSendCallback(form);

        submitting = true;
        form.find("input[type=submit], button[type=submit]").attr("disabled", "disabled");
        RemoveErrors(form);

        if (options.validate && !options.validate(form)) {
            form.find("input[type=submit], button[type=submit]").removeAttr("disabled");
            submitting = false;
            return false;
        }

        var data = options.dataProvider ? options.dataProvider() : form.serializeArray();

        var url = options.url;
        if (!url) url = form.attr('action');

        var dataType = "json";
        var type = "POST";
        var contentType = "application/x-www-form-urlencoded; charset=utf-8";

        if (options.ajaxOnSubmitCallback) {
            options.ajaxOnSubmitCallback();
        }

        $.ajax({
            type: type,
            url: url,
            data: data,
            dataType: dataType,
            contentType: contentType,
            timeout: options.timeout,
            success: function success(data) {
                RemoveErrors(form);
                var hasErrors = false;

                if (data.Errors) {
                    for (var k in data.Errors) {
                        hasErrors = true;
                        var input = form.find('[name="' + k + '"]');
                        //note хак выбираем инпуты, у которых нет нейма (отрезан textNote)
                        if (input.length == 0) input = form.find('#' + k.replace(/\./gi, '_'));
                        input.addClass('input-validation-error');
                        var errorStr = "";
                        $.each(data.Errors[k], function (index, item) {
                            errorStr += ' ' + item;
                        });
                        AddFieldError(input.last(), errorStr);
                    }
                    if (data.Errors["Form"]) {
                        AddFormError(data.Errors["Form"][0]);
                    }
                }

                if (!hasErrors) {
                    if (!options.preventDefaultEvents) {
                        var relativeUrl = url.replace(/^(?:\/\/|[^\/]+)*\//, '');
                        $(window).trigger('pageEvent', 'event-' + (form.data('event') || form.data('event-name') || relativeUrl) + '-send');
                    }

                    if (options.useDefaultSuccessMessageShowing !== false) {
                        ShowSuccessMessage(options.successMessage || data.Message, form);
                    }

                    if (options.clearTextInputsOnSuccess !== false) {
                        ClearTextInputs(form);
                    }

                    if (options.successCallback) {
                        options.successCallback(data, form);
                    }
                } else {
                    if (null == options.focusFirstErrorInput || options.focusFirstErrorInput) {
                        form.find('.input-validation-error:first').focus();
                    }
                    if (options.errorsShowedCallback) {
                        options.errorsShowedCallback(form, data);
                    }
                }
            },
            complete: function complete(jqXHR, textStatus) {
                var cancel = options.beforeCompleteCallback && options.beforeCompleteCallback(jqXHR, textStatus) === false;
                if (cancel) return;

                form.find("input[type=submit], button[type=submit]").removeAttr("disabled");
                submitting = false;

                if (options.completeCallback) options.completeCallback(jqXHR, textStatus);
            },
            error: function error(jqXHR) {

                var isUnauthorized = jqXHR.status === 401;

                if (isUnauthorized && options.notAuthtorizedMessage) {
                    AddFormError(options.notAuthtorizedMessage);
                }

                if (!isUnauthorized && options.serverErrorMessage) {
                    AddFormError(options.serverErrorMessage);
                }

                if (options.errorCallback) {
                    options.errorCallback(data, form);
                }
            }
        });

        if (options.afterSendCallback) options.afterSendCallback(form);

        return false;
    });

    $(function () {
        var validator = form.data('validator');
        if (validator) {
            var settngs = validator.settings;
            var oldErrorPlacement = settngs.errorPlacement;
            settngs.errorPlacement = function (error, input) {
                var name = input.attr('name');
                $('[data-valmsg-for="' + name + '"]').remove();
                AddFieldError(input, error.text());
                oldErrorPlacement.call(form, error, input);
            };
        }
    });

    function AddFieldError(input, errorMessage) {
        var errorElement = GetErrorElement(input, errorMessage);
        if (options.errorPlacement) {
            options.errorPlacement(input, errorElement);
        } else {
            input.parent().append(errorElement);
        }
    }

    function GetErrorElement(input, errorMessage) {
        var fieldName = input.attr('name');
        return $('<span class="field-validation-error" data-valmsg-for="' + fieldName + '">' + errorMessage + '</span>');
    }

    function AddFormError(error) {
        var errorHtml = '<div class="form-validation-error"><span class = "field-validation-error">' + error + '</span></div>';
        if (options.formErrorPlacement) {
            options.formErrorPlacement(form, errorHtml, error);
            return;
        }

        if (options.errorAfterForm) form.append(errorHtml);else form.prepend(errorHtml);
    }

    //note Если на инпут повешано, что-то еще (например саджест), то могут возникнуть лишние запросы на сервер и др проблемы. Тк тут вызывается blur, для того, чтобы появилась серая подсказка (textNode)
    function ClearTextInputs(form) {
        if (options.clearTextInputs === undefined) {
            PostSimpleFormClearTextInputs(form);
        } else {
            options.clearTextInputs(form);
        }
    }

    function ShowFormChildren(form, options) {
        PostSimpleFormShowFormChildren(form, options);
    }

    function RemoveErrors(form) {
        if (options.removeErrors === undefined) {
            PostSimpleFormRemoveErrors(form);
        } else {
            options.removeErrors(form);
        }
    }

    function ShowSuccessMessage(message, form) {
        return PostSimpleFormShowSuccessMessage(message, form);
    }
}

function PostSimpleFormShowSuccessMessage(message, form) {
    var messageContainer = PostSimpleFormGetMessageContainer(form);
    form.children().hide();
    messageContainer.find('p').remove();
    if (message) messageContainer.html(message);
    messageContainer.show();
}

function PostSimpleFormClearTextInputs(form) {
    form.find("input[type=text], input[type=tel], input[type=email], textarea").each(PostSimpleFormClearInput);
}

function PostSimpleFormClearInput() {
    var domElement = this;
    var jqElement = $(domElement);
    jqElement.val(jqElement.attr('data-default-value'));
}

function PostSimpleFormRemoveErrors(form) {
    var inputs = form.find(":input");
    inputs.removeClass('input-validation-error');
    form.find(".field-validation-error").remove();
    form.find(".form-validation-error").remove();
    form.find("input[type=submit], button[type=submit]").removeAttr("disabled");
}

function PostSimpleFormShowFormChildren(form, options) {
    form.children().show();

    options = options || {};
    if (options.useDefaultSuccessMessageShowing !== false) {
        var messageContainer = PostSimpleFormGetMessageContainer(form);
        messageContainer.hide();
    }
}

function PostSimpleFormGetMessageContainer(form) {
    var messageContainer = form.find(".js-successMessage");
    if (messageContainer.length == 0) throw new Error('Ожидалось, что лайтбокс имеет класс js-successMessage');
    return messageContainer;
}
Kontur.Module('Kontur.UrlParameters', function ($, global) {
    this.getParams = function () {
        var window = global.get();
        var getData = {};
        var _get = window.location.search.substring(1).split("&");
        for (var i = 0; i < _get.length; i++) {
            var getVar = _get[i].split("=");
            getData[getVar[0]] = typeof getVar[1] == "undefined" ? "" : getVar[1];
        }
        return getData;
    };
}, [$, Kontur.Global]);
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var pluses = /\+/g;

    function encode(s) {
        return config.raw ? s : encodeURIComponent(s);
    }

    function decode(s) {
        return config.raw ? s : decodeURIComponent(s);
    }

    function stringifyCookieValue(value) {
        return encode(config.json ? JSON.stringify(value) : String(value));
    }

    function parseCookieValue(s) {
        if (s.indexOf('"') === 0) {
            // This is a quoted cookie as according to RFC2068, unescape...
            s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
        }

        try {
            // Replace server-side written pluses with spaces.
            // If we can't decode the cookie, ignore it, it's unusable.
            // If we can't parse the cookie, ignore it, it's unusable.
            s = decodeURIComponent(s.replace(pluses, ' '));
            return config.json ? JSON.parse(s) : s;
        } catch (e) { }
    }

    function read(s, converter) {
        var value = config.raw ? s : parseCookieValue(s);
        return $.isFunction(converter) ? converter(value) : value;
    }

    var config = $.cookie = function (key, value, options) {

        // Write

        if (value !== undefined && !$.isFunction(value)) {
            options = $.extend({}, config.defaults, options);

            if (typeof options.expires === 'number') {
                var days = options.expires, t = options.expires = new Date();
                t.setTime(+t + days * 864e+5);
            }

            return (document.cookie = [
                encode(key), '=', stringifyCookieValue(value),
                options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
                options.path ? '; path=' + options.path : '',
                options.domain ? '; domain=' + options.domain : '',
                options.secure ? '; secure' : ''
            ].join(''));
        }

        // Read

        var result = key ? undefined : {};

        // To prevent the for loop in the first place assign an empty array
        // in case there are no cookies at all. Also prevents odd result when
        // calling $.cookie().
        var cookies = document.cookie ? document.cookie.split('; ') : [];

        for (var i = 0, l = cookies.length; i < l; i++) {
            var parts = cookies[i].split('=');
            var name = decode(parts.shift());
            var cookie = parts.join('=');

            if (key && key === name) {
                // If second argument (value) is a function it's a converter...
                result = read(cookie, value);
                break;
            }

            // Prevent storing a cookie that we couldn't decode.
            if (!key && (cookie = read(cookie)) !== undefined) {
                result[name] = cookie;
            }
        }

        return result;
    };

    config.defaults = {};

    $.removeCookie = function (key, options) {
        if ($.cookie(key) === undefined) {
            return false;
        }

        // Must not alter options, thus extending a fresh object...
        $.cookie(key, '', $.extend({}, options, { expires: -1 }));
        return !$.cookie(key);
    };

}));

Kontur.Module('Kontur.OnlineConsultant', function ($, global) {
    var self = this,
        window = global.get();

    self.initialize = function (options) {
        if (!options.widgetLocation) {
            console.error('Онлайн консультант: не задан параметр widgetLocation');
            return;
        }
        if (!options.widgetApi) {
            console.error('Онлайн консультант: не задан параметр widgetApi');
            return;
        }
        if (!options.topic) {
            console.error('Онлайн консультант: не задан параметр topic');
            return;
        }
        var onlineConsultant = new Consultant(options);
        $(onlineConsultant).on('OnlineConsultantCount', function (e, count) {
            var $target = $('.js-onlineConsultant'),
                cls = count > 0 ? 'online' : 'offline';
            $target.addClass(cls);
        });

        $(window.document).on('click', '.js-onlineConsultant', function (e) {
            e.preventDefault();
            onlineConsultant.showWindow();
        });
    };
}, [jQuery, Kontur.Global]);
Kontur.Module('Kontur.FeedbackLightbox', function ($, global) {
    var me = this,
        window = global.get(),
        feedbackLightbox,
        feedbackForm,
        feedbackType,
        feedbackOrderServiceType = 'order';

    function showFeedbackLightbox() {
        var self = $(this);
        feedbackType = self.attr('data-feedbacktype');
        var isServiceOrder = feedbackType === feedbackOrderServiceType;
        clearPostSimpleForm(feedbackForm);
        var successMessage, successHeader;
        if (isServiceOrder) {
            successMessage = '<p>Спасибо. В ближайшее время мы свяжемся с вами.</p>';
            successHeader = 'Ваша заявка принята';
            feedbackForm.find('.js-is-order-hidden').prop('checked', true);
            feedbackForm.find('.js-feedback-phone-comment').hide();
            var selectedServices = self.data('data-selected-services');
            addSelectedServicesInfo(selectedServices);
        } else {
            successMessage = '<p>Спасибо. В случае необходимости мы свяжемся с вами.</p>';
            successHeader = 'Сообщение отправлено';
            feedbackForm.find('.js-is-order-hidden').prop('checked', false);
            feedbackForm.find('.js-feedback-phone-comment').show();
            clearSelectedServicesInfo();
            feedbackLightbox.find('[data-title=""]').html('Написать письмо');
        }
        feedbackLightbox.find('.js-page-url-hidden').val(window.location);
        feedbackLightbox.lightbox({
            wrapperStyle: {
                width: '560px'
            },
            bottomPanelVisibility: false,
            create: function create() {
                InitPostSimpleFormAsync(feedbackForm, {
                    clearTextInputsOnSuccess: false,
                    successMessage: successMessage,
                    successCallback: function successCallback() {
                        $('#successModalFooter').show();
                        feedbackLightbox.find('[data-title=""]').html(successHeader);
                    }
                });
            },
            beforeOpen: function beforeOpen() {
                $('#successModalFooter').hide();
            }
        });
        feedbackLightbox.removeClass('hide');
        $(window).trigger("dropdown.closed");
        return false;
    };

    function clearPostSimpleForm(form) {
        PostSimpleFormClearTextInputs(form);
        PostSimpleFormRemoveErrors(form);
        PostSimpleFormShowFormChildren(form);
    }

    function addSelectedServicesInfo(selectedServices) {
        var count = 0,
            servicesText = '',
            isPriceFrom = false,
            totalPrice = 0,
            servicesTitles = '';
        if (!selectedServices) {
            feedbackLightbox.find('[data-title=""]').html('Отправить заявку');
            return;
        }
        $.each(selectedServices, function (key, value) {
            count++;
            isPriceFrom = isPriceFrom || value.isPriceFrom;
            totalPrice += value.price;
            servicesText += getServiceText(key, value.price, value.isPriceFrom);
            servicesTitles += key + '<br/>';
        });
        if (count == 0) {
            feedbackLightbox.find('[data-title=""]').html('Отправить заявку');
            return;
        }
        feedbackLightbox.find('.js-services-text-hidden').val(servicesTitles);
        feedbackLightbox.find('[data-title=""]').html('Вы выбрали:');
        var totalPriceText = count > 1 ? getTotalPriceText(totalPrice, isPriceFrom) : '';
        var headerText = getHeader();
        var firstRow = feedbackLightbox.find('.js-first-empty-row').first();
        firstRow.html(servicesText + totalPriceText + headerText);
    }

    function clearSelectedServicesInfo() {
        var firstRow = feedbackLightbox.find('.js-first-empty-row').first();
        firstRow.html('');
    }

    function getServiceText(service, price, isPriceFrom) {
        var prefix = isPriceFrom ? 'от&nbsp;' : '',
            priceText = price > 0 ? '<span class="service-item-modal-price">' + prefix + price + '<span class="konturIconic konturIconic-ruble"></span></span>' : '';
        return '<div class="service-item-modal">' + service + priceText + '</div>';
    }

    function getTotalPriceText(totalPrice, isPriceFrom) {
        if (totalPrice == 0) return '';
        var prefix = isPriceFrom ? 'от&nbsp;' : '';
        return '<div class="tariff-total">Сумма по выбранным услугам: <span class="service-item-modal-price">' + prefix + totalPrice + '<span class="konturIconic konturIconic-ruble"></span></span></div>';
    }

    function getHeader() {
        return '<div class="h2 modal-title">Отправить заявку</div>';
    }

    me.initialize = function () {
        feedbackLightbox = $('#feedbackLightbox');
        feedbackForm = feedbackLightbox.find('form');

        $(window.document).on('click', '[data-bind="feedbackLink"]', showFeedbackLightbox);
    };
}, [jQuery, Kontur.Global]);
Kontur.Module('Kontur.CallRequestLightbox', function ($, global) {
    var me = this,
        window = global.get(),
        lightboxBlockOriginal,
        callBackSuccessLightBox,
        callbackSuccessLightBoxSubmittedPhoneContainer;

    function showCallRequestLightbox() {
        var lightboxBlock = lightboxBlockOriginal.clone(),
            lightboxForm = lightboxBlock.find('form'),
            preloader = lightboxForm.find('.form-preloader'),
            lightboxClose = lightboxBlock.find('.js-closeLightbox'),
            successFooter = lightboxBlock.find('.js-successModalFooter'),
            submitButton = lightboxBlock.find('.js-callrequest-submit-button'),
            phoneInput = lightboxBlock.find('.callbackFormPhoneInput');
        lightboxBlock.lightbox({
            wrapperStyle: {
                width: '610px'
            },
            bottomPanelVisibility: false,
            create: function create() {
                InitPostSimpleFormAsync(lightboxForm, {
                    clearTextInputsOnSuccess: false,
                    successCallback: function successCallback() {
                        callbackSuccessLightBoxSubmittedPhoneContainer.html(phoneInput.val());
                        callBackSuccessLightBox.lightbox({ bottomPanelVisibility: false });
                    },
                    ajaxOnSubmitCallback: function ajaxOnSubmitCallback() {
                        preloader.show();
                        submitButton.attr('disabled', 'disabled').hide();
                        lightboxClose.hide();
                    },
                    completeCallback: function completeCallback() {
                        preloader.hide();
                        submitButton.removeAttr('disabled').show();
                        lightboxClose.show();
                    },
                    timeout: 30000
                });
            },
            beforeOpen: function beforeOpen() {
                successFooter.hide();
            }
        });
        lightboxBlock.removeClass('hide');
        $(window).trigger("dropdown.closed");
        return false;
    };

    me.initialize = function () {
        lightboxBlockOriginal = $('#callRequestLightbox');
        $(window.document).on('click', '[data-bind="callRequestLink"]', showCallRequestLightbox);
        callBackSuccessLightBox = $('#callBackSuccessLightbox');
        callbackSuccessLightBoxSubmittedPhoneContainer = callBackSuccessLightBox.find('[data-submitted-phone]');
        callBackSuccessLightBox.find('[data-send-another-order]').click(showCallRequestLightbox);
    };
}, [jQuery, Kontur.Global]);
/*!
 * Bootstrap v3.2.0 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&&e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.2.0",d.prototype.close=function(b){function c(){f.detach().trigger("closed.bs.alert").remove()}var d=a(this),e=d.attr("data-target");e||(e=d.attr("href"),e=e&&e.replace(/.*(?=#[^\s]*$)/,""));var f=a(e);b&&b.preventDefault(),f.length||(f=d.hasClass("alert")?d:d.parent()),f.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",c).emulateTransitionEnd(150):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&&b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.2.0",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&&d.data("resetText",d[e]()),d[e](null==f[b]?this.options[b]:f[b]),setTimeout(a.proxy(function(){"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")&&(c.prop("checked")&&this.$element.hasClass("active")?a=!1:b.find(".active").removeClass("active")),a&&c.prop("checked",!this.$element.hasClass("active")).trigger("change")}a&&this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target);d.hasClass("btn")||(d=d.closest(".btn")),b.call(d,"toggle"),c.preventDefault()})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b).on("keydown.bs.carousel",a.proxy(this.keydown,this)),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.2.0",c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},c.prototype.keydown=function(a){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.to=function(b){var c=this,d=this.getItemIndex(this.$active=this.$element.find(".item.active"));return b>this.$items.length-1||0>b?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){c.to(b)}):d==b?this.pause().cycle():this.slide(b>d?"next":"prev",a(this.$items[b]))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(b,c){var d=this.$element.find(".item.active"),e=c||d[b](),f=this.interval,g="next"==b?"left":"right",h="next"==b?"first":"last",i=this;if(!e.length){if(!this.options.wrap)return;e=this.$element.find(".item")[h]()}if(e.hasClass("active"))return this.sliding=!1;var j=e[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:g});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,f&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(e)]);l&&l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:g});return a.support.transition&&this.$element.hasClass("slide")?(e.addClass(b),e[0].offsetWidth,d.addClass(g),e.addClass(g),d.one("bsTransitionEnd",function(){e.removeClass([b,g].join(" ")).addClass("active"),d.removeClass(["active",g].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(1e3*d.css("transition-duration").slice(0,-1))):(d.removeClass("active"),e.addClass("active"),this.sliding=!1,this.$element.trigger(m)),f&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this},a(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&&(g.interval=!1),b.call(f,g),h&&f.data("bs.carousel").to(h),c.preventDefault()}}),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.collapse"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b);!e&&f.toggle&&"show"==b&&(b=!b),e||d.data("bs.collapse",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.transitioning=null,this.options.parent&&(this.$parent=a(this.options.parent)),this.options.toggle&&this.toggle()};c.VERSION="3.2.0",c.DEFAULTS={toggle:!0},c.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},c.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var c=a.Event("show.bs.collapse");if(this.$element.trigger(c),!c.isDefaultPrevented()){var d=this.$parent&&this.$parent.find("> .panel > .in");if(d&&d.length){var e=d.data("bs.collapse");if(e&&e.transitioning)return;b.call(d,"hide"),e||d.data("bs.collapse",null)}var f=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[f](0),this.transitioning=1;var g=function(){this.$element.removeClass("collapsing").addClass("collapse in")[f](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return g.call(this);var h=a.camelCase(["scroll",f].join("-"));this.$element.one("bsTransitionEnd",a.proxy(g,this)).emulateTransitionEnd(350)[f](this.$element[0][h])}}},c.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var d=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(d,this)).emulateTransitionEnd(350):d.call(this)}}},c.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var d=a.fn.collapse;a.fn.collapse=b,a.fn.collapse.Constructor=c,a.fn.collapse.noConflict=function(){return a.fn.collapse=d,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(c){var d,e=a(this),f=e.attr("data-target")||c.preventDefault()||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""),g=a(f),h=g.data("bs.collapse"),i=h?"toggle":e.data(),j=e.attr("data-parent"),k=j&&a(j);h&&h.transitioning||(k&&k.find('[data-toggle="collapse"][data-parent="'+j+'"]').not(e).addClass("collapsed"),e[g.hasClass("in")?"addClass":"removeClass"]("collapsed")),b.call(g,i)})}(jQuery),+function(a){"use strict";function b(b){b&&3===b.which||(a(e).remove(),a(f).each(function(){var d=c(a(this)),e={relatedTarget:this};d.hasClass("open")&&(d.trigger(b=a.Event("hide.bs.dropdown",e)),b.isDefaultPrevented()||d.removeClass("open").trigger("hidden.bs.dropdown",e))}))}function c(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&&d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.2.0",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=c(e),g=f.hasClass("open");if(b(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click",b);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus"),f.toggleClass("open").trigger("shown.bs.dropdown",h)}return!1}},g.prototype.keydown=function(b){if(/(38|40|27)/.test(b.keyCode)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(".disabled, :disabled")){var e=c(d),g=e.hasClass("open");if(!g||g&&27==b.keyCode)return 27==b.which&&e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.divider):visible a",i=e.find('[role="menu"]'+h+', [role="listbox"]'+h);if(i.length){var j=i.index(i.filter(":focus"));38==b.keyCode&&j>0&&j--,40==b.keyCode&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",b).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f+', [role="menu"], [role="listbox"]',g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&&b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.2.0",c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var c=this,d=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(d),this.isShown||d.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass("modal-open"),this.setScrollbar(),this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.backdrop(function(){var d=a.support.transition&&c.$element.hasClass("fade");c.$element.parent().length||c.$element.appendTo(c.$body),c.$element.show().scrollTop(0),d&&c.$element[0].offsetWidth,c.$element.addClass("in").attr("aria-hidden",!1),c.enforceFocus();var e=a.Event("shown.bs.modal",{relatedTarget:b});d?c.$element.find(".modal-dialog").one("bsTransitionEnd",function(){c.$element.trigger("focus").trigger(e)}).emulateTransitionEnd(300):c.$element.trigger("focus").trigger(e)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.$body.removeClass("modal-open"),this.resetScrollbar(),this.escape(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var c=this,d=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var e=a.support.transition&&d;if(this.$backdrop=a('<div class="modal-backdrop '+d+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),e&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;e?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(150):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var f=function(){c.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",f).emulateTransitionEnd(150):f()}else b&&b()},c.prototype.checkScrollbar=function(){document.body.clientWidth>=window.innerWidth||(this.scrollbarWidth=this.scrollbarWidth||this.measureScrollbar())},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&&e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is("a")&&c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&&d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&&b;(e||"destroy"!=b)&&(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",a,b)};c.VERSION="3.2.0",c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(this.options.viewport.selector||this.options.viewport);for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show()},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var c=a.contains(document.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!c)return;var d=this,e=this.tip(),f=this.getUID(this.type);this.setContent(),e.attr("id",f),this.$element.attr("aria-describedby",f),this.options.animation&&e.addClass("fade");var g="function"==typeof this.options.placement?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,h=/\s?auto?\s?/i,i=h.test(g);i&&(g=g.replace(h,"")||"top"),e.detach().css({top:0,left:0,display:"block"}).addClass(g).data("bs."+this.type,this),this.options.container?e.appendTo(this.options.container):e.insertAfter(this.$element);var j=this.getPosition(),k=e[0].offsetWidth,l=e[0].offsetHeight;if(i){var m=g,n=this.$element.parent(),o=this.getPosition(n);g="bottom"==g&&j.top+j.height+l-o.scroll>o.height?"top":"top"==g&&j.top-o.scroll-l<0?"bottom":"right"==g&&j.right+k>o.width?"left":"left"==g&&j.left-k<o.left?"right":g,e.removeClass(m).addClass(g)}var p=this.getCalculatedOffset(g,j,k,l);this.applyPlacement(p,g);var q=function(){d.$element.trigger("shown.bs."+d.type),d.hoverState=null};a.support.transition&&this.$tip.hasClass("fade")?e.one("bsTransitionEnd",q).emulateTransitionEnd(150):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top=b.top+g,b.left=b.left+h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=k.left?2*k.left-e+i:2*k.top-f+j,m=k.left?"left":"top",n=k.left?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(l,d[0][n],m)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c,a?50*(1-a/b)+"%":"")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(){function b(){"in"!=c.hoverState&&d.detach(),c.$element.trigger("hidden.bs."+c.type)}var c=this,d=this.tip(),e=a.Event("hide.bs."+this.type);return this.$element.removeAttr("aria-describedby"),this.$element.trigger(e),e.isDefaultPrevented()?void 0:(d.removeClass("in"),a.support.transition&&this.$tip.hasClass("fade")?d.one("bsTransitionEnd",b).emulateTransitionEnd(150):b(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName;return a.extend({},"function"==typeof c.getBoundingClientRect?c.getBoundingClientRect():null,{scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop(),width:d?a(window).width():b.outerWidth(),height:d?a(window).height():b.outerHeight()},d?{top:0,left:0}:b.offset())},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.width&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&&b;(e||"destroy"!=b)&&(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.2.0",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").empty()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},c.prototype.tip=function(){return this.$tip||(this.$tip=a(this.options.template)),this.$tip};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){var e=a.proxy(this.process,this);this.$body=a("body"),this.$scrollElement=a(a(c).is("body")?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",e),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})}b.VERSION="3.2.0",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b="offset",c=0;a.isWindow(this.$scrollElement[0])||(b="position",c=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var d=this;this.$body.find(this.selector).map(function(){var d=a(this),e=d.data("target")||d.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[b]().top+c,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){d.offsets.push(this[0]),d.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<=e[0])return g!=(a=f[0])&&this.activate(a);for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(!e[a+1]||b<=e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,a(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.2.0",c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a")[0],f=a.Event("show.bs.tab",{relatedTarget:e});if(b.trigger(f),!f.isDefaultPrevented()){var g=a(d);this.activate(b.closest("li"),c),this.activate(g,g.parent(),function(){b.trigger({type:"shown.bs.tab",relatedTarget:e})})}}},c.prototype.activate=function(b,c,d){function e(){f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),b.addClass("active"),g?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu")&&b.closest("li.dropdown").addClass("active"),d&&d()}var f=c.find("> .active"),g=d&&a.support.transition&&f.hasClass("fade");g?f.one("bsTransitionEnd",e).emulateTransitionEnd(150):e(),f.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this},a(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(c){c.preventDefault(),b.call(a(this),"show")})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&&b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.2.0",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=a(document).height(),d=this.$target.scrollTop(),e=this.$element.offset(),f=this.options.offset,g=f.top,h=f.bottom;"object"!=typeof f&&(h=g=f),"function"==typeof g&&(g=f.top(this.$element)),"function"==typeof h&&(h=f.bottom(this.$element));var i=null!=this.unpin&&d+this.unpin<=e.top?!1:null!=h&&e.top+this.$element.height()>=b-h?"bottom":null!=g&&g>=d?"top":!1;if(this.affixed!==i){null!=this.unpin&&this.$element.css("top","");var j="affix"+(i?"-"+i:""),k=a.Event(j+".bs.affix");this.$element.trigger(k),k.isDefaultPrevented()||(this.affixed=i,this.unpin="bottom"==i?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(j).trigger(a.Event(j.replace("affix","affixed"))),"bottom"==i&&this.$element.offset({top:b-this.$element.height()-h}))}}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},d.offsetBottom&&(d.offset.bottom=d.offsetBottom),d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+function ($) {
    'use strict';

    // TOOLTIP PUBLIC CLASS DEFINITION
    // ===============================

    var Tooltip = function Tooltip(element, options) {
        this.type = null;
        this.options = null;
        this.enabled = null;
        this.timeout = null;
        this.hoverState = null;
        this.$element = null;
        this.inState = null;

        this.init('tooltip', element, options);
    };

    Tooltip.VERSION = '3.3.7';

    Tooltip.TRANSITION_DURATION = 150;

    Tooltip.DEFAULTS = {
        animation: true,
        placement: 'top',
        selector: false,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: 'hover focus',
        title: '',
        delay: 0,
        html: false,
        container: false,
        viewport: {
            selector: 'body',
            padding: 0
        }
    };

    Tooltip.prototype.init = function (type, element, options) {
        this.enabled = true;
        this.type = type;
        this.$element = $(element);
        this.options = this.getOptions(options);
        this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);
        this.inState = { click: false, hover: false, focus: false };

        if (this.$element[0] instanceof document.constructor && !this.options.selector) {
            throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');
        }

        var triggers = this.options.trigger.split(' ');

        for (var i = triggers.length; i--;) {
            var trigger = triggers[i];

            if (trigger == 'click') {
                this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));
            } else if (trigger != 'manual') {
                var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
                var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

                this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));
                this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));
            }
        }

        this.options.selector ? this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' }) : this.fixTitle();
    };

    Tooltip.prototype.getDefaults = function () {
        return Tooltip.DEFAULTS;
    };

    Tooltip.prototype.getOptions = function (options) {
        options = $.extend({}, this.getDefaults(), this.$element.data(), options);

        if (options.delay && typeof options.delay == 'number') {
            options.delay = {
                show: options.delay,
                hide: options.delay
            };
        }

        return options;
    };

    Tooltip.prototype.getDelegateOptions = function () {
        var options = {};
        var defaults = this.getDefaults();

        this._options && $.each(this._options, function (key, value) {
            if (defaults[key] != value) options[key] = value;
        });

        return options;
    };

    Tooltip.prototype.enter = function (obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

        if (!self) {
            self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
            $(obj.currentTarget).data('bs.' + this.type, self);
        }

        if (obj instanceof $.Event) {
            self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true;
        }

        if (self.tip().hasClass('in') || self.hoverState == 'in') {
            self.hoverState = 'in';
            return;
        }

        clearTimeout(self.timeout);

        self.hoverState = 'in';

        if (!self.options.delay || !self.options.delay.show) return self.show();

        self.timeout = setTimeout(function () {
            if (self.hoverState == 'in') self.show();
        }, self.options.delay.show);
    };

    Tooltip.prototype.isInStateTrue = function () {
        for (var key in this.inState) {
            if (this.inState[key]) return true;
        }

        return false;
    };

    Tooltip.prototype.leave = function (obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

        if (!self) {
            self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
            $(obj.currentTarget).data('bs.' + this.type, self);
        }

        if (obj instanceof $.Event) {
            self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false;
        }

        if (self.isInStateTrue()) return;

        clearTimeout(self.timeout);

        self.hoverState = 'out';

        if (!self.options.delay || !self.options.delay.hide) return self.hide();

        self.timeout = setTimeout(function () {
            if (self.hoverState == 'out') self.hide();
        }, self.options.delay.hide);
    };

    Tooltip.prototype.show = function () {
        var e = $.Event('show.bs.' + this.type);

        if (this.hasContent() && this.enabled) {
            this.$element.trigger(e);

            var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
            if (e.isDefaultPrevented() || !inDom) return;
            var that = this;

            var $tip = this.tip();

            var tipId = this.getUID(this.type);

            this.setContent();
            $tip.attr('id', tipId);
            this.$element.attr('aria-describedby', tipId);

            if (this.options.animation) $tip.addClass('fade');

            var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;

            var autoToken = /\s?auto?\s?/i;
            var autoPlace = autoToken.test(placement);
            if (autoPlace) placement = placement.replace(autoToken, '') || 'top';

            $tip.detach().css({ top: 0, left: 0, display: 'block' }).addClass(placement).data('bs.' + this.type, this);

            this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);
            this.$element.trigger('inserted.bs.' + this.type);

            var pos = this.getPosition();
            var actualWidth = $tip[0].offsetWidth;
            var actualHeight = $tip[0].offsetHeight;

            if (autoPlace) {
                var orgPlacement = placement;
                var viewportDim = this.getPosition(this.$viewport);

                placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top' : placement == 'top' && pos.top - actualHeight < viewportDim.top ? 'bottom' : placement == 'right' && pos.right + actualWidth > viewportDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < viewportDim.left ? 'right' : placement;

                $tip.removeClass(orgPlacement).addClass(placement);
            }

            var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);

            this.applyPlacement(calculatedOffset, placement);

            var complete = function complete() {
                var prevHoverState = that.hoverState;
                that.$element.trigger('shown.bs.' + that.type);
                that.hoverState = null;

                if (prevHoverState == 'out') that.leave(that);
            };

            $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
        }
    };

    Tooltip.prototype.applyPlacement = function (offset, placement) {
        var $tip = this.tip();
        var width = $tip[0].offsetWidth;
        var height = $tip[0].offsetHeight;

        // manually read margins because getBoundingClientRect includes difference
        var marginTop = parseInt($tip.css('margin-top'), 10);
        var marginLeft = parseInt($tip.css('margin-left'), 10);

        // we must check for NaN for ie 8/9
        if (isNaN(marginTop)) marginTop = 0;
        if (isNaN(marginLeft)) marginLeft = 0;

        offset.top += marginTop;
        offset.left += marginLeft;

        // $.fn.offset doesn't round pixel values
        // so we use setOffset directly with our own function B-0
        $.offset.setOffset($tip[0], $.extend({
            using: function using(props) {
                $tip.css({
                    top: Math.round(props.top),
                    left: Math.round(props.left)
                });
            }
        }, offset), 0);

        $tip.addClass('in');

        // check to see if placing tip in new offset caused the tip to resize itself
        var actualWidth = $tip[0].offsetWidth;
        var actualHeight = $tip[0].offsetHeight;

        if (placement == 'top' && actualHeight != height) {
            offset.top = offset.top + height - actualHeight;
        }

        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);

        if (delta.left) {
            $tip.width($tip.width() + delta.left);
        } else {
            $tip.height($tip.height() + delta.top);
        }

        var isVertical = /top|bottom/.test(placement);
        var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;
        var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';

        $tip.offset(offset);
        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);
    };

    Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
        this.arrow().css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%').css(isVertical ? 'top' : 'left', '');
    };

    Tooltip.prototype.setContent = function () {
        var $tip = this.tip();
        var title = this.getTitle();

        $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);
        $tip.removeClass('fade in top bottom left right');
    };

    Tooltip.prototype.hide = function (callback) {
        var that = this;
        var $tip = $(this.$tip);
        var e = $.Event('hide.bs.' + this.type);

        function complete() {
            if (that.hoverState != 'in') $tip.detach();
            if (that.$element) {
                // TODO: Check whether guarding this code with this `if` is really necessary.
                that.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + that.type);
            }
            callback && callback();
        }

        this.$element.trigger(e);

        if (e.isDefaultPrevented()) return;

        $tip.removeClass('in');

        $.support.transition && $tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();

        this.hoverState = null;

        return this;
    };

    Tooltip.prototype.fixTitle = function () {
        var $e = this.$element;
        if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
            $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');
        }
    };

    Tooltip.prototype.hasContent = function () {
        return this.getTitle();
    };

    Tooltip.prototype.getPosition = function ($element) {
        $element = $element || this.$element;

        var el = $element[0];
        var isBody = el.tagName == 'BODY';

        var elRect = el.getBoundingClientRect();
        if (elRect.width == null) {
            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
            elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top });
        }
        var isSvg = window.SVGElement && el instanceof window.SVGElement;
        // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
        // See https://github.com/twbs/bootstrap/issues/20280
        var elOffset = isBody ? { top: 0, left: 0 } : isSvg ? null : $element.offset();
        var scroll = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() };
        var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null;

        return $.extend({}, elRect, scroll, outerDims, elOffset);
    };

    Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
        return placement == 'bottom' ? { top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'top' ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'left' ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */{ top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width };
    };

    Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
        var delta = { top: 0, left: 0 };
        if (!this.$viewport) return delta;

        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;
        var viewportDimensions = this.getPosition(this.$viewport);

        if (/top|bottom/.test(placement)) {
            var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;
            var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;
            if (topEdgeOffset < viewportDimensions.top) {
                // top overflow
                delta.top = viewportDimensions.top - topEdgeOffset;
            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {
                // bottom overflow
                delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;
            }
        } else {
            var leftEdgeOffset = pos.left - viewportPadding;
            var rightEdgeOffset = pos.left + viewportPadding + actualWidth;
            console.log(rightEdgeOffset, leftEdgeOffset);
            if (leftEdgeOffset < viewportDimensions.left) {
                // left overflow
                delta.left = viewportDimensions.left - leftEdgeOffset;
            } else if (rightEdgeOffset > viewportDimensions.right) {
                // right overflow
                delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;
            }
        }

        return delta;
    };

    Tooltip.prototype.getTitle = function () {
        var title;
        var $e = this.$element;
        var o = this.options;

        title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);

        return title;
    };

    Tooltip.prototype.getUID = function (prefix) {
        do {
            prefix += ~~(Math.random() * 1000000);
        } while (document.getElementById(prefix));
        return prefix;
    };

    Tooltip.prototype.tip = function () {
        if (!this.$tip) {
            this.$tip = $(this.options.template);
            if (this.$tip.length != 1) {
                throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');
            }
        }
        return this.$tip;
    };

    Tooltip.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
    };

    Tooltip.prototype.enable = function () {
        this.enabled = true;
    };

    Tooltip.prototype.disable = function () {
        this.enabled = false;
    };

    Tooltip.prototype.toggleEnabled = function () {
        this.enabled = !this.enabled;
    };

    Tooltip.prototype.toggle = function (e) {
        var self = this;
        if (e) {
            self = $(e.currentTarget).data('bs.' + this.type);
            if (!self) {
                self = new this.constructor(e.currentTarget, this.getDelegateOptions());
                $(e.currentTarget).data('bs.' + this.type, self);
            }
        }

        if (e) {
            self.inState.click = !self.inState.click;
            if (self.isInStateTrue()) self.enter(self);else self.leave(self);
        } else {
            self.tip().hasClass('in') ? self.leave(self) : self.enter(self);
        }
    };

    Tooltip.prototype.destroy = function () {
        var that = this;
        clearTimeout(this.timeout);
        this.hide(function () {
            that.$element.off('.' + that.type).removeData('bs.' + that.type);
            if (that.$tip) {
                that.$tip.detach();
            }
            that.$tip = null;
            that.$arrow = null;
            that.$viewport = null;
            that.$element = null;
        });
    };

    // TOOLTIP PLUGIN DEFINITION
    // =========================

    function Plugin(option) {
        return this.each(function () {
            var $this = $(this);
            var data = $this.data('bs.tooltip');
            var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;

            if (!data && /destroy|hide/.test(option)) return;
            if (!data) $this.data('bs.tooltip', data = new Tooltip(this, options));
            if (typeof option == 'string') data[option]();
        });
    }

    var old = $.fn.tooltip;

    $.fn.tooltip = Plugin;
    $.fn.tooltip.Constructor = Tooltip;

    // TOOLTIP NO CONFLICT
    // ===================

    $.fn.tooltip.noConflict = function () {
        $.fn.tooltip = old;
        return this;
    };
}(jQuery);
/*! WOW - v1.0.3 - 2015-01-14
* Copyright (c) 2015 Matthieu Aussaguel; Licensed MIT */(function(){var a,b,c,d,e,f=function(a,b){return function(){return a.apply(b,arguments)}},g=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=function(){function a(){}return a.prototype.extend=function(a,b){var c,d;for(c in b)d=b[c],null==a[c]&&(a[c]=d);return a},a.prototype.isMobile=function(a){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a)},a.prototype.addEvent=function(a,b,c){return null!=a.addEventListener?a.addEventListener(b,c,!1):null!=a.attachEvent?a.attachEvent("on"+b,c):a[b]=c},a.prototype.removeEvent=function(a,b,c){return null!=a.removeEventListener?a.removeEventListener(b,c,!1):null!=a.detachEvent?a.detachEvent("on"+b,c):delete a[b]},a.prototype.innerHeight=function(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight},a}(),c=this.WeakMap||this.MozWeakMap||(c=function(){function a(){this.keys=[],this.values=[]}return a.prototype.get=function(a){var b,c,d,e,f;for(f=this.keys,b=d=0,e=f.length;e>d;b=++d)if(c=f[b],c===a)return this.values[b]},a.prototype.set=function(a,b){var c,d,e,f,g;for(g=this.keys,c=e=0,f=g.length;f>e;c=++e)if(d=g[c],d===a)return void(this.values[c]=b);return this.keys.push(a),this.values.push(b)},a}()),a=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver||(a=function(){function a(){"undefined"!=typeof console&&null!==console&&console.warn("MutationObserver is not supported by your browser."),"undefined"!=typeof console&&null!==console&&console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")}return a.notSupported=!0,a.prototype.observe=function(){},a}()),d=this.getComputedStyle||function(a){return this.getPropertyValue=function(b){var c;return"float"===b&&(b="styleFloat"),e.test(b)&&b.replace(e,function(a,b){return b.toUpperCase()}),(null!=(c=a.currentStyle)?c[b]:void 0)||null},this},e=/(\-([a-z]){1})/g,this.WOW=function(){function e(a){null==a&&(a={}),this.scrollCallback=f(this.scrollCallback,this),this.scrollHandler=f(this.scrollHandler,this),this.start=f(this.start,this),this.scrolled=!0,this.config=this.util().extend(a,this.defaults),this.animationNameCache=new c}return e.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null},e.prototype.init=function(){var a;return this.element=window.document.documentElement,"interactive"===(a=document.readyState)||"complete"===a?this.start():this.util().addEvent(document,"DOMContentLoaded",this.start),this.finished=[]},e.prototype.start=function(){var b,c,d,e;if(this.stopped=!1,this.boxes=function(){var a,c,d,e;for(d=this.element.querySelectorAll("."+this.config.boxClass),e=[],a=0,c=d.length;c>a;a++)b=d[a],e.push(b);return e}.call(this),this.all=function(){var a,c,d,e;for(d=this.boxes,e=[],a=0,c=d.length;c>a;a++)b=d[a],e.push(b);return e}.call(this),this.boxes.length)if(this.disabled())this.resetStyle();else for(e=this.boxes,c=0,d=e.length;d>c;c++)b=e[c],this.applyStyle(b,!0);return this.disabled()||(this.util().addEvent(window,"scroll",this.scrollHandler),this.util().addEvent(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live?new a(function(a){return function(b){var c,d,e,f,g;for(g=[],e=0,f=b.length;f>e;e++)d=b[e],g.push(function(){var a,b,e,f;for(e=d.addedNodes||[],f=[],a=0,b=e.length;b>a;a++)c=e[a],f.push(this.doSync(c));return f}.call(a));return g}}(this)).observe(document.body,{childList:!0,subtree:!0}):void 0},e.prototype.stop=function(){return this.stopped=!0,this.util().removeEvent(window,"scroll",this.scrollHandler),this.util().removeEvent(window,"resize",this.scrollHandler),null!=this.interval?clearInterval(this.interval):void 0},e.prototype.sync=function(){return a.notSupported?this.doSync(this.element):void 0},e.prototype.doSync=function(a){var b,c,d,e,f;if(null==a&&(a=this.element),1===a.nodeType){for(a=a.parentNode||a,e=a.querySelectorAll("."+this.config.boxClass),f=[],c=0,d=e.length;d>c;c++)b=e[c],g.call(this.all,b)<0?(this.boxes.push(b),this.all.push(b),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(b,!0),f.push(this.scrolled=!0)):f.push(void 0);return f}},e.prototype.show=function(a){return this.applyStyle(a),a.className=""+a.className+" "+this.config.animateClass,null!=this.config.callback?this.config.callback(a):void 0},e.prototype.applyStyle=function(a,b){var c,d,e;return d=a.getAttribute("data-wow-duration"),c=a.getAttribute("data-wow-delay"),e=a.getAttribute("data-wow-iteration"),this.animate(function(f){return function(){return f.customStyle(a,b,d,c,e)}}(this))},e.prototype.animate=function(){return"requestAnimationFrame"in window?function(a){return window.requestAnimationFrame(a)}:function(a){return a()}}(),e.prototype.resetStyle=function(){var a,b,c,d,e;for(d=this.boxes,e=[],b=0,c=d.length;c>b;b++)a=d[b],e.push(a.style.visibility="visible");return e},e.prototype.customStyle=function(a,b,c,d,e){return b&&this.cacheAnimationName(a),a.style.visibility=b?"hidden":"visible",c&&this.vendorSet(a.style,{animationDuration:c}),d&&this.vendorSet(a.style,{animationDelay:d}),e&&this.vendorSet(a.style,{animationIterationCount:e}),this.vendorSet(a.style,{animationName:b?"none":this.cachedAnimationName(a)}),a},e.prototype.vendors=["moz","webkit"],e.prototype.vendorSet=function(a,b){var c,d,e,f;f=[];for(c in b)d=b[c],a[""+c]=d,f.push(function(){var b,f,g,h;for(g=this.vendors,h=[],b=0,f=g.length;f>b;b++)e=g[b],h.push(a[""+e+c.charAt(0).toUpperCase()+c.substr(1)]=d);return h}.call(this));return f},e.prototype.vendorCSS=function(a,b){var c,e,f,g,h,i;for(e=d(a),c=e.getPropertyCSSValue(b),i=this.vendors,g=0,h=i.length;h>g;g++)f=i[g],c=c||e.getPropertyCSSValue("-"+f+"-"+b);return c},e.prototype.animationName=function(a){var b;try{b=this.vendorCSS(a,"animation-name").cssText}catch(c){b=d(a).getPropertyValue("animation-name")}return"none"===b?"":b},e.prototype.cacheAnimationName=function(a){return this.animationNameCache.set(a,this.animationName(a))},e.prototype.cachedAnimationName=function(a){return this.animationNameCache.get(a)},e.prototype.scrollHandler=function(){return this.scrolled=!0},e.prototype.scrollCallback=function(){var a;return!this.scrolled||(this.scrolled=!1,this.boxes=function(){var b,c,d,e;for(d=this.boxes,e=[],b=0,c=d.length;c>b;b++)a=d[b],a&&(this.isVisible(a)?this.show(a):e.push(a));return e}.call(this),this.boxes.length||this.config.live)?void 0:this.stop()},e.prototype.offsetTop=function(a){for(var b;void 0===a.offsetTop;)a=a.parentNode;for(b=a.offsetTop;a=a.offsetParent;)b+=a.offsetTop;return b},e.prototype.isVisible=function(a){var b,c,d,e,f;return c=a.getAttribute("data-wow-offset")||this.config.offset,f=window.pageYOffset,e=f+Math.min(this.element.clientHeight,this.util().innerHeight())-c,d=this.offsetTop(a),b=d+a.clientHeight,e>=d&&b>=f},e.prototype.util=function(){return null!=this._util?this._util:this._util=new b},e.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},e}()}).call(this);
function isIE() {
    var myNav = navigator.userAgent.toLowerCase();
    return myNav.indexOf('msie') != -1 ? parseInt(myNav.split('msie')[1]) : false;
}

$(function () {
    Kontur.FeedbackLightbox.initialize();
    Kontur.CallRequestLightbox.initialize();
    new WOW().init();
});
/*
    Masked Input plugin for jQuery
    Copyright (c) 2007-2009 Josh Bush (digitalbush.com)
    Licensed under the MIT license (http://digitalbush.com/projects/masked-input-plugin/#license) 
    Version: 1.2.2 (03/09/2009 22:39:06)
*/
(function(a){var c=(a.browser.msie?"paste":"input")+".mask";var b=(window.orientation!=undefined);a.mask={definitions:{"9":"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"}};a.fn.extend({caret:function(e,f){if(this.length==0){return}if(typeof e=="number"){f=(typeof f=="number")?f:e;return this.each(function(){if(this.setSelectionRange){this.focus();this.setSelectionRange(e,f)}else{if(this.createTextRange){var g=this.createTextRange();g.collapse(true);g.moveEnd("character",f);g.moveStart("character",e);g.select()}}})}else{if(this[0].setSelectionRange){e=this[0].selectionStart;f=this[0].selectionEnd}else{if(document.selection&&document.selection.createRange){var d=document.selection.createRange();e=0-d.duplicate().moveStart("character",-100000);f=e+d.text.length}}return{begin:e,end:f}}},unmask:function(){return this.trigger("unmask")},mask:function(j,d){if(!j&&this.length>0){var f=a(this[0]);var g=f.data("tests");return a.map(f.data("buffer"),function(l,m){return g[m]?l:null}).join("")}d=a.extend({placeholder:"_",completed:null},d);var k=a.mask.definitions;var g=[];var e=j.length;var i=null;var h=j.length;a.each(j.split(""),function(m,l){if(l=="?"){h--;e=m}else{if(k[l]){g.push(new RegExp(k[l]));if(i==null){i=g.length-1}}else{g.push(null)}}});return this.each(function(){var r=a(this);var m=a.map(j.split(""),function(x,y){if(x!="?"){return k[x]?d.placeholder:x}});var n=false;var q=r.val();r.data("buffer",m).data("tests",g);function v(x){while(++x<=h&&!g[x]){}return x}function t(x){while(!g[x]&&--x>=0){}for(var y=x;y<h;y++){if(g[y]){m[y]=d.placeholder;var z=v(y);if(z<h&&g[y].test(m[z])){m[y]=m[z]}else{break}}}s();r.caret(Math.max(i,x))}function u(y){for(var A=y,z=d.placeholder;A<h;A++){if(g[A]){var B=v(A);var x=m[A];m[A]=z;if(B<h&&g[B].test(x)){z=x}else{break}}}}function l(y){var x=a(this).caret();var z=y.keyCode;n=(z<16||(z>16&&z<32)||(z>32&&z<41));if((x.begin-x.end)!=0&&(!n||z==8||z==46)){w(x.begin,x.end)}if(z==8||z==46||(b&&z==127)){t(x.begin+(z==46?0:-1));return false}else{if(z==27){r.val(q);r.caret(0,p());return false}}}function o(B){if(n){n=false;return(B.keyCode==8)?false:null}B=B||window.event;var C=B.charCode||B.keyCode||B.which;var z=a(this).caret();if(B.ctrlKey||B.altKey||B.metaKey){return true}else{if((C>=32&&C<=125)||C>186){var x=v(z.begin-1);if(x<h){var A=String.fromCharCode(C);if(g[x].test(A)){u(x);m[x]=A;s();var y=v(x);a(this).caret(y);if(d.completed&&y==h){d.completed.call(r)}}}}}return false}function w(x,y){for(var z=x;z<y&&z<h;z++){if(g[z]){m[z]=d.placeholder}}}function s(){return r.val(m.join("")).val()}function p(y){var z=r.val();var C=-1;for(var B=0,x=0;B<h;B++){if(g[B]){m[B]=d.placeholder;while(x++<z.length){var A=z.charAt(x-1);if(g[B].test(A)){m[B]=A;C=B;break}}if(x>z.length){break}}else{if(m[B]==z[x]&&B!=e){x++;C=B}}}if(!y&&C+1<e){r.val("");w(0,h)}else{if(y||C+1>=e){s();if(!y){r.val(r.val().substring(0,C+1))}}}return(e?B:i)}if(!r.attr("readonly")){r.one("unmask",function(){r.unbind(".mask").removeData("buffer").removeData("tests")}).bind("focus.mask",function(){q=r.val();var x=p();s();setTimeout(function(){if(x==j.length){r.caret(0,x)}else{r.caret(x)}},0)}).bind("blur.mask",function(){p();if(r.val()!=q){r.change()}}).bind("keydown.mask",l).bind("keypress.mask",o).bind(c,function(){setTimeout(function(){r.caret(p(true))},0)})}p()})}})})(jQuery);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var popup = {
    div: null,
    show: function show(id, opts, afterAction) {
        opts = opts || {};
        opts.createTemplate = true;
        textLightBox.show(id, opts, afterAction);
    },
    hide: function hide() {
        textLightBox.hide();
    }
};

//light box object
//show(MessageBlock) - create light box
//hide() - destroy light box

var textLightBox = {
    div: null,
    sx: 0,
    sy: 0,
    docwidth: 0,
    show: function show(MessageBlock, opts, afterAction) {
        opts = opts || {};

        opts.centerX = opts.centerX === undefined ? true : opts.centerX;
        opts.centerY = opts.centerY === undefined ? true : opts.centerY;
        div = document.createElement('div');
        if (!(div.msg = document.getElementById(MessageBlock))) return;
        document.body.appendChild(div);
        sx = document.documentElement.scrollLeft;
        sy = document.documentElement.scrollTop;
        document.documentElement.style.overflow = "hidden";

        if (document.documentElement.clientHeight < document.documentElement.scrollHeight) {
            docwidth = document.documentElement.currentStyle ? document.documentElement.currentStyle.width : "100%";
            document.body.style.width = document.documentElement.clientWidth - 17 + "px";
        } else {
            docwidth = 0;
        }
        document.documentElement.scrollLeft = sx;
        document.documentElement.scrollTop = sy;

        div.style.cssText = "width:100%;_width:expression(documentElement.clientWidth);height:100%;_height:expression(documentElement.clientHeight);position:fixed;_position:absolute;z-index:100;left:0;_left:expression(documentElement.scrollLeft);top:0;_top:expression(documentElement.scrollTop);";
        div.appendChild(div.bg = document.createElement('div'));
        div.bg.style.cssText = "width:100%;height:100%;position:absolute;left:0;top:0;background:#000;opacity:0.4;filter:alpha(opacity=40);";
        div.appendChild(div.ifr = document.createElement('iframe'));
        div.ifr.style.cssText = 'width:100%;height:100%;position:absolute;left:0;top:0;filter:alpha(opacity=0);opacity:0';
        div.appendChild(div.scroll = document.createElement('div'));
        div.scroll.style.cssText = "width:100%;height:100%;position:absolute;left:0;top:0;overflow:auto;";
        div.scroll.appendChild(div.rel = document.createElement('div'));
        div.rel.style.cssText = "height:100%;_height:100%;position:relative;";
        div.rel.appendChild(div.table = document.createElement('table'));
        div.td = div.table.insertRow(0).insertCell(0);
        div.table.style.cssText = 'width:100%;_width:expression(documentElement.clientWidth);height:100%;_height:expression(documentElement.clientHeight);position:absolute;left:0;top:0;border-collapse:collapse;border:solid 0;';
        div.td.style.textAlign = opts.centerX ? "center" : "left";
        div.td.style.textAlign = opts.align || "center";

        //костыль для IE8 (что бы прижимал к верху)
        if (!document.all && document.querySelector && document.addEventListener) {
            div.td.style.verticalAlign = opts.centerY ? "middle" : "top";
            div.td.style.verticalAlign = opts.valign || "middle";
        }

        //div.td.style.cssText = "text-align:center;vertical-align:middle;";
        div.appendChild(div.over = document.createElement("div"));
        div.over.style.cssText = "width:100%;height:100%;position:absolute;left:0;top:0px;display:none;";

        div.msgparent = div.msg.parentNode;
        if (opts.createTemplate) {
            div.td.innerHTML = this.getHtml();
            div.td = document.getElementById("LightBoxContent");
        }
        if (opts.DisableClose) {
            $(".in- .close-").hide();
        }
        div.td.appendChild(div.box = div.msgparent.removeChild(div.msg));
        if (opts.createTemplate) {
            div.msg.style.display = "block";
            div.box2 = div.box;
            div.box = document.getElementById("LightBoxTemplate");
        }
        div.box.style.cssText = 'display:inline-block;visibility:visible;' + (opts.width ? 'width: ' + opts.width + ';' : '');
        div.box.focus();
        //if (opts.centerX) div.box.style.margin = "0 auto";
        if (opts.align == "center") div.box.style.margin = "0 auto";
        if (opts.css) $(div.box).css(opts.css);

        _window_onkeydown = document.documentElement.onkeydown;

        document.documentElement.onkeydown = function (Event) {
            evt = window.event ? event : Event;
            if (evt.keyCode == 27) {
                textLightBox.hide();
            }
        };
        var boxClick = false;
        //div.td.onclick = function() { if (boxClick) { boxClick = false; } else { textLightBox.hide(); } };
        div.box.onclick = function () {
            boxClick = true;
        };
        $(div).bind('click', function (e) {
            if (!boxClick) {
                textLightBox.hide();
            } else {
                boxClick = false;
            }
        });
        var scripts = document.getElementsByTagName("script");
        /*for (var i = 0; i < scripts.length; i++) {
        rt = scripts[i];
        while (rt = rt.parentNode) {
        if (rt == div.box) {
        eval(scripts[i].textContent || scripts[i].text);
        }
        }
        }*/
        if (afterAction) afterAction();
    },
    hide: function hide(afterAction) {
        function tmpHide() {
            div.box = div.box2 || div.box;
            div.box.style.display = 'none';
            if (div.box.parentNode == div.td) div.msgparent.appendChild(div.td.removeChild(div.box));
            document.body.removeChild(div);
            document.documentElement.onkeydown = _window_onkeydown;
            document.documentElement.style.overflow = "";
            if (docwidth) {
                document.body.style.width = docwidth;
            }
            var sdiv = document.createElement("div");
            document.body.appendChild(sdiv);
            sdiv.style.height = "1px";
            setTimeout(function () {
                document.body.removeChild(sdiv);
                document.documentElement.scrollLeft = sx;
                document.documentElement.scrollTop = sy;
            }, 0);
            if (afterAction) afterAction();
        }
        div.over.style.display = "block";
        $(div.table).addClass("fade-out");
        $(div.table).fadeOut(150);
        $(div.bg).fadeOut(300, tmpHide);
    },
    getHtml: function getHtml() {
        return ['\
        <table class="lightbox" id="LightBoxTemplate"><tr><td class="lbc-">\
            <div class="boundary-">\
                <div class="elements-">\
                    <div class="lt- corner-"><i><!----></i></div>\
                    <div class="rt- corner-"><i><!----></i></div>\
                    <div class="rb- corner-"><i><!----></i></div>\
                    <div class="lb- corner-"><i><!----></i></div>\
                    <div class="t-"><i><s><!----></s></i></div>\
                    <div class="r-"><i><s><u><!----></u></s></i></div>\
                    <div class="b-"><i><s><!----></s></i></div>\
                    <div class="l-"><i><s><u><!----></s></u></i></div>\
                </div>\
                <div class="in-">\
                    <a class="close-" href="javascript:void(0);" onclick="textLightBox.hide();return false;"><img src="/theme/images/pix.gif" width="8" height="7" alt="x" title="закрыть"/></a>\
                    <div id="LightBoxContent"></div>\
                </div>\
            </div>\
        </td></tr></table>\
        '].join('');
    }

    /*Сайты СКБ Контур*/
};function KonturSites(button, popup) {
    button = typeof button == 'string' ? document.getElementById(button) : button;
    popup = typeof popup == 'string' ? document.getElementById(popup) : popup;

    button.onclick = function () {
        var pos = getAbsolutePosition(button);
        popup.style.left = pos.x + "px";
        popup.style.top = pos.y + "px";
        popup.style.display = "block";
        return false;
    };
    popup.onmouseout = function (Event) {
        var rt = window.event ? event.toElement : Event.relatedTarget;
        while (rt && rt != document.documentElement) {
            if (rt == popup) return false;
            rt = rt.parentNode;
        };
        popup.style.display = 'none';
    };
}
//возвращает абсолютную позицию блока
function getAbsolutePosition(id) {
    id = typeof id == 'string' ? '#' + id : id;
    var pos = $(id).offset();
    var marg = (document.documentElement.clientWidth - document.body.offsetWidth) / 2;
    marg = marg > 0 ? Math.floor(marg) : 0;
    return { x: pos.left - marg, y: pos.top };
}

var locationRegions = [];
function BlockElement(elementQJ) {
    elementQJ.block({ message: "<img src='/theme/images/ajax-loader.gif' />",
        centerX: true,
        centerY: true,
        fadeOut: 0,
        fadeIn: 0,
        css: { width: '100%', textAlign: 'center' },
        overlayCSS: { backgroundColor: '#fff', opacity: '1' }
    });
}
function LoadRegions(url, regionSelectId, callback) {
    if (locationRegions.length > 0) {
        callback();
    } else {
        //BlockElement($("#" + regionSelectId).parent());
        $.get(url, '', function (data) {
            try {
                locationRegions = eval(data);
                callback();
                $("#" + regionSelectId).parent().unblock();
            } catch (e) {}
        });
    }
}
function GetCities(citySelectId, regionId, url, selectedCityId) {
    var citySelect = $("#" + citySelectId);
    var c = citySelect.parent();
    BlockElement(c);
    $("#" + citySelectId + " > option").remove();
    var centerId = GetRegionCenterId(regionId);
    $.get(url + '/' + regionId, '', function (data) {
        try {
            var cities = eval(data);
            var selectedCityIndex = GetCityIndex(cities, selectedCityId);
            if (selectedCityIndex < 0) {
                if (centerId) // Если есть город по умолчанию
                    selectedCityIndex = GetCityIndex(cities, centerId);else selectedCityIndex = 0;
            }
            for (var i = 0; i < cities.length; i++) {
                citySelect.append("<option value=" + cities[i].id + ">" + cities[i].value + "</option>");
            }citySelect.get(0).scrollTop = 0;
            if (selectedCityIndex >= 0) citySelect.get(0).options[selectedCityIndex].selected = true;
        } catch (e) {}
        c.unblock();
    });
}
function BuildRegionSelect(locationRegions, regionSelectId, selectedRegionId, showIn) {
    var options = $("#" + regionSelectId + " > option"); //.remove();
    if (options.length > 0) {
        options.removeAttr("selected");
        $("#" + regionSelectId + " > option[value='" + selectedRegionId + "']").attr("selected", "selected");
        return;
    }

    var regionSelect = $("#" + regionSelectId);

    for (var i = 0; i < locationRegions.length; i++) {
        if (locationRegions[i].showIn == 0 || locationRegions[i].showIn == showIn) {
            var selectedStr = locationRegions[i].id == selectedRegionId ? " selected='selected' " : "";
            regionSelect.append("<option value=" + locationRegions[i].id + selectedStr + ">" + locationRegions[i].value + "</option>");
        }
    }
}
function GetRegionCenterId(regionId) {
    for (var i = 0; i < locationRegions.length; i++) {
        if (locationRegions[i].id == regionId) return locationRegions[i].centerId;
    }
    return null;
}
function GetCityIndex(cities, cityId) {
    for (var i = 0; i < cities.length; i++) {
        if (cities[i].id == cityId) return i;
    }
    return -1;
}

function SelectText(text) {
    if ($.browser.msie) {
        var range = document.body.createTextRange();
        range.moveToElementText(text);
        range.select();
    } else if ($.browser.mozilla || $.browser.opera) {
        var selection = window.getSelection();
        var range = document.createRange();
        range.selectNodeContents(text);
        selection.removeAllRanges();
        selection.addRange(range);
    } else if ($.browser.safari) {
        var selection = window.getSelection();
        selection.setBaseAndExtent(text, 0, text, 1);
    }
}

function coptyToClipBoard(id) {
    $("#" + id).get(0).createTextRange().execCommand("Copy");
}

/**
* SWFObject v1.5: Flash Player detection and embed - http://blog.deconcept.com/swfobject/
*
* SWFObject is (c) 2007 Geoff Stearns and is released under the MIT License:
* http://www.opensource.org/licenses/mit-license.php
*
*/
if (typeof deconcept == "undefined") {
    var deconcept = new Object();
}if (typeof deconcept.util == "undefined") {
    deconcept.util = new Object();
}if (typeof deconcept.SWFObjectUtil == "undefined") {
    deconcept.SWFObjectUtil = new Object();
}deconcept.SWFObject = function (_1, id, w, h, _5, c, _7, _8, _9, _a) {
    if (!document.getElementById) {
        return;
    }this.DETECT_KEY = _a ? _a : "detectflash";this.skipDetect = deconcept.util.getRequestParameter(this.DETECT_KEY);this.params = new Object();this.variables = new Object();this.attributes = new Array();if (_1) {
        this.setAttribute("swf", _1);
    }if (id) {
        this.setAttribute("id", id);
    }if (w) {
        this.setAttribute("width", w);
    }if (h) {
        this.setAttribute("height", h);
    }if (_5) {
        this.setAttribute("version", new deconcept.PlayerVersion(_5.toString().split(".")));
    }this.installedVer = deconcept.SWFObjectUtil.getPlayerVersion();if (!window.opera && document.all && this.installedVer.major > 7) {
        deconcept.SWFObject.doPrepUnload = true;
    }if (c) {
        this.addParam("bgcolor", c);
    }var q = _7 ? _7 : "high";this.addParam("quality", q);this.setAttribute("useExpressInstall", false);this.setAttribute("doExpressInstall", false);var _c = _8 ? _8 : window.location;this.setAttribute("xiRedirectUrl", _c);this.setAttribute("redirectUrl", "");if (_9) {
        this.setAttribute("redirectUrl", _9);
    }
};deconcept.SWFObject.prototype = { useExpressInstall: function useExpressInstall(_d) {
        this.xiSWFPath = !_d ? "expressinstall.swf" : _d;this.setAttribute("useExpressInstall", true);
    }, setAttribute: function setAttribute(_e, _f) {
        this.attributes[_e] = _f;
    }, getAttribute: function getAttribute(_10) {
        return this.attributes[_10];
    }, addParam: function addParam(_11, _12) {
        this.params[_11] = _12;
    }, getParams: function getParams() {
        return this.params;
    }, addVariable: function addVariable(_13, _14) {
        this.variables[_13] = _14;
    }, getVariable: function getVariable(_15) {
        return this.variables[_15];
    }, getVariables: function getVariables() {
        return this.variables;
    }, getVariablePairs: function getVariablePairs() {
        var _16 = new Array();var key;var _18 = this.getVariables();for (key in _18) {
            _16[_16.length] = key + "=" + _18[key];
        }return _16;
    }, getSWFHTML: function getSWFHTML() {
        var _19 = "";if (navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length) {
            if (this.getAttribute("doExpressInstall")) {
                this.addVariable("MMplayerType", "PlugIn");this.setAttribute("swf", this.xiSWFPath);
            }_19 = "<embed type=\"application/x-shockwave-flash\" src=\"" + this.getAttribute("swf") + "\" width=\"" + this.getAttribute("width") + "\" height=\"" + this.getAttribute("height") + "\" style=\"" + this.getAttribute("style") + "\"";_19 += " id=\"" + this.getAttribute("id") + "\" name=\"" + this.getAttribute("id") + "\" ";var _1a = this.getParams();for (var key in _1a) {
                _19 += [key] + "=\"" + _1a[key] + "\" ";
            }var _1c = this.getVariablePairs().join("&");if (_1c.length > 0) {
                _19 += "flashvars=\"" + _1c + "\"";
            }_19 += "/>";
        } else {
            if (this.getAttribute("doExpressInstall")) {
                this.addVariable("MMplayerType", "ActiveX");this.setAttribute("swf", this.xiSWFPath);
            }_19 = "<object id=\"" + this.getAttribute("id") + "\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"" + this.getAttribute("width") + "\" height=\"" + this.getAttribute("height") + "\" style=\"" + this.getAttribute("style") + "\">";_19 += "<param name=\"movie\" value=\"" + this.getAttribute("swf") + "\" />";var _1d = this.getParams();for (var key in _1d) {
                _19 += "<param name=\"" + key + "\" value=\"" + _1d[key] + "\" />";
            }var _1f = this.getVariablePairs().join("&");if (_1f.length > 0) {
                _19 += "<param name=\"flashvars\" value=\"" + _1f + "\" />";
            }_19 += "</object>";
        }return _19;
    }, write: function write(_20) {
        if (this.getAttribute("useExpressInstall")) {
            var _21 = new deconcept.PlayerVersion([6, 0, 65]);if (this.installedVer.versionIsValid(_21) && !this.installedVer.versionIsValid(this.getAttribute("version"))) {
                this.setAttribute("doExpressInstall", true);this.addVariable("MMredirectURL", escape(this.getAttribute("xiRedirectUrl")));document.title = document.title.slice(0, 47) + " - Flash Player Installation";this.addVariable("MMdoctitle", document.title);
            }
        }if (this.skipDetect || this.getAttribute("doExpressInstall") || this.installedVer.versionIsValid(this.getAttribute("version"))) {
            var n = typeof _20 == "string" ? document.getElementById(_20) : _20;n.innerHTML = this.getSWFHTML();return true;
        } else {
            if (this.getAttribute("redirectUrl") != "") {
                document.location.replace(this.getAttribute("redirectUrl"));
            }
        }return false;
    } };deconcept.SWFObjectUtil.getPlayerVersion = function () {
    var _23 = new deconcept.PlayerVersion([0, 0, 0]);if (navigator.plugins && navigator.mimeTypes.length) {
        var x = navigator.plugins["Shockwave Flash"];if (x && x.description) {
            _23 = new deconcept.PlayerVersion(x.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split("."));
        }
    } else {
        if (navigator.userAgent && navigator.userAgent.indexOf("Windows CE") >= 0) {
            var axo = 1;var _26 = 3;while (axo) {
                try {
                    _26++;axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + _26);_23 = new deconcept.PlayerVersion([_26, 0, 0]);
                } catch (e) {
                    axo = null;
                }
            }
        } else {
            try {
                var axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
            } catch (e) {
                try {
                    var axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");_23 = new deconcept.PlayerVersion([6, 0, 21]);axo.AllowScriptAccess = "always";
                } catch (e) {
                    if (_23.major == 6) {
                        return _23;
                    }
                }try {
                    axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                } catch (e) {}
            }if (axo != null) {
                _23 = new deconcept.PlayerVersion(axo.GetVariable("$version").split(" ")[1].split(","));
            }
        }
    }return _23;
};deconcept.PlayerVersion = function (_29) {
    this.major = _29[0] != null ? parseInt(_29[0]) : 0;this.minor = _29[1] != null ? parseInt(_29[1]) : 0;this.rev = _29[2] != null ? parseInt(_29[2]) : 0;
};deconcept.PlayerVersion.prototype.versionIsValid = function (fv) {
    if (this.major < fv.major) {
        return false;
    }if (this.major > fv.major) {
        return true;
    }if (this.minor < fv.minor) {
        return false;
    }if (this.minor > fv.minor) {
        return true;
    }if (this.rev < fv.rev) {
        return false;
    }return true;
};deconcept.util = { getRequestParameter: function getRequestParameter(_2b) {
        var q = document.location.search || document.location.hash;if (_2b == null) {
            return q;
        }if (q) {
            var _2d = q.substring(1).split("&");for (var i = 0; i < _2d.length; i++) {
                if (_2d[i].substring(0, _2d[i].indexOf("=")) == _2b) {
                    return _2d[i].substring(_2d[i].indexOf("=") + 1);
                }
            }
        }return "";
    } };deconcept.SWFObjectUtil.cleanupSWFs = function () {
    var _2f = document.getElementsByTagName("OBJECT");for (var i = _2f.length - 1; i >= 0; i--) {
        _2f[i].style.display = "none";for (var x in _2f[i]) {
            if (typeof _2f[i][x] == "function") {
                _2f[i][x] = function () {};
            }
        }
    }
};if (deconcept.SWFObject.doPrepUnload) {
    if (!deconcept.unloadSet) {
        deconcept.SWFObjectUtil.prepUnload = function () {
            __flash_unloadHandler = function __flash_unloadHandler() {};__flash_savedUnloadHandler = function __flash_savedUnloadHandler() {};window.attachEvent("onunload", deconcept.SWFObjectUtil.cleanupSWFs);
        };window.attachEvent("onbeforeunload", deconcept.SWFObjectUtil.prepUnload);deconcept.unloadSet = true;
    }
}if (!document.getElementById && document.all) {
    document.getElementById = function (id) {
        return document.all[id];
    };
}var getQueryParamValue = deconcept.util.getRequestParameter;var FlashObject = deconcept.SWFObject;var SWFObject = deconcept.SWFObject;

// Всплывающее окно для показа изображения/изображений (если есть imgObjectArray)
function ShowImagesLightBox(imgObjectArray, currentImageSrc, srcPath) {
    var ic = document.getElementById("ImageContainer");
    var img;
    var load;
    var imgIndex = GetImgIndex(imgObjectArray, currentImageSrc);
    var prevImage = $('#previousImage');
    var prevImage = $('#nextImage');
    var prevImageEmpty = $("#previousImageEmpty");
    var nextImageEmpty = $('#nextImageEmpty');
    var title = $('#TitleContainer');
    var announce = $('#AnnounceContainer');
    if (imgObjectArray.length == 0) {
        prevImage.hide();
        prevImage.hide();
    }
    window.__resize = function () {
        if (!img.load) return false;
        var w = document.documentElement.clientWidth - 40;
        announce.css('width', img.width);
        var h = document.documentElement.clientHeight - (imgObjectArray.length == 0 ? 90 : 110) - announce.height();
        w = w < 100 ? 100 : w;
        h = h < 80 ? 80 : h;

        img.removeAttribute("height");
        img.removeAttribute("width");
        if (h / img.maxHeight < w / img.maxWidth) {
            if (h < img.maxHeight) img.height = h;
        } else {
            if (w < img.maxWidth) img.width = w;
        }
        announce.css("width", img.width);
    };
    var newImage = function newImage() {
        ic.innerHTML = "";
        img = document.createElement("img");
        load = document.createElement("div");
        ic.appendChild(load);
        load.style.cssText = "width:200px;height:200px;position:relative;background:url(/theme/images/imgload.gif) center no-repeat;";
        ic.appendChild(img);
        img.load = false;
        img.style.display = "none";
        img.removeAttribute("height");
        img.removeAttribute("width");
        if (document.all && !window.opera && $.browser.version < 8) document.body.removeExpression("resize");
        if (document.all && $.browser.version < 8) {
            document.body.setExpression("resize", "window.__resize()");
            $(window).load(function () {
                document.body.removeExpression("resize");
            });
        }
        img.onload = function () {
            if (load.parentNode) ic.removeChild(load); //?
            else load = null;

            img.style.display = "inline";
            img.maxHeight = img.offsetHeight;
            img.maxWidth = img.offsetWidth;
            img.load = true;
            window.__resize();
        };
    };
    newImage();
    lightBox.show("ImageLightBox");

    function setLightboxContent(imgIndex) {
        img.src = srcPath + imgObjectArray[imgIndex].Image;
        title.html(imgObjectArray[imgIndex].Title);
        announce.html(imgObjectArray[imgIndex].Announce);
    }

    setLightboxContent(imgIndex);

    $(window).resize(function () {
        if (document.all && $.browser.version < 8 && document.body.getExpression("resize")) {
            document.body.removeExpression("resize");
        }
        window.__resize();
    });

    function ShowHideArrows(imgIndex) {
        if (imgIndex <= 0) {
            prevImage.hide();
            prevImageEmpty.show();
        } else {
            prevImage.show();
            prevImageEmpty.hide();
        }
        if (imgIndex >= imgObjectArray.length - 1) {
            nextImage.hide();
            nextImageEmpty.show();
        } else {
            nextImage.show();
            nextImageEmpty.hide();
        }
    }

    function GetImgIndex(images, img) {
        for (var i = 0; i < images.length; i++) {
            if (images[i].Image == img) return i;
        }
        return -1;
    }

    var prevImage = $('#previousImage');
    var nextImage = $('#nextImage');
    ShowHideArrows(imgIndex);

    $(prevImage).unbind('click').bind('click', function () {
        imgIndex--;
        newImage();
        setLightboxContent(imgIndex);
        ShowHideArrows(imgIndex);
        return false;
    });

    $(nextImage).unbind('click').bind('click', function () {
        imgIndex++;
        newImage();
        setLightboxContent(imgIndex);
        ShowHideArrows(imgIndex);
        return false;
    });
    $(prevImageEmpty).click(function () {
        return false;
    });
    $(nextImageEmpty).click(function () {
        return false;
    });
    $("#previousNextContainer").click(function () {
        lightBox.hide();
    });
    if (imgObjectArray.length <= 1) {
        $(prevImageEmpty).hide();
        $(nextImageEmpty).hide();
    }
}

lightBox = {
    div: null,
    sx: 0,
    sy: 0,
    show: function show(MessageBlock, opts) {
        if (!opts) opts = {};
        opts.centerX = opts.centerX == undefined ? true : opts.centerX;
        opts.centerY = opts.centerY == undefined ? true : opts.centerY;
        div = document.createElement('div');
        if (!(div.msg = document.getElementById(MessageBlock))) return;
        document.body.appendChild(div);
        sx = document.documentElement.scrollLeft;
        sy = document.documentElement.scrollTop;
        /*document.documentElement.style.width = document.documentElement.clientWidth + "px"; ///////////
        document.documentElement.style.overflow = "hidden";
        document.documentElement.style.position = "relative";
        document.documentElement.style.left = (-sx) + "px";
        document.documentElement.style.top = (-sy) + "px";*/

        div.style.cssText = "width:100%;_width:expression(documentElement.clientWidth);\
            height:100%;_height:expression(documentElement.clientHeight);position:fixed;_position:absolute;\
            left:0;_left:expression(documentElement.scrollLeft-document.body.offsetLeft);\
            top:0;_top:expression(documentElement.scrollTop-document.body.offsetTop);";
        div.appendChild(div.bg = document.createElement('div'));
        div.bg.style.cssText = "width:100%;height:100%;_height:expression(this.parentNode.clientHeight);position:absolute;left:0;top:0;\
            background:#000;opacity:0.4;filter:alpha(opacity=40);";
        div.appendChild(div.ifr = document.createElement('iframe'));
        div.ifr.style.cssText = 'width:100%;height:100%;position:absolute;left:0;top:0;filter:alpha(opacity=0);opacity:0';
        div.appendChild(div.scroll = document.createElement('div'));
        div.scroll.style.cssText = "width:100%;height:100%;position:absolute;left:0;top:0;/*overflow:auto;*/overflow:hidden;";
        div.scroll.appendChild(div.rel = document.createElement('div'));
        div.rel.style.cssText = "height:100%;_height:100%;position:relative;";
        div.rel.appendChild(div.table = document.createElement('table'));
        div.td = div.table.insertRow(0).insertCell(0);
        div.table.style.cssText = 'width:100%;_width:expression(documentElement.clientWidth);\
            height:100%;_height:expression(documentElement.clientHeight);position:absolute;left:0;top:0;\
            border-collapse:collapse;border:solid 0;';
        //div.td.style.cssText = "text-align:center;vertical-align:middle;";
        div.td.style.textAlign = opts.centerX ? "center" : "left";
        div.td.style.verticalAlign = opts.centerY ? "middle" : "top";
        div.appendChild(div.over = document.createElement("div"));
        div.over.style.cssText = "width:100%;height:100%;position:absolute;left:0;top:0;display:none;";

        div.msgparent = div.msg.parentNode;
        div.td.appendChild(div.box = div.msgparent.removeChild(div.msg));
        div.box.style.cssText = 'display:table;//display:inline;visibility:visible;';
        div.box.style.margin = opts.centerX ? "0 auto" : "0";

        _window_onkeydown = document.documentElement.onkeydown;

        document.documentElement.onkeydown = function (Event) {
            evt = window.event ? event : Event;
            if (evt.keyCode == 27) {
                lightBox.hide();
            }
        };
        var boxClick = false;
        div.td.onclick = function () {
            if (boxClick) {
                boxClick = false;
            } else {
                lightBox.hide();
            }
        };
        div.box.onclick = function () {
            boxClick = true;
        };

        return div;
    },
    hide: function hide() {
        document.documentElement.onkeydown = _window_onkeydown;
        function tmpHide() {
            if (!div) return;
            div.box.style.display = 'none';
            div.msgparent.appendChild(div.td.removeChild(div.box));
            document.body.removeChild(div);
            div = null;

            /*document.documentElement.style.width = "auto";
            document.documentElement.style.overflow = "";*/
            var sdiv = document.createElement("div");
            document.body.appendChild(sdiv);
            sdiv.style.height = "1px";
            setTimeout(function () {
                document.body.removeChild(sdiv);
                /*document.documentElement.style.left = 0 + "px";
                document.documentElement.style.top = 0 + "px";
                document.documentElement.scrollLeft = sx;
                document.documentElement.scrollTop = sy;*/
            }, 0);
        }
        div.over.style.display = "block";
        $(div.table).fadeOut(400);
        $(div.bg).fadeOut(400, tmpHide);
    }
};

function SubstituteIndexInTemplate(template, index) {
    return template.replace(/\:index\:/ig, index);
}
function FormInsertItem(sourceIdStr, insertBeforeObj, afterAction, start) {
    var l = document.getElementById(sourceIdStr);
    insertBeforeObj = typeof insertBeforeObj == 'string' ? document.getElementById(insertBeforeObj) : insertBeforeObj;
    var n = l.cloneNode(true);
    n.removeAttribute('id');
    insertBeforeObj.parentNode.insertBefore(n, insertBeforeObj);
    if (!insertBeforeObj.i) insertBeforeObj.i = start != undefined ? start : 1;
    n.innerHTML = n.innerHTML.replace(/\:index\:/ig, insertBeforeObj.i);
    if (typeof afterAction == 'function') afterAction(insertBeforeObj.i);
    insertBeforeObj.i++;
}
function FormDeleteItem(deleteObj) {
    deleteObj.parentNode.removeChild(deleteObj);
}

function copyAllAttributes(source, dest) {
    if (document.all) for (var j in source.attributes) {
        dest.setAttribute(j, source.getAttribute(j));
    } else for (var j = 0; j < source.attributes.length; j++) {
        dest.setAttribute(source.attributes[j].name, source.attributes[j].value);
    }
    return dest;
}

function FormTableDeleteRow(rowObj) {
    var lineNumber = rowObj.lineNumber;
    if (lineNumber == null) return;

    var table = rowObj.parentNode.parentNode;

    var rows = table.rows;
    var index = 0;
    // далее length-1 -- чтобы не стереть ряд-якорь для добавления новых строк
    while (index < rows.length - 1 && rows[index].lineNumber != lineNumber) {
        index++;
    }while (index < rows.length - 1 && rows[index].lineNumber == lineNumber) {
        table.deleteRow(index);
    }
}

function FormTableInsertRow(sourceIdStr, insertBeforeObj, afterAction, start) {
    start = start || 0;

    var insertBeforeObj = typeof insertBeforeObj == 'string' ? document.getElementById(insertBeforeObj) : insertBeforeObj;

    var template = $("#" + sourceIdStr);
    var isTable = template[0].tagName.toLowerCase() == "table";

    var sourceTrs = isTable ? $("tbody > tr", template) : template;

    if (!insertBeforeObj.i) insertBeforeObj.i = start;

    sourceTrs.each(function () {
        var sourceTr = this;
        var newRow = insertBeforeObj.parentNode.insertRow(insertBeforeObj.rowIndex);
        var newCell;
        for (var i = 0; i < sourceTr.cells.length; i++) {
            newCell = newRow.insertCell(i);
            newCell.innerHTML = SubstituteIndexInTemplate(sourceTr.cells[i].innerHTML, insertBeforeObj.i);
            copyAllAttributes(sourceTr.cells[i], newCell);
        }
        copyAllAttributes(sourceTr, newRow);
        newRow.removeAttribute("id");

        newRow.numberOfRowsInGroup = sourceTrs.length;
        newRow.lineNumber = insertBeforeObj.i;
    });

    if (typeof afterAction == 'function') afterAction(insertBeforeObj.i);
    insertBeforeObj.i++;
}

function FormInsertTbody(sourceIdStr, insertBeforeObj, afterAction, start) {
    var insertBeforeObj = typeof insertBeforeObj == 'string' ? $('#' + insertBeforeObj) : $(insertBeforeObj);
    var template = $("#" + sourceIdStr);

    if (!insertBeforeObj[0].i) insertBeforeObj[0].i = start || 0;

    var newObj = template.clone(true).insertBefore(insertBeforeObj);

    newObj.removeAttr("id");
    newObj.html(SubstituteIndexInTemplate(newObj.html(), insertBeforeObj[0].i));

    if (typeof afterAction == 'function') afterAction(insertBeforeObj.i);

    insertBeforeObj[0].i++;
}
function FormDeleteTbody(tbodyObj) {
    $(tbodyObj).remove();
}

function ReindexNames(form) {
    function GetElementsArray() {
        var elements = [];
        for (var i = 0; i < form.elements.length; i++) {
            elements.push(form.elements[i]);
        }return elements;
    }

    var indexedNameRegex = /\[(\d+)\]/;
    var indexInGroup = {};

    $(GetElementsArray()).filter(function () {
        return this.name != null && indexedNameRegex.test(this.name);
    }).map(function () {
        var group = this.name.replace(indexedNameRegex, "");
        indexInGroup[group] = 0;
        return { Element: $(this), Group: group };
    }).each(function () {
        var currentIndexInGroup = indexInGroup[this.Group]++;
        var reindexedName = this.Element.attr("name").replace(indexedNameRegex, "[" + currentIndexInGroup + "]");
        this.Element.attr("name", reindexedName);
    });
}

function WordEndingByNumber(number, ending1, endingGt1Lt5, endingGt5Or0) {
    var residue100 = number % 100;
    if (residue100 > 5 && residue100 <= 20) return endingGt5Or0;
    var text = residue100.toString(10);
    var lastDigit = parseInt(text.charAt(text.length - 1));
    if (lastDigit == 1) return ending1;
    if (lastDigit > 1 && lastDigit < 5) return endingGt1Lt5;
    return endingGt5Or0;
}

// 12345 => '   12 345'
function FormatSum(nValue, insertSpaces, nWide) {
    var s = nValue.toFixed(0);
    if (insertSpaces) {
        for (j = 3; j < 15; j += 4) {
            // insert spaces
            if (s.length > j) {
                s = s.substr(0, s.length - j) + ' ' + s.substr(s.length - j);
            }
        }
    }
    if (!isNaN(nWide)) {
        // parameter is present
        while (nWide > s.length) {
            // pad with leading spaces
            s = ' ' + s;
        }
    }
    return s;
}

function PreventFormSubmitOnEnter() {
    $("input[type=text], input[type=radio], input[type=checkbox]").live("keypress", function (event) {
        event = event || window.event;
        return (event.which || event.keyCode) != 13;
    });
}

var LightBox = {
    show: function show(id) {
        popup.show(id, { css: { width: '500px' } });
    }

    // create suggest
};function createSuggest(opts) {
    var ie = document.all && !window.opera;
    var emptyMessage = typeof opts.msg != 'undefined' ? opts.msg : 'По вашему запросу ничего не найдено';
    var inp = document.getElementById(opts.input);
    inp.oldvalue = inp.value;
    if (!inp) return false;
    inp.suggestEnabled = true;
    inp.url = opts.url;
    inp.hidden = document.getElementById(opts.hidden);
    inp.key = document.getElementById(opts.key);
    inp.txt = document.getElementById(opts.title);
    inp.comment = document.getElementById(opts.comment);
    inp.callback = opts.callback;
    inp.callbackParams = opts.callbackParams;
    inp.create = function () {
        var suggest = document.createElement('div');
        if (inp.nextSibling) inp.parentNode.insertBefore(suggest, inp.nextSibling);else inp.parentNode.appendChild(suggest);
        suggest.className = "suggest";

        inp.w = window.opera ? document.createElement("iframe") : document.createElement("div");
        suggest.insertBefore(inp.w, suggest.firstChild);
        inp.w.style.cssText = "width:1px;height:1px;position:absolute;left:0;top:0;font-size:0;border:solid 0;"; //opacity//
        inp.abs = suggest;
        //document.body.appendChild(inp.abs = document.createElement("div"));
        inp.abs.style.cssText = "position:absolute;";
        inp.abs.className = "suggest";
        inp.abs.style.left = "0px";
        console.log($(inp).position().top);
        inp.abs.style.top = $(inp).position().top + $(inp).outerHeight() + "px";

        if (ie) {
            inp.abs.appendChild(inp.ifr = document.createElement('iframe'));
            inp.ifr.style.cssText = 'position:absolute;left:0;top:0;display:none;/*filter:alpha(opacity=0);opacity:0*/';
        }

        var ul = document.createElement('ul');
        inp.abs.appendChild(ul);
        ul.style.display = 'none';
        inp.setAttribute("autocomplete", "off");
        inp.suggest = suggest;
        inp.ul = ul;
    };
    inp.undoSubmit = function (undo) {
        if (!inp.form) return;
        if (undo) {
            if (!inp.formSubmit) {
                inp.formSubmit = inp.form.onsubmit ? inp.form.onsubmit : function () {
                    ;
                };
                inp.form.onsubmit = function () {
                    return false;
                };
            }
        } else {
            if (inp.formSubmit) {
                inp.form.onsubmit = inp.formSubmit;
                inp.formSubmit = null;
            }
        }
    };
    inp.onkeyup = function (Event) {
        if (!inp.suggest) inp.create();
        var evt = Event ? Event : event;
        var ul = inp.ul;

        if (inp.oldvalue != inp.value) {
            if (inp.callback) inp.callback('', inp.callbackParams);
            if (inp.txt) inp.txt.innerHTML = '';
        }
        var offsetFocus = function offsetFocus(offset) {
            var ul = inp.ul;
            if (!ul.childNodes.length) return false;
            if (ul.firstChild.className == "empty") return false;
            for (var i = 0; i < ul.childNodes.length; i++) {
                if (ul.childNodes[i].className.match('hover')) {
                    ul.childNodes[i].className = ul.childNodes[i].className.replace('hover', '');
                    if (i + offset < 0) i = ul.childNodes.length;
                    if (i + offset > ul.childNodes.length - 1) i = -1;
                    ul.childNodes[i + offset].className += ' hover';
                    inp.data(ul.childNodes[i + offset]);
                    return 0;
                }
            }
            if (offset > 0) {
                ul.childNodes[0].className += ' hover';
                inp.data(ul.childNodes[0]);
            };
            if (offset < 0) {
                ul.childNodes[ul.childNodes.length - 1].className += ' hover';
                inp.data(ul.childNodes[ul.childNodes.length - 1]);
            };
            inp.oldvalue = inp.value;
        };
        if (evt.keyCode == 38) //point up
            {
                offsetFocus(-1);
                return false;
            }
        if (evt.keyCode == 40) //point down
            {
                offsetFocus(1);
                return false;
            }
        if (evt.keyCode == 13) //enter
            {
                ul.innerHTML = '';
                ul.style.display = inp.abs.style.display = 'none';
                if (ie) inp.ifr.style.display = 'none';
                inp.undoSubmit();
                return false;
            }
        if (evt.keyCode == 27) //esc
            {
                ul.innerHTML = '';
                ul.style.display = inp.abs.style.display = 'none';
                if (ie) inp.ifr.style.display = 'none';
                inp.undoSubmit();
                return false;
            }

        inp.suggest.style.width = '100%'; //(inp.offsetWidth - 2) + 'px'; //suggest min-width

        if (inp.suggestEnabled && inp.value && inp.value.length > 0) {
            if (inp.oldvalue == inp.value) return false; //if value not changed
            clearTimeout(this.timeout);
            inp.timeout = setTimeout(function () {
                inp.query(inp);
            }, 10); //set timeout request
            inp.oldvalue = inp.value;
        } else {
            ul.innerHTML = '';
            ul.style.display = inp.abs.style.display = 'none';
            if (ie) inp.ifr.style.display = 'none';
            inp.undoSubmit();
        }
    };
    /*inp.onkeydown = function()
    {
    //if (document.all && event.keyCode == 13)//stop submit propagation
    //    return false;
    };*/
    var onblur = function onblur() //onblur - hide suggest
    {
        if (!inp.ul) return false;
        clearTimeout(this.timeout);
        this.timeout = false;
        inp.ul.innerHTML = '';
        inp.ul.style.display = inp.abs.style.display = 'none';
        if (ie) inp.ifr.style.display = 'none';
        inp.undoSubmit();
        if (inp.oldvalue != inp.value) {
            if (inp.txt) inp.txt.innerHTML = '';
        }
    };
    $(inp).bind('blur', onblur);
    inp.query = function (inp) //get data
    {
        if (!inp.value || FormatInput(inp.value, true).length == 0) return;
        $.ajax({
            url: inp.url + escape(FormatInput(inp.value, true)), //escape wrong for safari
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            type: "POST",
            success: function success(data) {
                inp.ready(data);
            }
        });
    };
    inp.data = function (obj) //set values text input [and hidden input]
    {
        inp.value = obj.data;
        if (inp.hidden) inp.hidden.value = obj.key ? obj.key : "";
        if (inp.txt) inp.txt.innerHTML = obj.txt ? obj.txt : "";
        if (inp.callback) inp.callback(obj.data, inp.callbackParams);
        if (inp.comment) inp.comment.innerHTML = obj.comment ? obj.comment : "";
        inp.oldvalue = inp.value;
    };
    inp.ready = function (data) //create suggest list
    {
        if (this.timeout === false) return false;
        var ul = inp.ul;
        var li;
        var esc = document.createElement("div");
        ul.innerHTML = '';
        if (!data.length) {
            if (emptyMessage === false) {
                inp.ul.style.display = inp.abs.style.display = 'none';
                if (ie) inp.ifr.style.display = "none";
                return;
            }
            ul.appendChild(li = document.createElement('li'));
            li.className = 'empty';
            li.innerHTML = emptyMessage;
            li.data = "";
        }
        for (var i = 0; i < data.length; i++) {
            ul.appendChild(li = document.createElement('li'));
            if (_typeof(data[i]) == 'object') {
                //li.innerHTML = data[i].valueEncoded;//если здесь ошибок не возникло, стоит убрать valueEncoded из серверной части
                if (document.all) esc.innerText = data[i].value;else esc.textContent = data[i].value;
                li.innerHTML = esc.innerHTML;
                //li.innerHTML = data[i].value;
                if (data[i].key) li.key = data[i].key;
                if (data[i].value) li.data = data[i].value;
                if (data[i].title) {
                    li.txt = data[i].title;
                }
                if (data[i].cssClass) li.className = data[i].cssClass;
            } else {
                li.innerHTML = data[i];
                li.data = data[i];
            }
            var words = FormatInput(inp.value.replace(/[^0-9a-zа-яё]+/gi, " "), false).split(" ");
            if (opts.light) {
                var title = li.innerHTML;
                var comm = data[i].comment;
                for (var ii = 0; ii < words.length; ii++) {
                    var re = new RegExp('(' + words[ii] + ')', 'gi');
                    title = title.replace(re, '<b>$1</b>');
                    if (comm != null) {
                        comm = comm.replace(re, '<b>$1</b>');
                    }
                }
                li.innerHTML = title;
                if (comm != null) li.innerHTML += "<div class='comment'>" + comm + "</div>";
            }
            li.innerHTML += data[i].title ? "&nbsp;&nbsp;" + data[i].title + "" : '';
            li.onmouseover = function () {
                for (var i = 0; i < this.parentNode.childNodes.length; i++) {
                    this.parentNode.childNodes[i].className = this.parentNode.childNodes[i].className.replace(/\s?hover/, '');
                }
                this.className += ' hover';
            };
            li.onmousedown = function () {
                inp.data(this);
            };
        }
        esc = null;

        //if (data.length == 1) inp.data(li); //if we have one variant

        var sx, sy, sw, sh;
        sw = $(document).width();
        sh = $(document).height();
        sx = $(inp.suggest).offset().left;
        sy = $(inp).position().top; //$(inp.suggest).offset().top;

        //inp.abs.style.left = sx + "px";
        //inp.abs.style.top = sy + "px";

        inp.abs.style.width = '100%'; //(sw - sx - 20) + "px";

        ul.style.display = inp.abs.style.display = '';
        if (ie) inp.ifr.style.display = '';
        inp.undoSubmit(!opts.freeSubmit);
        if (ie) inp.ifr.style.width = ul.clientWidth + 2 + 'px';
        if (ie) inp.ifr.style.height = ul.clientHeight + 2 + 'px';
    };
}
/* оставить покачто для отладки */

debug = function debug(el) {

    var wnd = window.open('', 'debug', ',width=300,height=800,scrollbars, resizable');

    var s = '';

    s += '<table border="1" cellspacing="0" style="width:300px;float:left;">';

    for (j in el) {

        try {
            s += '<tr><td>' + j + '</td><td>' + el[j] + '</td></tr>';
        } catch (e) {
            s += '<tr><td>' + j + '</td><td><b>PermittionDenied</b></td></tr>';
        }
    }

    s += '<table>';

    wnd.document.write(s);

    wnd.document.body.onkeyup = wnd.onkeyup = function (Event) {

        var evt = wnd.event ? wnd.event : Event;

        if (evt.keyCode == 27) wnd.close();
    };
};

//подсказка в текстовом поле
function textNote(inputId, note) {
    function init() {
        var input = $('#' + inputId);
        if (!input[0]) return false;
        var name = '';
        var onblur = function onblur() {
            if (input.val() == '') {
                input.val(note);
                input.empty = true;
                name = input.attr('name');
                input.removeAttr('name');
                input.css({ color: '#999' });
                input.addClass('empty');
            } else {
                input.empty = false;
                input.attr('name', name);
                input.removeClass('empty');
            }
        };
        var onfocus = function onfocus() {
            if (input.empty) input.val('');
            input.css({ color: '#000' });
            input.addClass('empty');
            input.attr('name', name);
        };
        var onkeyup = function onkeyup() {
            if ($(this).val()) $(this).empty = false;
            input.attr('name', name);
        };
        input.bind('blur', onblur);
        input.bind('focus', onfocus);
        input.bind('keyup', onkeyup);
        if (input.val() == note) input.val('');
        onblur();
    }
    $(document).ready(init);
}

function Remove(str, regex) {
    var flags = "g";
    if (regex.ignoreCase) flags += "i";
    if (regex.multiline) flags += "m";
    var globalRegex = new RegExp(regex.source, flags);
    return str.replace(globalRegex, "");
}

function Trim(str) {
    return Remove(str, /^\s+|\s+$/);
}

function RemoveMultipleSpaces(str) {
    return str.replace(/\s+/g, " ");
}

function FormatInput(str, removeQuotes) {
    if (removeQuotes) {
        var withoutQuotes = str.replace(/\"/g, "");
        return Trim(RemoveMultipleSpaces(withoutQuotes));
    }
    return Trim(RemoveMultipleSpaces(str));
}

function switchTerm(blockId) {
    var block = $("#" + blockId);
    var firstItem = $(block.get(0));
    if (!firstItem.hasClass('termText')) {
        return;
    }
    if (!firstItem.hasClass('termOpen')) {
        firstItem.addClass('termOpen');
        block.show();
    } else {
        firstItem.removeClass('termOpen');
        block.hide();
    }
}

String.prototype.endsWith = function (pattern) {
    var d = this.length - pattern.length;
    return d >= 0 && this.lastIndexOf(pattern) === d;
};

$(function () {
    var CertProcedureMoreLink = function CertProcedureMoreLink() {
        $('.CertProcedure_moreLink_link').click(function () {
            $('.CertProcedure').toggleClass('CertProcedure_hideDesc');
            $(this).remove();
            return false;
        });
    };
    CertProcedureMoreLink();
});

var FaqQuestionForm = function FaqQuestionForm() {
    var questionForm = $('#questionForm'),
        successMessageBox = $('.faqQuestions_message__success'),
        questionFormWrapper = $('.faqQuestions_formWrapper'),
        moreQuestion = $('.faqQuestions_moreQuestion');

    InitPostSimpleFormAsync(questionForm, {
        url: questionForm.data("async-url"),
        useDefaultSuccessMessageShowing: false,
        successCallback: function successCallback(data) {
            successMessageBox.html(data.Message);
            questionFormWrapper.addClass('faqQuestions__success__show');
        }
    });

    moreQuestion.click(function () {
        questionFormWrapper.removeClass('faqQuestions__success__show');
    });
};

function getHexRGBColor(color) {
    color = color.replace(/\s/g, "");
    var aRgb = color.match(/^rgb\((\d{1,3}[%]?),(\d{1,3}[%]?),(\d{1,3}[%]?)\)$/i);
    if (aRgb) {
        color = '';
        for (var i = 1; i <= 3; i++) {
            color += Math.round((aRgb[i][aRgb[i].length - 1] == "%" ? 2.55 : 1) * parseInt(aRgb[i])).toString(16).replace(/^(.)$/, '0$1');
        }
    } else color = color.replace(/^#?([\da-f])([\da-f])([\da-f])$/i, '$1$1$2$2$3$3');
    return color;
}
function splitRGB(color) {
    color = getHexRGBColor(color);
    var matches = color.match(/^#?([\dabcdef]{2})([\dabcdef]{2})([\dabcdef]{2})$/i);
    if (!matches) return false;
    for (var i = 1, rgb = new Array(3); i <= 3; i++) {
        rgb[i - 1] = parseInt(matches[i], 16);
    }return rgb;
}
function itemsGradient(jItems, param, firstColor, lastColor) {

    firstColor = splitRGB(firstColor);
    lastColor = splitRGB(lastColor);

    var num = jItems.length - 1;

    var dR = (lastColor[0] - firstColor[0]) / num;
    var dG = (lastColor[1] - firstColor[1]) / num;
    var dB = (lastColor[2] - firstColor[2]) / num;

    for (var i = 0; i < jItems.length; i++) {
        var r = Math.floor(dR * i + firstColor[0]);
        var g = Math.floor(dG * i + firstColor[1]);
        var b = Math.floor(dB * i + firstColor[2]);
        var color = 'rgb(' + r + ',' + g + ',' + b + ')';
        $(jItems.get(i)).css(param, color);
    }
};
function fontSizeGradient(jItems, firstSize, lastSize, lineHeight, fontUnit) {
    var num = jItems.length - 1;
    var dSize = (lastSize - firstSize) / num;
    for (var i = 0; i < jItems.length; i++) {
        var size = (dSize * i + firstSize).toFixed(3);
        $(jItems.get(i)).css('font-size', size + fontUnit);
    }
    jItems.parent().css('line-height', lineHeight + fontUnit);
};
$(function () {
    itemsGradient($(".UsageOrgsList_item__type_1 a"), 'color', '8ec23f', 'c3df99');
    itemsGradient($(".UsageOrgsList_item__type_2 a"), 'color', '38a3cd', 'b4dcec');
    itemsGradient($(".UsageOrgsList_item__type_3 a, .UsageOrgsList_item__type_4 a, .UsageOrgsList_item__type_5 a"), 'color', '4f6c7a', 'a5b3bb');
    fontSizeGradient($(".UsageOrgsList_item__type_1 a"), 2.615, 1.231, 3, 'em');
    fontSizeGradient($(".UsageOrgsList_item__type_2 a"), 1.692, 0.923, 2, 'em');
    fontSizeGradient($(".UsageOrgsList_item__type_3 a, .UsageOrgsList_item__type_4 a, .UsageOrgsList_item__type_5 a"), 1.308, 0.923, 1.8, 'em');
});

$(document).on('click', '.js-coloredLabel', function () {
    var $label = $(this);
    if ($label.find('input[type="checkbox"]').is(':checked')) {
        $label.addClass('selectedLabel');
    } else {
        $label.removeClass('selectedLabel');
    }
});

$(function () {
    $('.js-coloredLabel').each(function () {
        var $label = $(this);
        if ($label.find('input[type="checkbox"]').is(':checked')) {
            $label.addClass('selectedLabel');
        }
    });
});

function InitFeedbackLightbox(params) {
    $(document).on('click', params.linkSelector, function () {
        var buttons = [{
            text: params.sendButtonLabel,
            click: function click() {
                this.find('form').submit();
            },
            id: 'feedbackLightboxSubmit'
        }];
        $(params.containerSelector).lightbox({
            buttons: buttons,
            create: function create() {
                var self = this;
                var form = self.find('form');
                InitPostSimpleFormAsync(form, {
                    url: params.url,
                    successCallback: function successCallback(data) {
                        //egisterPageEvent('/event/feedback/send');
                        self.lightbox('option', 'bottomPanelVisibility', 'default');
                        var successLightbox = $('#feedbackSuccessLightbox');
                        successLightbox.find('p').html(data.Message);
                        successLightbox.lightbox();
                    },
                    beforeSendCallback: function beforeSendCallback() {
                        $('#feedbackLightboxSubmit').attr("disabled", true);
                    },
                    completeCallback: function completeCallback() {
                        $('#feedbackLightboxSubmit').removeAttr("disabled");
                    },
                    useDefaultSuccessMessageShowing: false
                });
                $(this).find('textarea').elastic();

                //!lteIE7 ? this.find('select').selectBox() : null;
            },
            beforeOpen: function beforeOpen() {
                var self = this;
                var form = self.find('form');
                PostSimpleFormRemoveErrors(form);
                PostSimpleFormClearTextInputs(form);
                PostSimpleFormShowFormChildren(form);
                self.lightbox('option', 'bottomPanelVisibility', 'default');
                self.lightbox('option', 'buttons', buttons);
            },
            open: function open() {
                var self = this;
                self.find(params.focusFieldSelector).select();
                //RegisterPageEvent('/event/feedback/show');
            }
        });

        return false;
    });
}
$(document).ready(function () {
    $('body').live('click', function () {
        $('.js-popup').hide();
        $('.js-togglePopup__active').removeClass('js-togglePopup__active');
    });
    $('.js-togglePopup').live('click', function (event) {
        event.stopPropagation();
        var $popup = $('.js-popup', $(this));
        $('.js-popup:visible').not($popup).hide().parents('.js-togglePopup').removeClass('js-togglePopup__active');
        $popup.toggle();
        $(this).toggleClass('js-togglePopup__active');
    });
    $('.js-popup').live('click', function (event) {
        event.stopPropagation();
    });
});
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function () {
    // значение по умолчанию
    var defaults = {
        closeIcon: null,
        height: 'auto',
        skin: 'default/lightbox_new.css',
        template: '<div class="lightbox2">\
             <table class="centring">\
                <tbody><tr><td class="lightbox-cell">\
                    <div class="lightbox-wrapper">\
                        <div class="lightbox-loader"></div>\
                        <span class="lightbox2-close" title="Закрыть"><span class="lightbox-closeText">Закрыть</span> <span class="lb-cross">&times;</span></span>\
                        <div class="lightbox-content"></div>\
                   </div>\
               </tr></td></tbody>\
            </table>\
            </div>',
        wrapperStyle: false,
        contentStyle: false,
        lightboxClass: false,
        closeText: 'Закрыть',
        autoOpen: true,
        bottomPanelVisibility: true,
        buttons: false,
        buttonTemplate: '<span class="lb-button" />',
        veilClass: false,
        veilClickFade: true,
        panelHtml: false,
        esc: true,
        fullWindowWrapper: false,
        returnableDOM: false,
        preventDefaultEvents: false
    };

    var lightboxes = [];

    var lightboxIdCounter = 0;

    var pageWrapper = $('#pageWrapper'),
        veil = $('#lightbox-veil'),
        myWindow = $(window),
        myDocument = $(document),
        windowHeight = myWindow.height(),
        currentScrollTop;

    function scrollbarWidth() {
        var parent = $('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo('body'),
            child = parent.children(),
            width = child.innerWidth() - child.height(99).innerWidth();
        parent.remove();
        return width;
    }

    function checkPageLayoutForLightbox() {
        pageWrapper = $('#pageWrapper');
        if (pageWrapper.size() == 0) {
            var bodyChild = $('body > :visible');
            if (bodyChild.size() == 1) {
                bodyChild.attr('id', 'pageWrapper');
            } else {
                $('body').wrapInner('<div id="pageWrapper" style="height: ' + windowHeight + 'px"></div>');
            }

            pageWrapper = $('#pageWrapper');
        }

        if (veil.size() == 0) {
            veil = $('<div>').attr({ id: 'lightbox-veil' });
            $('body').append(veil);
        }
    }

    function makeLightboxTemplate() {
        var obj = this;
        checkPageLayoutForLightbox();
        var lightbox = $(this.data('template'));
        this.data('content', lightbox.find('.lightbox-content'));
        this.data('root', lightbox.filter('.lightbox2'));
        this.data('wrapper', lightbox.find('.lightbox-wrapper'));

        lightboxIdCounter++;

        if (this.data('returnableDOM')) {
            this.data('flagID', 'lightboxFlag' + lightboxIdCounter);
            this.after('<input type="hidden" id="' + this.data('flagID') + '" />');
        }

        //bottomPanel
        if (this.data('bottomPanelVisibility')) {
            this.data('bottomPanel', $('<div class="lb-bottom"><div class="lb-clr"></div></div>'));
            this.data('content').after(this.data('bottomPanel'));

            //panelHtml
            if (obj.data('panelHtml')) {
                obj.data('bottomPanel').append($(obj.data('panelHtml')).clone(true));
            } else {
                //buttons placing
                var buttons = this.data('buttons');
                if (buttons) {
                    var closelLink = $('<span class="lb-closeLink">' + this.data('closeText') + '</span>');
                    closelLink.click(function () {
                        closeLightbox(obj);return false;
                    });
                    //buttons object type
                    if ($.type(buttons) === 'object' && !$.isEmptyObject(buttons)) {
                        this.data('bottomPanel').prepend(closelLink);
                        $.each(buttons, function (key, value) {
                            var button = $(obj.data('buttonTemplate'));
                            button.text(key);
                            button.append('<span class="button_orange-right"></span>');
                            obj.data('bottomPanel').prepend(button);
                            button.data('id', key);
                            button.click(function () {
                                value.apply(obj, arguments);
                            });
                        });
                        //buttons array type
                    } else if ($.isArray(buttons) && buttons.length > 0) {
                        obj.data('bottomPanel').prepend(closelLink);
                        $.each(buttons, function (key, value) {
                            var button = $(obj.data('buttonTemplate'));

                            $.each(value, function (btkey, btvalue) {
                                if (btkey == 'text') {
                                    button.text(value.text);
                                } else if (btkey == 'click') {
                                    button.click(function () {
                                        value.click.apply(obj, arguments);
                                    });
                                } else if (btkey == 'template') {
                                    button = $(btvalue);
                                } else {
                                    button.attr(btkey, btvalue);
                                }
                            });
                            button.append('<span class="button_orange-right"></span>');
                            obj.data('bottomPanel').prepend(button);
                        });
                    } else {
                        $.error('Buttons incorrect format or empty object');
                    }
                } else {
                    createDefaultBottomPanel(obj);
                }
            }
        }

        this.appendTo(obj.data('content'));

        this.data('wrapperStyle') ? this.data('wrapper').css(this.data('wrapperStyle')) : null;
        this.data('contentStyle') ? this.data('content').css(this.data('contentStyle')) : null;
        this.data('lightboxClass') ? lightbox.addClass(this.data('lightboxClass')) : null;

        //closeEvents
        lightbox.find('.lightbox2-close').click(function () {
            closeLightbox(obj);
        });

        $('body').append(lightbox);

        obj.data({
            isCreated: true,
            lightbox: lightbox
        });

        lightboxes.push(obj);

        //CALLBACK 'create'
        if ($.isFunction(obj.data('create'))) {
            obj.data('create').apply(obj, arguments);
        }
    }

    function createDefaultBottomPanel(obj) {
        var closeButton = $('<span class="lb-button js-lb-closeLink" value="">' + obj.data('closeText') + '</span>');
        closeButton.append('<span class="button_orange-right"></span>');
        obj.data('bottomPanel').html('<div class="lb-clr"></div>').prepend(closeButton);

        closeButton.click(function () {
            closeLightbox(obj);
        });
    }

    function updateParams(obj) {
        windowHeight = myWindow.height();
        veil.height(windowHeight);
        pageWrapper.height(windowHeight);
        /* check */
        obj.data('lightbox').height(windowHeight);
    }
    function updateLbHeight() {
        var obj = this;
        var wrapper = obj.data('wrapper');
        var bottomPanel = obj.data('bottomPanel');
        var bottomPanelHeight = bottomPanel ? bottomPanel.outerHeight() : 0;
        this.data('content').height(function () {
            var result = myWindow.height() - 40 - parseInt(wrapper.css('padding-top')) - parseInt(wrapper.css('padding-bottom')) - bottomPanelHeight - parseInt(obj.data('content').css('margin-bottom')) - parseInt(obj.data('content').css('margin-top'));
            return result;
        });
    }
    function veilClickfadeCheck(obj) {
        if (obj.data('veilClickFade')) {
            obj.data('lightbox').bind('mousedown.fadeLightbox', function (e) {
                var require1 = e.pageX < obj.data('wrapper').offset().left;
                var require2 = e.pageX > obj.data('wrapper').offset().left + obj.data('wrapper').outerWidth() && e.pageX < obj.data('lightbox').width() - scrollbarWidth();
                var require3 = e.pageY < obj.data('wrapper').offset().top;
                var require4 = e.pageY > obj.data('wrapper').offset().top + obj.data('wrapper').outerHeight() && e.pageY < obj.data('lightbox').height() - scrollbarWidth();
                var require5 = $(e.target).parents('.lightbox-wrapper').size() == 0 && !$(e.target).hasClass('lightbox-wrapper');

                //IE return undefined from $(e.target).context, if target is input:disabled
                var require6 = $(e.target).context !== undefined;

                if ((require1 || require2 || require3 || require4) && require5 && require6) {
                    closeLightbox(obj);
                    obj.data('lightbox').unbind('mousedown.fadeLightbox');
                }
            });
        } else {
            obj.data('lightbox').unbind('mousedown.fadeLightbox');
        }
    }
    function showLightbox(obj) {
        $(window).trigger('lightboxOpen');

        if ($('.spw').length) {
            $(window).trigger("swpClosed");
        }

        try {
            currentScrollTop = $(document).scrollTop();
        } catch (e) {
            //NOTE catch ie8 bug after changing trusted site status #17421
        }

        pageWrapper.addClass('lb-open');
        $('html, body').addClass('lb-on');

        myWindow.bind('resize.lightbox', function () {
            if (obj.data('isOpen')) {
                updateParams(obj);
            }
        });

        if (obj.data('esc')) {
            myDocument.bind('keyup.lightbox', function (e) {
                if (e.keyCode == 27) {
                    closeLightbox(obj);
                }
            });
        }

        if (obj.data('veilClass')) {
            veil.addClass(obj.data('veilClass'));
        }

        veilClickfadeCheck(obj);

        $.each(lightboxes, function (index, val) {
            if (val.lightbox('isOpen')) {
                hideLightbox(val);
            }
        });

        if (obj.data('returnableDOM')) {
            obj.appendTo(obj.data('content'));
        }

        $(document).on('click.closeLightbox', '.js-closeLightbox', function () {
            obj.lightbox('close');
        });

        //CALLBACK 'beforeOpen'
        if ($.isFunction(obj.data('beforeOpen'))) {
            obj.data('beforeOpen').apply(obj, arguments);
        }

        //fullWindow?
        if (obj.data('fullWindowWrapper')) {
            obj.data('root').addClass('fullWindow');
            updateLbHeight.apply(obj, arguments);
            myWindow.bind('resize.updateLbHeight', function () {
                updateLbHeight.apply(obj, arguments);
            });
        }

        updateParams(obj);

        veil.css('top', 0);
        try {
            obj.data('lightbox').css('top', 0);
        } catch (e) {
            //NOTE catch ie8 bug after changing trusted site status #17421
        }

        veil.fadeIn('fast');
        obj.data('lightbox').height(myWindow.height()).show();
        obj.data('lightbox').fadeIn('fast', function () {
            pageWrapper.scrollTop(currentScrollTop);
            //isOpen flag on
            obj.data('isOpen', true);

            //CALLBACK 'open'
            if ($.isFunction(obj.data('open'))) {
                obj.data('open').apply(obj, arguments);
            }

            //event registration

            if (!obj.data('preventDefaultEvents')) {
                if (obj.data('event')) {
                    myWindow.trigger('pageEvent', 'event-' + obj.data('event') + '-lightbox');
                } else {
                    myWindow.trigger('pageEvent', getLightboxEventName.call(obj));
                }
            }
        });
        if (obj.data('fullWindowWrapper')) {
            updateLbHeight.apply(obj, arguments);
        }
    }
    function closeLightbox(obj) {
        $(document).off('click.closeLightbox');

        //CALLBACK 'beforeClose'
        if ($.isFunction(obj.data('beforeClose'))) {
            var result = obj.data('beforeClose').apply(obj, arguments);
            if (result === false) return;
        }

        if (obj.data('fullWindowWrapper')) {
            myWindow.unbind('resize.updateLbHeight');
            obj.data('root').removeClass('fullWindow');
        }

        myWindow.unbind('resize.lightbox');
        myDocument.unbind('keyup.lightbox');

        obj.data('lightbox').unbind('click.fadeLightbox');

        veil.fadeOut('fast', function () {
            veil.removeClass(obj.data('veilClass'));
        });

        obj.data('lightbox').fadeOut('fast', function () {
            $('html, body').removeClass('lb-on');

            //isOpen flag on
            obj.data('isOpen', false);

            //CALLBACK 'close'
            if ($.isFunction(obj.data('close'))) {
                obj.data('close').apply(obj, arguments);
            }

            $(window).trigger('lightboxClose');

            if (obj.data('returnableDOM')) {
                obj.insertBefore($('#' + obj.data('flagID')));
            }

            pageWrapper.removeClass('lb-open').removeAttr('style');
            $(document).scrollTop(currentScrollTop);

            //CALLBACK 'afterClose'
            if ($.isFunction(obj.data('afterClose'))) {
                obj.data('afterClose').apply(obj, arguments);
            }
        });
    }

    function hideLightbox(obj) {
        //CALLBACK 'beforeClose'
        if ($.isFunction(obj.data('beforeClose'))) {
            var result = obj.data('beforeClose').apply(obj, arguments);
            if (result === false) return;
        }
        if (obj.data('fullWindowWrapper')) {
            myWindow.unbind('resize.updateLbHeight');
            obj.data('root').removeClass('fullWindow');
        }
        obj.data('lightbox').unbind('click.fadeLightbox');
        obj.data('lightbox').hide().data('isOpen', false);

        //CALLBACK 'close'
        if ($.isFunction(obj.data('close'))) {
            obj.data('close').apply(obj, arguments);
        }
        currentScrollTop = pageWrapper.scrollTop();
        $(document).scrollTop(currentScrollTop);

        //CALLBACK 'afterClose'
        if ($.isFunction(obj.data('afterClose'))) {
            obj.data('afterClose').apply(obj, arguments);
        }
    }

    function getLightboxEventName() {
        var eventName = this.data('event') || this.data('event-name') || this.attr('action') || this.attr('id') || this.selector;
        return 'event-' + eventName + '-lightbox';
    }

    // наши публичные методы
    var methods = {
        // инициализация плагина
        init: function init(params) {
            if (this.data('isCreated')) {
                if (this.data('autoOpen')) {
                    showLightbox(this);
                }
            } else if (this.size() == 1) {
                // актуальные настройки, будут индивидуальными при каждом запуске
                var options = $.extend({}, defaults, params);
                this.data(options);

                makeLightboxTemplate.apply(this, arguments);
                if (this.data('autoOpen')) {
                    showLightbox(this);
                }
            } else if (this.size() == 0) {
                $.error('content for lightbox not finded content selector: "' + this.selector + '"');
            } else if (this.size() > 1) {
                $.error('to many blocks for lightbox on page. (size > 1. Must be only one)');
            }

            return this;
        },
        // изменение цвета
        open: function open() {
            showLightbox(this);
        },
        close: function close() {
            closeLightbox(this);
        },
        destroy: function destroy() {
            this.data('lightbox').remove();
            this.data('isCreated', false);
            this.remove();
            veil.hide();
        },
        isOpen: function isOpen() {
            if (this.data('isOpen')) {
                return true;
            } else {
                return false;
            }
        },
        saveState: function saveState() {
            this.data('state', this.html());
        },
        loadState: function loadState() {
            this.html(this.data('state'));
        },
        option: function option(_option, val) {
            var self = this;

            switch (_option) {
                case 'disabled':
                    if ($.type(val) === 'boolean') {
                        //setter way
                        this.data('disabled', val);
                        return this;
                    } else {
                        //getter way
                        return this.data('disabled');
                    }
                case 'autoOpen':
                    if ($.type(val) === 'boolean') {
                        //setter way
                        this.data('autoOpen', val);
                        return this;
                    } else {
                        //getter way
                        return this.data('autoOpen');
                    }
                case 'buttons':
                    var closeLink;
                    if (val && $.type(val) === 'object' && !$.isEmptyObject(val)) {
                        //setter with obj
                        $.each(val, function (key, value) {
                            var button = $(self.data('buttonTemplate'));
                            button.text(key);
                            button.append('<span class="button_orange-right"></span>');
                            self.data('bottomPanel').prepend(button);
                            button.data('id', key);
                            button.click(function () {
                                value.apply(self, arguments);
                            });
                        });
                        closeLink = $('<span class="lb-closeLink">Закрыть</span>');
                        closeLink.click(function () {
                            closeLightbox(self);
                        });
                        this.data('bottomPanel').find('.lb-closeLink').replaceWith(closeLink);
                        return this;
                    } else if ($.isArray(val) && val.length > 0) {
                        //setter with array
                        $.each(val, function (key, value) {
                            var button = $(self.data('buttonTemplate'));

                            $.each(value, function (btkey, btvalue) {
                                if (btkey == 'text') {
                                    button.text(value.text);
                                } else if (btkey == 'click') {
                                    button.click(function () {
                                        value.click.apply(self, arguments);
                                    });
                                } else if (btkey == 'template') {
                                    button = $(btvalue);
                                } else {
                                    button.attr(btkey, btvalue);
                                }
                            });
                            button.append('<span class="button_orange-right"></span>');
                            self.data('bottomPanel').prepend(button);
                        });
                        closeLink = $('<span class="lb-closeLink">Закрыть</span>');
                        closeLink.click(function () {
                            closeLightbox(self);
                        });
                        this.data('bottomPanel').find('.js-lb-closeLink').replaceWith(closeLink);
                        return this;
                    } else {
                        $.error('Неверный формат данных для кнопки');
                        return this;
                    }
                case 'bottomPanelVisibility':
                    if ($.type(val) === 'boolean') {
                        //setter way
                        if (val === true) {
                            if (this.data('bottomPanelVisibility') === false) {
                                this.data('bottomPanel', $('<div class="lb-bottom"></div>'));
                                this.data('bottomPanel').hide();
                                this.data('content').after(this.data('bottomPanel'));
                                this.data('bottomPanelVisibility', true);
                                this.data('bottomPanel').show();
                                createDefaultBottomPanel(this);
                            } else {
                                $.error('bottomPanel already exist');
                            }
                        } else {
                            if (this.data('bottomPanelVisibility') === true) {
                                this.data('bottomPanel').remove();
                                this.data('bottomPanelVisibility', false);
                            } else {
                                $.error('bottomPanel not exist');
                            }
                        }
                        return this;
                    } else if (val === 'default') {
                        this.data('bottomPanelVisibility', true);
                        createDefaultBottomPanel(this);
                    } else {
                        //getter way
                        return this.data('bottomPanelVisibility');
                    }
                    break;
                case 'closeText':
                    if ($.type(val) === 'string') {
                        //setterWay
                        this.data('closeText', val);
                        var closeControll = this.data('bottomPanel').find('.lb-closeLink');
                        if (closeControll.is(':input')) {
                            closeControll.val(val);
                        } else {
                            closeControll.text(val);
                        }
                    } else {
                        //getter way
                        return this.data('closeText');
                    }

                    break;
                case 'wrapperStyle':
                    if (val && $.type(val) === 'object' && !$.isEmptyObject(val)) {
                        //setter way
                        this.data('wrapperStyle', val);
                        this.data('wrapper').css(val);
                    } else {
                        $.error('Неверный формат стилей. Пример правильного использования — {width: "500px", padding: 0}');
                    }
                    break;
                case 'contentStyle':
                    if (val && $.type(val) === 'object' && !$.isEmptyObject(val)) {
                        //setter way
                        this.data('contentStyle', val);
                        this.data('content').css(val);
                    } else {
                        $.error('Неверный формат стилей. Пример правильного использования — {width: "500px", padding: 0}');
                    }
                    break;
                case 'lightboxClass':
                    if ($.type(val) === 'string' && val.length > 0) {
                        this.data('lightbox').addClass(val);
                    }
                    break;
                case 'fullWindowWrapper':
                    if ($.type(val) === 'boolean') {
                        this.data('root').addClass('fullWindow');
                        updateLbHeight.apply(this, arguments);
                        myWindow.bind('resize.updateLbHeight', function () {
                            updateLbHeight.apply(this, arguments);
                        });
                    }
                    break;
                case 'veilClass':
                    if ($.type(val) === 'string' && val.length > 0) {
                        this.data('veilClass', val);
                        veil.addClass(val);
                    }
                    return this;
                case 'veilClickFade':
                    if ($.type(val) === 'boolean') {
                        //setter way
                        this.data('veilClickFade', val);
                        veilClickfadeCheck(this);
                        return this;
                    } else {
                        //getter way
                        return this.data('veilClickFade');
                    }
                case 'open':
                    if ($.isFunction(val)) {
                        this.data('open', val);
                    }
                    break;
                case 'beforeOpen':
                    if ($.isFunction(val)) {
                        this.data('beforeOpen', val);
                    }
                    break;
                case 'afterClose':
                    if ($.isFunction(val)) {
                        this.data('afterClose', val);
                    }
                    break;
                case 'close':
                    if ($.isFunction(val)) {
                        this.data('close', val);
                    }
                    break;
                case 'beforeClose':
                    if ($.isFunction(val)) {
                        this.data('beforeClose', val);
                    }
                    break;
                case 'esc':
                    if ($.type(val) === 'boolean') {
                        //setter way
                        this.data('esc', val);
                        return this;
                    } else {
                        //getter Way
                        return this.data('esc');
                    }
                case 'panelHtml':
                    this.data('panelHtml', val);
                    this.data('bottomPanel').html('').append($(val).clone(true));
                    return this;

                default:
                    $.error('Опция "' + _option + '" не найдена в плагине jQuery.lightbox');
            }
            return this;
        }
    };

    $.fn.lightbox = function (method) {
        // немного магии
        if (methods[method]) {
            // если запрашиваемый метод существует, мы его вызываем
            // все параметры, кроме имени метода прийдут в метод
            // this так же перекочует в метод
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if ((typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' || !method) {
            // если первым параметром идет объект, либо совсем пусто
            // выполняем метод init
            return methods.init.apply(this, arguments);
        } else {
            // если ничего не получилось
            $.error('Метод "' + method + '" не найден в плагине jQuery.lightbox');
        }
    };
})(jQuery);

/* docs 

Example:
$('#dialog').lightbox({
    create: function () { console.log('create!') },
    open: function () { console.log('open!') },
    close: function () { console.log('close!') },
    beforeClose: function () { console.log('beforeClose!') },
    autoOpen: false,
    bottomPanelVisibility: false
    });

Callbacks:
    create, open, beforeOpen, close, beforeClose

Methods:
    Exemple:
    $('#text').lightbox('open');
    open, destroy, close, isOpen, option

Options:

    Exemple:
    $('#text').lightbox('option', 'bottomPanelVisibility', false);

    List:
    disable (в стадии заглушка) [bool] — сделать контент лайтбокса недоступным для кликов,
    wrapperStyle [object] — стили для обертки лайтбокса (белый прямоугольник)
    autoOpen [bool] — нужно ли автоматически открыть лайтбокс после инициализации. Если false, то открыться будет только при $('#lightbox').lightbox('open'),
    bottomPanelVisibility [bool] — включает нижнюю панель лайтбокса. Требуется для кнопок,
    buttons [[], {}] — расставляет кнопки и события по клику по ним,
    contentStyle [{}] — задать стили для контент-зоны лайтбокса,
    esc [bool] — закрывать ли лайтбокс по нажатии клавиши esc,
    lightboxClass [string] — добавить класс блоку базовому лайтбокса (не распространаяется на вуаль),
    closeText [string] — текс, отображающийся на кнопке/ссылке закрытия,
    veilClass — задает класс блоку затемнения документа, который будет присвоен ТОЛЬКО на момент показа лайтбокса.
    fullWindowWrapper [bool] — растягивает лайтбокс на всю высоту окна.
    returnableDOM: [bool] — при true после закрытия лайтбокса будет возвращать дом-объект в то место, откуда их выдрал.
    panelHtml — [selector] — хтмл, который будет находиться в нижней панели лайтбокса.
*/
/**
 * 
 * Magnific Popup Core JS file
 * 
 */


/**
 * Private static constants
 */
var CLOSE_EVENT = 'Close',
    BEFORE_CLOSE_EVENT = 'BeforeClose',
    AFTER_CLOSE_EVENT = 'AfterClose',
    BEFORE_APPEND_EVENT = 'BeforeAppend',
    MARKUP_PARSE_EVENT = 'MarkupParse',
    OPEN_EVENT = 'Open',
    CHANGE_EVENT = 'Change',
    NS = 'mfp',
    EVENT_NS = '.' + NS,
    READY_CLASS = 'mfp-ready',
    REMOVING_CLASS = 'mfp-removing',
    PREVENT_CLOSE_CLASS = 'mfp-prevent-close';


/**
 * Private vars 
 */
/*jshint -W079 */
var mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'
    MagnificPopup = function() {},
    _isJQ = !!(window.jQuery),
    _prevStatus,
    _window = $(window),
    _document,
    _prevContentType,
    _wrapClasses,
    _currPopupType;


/**
 * Private functions
 */
var _mfpOn = function(name, f) {
        mfp.ev.on(NS + name + EVENT_NS, f);
    },
    _getEl = function(className, appendTo, html, raw) {
        var el = document.createElement('div');
        el.className = 'mfp-' + className;
        if (html) {
            el.innerHTML = html;
        }
        if (!raw) {
            el = $(el);
            if (appendTo) {
                el.appendTo(appendTo);
            }
        } else if (appendTo) {
            appendTo.appendChild(el);
        }
        return el;
    },
    _mfpTrigger = function(e, data) {
        mfp.ev.triggerHandler(NS + e, data);

        if (mfp.st.callbacks) {
            // converts "mfpEventName" to "eventName" callback and triggers it if it's present
            e = e.charAt(0).toLowerCase() + e.slice(1);
            if (mfp.st.callbacks[e]) {
                mfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);
            }
        }
    },
    _getCloseBtn = function(type) {
        if (type !== _currPopupType || !mfp.currTemplate.closeBtn) {
            mfp.currTemplate.closeBtn = $(mfp.st.closeMarkup.replace('%title%', mfp.st.tClose));
            _currPopupType = type;
        }
        return mfp.currTemplate.closeBtn;
    },
    // Initialize Magnific Popup only when called at least once
    _checkInstance = function() {
        if (!$.magnificPopup.instance) {
            /*jshint -W020 */
            mfp = new MagnificPopup();
            mfp.init();
            $.magnificPopup.instance = mfp;
        }
    },
    // CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr
    supportsTransitions = function() {
        var s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist
            v = ['ms', 'O', 'Moz', 'Webkit']; // 'v' for vendor

        if (s['transition'] !== undefined) {
            return true;
        }

        while (v.length) {
            if (v.pop() + 'Transition' in s) {
                return true;
            }
        }

        return false;
    };


/**
 * Public functions
 */
MagnificPopup.prototype = {
    constructor: MagnificPopup,

    /**
     * Initializes Magnific Popup plugin. 
     * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed
     */
    init: function() {
        var appVersion = navigator.appVersion;
        mfp.isIE7 = appVersion.indexOf("MSIE 7.") !== -1;
        mfp.isIE8 = appVersion.indexOf("MSIE 8.") !== -1;
        mfp.isLowIE = mfp.isIE7 || mfp.isIE8;
        mfp.isAndroid = (/android/gi).test(appVersion);
        mfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);
        mfp.supportsTransition = supportsTransitions();

        // We disable fixed positioned lightbox on devices that don't handle it nicely.
        // If you know a better way of detecting this - let me know.
        mfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent));
        _document = $(document);

        mfp.popupsCache = {};
    },

    /**
     * Opens popup
     * @param  data [description]
     */
    open: function(data) {

        var i;

        if (data.isObj === false) {
            // convert jQuery collection to array to avoid conflicts later
            mfp.items = data.items.toArray();

            mfp.index = 0;
            var items = data.items,
                item;
            for (i = 0; i < items.length; i++) {
                item = items[i];
                if (item.parsed) {
                    item = item.el[0];
                }
                if (item === data.el[0]) {
                    mfp.index = i;
                    break;
                }
            }
        } else {
            mfp.items = $.isArray(data.items) ? data.items : [data.items];
            mfp.index = data.index || 0;
        }

        // if popup is already opened - we just update the content
        if (mfp.isOpen) {
            mfp.updateItemHTML();
            return;
        }

        mfp.types = [];
        _wrapClasses = '';
        if (data.mainEl && data.mainEl.length) {
            mfp.ev = data.mainEl.eq(0);
        } else {
            mfp.ev = _document;
        }

        if (data.key) {
            if (!mfp.popupsCache[data.key]) {
                mfp.popupsCache[data.key] = {};
            }
            mfp.currTemplate = mfp.popupsCache[data.key];
        } else {
            mfp.currTemplate = {};
        }


        mfp.st = $.extend(true, {}, $.magnificPopup.defaults, data);
        mfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;

        if (mfp.st.modal) {
            mfp.st.closeOnContentClick = false;
            mfp.st.closeOnBgClick = false;
            mfp.st.showCloseBtn = false;
            mfp.st.enableEscapeKey = false;
        }


        // Building markup
        // main containers are created only once
        if (!mfp.bgOverlay) {

            // Dark overlay
            mfp.bgOverlay = _getEl('bg').on('click' + EVENT_NS, function() {
                mfp.close();
            });

            mfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click' + EVENT_NS, function(e) {
                if (mfp._checkIfClose(e.target)) {
                    mfp.close();
                }
            });

            mfp.container = _getEl('container', mfp.wrap);
        }

        mfp.contentContainer = _getEl('content');
        if (mfp.st.preloader) {
            mfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);
        }


        // Initializing modules
        var modules = $.magnificPopup.modules;
        for (i = 0; i < modules.length; i++) {
            var n = modules[i];
            n = n.charAt(0).toUpperCase() + n.slice(1);
            mfp['init' + n].call(mfp);
        }
        _mfpTrigger('BeforeOpen');


        if (mfp.st.showCloseBtn) {
            // Close button
            if (!mfp.st.closeBtnInside) {
                mfp.wrap.append(_getCloseBtn());
            } else {
                _mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {
                    values.close_replaceWith = _getCloseBtn(item.type);
                });
                _wrapClasses += ' mfp-close-btn-in';
            }
        }

        if (mfp.st.alignTop) {
            _wrapClasses += ' mfp-align-top';
        }


        if (mfp.fixedContentPos) {
            mfp.wrap.css({
                overflow: mfp.st.overflowY,
                overflowX: 'hidden',
                overflowY: mfp.st.overflowY
            });
        } else {
            mfp.wrap.css({
                top: _window.scrollTop(),
                position: 'absolute'
            });
        }
        if (mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos)) {
            mfp.bgOverlay.css({
                height: _document.height(),
                position: 'absolute'
            });
        }


        if (mfp.st.enableEscapeKey) {
            // Close on ESC key
            _document.on('keyup' + EVENT_NS, function(e) {
                if (e.keyCode === 27) {
                    mfp.close();
                }
            });
        }

        _window.on('resize' + EVENT_NS, function() {
            mfp.updateSize();
        });


        if (!mfp.st.closeOnContentClick) {
            _wrapClasses += ' mfp-auto-cursor';
        }

        if (_wrapClasses)
            mfp.wrap.addClass(_wrapClasses);


        // this triggers recalculation of layout, so we get it once to not to trigger twice
        var windowHeight = mfp.wH = _window.height();


        var windowStyles = {};

        if (mfp.fixedContentPos) {
            if (mfp._hasScrollBar(windowHeight)) {
                var s = mfp._getScrollbarSize();
                if (s) {
                    windowStyles.marginRight = s;
                }
            }
        }

        if (mfp.fixedContentPos) {
            if (!mfp.isIE7) {
                windowStyles.overflow = 'hidden';
            } else {
                // ie7 double-scroll bug
                $('body, html').css('overflow', 'hidden');
            }
        }


        var classesToadd = mfp.st.mainClass;
        if (mfp.isIE7) {
            classesToadd += ' mfp-ie7';
        }
        if (classesToadd) {
            mfp._addClassToMFP(classesToadd);
        }

        // add content
        mfp.updateItemHTML();

        _mfpTrigger('BuildControls');

        // remove scrollbar, add margin e.t.c
        $('html').css(windowStyles);

        // add everything to DOM
        mfp.bgOverlay.add(mfp.wrap).prependTo(mfp.st.prependTo || $(document.body));

        // Save last focused element
        mfp._lastFocusedEl = document.activeElement;

        // Wait for next cycle to allow CSS transition
        setTimeout(function() {

            if (mfp.content) {
                mfp._addClassToMFP(READY_CLASS);
                mfp._setFocus();
            } else {
                // if content is not defined (not loaded e.t.c) we add class only for BG
                mfp.bgOverlay.addClass(READY_CLASS);
            }

            // Trap the focus in popup
            _document.on('focusin' + EVENT_NS, mfp._onFocusIn);

        }, 16);

        mfp.isOpen = true;
        mfp.updateSize(windowHeight);
        _mfpTrigger(OPEN_EVENT);

        return data;
    },

    /**
     * Closes the popup
     */
    close: function() {
        if (!mfp.isOpen) return;
        _mfpTrigger(BEFORE_CLOSE_EVENT);

        mfp.isOpen = false;
        // for CSS3 animation
        if (mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition) {
            mfp._addClassToMFP(REMOVING_CLASS);
            setTimeout(function() {
                mfp._close();
            }, mfp.st.removalDelay);
        } else {
            mfp._close();
        }
    },

    /**
     * Helper for close() function
     */
    _close: function() {
        _mfpTrigger(CLOSE_EVENT);

        var classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';

        mfp.bgOverlay.detach();
        mfp.wrap.detach();
        mfp.container.empty();

        if (mfp.st.mainClass) {
            classesToRemove += mfp.st.mainClass + ' ';
        }

        mfp._removeClassFromMFP(classesToRemove);

        if (mfp.fixedContentPos) {
            var windowStyles = { marginRight: '' };
            if (mfp.isIE7) {
                $('body, html').css('overflow', '');
            } else {
                windowStyles.overflow = '';
            }
            $('html').css(windowStyles);
        }

        _document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);
        mfp.ev.off(EVENT_NS);

        // clean up DOM elements that aren't removed
        mfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');
        mfp.bgOverlay.attr('class', 'mfp-bg');
        mfp.container.attr('class', 'mfp-container');

        // remove close button from target element
        if (mfp.st.showCloseBtn &&
        (!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {
            if (mfp.currTemplate.closeBtn)
                mfp.currTemplate.closeBtn.detach();
        }


        if (mfp._lastFocusedEl) {
            $(mfp._lastFocusedEl).focus(); // put tab focus back
        }
        mfp.currItem = null;
        mfp.content = null;
        mfp.currTemplate = null;
        mfp.prevHeight = 0;

        _mfpTrigger(AFTER_CLOSE_EVENT);
    },

    updateSize: function(winHeight) {

        if (mfp.isIOS) {
            // fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2
            var zoomLevel = document.documentElement.clientWidth / window.innerWidth;
            var height = window.innerHeight * zoomLevel;
            mfp.wrap.css('height', height);
            mfp.wH = height;
        } else {
            mfp.wH = winHeight || _window.height();
        }
        // Fixes #84: popup incorrectly positioned with position:relative on body
        if (!mfp.fixedContentPos) {
            mfp.wrap.css('height', mfp.wH);
        }

        _mfpTrigger('Resize');

    },

    /**
     * Set content of popup based on current index
     */
    updateItemHTML: function() {
        var item = mfp.items[mfp.index];

        // Detach and perform modifications
        mfp.contentContainer.detach();

        if (mfp.content)
            mfp.content.detach();

        if (!item.parsed) {
            item = mfp.parseEl(mfp.index);
        }

        var type = item.type;

        _mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);
        // BeforeChange event works like so:
        // _mfpOn('BeforeChange', function(e, prevType, newType) { });

        mfp.currItem = item;


        if (!mfp.currTemplate[type]) {
            var markup = mfp.st[type] ? mfp.st[type].markup : false;

            // allows to modify markup
            _mfpTrigger('FirstMarkupParse', markup);

            if (markup) {
                mfp.currTemplate[type] = $(markup);
            } else {
                // if there is no markup found we just define that template is parsed
                mfp.currTemplate[type] = true;
            }
        }

        if (_prevContentType && _prevContentType !== item.type) {
            mfp.container.removeClass('mfp-' + _prevContentType + '-holder');
        }

        var newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);
        mfp.appendContent(newContent, type);

        item.preloaded = true;

        _mfpTrigger(CHANGE_EVENT, item);
        _prevContentType = item.type;

        // Append container back after its content changed
        mfp.container.prepend(mfp.contentContainer);

        _mfpTrigger('AfterChange');
    },


    /**
     * Set HTML content of popup
     */
    appendContent: function(newContent, type) {
        mfp.content = newContent;

        if (newContent) {
            if (mfp.st.showCloseBtn && mfp.st.closeBtnInside &&
                mfp.currTemplate[type] === true) {
                // if there is no markup, we just append close button element inside
                if (!mfp.content.find('.mfp-close').length) {
                    mfp.content.append(_getCloseBtn());
                }
            } else {
                mfp.content = newContent;
            }
        } else {
            mfp.content = '';
        }

        _mfpTrigger(BEFORE_APPEND_EVENT);
        mfp.container.addClass('mfp-' + type + '-holder');

        mfp.contentContainer.append(mfp.content);
    },


/**
     * Creates Magnific Popup data object based on given data
     * @param  {int} index Index of item to parse
     */
    parseEl: function(index) {
        var item = mfp.items[index],
            type;

        if (item.tagName) {
            item = { el: $(item) };
        } else {
            type = item.type;
            item = { data: item, src: item.src };
        }

        if (item.el) {
            var types = mfp.types;

            // check for 'mfp-TYPE' class
            for (var i = 0; i < types.length; i++) {
                if (item.el.hasClass('mfp-' + types[i])) {
                    type = types[i];
                    break;
                }
            }

            item.src = item.el.attr('data-mfp-src');
            if (!item.src) {
                item.src = item.el.attr('href');
            }
        }

        item.type = type || mfp.st.type || 'inline';
        item.index = index;
        item.parsed = true;
        mfp.items[index] = item;
        _mfpTrigger('ElementParse', item);

        return mfp.items[index];
    },


    /**
     * Initializes single popup or a group of popups
     */
    addGroup: function(el, options) {
        var eHandler = function(e) {
            e.mfpEl = this;
            mfp._openClick(e, el, options);
        };

        if (!options) {
            options = {};
        }

        var eName = 'click.magnificPopup';
        options.mainEl = el;

        if (options.items) {
            options.isObj = true;
            el.off(eName).on(eName, eHandler);
        } else {
            options.isObj = false;
            if (options.delegate) {
                el.off(eName).on(eName, options.delegate, eHandler);
            } else {
                options.items = el;
                el.off(eName).on(eName, eHandler);
            }
        }
    },
    _openClick: function(e, el, options) {
        var midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;


        if (!midClick && (e.which === 2 || e.ctrlKey || e.metaKey)) {
            return;
        }

        var disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;

        if (disableOn) {
            if ($.isFunction(disableOn)) {
                if (!disableOn.call(mfp)) {
                    return true;
                }
            } else { // else it's number
                if (_window.width() < disableOn) {
                    return true;
                }
            }
        }

        if (e.type) {
            e.preventDefault();

            // This will prevent popup from closing if element is inside and popup is already opened
            if (mfp.isOpen) {
                e.stopPropagation();
            }
        }


        options.el = $(e.mfpEl);
        if (options.delegate) {
            options.items = el.find(options.delegate);
        }
        mfp.open(options);
    },


    /**
     * Updates text on preloader
     */
    updateStatus: function(status, text) {

        if (mfp.preloader) {
            if (_prevStatus !== status) {
                mfp.container.removeClass('mfp-s-' + _prevStatus);
            }

            if (!text && status === 'loading') {
                text = mfp.st.tLoading;
            }

            var data = {
                status: status,
                text: text
            };
            // allows to modify status
            _mfpTrigger('UpdateStatus', data);

            status = data.status;
            text = data.text;

            mfp.preloader.html(text);

            mfp.preloader.find('a').on('click', function(e) {
                e.stopImmediatePropagation();
            });

            mfp.container.addClass('mfp-s-' + status);
            _prevStatus = status;
        }
    },


    /*
        "Private" helpers that aren't private at all
     */
    // Check to close popup or not
    // "target" is an element that was clicked
    _checkIfClose: function(target) {

        if ($(target).hasClass(PREVENT_CLOSE_CLASS)) {
            return;
        }

        var closeOnContent = mfp.st.closeOnContentClick;
        var closeOnBg = mfp.st.closeOnBgClick;

        if (closeOnContent && closeOnBg) {
            return true;
        } else {

            // We close the popup if click is on close button or on preloader. Or if there is no content.
            if (!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0])) {
                return true;
            }

            // if click is outside the content
            if ((target !== mfp.content[0] && !$.contains(mfp.content[0], target))) {
                if (closeOnBg) {
                    // last check, if the clicked element is in DOM, (in case it's removed onclick)
                    if ($.contains(document, target)) {
                        return true;
                    }
                }
            } else if (closeOnContent) {
                return true;
            }

        }
        return false;
    },
    _addClassToMFP: function(cName) {
        mfp.bgOverlay.addClass(cName);
        mfp.wrap.addClass(cName);
    },
    _removeClassFromMFP: function(cName) {
        this.bgOverlay.removeClass(cName);
        mfp.wrap.removeClass(cName);
    },
    _hasScrollBar: function(winHeight) {
        return ((mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()));
    },
    _setFocus: function() {
        (mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();
    },
    _onFocusIn: function(e) {
        if (e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target)) {
            mfp._setFocus();
            return false;
        }
    },
    _parseMarkup: function(template, values, item) {
        var arr;
        if (item.data) {
            values = $.extend(item.data, values);
        }
        _mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item]);

        $.each(values, function(key, value) {
            if (value === undefined || value === false) {
                return true;
            }
            arr = key.split('_');
            if (arr.length > 1) {
                var el = template.find(EVENT_NS + '-' + arr[0]);

                if (el.length > 0) {
                    var attr = arr[1];
                    if (attr === 'replaceWith') {
                        if (el[0] !== value[0]) {
                            el.replaceWith(value);
                        }
                    } else if (attr === 'img') {
                        if (el.is('img')) {
                            el.attr('src', value);
                        } else {
                            el.replaceWith('<img src="' + value + '" class="' + el.attr('class') + '" />');
                        }
                    } else {
                        el.attr(arr[1], value);
                    }
                }

            } else {
                template.find(EVENT_NS + '-' + key).html(value);
            }
        });
    },

    _getScrollbarSize: function() {
        // thx David
        if (mfp.scrollbarSize === undefined) {
            var scrollDiv = document.createElement("div");
            scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';
            document.body.appendChild(scrollDiv);
            mfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
        }
        return mfp.scrollbarSize;
    }

}; /* MagnificPopup core prototype end */


/**
 * Public static functions
 */
$.magnificPopup = {
    instance: null,
    proto: MagnificPopup.prototype,
    modules: [],

    open: function(options, index) {
        _checkInstance();

        if (!options) {
            options = {};
        } else {
            options = $.extend(true, {}, options);
        }


        options.isObj = true;
        options.index = index || 0;
        return this.instance.open(options);
    },

    close: function() {
        return $.magnificPopup.instance && $.magnificPopup.instance.close();
    },

    registerModule: function(name, module) {
        if (module.options) {
            $.magnificPopup.defaults[name] = module.options;
        }
        $.extend(this.proto, module.proto);
        this.modules.push(name);
    },

    defaults: {

        // Info about options is in docs:
        // http://dimsemenov.com/plugins/magnific-popup/documentation.html#options
        disableOn: 0,

        key: null,

        midClick: false,

        mainClass: '',

        preloader: true,

        focus: '', // CSS selector of input to focus after popup is opened

        closeOnContentClick: false,

        closeOnBgClick: true,

        closeBtnInside: true,

        showCloseBtn: true,

        enableEscapeKey: true,

        modal: false,

        alignTop: false,

        removalDelay: 0,

        prependTo: null,

        fixedContentPos: 'auto',

        fixedBgPos: 'auto',

        overflowY: 'auto',

        closeMarkup: '<button title="%title%" type="button" class="mfp-close">&times;</button>',

        tClose: 'Close (Esc)',

        tLoading: 'Loading...'

    }
};


$.fn.magnificPopup = function(options) {
    _checkInstance();

    var jqEl = $(this);

    // We call some API method of first param is a string
    if (typeof options === "string") {

        if (options === 'open') {
            var items,
                itemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,
                index = parseInt(arguments[1], 10) || 0;

            if (itemOpts.items) {
                items = itemOpts.items[index];
            } else {
                items = jqEl;
                if (itemOpts.delegate) {
                    items = items.find(itemOpts.delegate);
                }
                items = items.eq(index);
            }
            mfp._openClick({ mfpEl: items }, jqEl, itemOpts);
        } else {
            if (mfp.isOpen)
                mfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));
        }

    } else {
        // clone options obj
        options = $.extend(true, {}, options);

        /*
         * As Zepto doesn't support .data() method for objects 
         * and it works only in normal browsers
         * we assign "options" object directly to the DOM element. FTW!
         */
        if (_isJQ) {
            jqEl.data('magnificPopup', options);
        } else {
            jqEl[0].magnificPopup = options;
        }

        mfp.addGroup(jqEl, options);

    }
    return jqEl;
};


//Quick benchmark
/*
var start = performance.now(),
    i,
    rounds = 1000;

for(i = 0; i < rounds; i++) {

}
console.log('Test #1:', performance.now() - start);

start = performance.now();
for(i = 0; i < rounds; i++) {

}
console.log('Test #2:', performance.now() - start);
*/

﻿// https://github.com/oklai/koala - Koala is a GUI application for less, sass and coffeescript compilation

// @koala-prepend "src/core.js"
// @koala-append "src/image.js"
// @koala-append "src/gallery.js"
// @koala-append "src/inline.js"
// @koala-append "src/iframe.js"
// @koala-append "src/fastclick.js"
// @koala-append "src/defaultoptions.js"
// @koala-append "src/kontur.gallery.module.js"

﻿var _imgInterval,
    _getTitle = function (item) {
        //TITLE - <a title=""> || <a data-title="">
        if (!item.el) {
            return '';
        }
        if (item.el && item.el.context.title !== undefined && item.el.context.title.length > 1 ||
            item.el.data('title') !== undefined && item.el.data('title').length) {
            return item.el.context.title || item.el.data('title');
        }
        return '';
    },
    _getDesc = function (item) {
        //DESCRIPTION - <img alt=""> || <a data-desc=""> || <img title="">
        if (!item.el) {
            return '';
        }
        var childEl = item.el.find('img');
        if (childEl.attr('alt') !== undefined && childEl.attr('alt').length > 1) {
            return wrapTitle(childEl.attr('alt'));
        } else if (item.el.data('desc') !== undefined && item.el.data('desc').length > 1) {
            return wrapTitle(item.el.data('desc'));
        } else if (childEl.attr('title') !== undefined && childEl.attr('title').length > 1) {
            return wrapTitle(childEl.attr('title'));
        }
        function wrapTitle(title) {
            return '<div class="mfp-desc-inner">' + title + '</div>';
        }
        return '';
    },
    _getButtons = function (item) {
        //BUTTONS <a data-bottom-panel=".selector"></a> && <div class="none"><div class="selector">КНОПКИ</div></div>
        if (!item.el) {
            return '';
        }
        var childEl = item.el;
        if (childEl.attr('data-bottom-panel-html') !== undefined && childEl.attr('data-bottom-panel-html').length > 1) {
            return '<div class="mfp-desc-inner">' + childEl.attr('data-bottom-panel-html') + '</div>';
        } else if (childEl.attr('data-bottom-panel') !== undefined && childEl.attr('data-bottom-panel').length > 1 && $(childEl.attr('data-bottom-panel')).length) {
            var inner = $('<div class="mfp-desc-inner"></div>');
            return inner.append($(childEl.attr('data-bottom-panel')).clone(true, true));
        }
        return '';
    };

$.magnificPopup.registerModule('image', {
    options: {
        //ToDO Отказатьтся от figcaption
        markup: '<div class="mfp-figure-wrap">' +
                    '<div class="mfp-title" data-mfp-title></div>' +
                    '<figure class="mfp-figure" data-mfp-wrapper>' +
                        '<div class="mfp-img"></div>' +
                        '<div class="mfp-zoom" style="display: none"></div>' +
                        '<figcaption class="mfp-figcaption" data-mfp-bottom>' +
                            '<div class="mfp-bottom-bar">' +
                                '<div class="mfp-desc"></div>' +
                            '<div class="mfp-buttons"></div>' +
                            '</div>' +
                        '</figcaption>' +
                    '</figure>' +
                '</div>' +
                '<div class="mfp-counter"></div>',
        cursor: 'mfp-zoom-out-cur',
        verticalFit: true
    },

    proto: {
        initImage: function () {
            var imgSt = mfp.st.image,
                ns = '.image';

            mfp.types.push('image');

            _mfpOn(OPEN_EVENT + ns, function () {
                if (mfp.currItem.type === 'image') {
                    if (imgSt.cursor) {
                        $(document.body).addClass(imgSt.cursor);
                    }
                    mfp.container.addClass('mfp-s-ready-animate');
                }
            });

            _mfpOn(CLOSE_EVENT + ns, function () {
                if (imgSt.cursor) {
                    $(document.body).removeClass(imgSt.cursor);
                }
                _window.off('resize' + EVENT_NS);
            });

            _mfpOn('Resize' + ns, mfp.resizeImage);
            if (mfp.isLowIE) {
                _mfpOn('AfterChange', mfp.resizeImage);
            }
        },
        resizeImage: function () {
            var item = mfp.currItem;
            if (!item || !item.img) return;

            var isScreenType = $(item.el.context).is("[data-screen]");
            var itemWrapper = mfp.contentContainer.find('[data-mfp-wrapper]');

            if (mfp.st.image.verticalFit) {
                var decr = 70; //ToDo figcaption .height()
                // fix box-sizing in ie7/8

                if (mfp.isLowIE) {
                    decr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'), 10);
                }

                var itemTitle = mfp.contentContainer.find('[data-mfp-title]');
                var itemBottomBlock = mfp.contentContainer.find('[data-mfp-bottom]');
                var itemImgHeight = item.img.height();

                if (itemTitle.outerHeight() > 0) {
                    decr = decr + itemTitle.outerHeight(true);
                }

                itemWrapper.css("width", item.img.width());

                if (itemBottomBlock.outerHeight() > 0) {
                    decr = decr + itemBottomBlock.outerHeight();
                }

                if (!isScreenType) {
                    item.img.css('max-height', mfp.wH - decr);
                    if (itemImgHeight != item.img.height()) {
                        mfp.resizeImage();
                    }
                }
            }
        },
        showZoomBtn: function (item) {
            /*ToDo - переделать, обобщить*/
            var zoomBtn = $('.mfp-zoom'),
                $img = item.img;

            var isScreenType = $(item.el.context).is("[data-screen]");

            /*ToDo ie8 support*/
            if (($img.prop('naturalHeight') > mfp.wH && !isScreenType) || $img.prop('naturalWidth') > $(window).width()) {
                zoomBtn.fadeIn();

                zoomBtn.unbind("click").click(function () {
                    mfp.wrap.toggleClass('mfp-force-scrollbars');

                    $(document).mousemove(function (e) {
                        mfp.scrollBigImg(e);
                    });
                    $img.one('click', function () {
                        mfp.wrap.toggleClass('mfp-force-scrollbars');
                        mfp.resizeImage();
                        return false;
                    });
                    _mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function () {
                        $(document).unbind('mousemove');
                    });

                    mfp.contentContainer.find('[data-mfp-wrapper]').css("width", item.img.width());

                    return false;
                });
            } else {
                zoomBtn.hide();

                if (mfp.wrap.hasClass('mfp-force-scrollbars')) {
                    mfp.wrap.removeClass('mfp-force-scrollbars');
                }
            }

        },
        scrollBigImg: function (e) {
            e = e || window.event;
            //ToDo сделать отступ вокруг, которай не будет участвовать в просчетах
            var windowW = $(window).width(),
                windowH = $(window).height(),
                containerW = mfp.content.outerWidth(true),
                containerH = mfp.content.outerHeight(true),
                leftPos = Math.round((containerW - windowW) / windowW * e.clientX),
                topPos = Math.round((containerH - windowH) / windowH * e.clientY);

            var isScroll = mfp.wrap.hasClass('mfp-force-scrollbars');

            //ToDo избавиться от animate
            if (containerW > windowW) {
                //mfp.wrap.scrollLeft = leftPos;
                mfp.wrap.animate({ scrollLeft: leftPos }, 0);
            }
            if (containerH > windowH && isScroll) {
                //mfp.wrap.scrollTop = topPos;;
                mfp.wrap.animate({ scrollTop: topPos }, 0);
            }

        },
        _onImageHasSize: function (item) {
            if (item.img) {

                item.hasSize = true;

                if (_imgInterval) {
                    clearInterval(_imgInterval);
                }

                item.isCheckingImgSize = false;

                _mfpTrigger('ImageHasSize', item);

                if (item.imgHidden) {
                    if (mfp.content) {
                        mfp.content.removeClass('mfp-loading');
                    }

                    item.imgHidden = false;
                }

            }
        },

        /**
         * Function that loops until the image has size to display elements that rely on it asap
         */
        findImageSize: function (item) {

            var counter = 0,
                img = item.img[0],
                mfpSetInterval = function (delay) {

                    if (_imgInterval) {
                        clearInterval(_imgInterval);
                    }
                    // decelerating interval that checks for size of an image
                    _imgInterval = setInterval(function () {
                        if (img.naturalWidth > 0) {
                            mfp._onImageHasSize(item);
                            return;
                        }

                        if (counter > 200) {
                            clearInterval(_imgInterval);
                        }

                        counter++;
                        if (counter === 3) {
                            mfpSetInterval(10);
                        } else if (counter === 40) {
                            mfpSetInterval(50);
                        } else if (counter === 100) {
                            mfpSetInterval(500);
                        }
                    }, delay);
                };

            mfpSetInterval(1);
        },

        getImage: function (item, template) {

            var guard = 0,

                // image load complete handler
                onLoadComplete = function () {
                    if (item) {
                        if (item.img[0].complete) {
                            item.img.off('.mfploader');

                            if (item === mfp.currItem) {
                                mfp._onImageHasSize(item);

                                mfp.updateStatus('ready');
                            }

                            item.hasSize = true;
                            item.loaded = true;

                            _mfpTrigger('ImageLoadComplete');

                            mfp.showZoomBtn(mfp.currItem);

                            mfp.contentContainer.find('[data-mfp-wrapper]').css("width", "auto");

                            mfp.resizeImage();
                        } else {
                            // if image complete check fails 200 times (20 sec), we assume that there was an error.
                            guard++;
                            if (guard < 200) {
                                setTimeout(onLoadComplete, 100);
                            } else {
                                onLoadError();
                            }
                        }
                    }
                },

                // image error handler
                onLoadError = function () {
                    if (item) {
                        item.img.off('.mfploader');
                        if (item === mfp.currItem) {
                            mfp._onImageHasSize(item);
                            mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src));
                        }

                        item.hasSize = true;
                        item.loaded = true;
                        item.loadError = true;
                    }
                },
                imgSt = mfp.st.image;


            var el = template.find('.mfp-img');
            if (el.length) {
                var img = document.createElement('img');
                img.className = 'mfp-img';
                if (item.el && item.el.find('img').length) {
                    img.alt = item.el.find('img').attr('alt');
                }
                item.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);
                img.src = item.src;

                // without clone() "error" event is not firing when IMG is replaced by new IMG
                // TODO: find a way to avoid such cloning
                if (el.is('img')) {
                    item.img = item.img.clone();
                }

                img = item.img[0];
                if (img.naturalWidth > 0) {
                    item.hasSize = true;
                } else if (!img.width) {
                    item.hasSize = false;
                }
            }

            mfp._parseMarkup(template, {
                title: _getTitle(item),
                img_replaceWith: item.img,
                desc: _getDesc(item),
                buttons: _getButtons(item)
            }, item);

            mfp.resizeImage();

            if (item.hasSize) {
                if (_imgInterval) clearInterval(_imgInterval);

                if (item.loadError) {
                    template.addClass('mfp-loading');
                    mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src));
                } else {
                    template.removeClass('mfp-loading');
                    mfp.updateStatus('ready');
                }
                return template;
            }

            mfp.updateStatus('loading');
            item.loading = true;

            if (!item.hasSize) {
                item.imgHidden = true;
                template.addClass('mfp-loading');
                mfp.findImageSize(item);
            }

            return template;
        }
    }
});

﻿/**
 * Get looped index depending on number of slides
 */
var _getLoopedId = function(index) {
        var numSlides = mfp.items.length;
        if (index > numSlides - 1) {
            return index - numSlides;
        } else if (index < 0) {
            return numSlides + index;
        }
        return index;
    },
    _replaceCurrTotal = function(text, curr, total) {
        return text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);
    },
    _getSibligsNumber = function(currNumber, total) {
        if (currNumber > total) {
            return 1;
        } else if (currNumber < 1) {
            return total;
        }
        return currNumber;
    },
    _updateCurrTotal = function(curr, total) {
        var currNumber = curr + 1;
        $('.mfp-counter-btn').each(function() {
            if ($(this).parent().hasClass('mfp-arrow-left')) {
                $(this).text(_getSibligsNumber(currNumber - 1, total) + '/' + total);
            } else {
                $(this).text(_getSibligsNumber(currNumber + 1, total) + '/' + total);
            }
        });
    },
    _breakGalleryCyclical = function(curr, total, direction) {
        var currNumber = curr + 1,
            elem = $('.mfp-content');

        if (direction == true && currNumber == total && _getSibligsNumber(currNumber + 1, total) == 1) {
            addDirectionClass('last');
        } else if (direction == false && currNumber == 1 && _getSibligsNumber(currNumber - 1, total) == total) {
            addDirectionClass('first');
        } else {
            elem.removeClass('mfp-stop mfp-stop-last mfp-stop-first');
            return true;
        }
        function addDirectionClass(cssClass) {
            elem.addClass('mfp-stop mfp-stop-' + cssClass);
            setTimeout(function () {
                elem.removeClass('mfp-stop');
            }, 400);
            return false;
        }
    };

$.magnificPopup.registerModule('gallery', {
    options: {
        enabled: false,
        arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"><span class="mfp-counter-btn"></span></button>',
        preload: [0, 2],
        navigateByImgClick: true,
        arrows: true,
        tPrev: 'Previous (Left arrow key)',
        tNext: 'Next (Right arrow key)',
        tCounter: '%curr% / %total%'
    },

    proto: {
        initGallery: function() {

            var gSt = mfp.st.gallery,
                ns = '.mfp-gallery',
                supportsFastClick = Boolean($.fn.mfpFastClick);

            mfp.direction = true; // true - next, false - prev

            if (!gSt || !gSt.enabled) return false;

            _wrapClasses += ' mfp-gallery';

            _mfpOn(OPEN_EVENT + ns, function() {

                if (gSt.navigateByImgClick) {
                    mfp.wrap.on('click' + ns, '.mfp-img', function() {
                        if (mfp.items.length > 1) {
                            mfp.next();
                            return false;
                        }
                    });
                }

                _document.on('keydown' + ns, function(e) {
                    if (e.keyCode === 37) {
                        mfp.prev();
                    } else if (e.keyCode === 39) {
                        mfp.next();
                    }
                });

                _updateCurrTotal(mfp.currItem.index, mfp.items.length);

                mfp.container.addClass('mfp-s-ready-animate');
            });

            _mfpOn('UpdateStatus' + ns, function(e, data) {
                if (data.text) {
                    data.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);
                }
                _updateCurrTotal(mfp.currItem.index, mfp.items.length);
            });

            _mfpOn(MARKUP_PARSE_EVENT + ns, function(e, element, values, item) {
                var l = mfp.items.length;
                values.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';
            });

            _mfpOn('BuildControls' + ns, function() {
                if (mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {
                    var markup = gSt.arrowMarkup,
                        arrowLeft = mfp.arrowLeft =
                            $(markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left')).addClass(PREVENT_CLOSE_CLASS),
                        arrowRight = mfp.arrowRight = $(markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right')).addClass(PREVENT_CLOSE_CLASS);

                    var eName = supportsFastClick ? 'mfpFastClick' : 'click';
                    arrowLeft[eName](function() {
                        mfp.prev();
                    });
                    arrowRight[eName](function() {
                        mfp.next();
                    });

                    // Polyfill for :before and :after (adds elements with classes mfp-a and mfp-b)
                    if (mfp.isIE7) {
                        _getEl('b', arrowLeft[0], false, true);
                        _getEl('a', arrowLeft[0], false, true);
                        _getEl('b', arrowRight[0], false, true);
                        _getEl('a', arrowRight[0], false, true);
                    }

                    mfp.container.append(arrowLeft.add(arrowRight));
                }
            });

            _mfpOn(CHANGE_EVENT + ns, function() {
                if (mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);

                mfp._preloadTimeout = setTimeout(function() {
                    mfp.preloadNearbyImages();
                    mfp._preloadTimeout = null;
                }, 16);
            });


            _mfpOn(CLOSE_EVENT + ns, function() {
                _document.off(ns);
                mfp.wrap.off('click' + ns);

                if (mfp.arrowLeft && supportsFastClick) {
                    mfp.arrowLeft.add(mfp.arrowRight).destroyMfpFastClick();
                }
                mfp.arrowRight = mfp.arrowLeft = null;
            });

        },
        next: function() {
            mfp.direction = true;
            if (_breakGalleryCyclical(mfp.index, mfp.items.length, mfp.direction)) {
                mfp.index = _getLoopedId(mfp.index + 1);
                //NOTE slide change animation
                /*mfp.content.fadeOut(0, function () {
                    mfp.updateItemHTML();
                    mfp.content.fadeIn(150);
                });*/
                mfp.updateItemHTML();
            }
        },
        prev: function() {
            mfp.direction = false;
            if (_breakGalleryCyclical(mfp.index, mfp.items.length, mfp.direction)) {
                mfp.index = _getLoopedId(mfp.index - 1);
                //NOTE slide change animation
                /*mfp.content.fadeOut(0, function () {
                    mfp.updateItemHTML();
                    mfp.content.fadeIn(150);
                });*/
                mfp.updateItemHTML();
            }
        },
        goTo: function(newIndex) {
            mfp.direction = (newIndex >= mfp.index);
            mfp.index = newIndex;
            mfp.updateItemHTML();
        },
        preloadNearbyImages: function() {
            var p = mfp.st.gallery.preload,
                preloadBefore = Math.min(p[0], mfp.items.length),
                preloadAfter = Math.min(p[1], mfp.items.length),
                i;

            for (i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {
                mfp._preloadItem(mfp.index + i);
            }
            for (i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {
                mfp._preloadItem(mfp.index - i);
            }
        },
        _preloadItem: function(index) {
            index = _getLoopedId(index);

            if (mfp.items[index].preloaded) {
                return;
            }

            var item = mfp.items[index];
            if (!item.parsed) {
                item = mfp.parseEl(index);
            }

            _mfpTrigger('LazyLoad', item);

            if (item.type === 'image') {
                item.img = $('<img class="mfp-img" />').on('load.mfploader', function() {
                    item.hasSize = true;
                }).on('error.mfploader', function() {
                    item.hasSize = true;
                    item.loadError = true;
                    _mfpTrigger('LazyLoadError', item);
                }).attr('src', item.src);
            }


            item.preloaded = true;
        }
    }
});

/*
Touch Support that might be implemented some day

addSwipeGesture: function() {
    var startX,
        moved,
        multipleTouches;

        return;

    var namespace = '.mfp',
        addEventNames = function(pref, down, move, up, cancel) {
            mfp._tStart = pref + down + namespace;
            mfp._tMove = pref + move + namespace;
            mfp._tEnd = pref + up + namespace;
            mfp._tCancel = pref + cancel + namespace;
        };

    if(window.navigator.msPointerEnabled) {
        addEventNames('MSPointer', 'Down', 'Move', 'Up', 'Cancel');
    } else if('ontouchstart' in window) {
        addEventNames('touch', 'start', 'move', 'end', 'cancel');
    } else {
        return;
    }
    _window.on(mfp._tStart, function(e) {
        var oE = e.originalEvent;
        multipleTouches = moved = false;
        startX = oE.pageX || oE.changedTouches[0].pageX;
    }).on(mfp._tMove, function(e) {
        if(e.originalEvent.touches.length > 1) {
            multipleTouches = e.originalEvent.touches.length;
        } else {
            //e.preventDefault();
            moved = true;
        }
    }).on(mfp._tEnd + ' ' + mfp._tCancel, function(e) {
        if(moved && !multipleTouches) {
            var oE = e.originalEvent,
                diff = startX - (oE.pageX || oE.changedTouches[0].pageX);

            if(diff > 20) {
                mfp.next();
            } else if(diff < -20) {
                mfp.prev();
            }
        }
    });
},
*/

﻿
var INLINE_NS = 'inline',
    _hiddenClass,
    _inlinePlaceholder,
    _lastInlineElement,
    _putInlineElementsBack = function () {
        if (_lastInlineElement) {
            _inlinePlaceholder.after(_lastInlineElement.addClass(_hiddenClass)).detach();
            _lastInlineElement = null;
        }
    };

$.magnificPopup.registerModule(INLINE_NS, {
    options: {
        hiddenClass: 'hide', // will be appended with `mfp-` prefix
        markup: '',
        tNotFound: 'Content not found'
    },
    proto: {

        initInline: function () {
            mfp.types.push(INLINE_NS);

            _mfpOn(CLOSE_EVENT + '.' + INLINE_NS, function () {
                _putInlineElementsBack();
            });

            _mfpOn(OPEN_EVENT + '.' + INLINE_NS, function () {
                if (mfp.currItem.type === 'inline') {
                    mfp.container.addClass('mfp-s-ready-animate');
                }
            });
        },

        getInline: function (item, template) {

            _putInlineElementsBack();

            if (item.src) {
                var inlineSt = mfp.st.inline,
                    el = $(item.src);

                if (el.length) {

                    // If target element has parent - we replace it with placeholder and put it back after popup is closed
                    var parent = el[0].parentNode;
                    if (parent && parent.tagName) {
                        if (!_inlinePlaceholder) {
                            _hiddenClass = inlineSt.hiddenClass;
                            _inlinePlaceholder = _getEl(_hiddenClass);
                            _hiddenClass = 'mfp-' + _hiddenClass;
                        }
                        // replace target inline element with placeholder
                        _lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);
                    }

                    mfp.updateStatus('ready');
                } else {
                    mfp.updateStatus('error', inlineSt.tNotFound);
                    el = $('<div>');
                }

                item.inlineElement = el;
                return el;
            }

            mfp.updateStatus('ready');
            mfp._parseMarkup(template, {}, item);
            return template;
        }
    }
});

﻿
var IFRAME_NS = 'iframe',
    _emptyPage = '//about:blank',

    _fixIframeBugs = function (isShowing) {
        if (mfp.currTemplate[IFRAME_NS]) {
            var el = mfp.currTemplate[IFRAME_NS].find('iframe');
            if (el.length) {
                // reset src after the popup is closed to avoid "video keeps playing after popup is closed" bug
                if (!isShowing) {
                    el[0].src = _emptyPage;
                }

                // IE8 black screen bug fix
                if (mfp.isIE8) {
                    el.css('display', isShowing ? 'block' : 'none');
                }
            }
        }
    },
    _getVideoId = function () {
        var embedSrc = mfp.currItem.src,
            iframeSt = mfp.st.iframe,
            tempVideoId,
            videoId;

        $.each(iframeSt.patterns, function () {
            if (embedSrc.indexOf(this.index) > -1) {
                if (this.id) {
                    if (typeof this.id === 'string') {
                        tempVideoId = embedSrc.substr(embedSrc.lastIndexOf(this.id) + this.id.length, embedSrc.length);
                    } else {
                        tempVideoId = this.id.call(this, embedSrc);
                    }
                }
                if (tempVideoId != 'undefined') {
                    videoId = tempVideoId;
                } else {
                    videoId = videoId;
                }
            }
        });
        return videoId;
    };

$.magnificPopup.registerModule(IFRAME_NS, {
    options: {
        markup: '<div class="mfp-iframe-scaler mfp-figure">' +
                    '<div class="mfp-title" data-mfp-title></div>' +
                    '<div class="mfp-figure" data-mfp-wrapper>' +
                        '<iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe>' +
                        '<div class="mfp-figcaption" data-mfp-bottom>' +
                            '<div class="mfp-bottom-bar">' +
                                '<div class="mfp-desc"></div>' +
                                '<div class="mfp-buttons"></div>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                '</div>',

        srcAction: 'iframe_src',

        // we don't care and support only one default type of URL by default
        patterns: {
            youtube: {
                index: 'youtube.com',
                id: 'v=',
                src: '//www.youtube.com/embed/%id%?autoplay=1&enablejsapi=1&fs=0&rel=0'
            },
            vimeo: {
                index: 'vimeo.com/',
                id: '/',
                src: '//player.vimeo.com/video/%id%?api=1&fullscreen=0&autoplay=1'
            },
            gmaps: {
                index: '//maps.google.',
                src: '%id%&output=embed'
            }
        }
    },

    proto: {
        initIframe: function () {
            mfp.types.push(IFRAME_NS);

            _mfpOn('BeforeChange', function (e, prevType, newType) {
                if (prevType !== newType) {
                    if (prevType === IFRAME_NS) {
                        _fixIframeBugs(); // iframe if removed
                    } else if (newType === IFRAME_NS) {
                        _fixIframeBugs(true); // iframe is showing
                    }
                } // else {
                // iframe source is switched, don't do anything
                //}
            });

            _mfpOn(OPEN_EVENT + '.' + IFRAME_NS, function () {
                //_saveYoutubeLastState($('.mfp-iframe'));
                if (mfp.currItem.type == 'iframe') {
                    mfp.container.addClass('mfp-s-ready-animate');
                }
                $(window.document).trigger('videoLightboxOpened');
            });

            _mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function () {
                _fixIframeBugs();
                if (mfp.currItem.type == 'iframe') {
                    if (typeof RegisterPageEvent !== 'undefined' && $.isFunction(RegisterPageEvent)) {
                        RegisterPageEvent('event_watch_video-' + _getVideoId() + window.location.pathname);
                    }
                }
            });

        },

        getIframe: function (item, template) {
            //ToDo опционально перeдать только videoid, и не делать все ....
            var embedSrc = item.src;    // == mfp.currItem.src
            var iframeSt = mfp.st.iframe;

            //ToDO обобщить с _getVideoId(mfp)
            $.each(iframeSt.patterns, function () {
                if (embedSrc.indexOf(this.index) > -1) {
                    if (this.id) {
                        if (typeof this.id === 'string') {
                            embedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id) + this.id.length, embedSrc.length);
                        } else {
                            embedSrc = this.id.call(this, embedSrc);
                        }
                    }
                    embedSrc = this.src.replace('%id%', embedSrc);
                    return false; // break;
                }
            });

            var dataObj = {
                title: _getTitle(item),
                desc: _getDesc(item),
                buttons: _getButtons(item)
            };
            if (iframeSt.srcAction) {
                dataObj[iframeSt.srcAction] = embedSrc;
            }

            mfp._parseMarkup(template, dataObj, item);

            mfp.updateStatus('ready');

            return template;
        }
    }
});

﻿/**
 * FastClick event implementation. (removes 300ms delay on touch devices)
 * Based on https://developers.google.com/mobile/articles/fast_buttons
 *
 * You may use it outside the Magnific Popup by calling just:
 *
 * $('.your-el').mfpFastClick(function() {
 *     console.log('Clicked!');
 * });
 *
 * To unbind:
 * $('.your-el').destroyMfpFastClick();
 * 
 * 
 * Note that it's a very basic and simple implementation, it blocks ghost click on the same element where it was bound.
 * If you need something more advanced, use plugin by FT Labs https://github.com/ftlabs/fastclick
 * 
 */

(function() {
    var ghostClickDelay = 1000,
        supportsTouch = 'ontouchstart' in window,
        unbindTouchMove = function() {
            _window.off('touchmove'+ns+' touchend'+ns);
        },
        eName = 'mfpFastClick',
        ns = '.'+eName;


    // As Zepto.js doesn't have an easy way to add custom events (like jQuery), so we implement it in this way
    $.fn.mfpFastClick = function(callback) {

        return $(this).each(function() {

            var elem = $(this),
                lock;

            if( supportsTouch ) {

                var timeout,
                    startX,
                    startY,
                    pointerMoved,
                    point,
                    numPointers;

                elem.on('touchstart' + ns, function(e) {
                    pointerMoved = false;
                    numPointers = 1;

                    point = e.originalEvent ? e.originalEvent.touches[0] : e.touches[0];
                    startX = point.clientX;
                    startY = point.clientY;

                    _window.on('touchmove'+ns, function(e) {
                        point = e.originalEvent ? e.originalEvent.touches : e.touches;
                        numPointers = point.length;
                        point = point[0];
                        if (Math.abs(point.clientX - startX) > 10 ||
                            Math.abs(point.clientY - startY) > 10) {
                            pointerMoved = true;
                            unbindTouchMove();
                        }
                    }).on('touchend'+ns, function(e) {
                        unbindTouchMove();
                        if(pointerMoved || numPointers > 1) {
                            return;
                        }
                        lock = true;
                        e.preventDefault();
                        clearTimeout(timeout);
                        timeout = setTimeout(function() {
                            lock = false;
                        }, ghostClickDelay);
                        callback();
                    });
                });

            }

            elem.on('click' + ns, function() {
                if(!lock) {
                    callback();
                }
            });
        });
    };

    $.fn.destroyMfpFastClick = function() {
        $(this).off('touchstart' + ns + ' click' + ns);
        if(supportsTouch) _window.off('touchmove'+ns+' touchend'+ns);
    };
})();

// Add it after jquery.magnific-popup.js and before first initialization code
$.extend(true, $.magnificPopup.defaults, {
    tClose: 'Закрыть [Esc]', // Alt text on close button
    tLoading: '', // 'Загрузка...' Text that is displayed during loading. Can contain %curr% and %total% keys
    gallery: {
        tPrev: window.attachEvent && !window.addEventListener ? 'Предыдущий' : '[&larr;] Предыдущий', // Alt text on left arrow
        tNext: window.attachEvent && !window.addEventListener ? 'Следующий' : 'Следующий [&rarr;]', // Alt text on right arrow
        tCounter: '%curr% из %total%' // Markup for "1 of 7" counter
    },
    image: {
        tError: 'Изображение не загрузилось.' // <a href="%url%">Изображение</a> не загрузилось.    //Запрашиваемое изображение недоступно. Попробуйте позже.
    },
    ajax: {
        tError: 'Контент не загрузился.' // <a href="%url%">Контент</a> не загрузился.
    },
    removalDelay: 800,
    closeMarkup: '<span title="%title%" class="mfp-close"></span>'
});

﻿var Kontur = Kontur || {};
Kontur.Gallery = (function ($) {
    'use strict';

    var defaultOptions = {
            videoSelector: '[data-video]',
            imgSelector: '[data-gallery]',
        },
        options,
        videoElem,
        imgElem,
        initVideoLightbox,
        initImgGallery,
        bindEvents,
        module = function () { };

    module.init = function (opt) {
        options = $.extend(defaultOptions, opt);
        videoElem = $(options.videoSelector);
        imgElem = $(options.imgSelector);

        bindEvents();
    }

    module.defaultOptions = {
        type: 'image',
        closeBtnInside: false,
        midClick: true,
        closeOnContentClick: true,
        mainClass: 'mfp-img-mobile',
        gallery: {
            enabled: false,
            navigateByImgClick: true,
            preload: [1, 2] //Note Lazy-loading. Will load 2 next imgs and 1 that is before current.
        },
        callbacks: {
            //Note check 4 video in gallery
            elementParse: function (item) {
                if (item.el && typeof item.el.data('video') !== 'undefined' || item.el.data('popuptype') == 'iframe' || item.el.hasClass('mpf-iframe')) {
                    item.type = 'iframe';
                }
            }
        }
    };

    bindEvents = function () {
        initVideoLightbox();
        initImgGallery();
    }

    initVideoLightbox = function () {
        //ToDo фаллбэк на старую инициализацию ютуба через $('[data-videoid]') 
        videoElem/*.each(function () {
            var self = $(this),
                videoId = self.data('videoid');
            if (videoId !== undefined && videoId.length) {
                self.attr('href', '//www.youtube.com/watch?v=' + videoId);
            }
        })*/.magnificPopup({
            disableOn: 700,
            type: 'iframe',
            preloader: false,
            closeBtnInside: false
        });
    }

    initImgGallery = function () {
        var groups = {};
        imgElem.each(function () {
            //ToDo корявость какая-то. Формируем массивы из одиночных картинок или галерей
            var id = $(this).data('gallery').length == 0 ? $(this).attr('href') : $(this).attr('data-gallery');

            if (!groups[id]) {
                groups[id] = [];
            }

            groups[id].push(this);
        });

        $.each(groups, function () {
            var ops = module.defaultOptions;
            ops.gallery.enabled = this.length > 1 ? true : false;
            $(this).magnificPopup(ops);
        });
    }
    return module;
}(jQuery));

$(document).ready(function () {
    Kontur.Gallery.init();
});

// for backward compatibility [
$.fn.gallery = function (options) {
    var ops = Kontur.Gallery.defaultOptions;

    if (options && options.index) {
        ops.index = options.index;
    }

    ops.gallery.enabled = $(this).length > 1 ? true : false;

    this.magnificPopup(ops);
};

$.gallery = {
    open: function (obj, options) {

        var ops = Kontur.Gallery.defaultOptions;

        if (options && options.index) {
            ops.index = options.index;
        }

        var itemsObj;

        itemsObj = { 'items': obj.get() };

        ops.gallery.enabled = obj.length > 1 ? true : false;

        ops = $.extend(true, {}, ops, itemsObj);
        $.magnificPopup.open(ops);
    }
};

$(document).on('click', '[data-videoid]', function () {
    var self = $(this),
        videoId = self.data('videoid');

    if (videoId && videoId.length) {
        self.attr('href', '//www.youtube.com/watch?v=' + videoId);
    }

    if (self.attr('data-lightboxparams') && $.type(window[self.attr('data-lightboxparams')]) == 'object') {
        var params = window[self.attr('data-lightboxparams')];
        if (params.panelHtml) {
            self.attr('data-bottom-panel', params.panelHtml);
        }
    }

    $.magnificPopup.open({
        items: self.get(),
        disableOn: 700,
        type: 'iframe',
        preloader: false,
        closeBtnInside: false
    });
    return false;
});

$(window).on('openVideoLightbox', function (e, videoId) {
    if (!videoId) {
        return;
    }
    $.magnificPopup.open({
        items: {
            src: '//www.youtube.com/watch?v=' + videoId
        },
        disableOn: 700,
        type: 'iframe',
        preloader: false,
        closeBtnInside: false
    });
});

// ] for backward compatibility





Kontur.Module('Kontur.Cookie', function (document) {

    this.setCookie = function (key, value, expireDays, path, domain) {
        var cookie = key + '=' + value;
        if (undefined !== expireDays) {
            var date = new Date();
            date.setTime(date.getTime() + expireDays * 24 * 60 * 60 * 1000);
            cookie = cookie + ';expires=' + date.toUTCString();
        }

        if (path === undefined) {
            cookie = cookie + ';path=/';
        } else {
            cookie = cookie + ';path=' + path;
        }

        if (domain !== undefined) {
            cookie = cookie + ';domain=' + domain;
        }
        document.cookie = cookie;
    };

    this.getCookie = function (key) {
        var matches = document.cookie.match(new RegExp("(?:^|; )" + key.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));

        return matches ? decodeURIComponent(matches[1]) : undefined;
    };
}, [document]);
Kontur.Module('Kontur.Storage', function (window, cookie) {
    var defaultExpireDays = 365,
        storage;
    try {
        storage = window.localStorage;
    } catch (exc) {}

    this.setItem = function (key, value) {
        if (storage) {
            storage.setItem(key, value);
        } else {
            cookie.setCookie(key, value, defaultExpireDays);
        }
    };

    this.getItem = function (key) {
        return storage ? storage.getItem(key) : cookie.getCookie(key);
    };
}, [window, Kontur.Cookie]);
Kontur.Module("Kontur.Tracker", function ($, global, storage) {
    var self = this,
        window = global.get(),
        TRAKER_SESSION_COOKIE_NAME = 'ktr_sid',
        REFERER_KEY_NAME = 'referer',
        START_PAGE_KEY_NAME = 'start_page',
        referer = window.document.referrer,
        pageUrl = window.location.href;

    $(function () {
        if (hostName(pageUrl) != hostName(referer)) {
            $.cookie(TRAKER_SESSION_COOKIE_NAME, 1, { path: '/' });
            var refererStoreValue = referer ? referer : " "; //IE8 Crash if set empty value in local storage

            setIfChanged(REFERER_KEY_NAME, refererStoreValue, 'tracker-set-referer');
            setIfChanged(START_PAGE_KEY_NAME, pageUrl, 'tracker-set-startPage');
        }
    });

    function setIfChanged(cookieName, cookieValue, successSetEventName) {
        if (getValidSessionStorageItem(cookieName) !== cookieValue) {
            storage.setItem(cookieName, cookieValue);
            $(window).trigger(successSetEventName, cookieValue);
        }
    }

    self.getReferer = function () {
        return getValidSessionStorageItem(REFERER_KEY_NAME);
    };

    self.getStartPage = function () {
        return getValidSessionStorageItem(START_PAGE_KEY_NAME);
    };

    function getValidSessionStorageItem(key) {
        if (!sessionDataIsValid()) {
            return "";
        }
        return storage.getItem(key);
    }

    function sessionDataIsValid() {
        return $.cookie(TRAKER_SESSION_COOKIE_NAME) != null;
    }

    function hostName(url) {
        if (!url) {
            return "";
        }
        var a = document.createElement('a');
        a.href = url;
        return a.hostname;
    }
}, [jQuery, Kontur.Global, Kontur.Storage]);
Kontur.Module("Kontur.Order.SpecificDataProvider", function ($, global, urlManager, cookie, tracker) {
    var self = this,
        UTM_PREFIX = "utm_",
        window = global.get();

    self.provide = function (option) {
        var data = $.extend({ UserId: "" }, option);
        var specificData = getSpecificData(data);
        var isIe8 = window.attachEvent && !window.addEventListener;
        if (isIe8) {
            return unescape(JSON.stringify(specificData, null, 2).replace(/\\u/g, '%u'));
        }
        return decodeUri(JSON.stringify(specificData, null, 2));
    };

    function getSpecificData(data) {
        return {
            "Referer": truncateLongData(validateEncoding(tracker.getReferer())),
            "StartPage": truncateLongData(validateEncoding(tracker.getStartPage())),
            "OrderPage": truncateLongData(validateEncoding(getOrderPage())),
            "UTM": truncateLongData(validateEncoding(getUtm())),
            "UserId": data.UserId,
            "AnalyticsId": getAnalyticsId(),
            "AnalyticsClientId": getAnalyticsUserId()
        };
    }

    function getOrderPage() {
        return window.location.href;
    };

    function getUtm() {
        var utmFromUrl = getUtmFromUrl();
        return utmFromUrl ? utmFromUrl : getUtmFromCookie();
    };

    function getUtmFromUrl() {
        var utm = "";
        var params = urlManager.getParams();
        for (var key in params) {
            if (key.lastIndexOf(UTM_PREFIX, 0) === 0) {
                var value = key + '=' + decodeUri(params[key]);
                if (utm) {
                    utm += '&' + value;
                } else {
                    utm = value;
                }
            }
        }
        return utm;
    };

    function getUtmFromCookie() {
        var utmCookie = cookie.getCookie("utm");
        return getValueOrEmpty(utmCookie);
    };

    function getUtmz() {
        return getValueOrEmpty(cookie.getCookie("__utmz"));
    };

    function getAnalyticsUserId() {
        var clientId = "";
        if (typeof window.ga == 'function') {
            window.ga(function (gaTracker) {
                clientId = gaTracker.get('clientId');
            });
        }
        return getValueOrEmpty(clientId);
    }

    function getAnalyticsId() {
        var analyticsId = "";
        if (typeof window.ga == 'function') {
            window.ga(function (gaTracker) {
                analyticsId = gaTracker.get('trackingId');
            });
        }
        return getValueOrEmpty(analyticsId);
    }

    function getMetrikaId() {
        for (var globalVarName in window) {
            if (globalVarName.indexOf('yaCounter') == 0) {
                return globalVarName.substring(9);
            }
        }
        return "";
    }

    function getMetrikaClientId() {
        return getValueOrEmpty(cookie.getCookie("yandexuid"));
    }

    function getValueOrEmpty(value) {
        return value != undefined ? value : "";
    }

    function truncateLongData(value) {
        return value != undefined ? value.substr(0, 255) : "";
    }

    function validateEncoding(str) {
        return decodeUri(win1251toUtf8(unescape(cp1251ToUtf8(escape(decodeUri(str))))));
    }

    function decodeUri(value) {
        try {
            return decodeURIComponent(value);
        } catch (ex) {
            return value;
        }
    }

    //cp1251 -> utf8
    function cp1251ToUtf8(d) {
        d = d.replace(/%u0420%u0452/g, '%u0410');d = d.replace(/%u0420%u2018/g, '%u0411');
        d = d.replace(/%u0420%u2019/g, '%u0412');d = d.replace(/%u0420%u201C/g, '%u0413');
        d = d.replace(/%u0420%u201D/g, '%u0414');d = d.replace(/%u0420%u2022/g, '%u0415');
        d = d.replace(/%u0420%u0403/g, '%u0401');d = d.replace(/%u0420%u2013/g, '%u0416');
        d = d.replace(/%u0420%u2014/g, '%u0417');d = d.replace(/%u0420%uFFFD/g, '%u0418');
        d = d.replace(/%u0420%u2122/g, '%u0419');d = d.replace(/%u0420%u0459/g, '%u041A');
        d = d.replace(/%u0420%u203A/g, '%u041B');d = d.replace(/%u0420%u045A/g, '%u041C');
        d = d.replace(/%u0420%u045C/g, '%u041D');d = d.replace(/%u0420%u045B/g, '%u041E');
        d = d.replace(/%u0420%u045F/g, '%u041F');d = d.replace(/%u0420%20/g, 'Р');
        d = d.replace(/%u0420%u040E/g, '%u0421');d = d.replace(/%u0420%u045E/g, '%u0422');
        d = d.replace(/%u0420%u0408/g, '%u0423');d = d.replace(/%u0420%A4/g, '%u0424');
        d = d.replace(/%u0420%u0490/g, '%u0425');d = d.replace(/%u0420%A6/g, '%u0426');
        d = d.replace(/%u0420%A7/g, '%u0427');d = d.replace(/%u0420%u0401/g, '%u0428');
        d = d.replace(/%u0420%A9/g, '%u0429');d = d.replace(/%u0420%u0404/g, '%u042A');
        d = d.replace(/%u0420%AB/g, '%u042B');d = d.replace(/%u0420%AC/g, '%u042C');
        d = d.replace(/%u0420%AE/g, '%u042E');d = d.replace(/%u0420%u0407/g, '%u042F');
        d = d.replace(/%u0420%B0/g, '%u0430');d = d.replace(/%u0420%B1/g, '%u0431');
        d = d.replace(/%u0420%u0406/g, '%u0432');d = d.replace(/%u0420%u0456/g, '%u0433');
        d = d.replace(/%u0420%u0491/g, '%u0434');d = d.replace(/%u0420%B5/g, '%u0435');
        d = d.replace(/%u0421%u2018/g, '%u0451');d = d.replace(/%u0420%B6/g, '%u0436');
        d = d.replace(/%u0420%B7/g, '%u0437');d = d.replace(/%u0420%u0451/g, '%u0438');
        d = d.replace(/%u0420%u2116/g, '%u0439');d = d.replace(/%u0420%u0454/g, '%u043A');
        d = d.replace(/%u0420%BB/g, '%u043B');d = d.replace(/%u0420%u0458/g, '%u043C');
        d = d.replace(/%u0420%u0405/g, '%u043D');d = d.replace(/%u0420%u0455/g, '%u043E');
        d = d.replace(/%u0420%u0457/g, '%u043F');d = d.replace(/%u0421%u0402/g, '%u0440');
        d = d.replace(/%u0421%u0403/g, '%u0441');d = d.replace(/%u0421%u201A/g, '%u0442');
        d = d.replace(/%u0421%u0453/g, '%u0443');d = d.replace(/%u0421%u201E/g, '%u0444');
        d = d.replace(/%u0421%u2026/g, '%u0445');d = d.replace(/%u0421%u2020/g, '%u0446');
        d = d.replace(/%u0421%u2021/g, '%u0447');d = d.replace(/%u0421%u20AC/g, '%u0448');
        d = d.replace(/%u0421%u2030/g, '%u0449');d = d.replace(/%u0421%u0409/g, '%u044A');
        d = d.replace(/%u0421%u2039/g, '%u044B');d = d.replace(/%u0421%u040A/g, '%u044C');
        d = d.replace(/%u0421%u040C/g, '%u044D');d = d.replace(/%u0421%u040B/g, '%u044E');
        d = d.replace(/%u0421%u040F/g, '%u044F');d = d.replace(/%u0420/g, '%u042D');

        return d;
    }

    function win1251toUtf8(str) {
        var w2u = {
            "%80": "\u0402", "%81": "\u0403", "%82": "\u201A", "%83": "\u0453", "%84": "\u201E", "%85": "\u2026", "%86": "\u2020", "%87": "\u2021", "%88": "\u20AC", "%89": "\u2030",
            "%8A": "\u0409", "%8B": "\u2039", "%8C": "\u040A", "%8D": "\u040C", "%8E": "\u040B", "%8F": "\u040F", "%90": "\u0452", "%91": "\u2018", "%92": "\u2019", "%93": "\u201C",
            "%94": "\u201D", "%95": "\u2022", "%96": "\u2013", "%97": "\u2014", "%99": "\u2122", "%9A": "\u0459", "%9B": "\u203A", "%9C": "\u045A", "%9D": "\u045C", "%9E": "\u045B",
            "%9F": "\u045F", "%A0": "\xA0", "%A1": "\u040E", "%A2": "\u045E", "%A3": "\u0408", "%A4": "\xA4", "%A5": "\u0490", "%A6": "\xA6", "%A7": "\xA7", "%A8": "\u0401",
            "%A9": "\xA9", "%AA": "\u0404", "%AB": "\xAB", "%AC": "\xAC", "%AD": "\xAD", "%AE": "\xAE", "%AF": "\u0407", "%B0": "\xB0", "%B1": "\xB1", "%B2": "\u0406",
            "%B3": "\u0456", "%B4": "\u0491", "%B5": "\xB5", "%B6": "\xB6", "%B7": "\xB7", "%B8": "\u0451", "%B9": "\u2116", "%BA": "\u0454", "%BB": "\xBB", "%BC": "\u0458",
            "%BD": "\u0405", "%BE": "\u0455", "%BF": "\u0457", "%C0": "\u0410", "%C1": "\u0411", "%C2": "\u0412", "%C3": "\u0413", "%C4": "\u0414", "%C5": "\u0415", "%C6": "\u0416",
            "%C7": "\u0417", "%C8": "\u0418", "%C9": "\u0419", "%CA": "\u041A", "%CB": "\u041B", "%CC": "\u041C", "%CD": "\u041D", "%CE": "\u041E", "%CF": "\u041F", "%D0": "\u0420",
            "%D1": "\u0421", "%D2": "\u0422", "%D3": "\u0423", "%D4": "\u0424", "%D5": "\u0425", "%D6": "\u0426", "%D7": "\u0427", "%D8": "\u0428", "%D9": "\u0429", "%DA": "\u042A",
            "%DB": "\u042B", "%DC": "\u042C", "%DD": "\u042D", "%DE": "\u042E", "%DF": "\u042F", "%E0": "\u0430", "%E1": "\u0431", "%E2": "\u0432", "%E3": "\u0433", "%E4": "\u0434",
            "%E5": "\u0435", "%E6": "\u0436", "%E7": "\u0437", "%E8": "\u0438", "%E9": "\u0439", "%EA": "\u043A", "%EB": "\u043B", "%EC": "\u043C", "%ED": "\u043D", "%EE": "\u043E",
            "%EF": "\u043F", "%F0": "\u0440", "%F1": "\u0441", "%F2": "\u0442", "%F3": "\u0443", "%F4": "\u0444", "%F5": "\u0445", "%F6": "\u0446", "%F7": "\u0447", "%F8": "\u0448",
            "%F9": "\u0449", "%FA": "\u044A", "%FB": "\u044B", "%FC": "\u044C", "%FD": "\u044D", "%FE": "\u044E", "%FF": "\u044F", "%20": " "
        };
        var patt = /(\%[8-9a-fA-F][0-9a-fA-F])/g;
        return str.replace(patt, function (w_char) {
            return w2u[w_char.toUpperCase()];
        });
    }
}, [jQuery, Kontur.Global, Kontur.UrlParameters, Kontur.Cookie, Kontur.Tracker]);
Kontur.Module('Kontur.Urls', function () {
    var siteUrl, portalUrl;

    this.PortalUrl = function () {
        return portalUrl;
    };

    this.SiteUrl = function () {
        return siteUrl;
    };

    this.init = function (params) {
        params = params || {};
        siteUrl = params.siteUrl;
        portalUrl = params.portalUrl;
    };
}, []);
/**
*  Ajax Autocomplete for jQuery, version %version%
*  (c) 2015 Tomas Kirda
*
*  Ajax Autocomplete for jQuery is freely distributable under the terms of an MIT-style license.
*  For details, see the web site: https://github.com/devbridge/jQuery-Autocomplete
*/

/*jslint  browser: true, white: true, plusplus: true, vars: true */
/*global define, window, document, jQuery, exports, require */

// Expose plugin as an AMD module if AMD loader is present:
(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object' && typeof require === 'function') {
        // Browserify
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {
    'use strict';

    var
        utils = (function () {
            return {
                escapeRegExChars: function (value) {
                    return value.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                },
                createNode: function (containerClass) {
                    var div = document.createElement('div');
                    div.className = containerClass;
                    div.style.position = 'absolute';
                    div.style.display = 'none';
                    return div;
                }
            };
        }()),

        keys = {
            ESC: 27,
            TAB: 9,
            RETURN: 13,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40
        };

    function Autocomplete(el, options) {
        var noop = $.noop,
            that = this,
            defaults = {
                ajaxSettings: {},
                autoSelectFirst: false,
                appendTo: document.body,
                serviceUrl: null,
                lookup: null,
                onSelect: null,
                width: 'auto',
                minChars: 1,
                maxHeight: 300,
                deferRequestBy: 0,
                params: {},
                formatResult: Autocomplete.formatResult,
                delimiter: null,
                zIndex: 9999,
                type: 'GET',
                noCache: false,
                onSearchStart: noop,
                onSearchComplete: noop,
                onSearchError: noop,
                preserveInput: false,
                containerClass: 'autocomplete-suggestions',
                tabDisabled: false,
                dataType: 'text',
                currentRequest: null,
                triggerSelectOnValidInput: true,
                preventBadQueries: true,
                lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
                    return suggestion.value.toLowerCase().indexOf(queryLowerCase) !== -1;
                },
                paramName: 'query',
                transformResult: function (response) {
                    return typeof response === 'string' ? $.parseJSON(response) : response;
                },
                showNoSuggestionNotice: false,
                noSuggestionNotice: 'No results',
                orientation: 'bottom',
                forceFixPosition: false
            };

        // Shared variables:
        that.element = el;
        that.el = $(el);
        that.suggestions = [];
        that.badQueries = [];
        that.selectedIndex = -1;
        that.currentValue = that.element.value;
        that.intervalId = 0;
        that.cachedResponse = {};
        that.onChangeInterval = null;
        that.onChange = null;
        that.isLocal = false;
        that.suggestionsContainer = null;
        that.noSuggestionsContainer = null;
        that.options = $.extend({}, defaults, options);
        that.classes = {
            selected: 'autocomplete-selected',
            suggestion: 'autocomplete-suggestion'
        };
        that.hint = null;
        that.hintValue = '';
        that.selection = null;

        // Initialize and set options:
        that.initialize();
        that.setOptions(options);
    }

    Autocomplete.utils = utils;

    $.webSitesAutocomplete = Autocomplete;

    Autocomplete.formatResult = function (suggestion, currentValue) {
        // Do not replace anything if there current value is empty
        if (!currentValue) {
            return suggestion.value;
        }
        
        var pattern = '(' + utils.escapeRegExChars(currentValue) + ')';

        return suggestion.value
            .replace(new RegExp(pattern, 'gi'), '<strong>$1<\/strong>')
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/&lt;(\/?strong)&gt;/g, '<$1>');
    };

    Autocomplete.prototype = {

        killerFn: null,

        initialize: function () {
            var that = this,
                suggestionSelector = '.' + that.classes.suggestion,
                selected = that.classes.selected,
                options = that.options,
                container;

            // Remove autocomplete attribute to prevent native suggestions:
            that.element.setAttribute('autocomplete', 'off');

            that.killerFn = function (e) {
                if ($(e.target).closest('.' + that.options.containerClass).length === 0) {
                    that.killSuggestions();
                    that.disableKillerFn();
                }
            };

            // html() deals with many types: htmlString or Element or Array or jQuery
            that.noSuggestionsContainer = $('<div class="autocomplete-no-suggestion"></div>')
                                          .html(this.options.noSuggestionNotice).get(0);

            that.suggestionsContainer = Autocomplete.utils.createNode(options.containerClass);

            container = $(that.suggestionsContainer);

            container.appendTo(options.appendTo);

            // Only set width if it was provided:
            if (options.width !== 'auto') {
                container.width(options.width);
            }

            // Listen for mouse over event on suggestions list:
            container.on('mouseover.autocomplete', suggestionSelector, function () {
                that.activate($(this).data('index'));
            });

            // Deselect active element when mouse leaves suggestions container:
            container.on('mouseout.autocomplete', function () {
                that.selectedIndex = -1;
                container.children('.' + selected).removeClass(selected);
            });

            // Listen for click event on suggestions list:
            container.on('click.autocomplete', suggestionSelector, function () {
                that.select($(this).data('index'));
                return false;
            });

            that.fixPositionCapture = function () {
                if (that.visible) {
                    that.fixPosition();
                }
            };

            $(window).on('resize.autocomplete', that.fixPositionCapture);

            that.el.on('keydown.autocomplete', function (e) { that.onKeyPress(e); });
            that.el.on('keyup.autocomplete', function (e) { that.onKeyUp(e); });
            that.el.on('blur.autocomplete', function () { that.onBlur(); });
            that.el.on('focus.autocomplete', function () { that.onFocus(); });
            that.el.on('change.autocomplete', function (e) { that.onKeyUp(e); });
            that.el.on('input.autocomplete', function (e) { that.onKeyUp(e); });
        },

        onFocus: function () {
            var that = this;

            that.fixPosition();

            if (that.el.val().length >= that.options.minChars) {
                that.onValueChange();
            }
        },

        onBlur: function () {
            this.enableKillerFn();
        },
        
        abortAjax: function () {
            var that = this;
            if (that.currentRequest) {
                that.currentRequest.abort();
                that.currentRequest = null;
            }
        },

        setOptions: function (suppliedOptions) {
            var that = this,
                options = that.options;

            $.extend(options, suppliedOptions);

            that.isLocal = $.isArray(options.lookup);

            if (that.isLocal) {
                options.lookup = that.verifySuggestionsFormat(options.lookup);
            }

            options.orientation = that.validateOrientation(options.orientation, 'bottom');

            // Adjust height, width and z-index:
            $(that.suggestionsContainer).css({
                'max-height': options.maxHeight + 'px',
                'width': options.width + 'px',
                'z-index': options.zIndex
            });
        },


        clearCache: function () {
            this.cachedResponse = {};
            this.badQueries = [];
        },

        clear: function () {
            this.clearCache();
            this.currentValue = '';
            this.suggestions = [];
        },

        disable: function () {
            var that = this;
            that.disabled = true;
            clearInterval(that.onChangeInterval);
            that.abortAjax();
        },

        enable: function () {
            this.disabled = false;
        },

        fixPosition: function () {
            // Use only when container has already its content

            var that = this,
                $container = $(that.suggestionsContainer),
                containerParent = $container.parent().get(0);
            // Fix position automatically when appended to body.
            // In other cases force parameter must be given.
            if (containerParent !== document.body && !that.options.forceFixPosition) {
                return;
            }

            // Choose orientation
            var orientation = that.options.orientation,
                containerHeight = $container.outerHeight(),
                height = that.el.outerHeight(),
                offset = that.el.offset(),
                styles = { 'top': offset.top, 'left': offset.left };

            if (orientation === 'auto') {
                var viewPortHeight = $(window).height(),
                    scrollTop = $(window).scrollTop(),
                    topOverflow = -scrollTop + offset.top - containerHeight,
                    bottomOverflow = scrollTop + viewPortHeight - (offset.top + height + containerHeight);

                orientation = (Math.max(topOverflow, bottomOverflow) === topOverflow) ? 'top' : 'bottom';
            }

            if (orientation === 'top') {
                styles.top += -containerHeight;
            } else {
                styles.top += height;
            }

            // If container is not positioned to body,
            // correct its position using offset parent offset
            if(containerParent !== document.body) {
                var opacity = $container.css('opacity'),
                    parentOffsetDiff;

                    if (!that.visible){
                        $container.css('opacity', 0).show();
                    }

                parentOffsetDiff = $container.offsetParent().offset();
                styles.top -= parentOffsetDiff.top;
                styles.left -= parentOffsetDiff.left;

                if (!that.visible){
                    $container.css('opacity', opacity).hide();
                }
            }

            if (that.options.width === 'auto') {
                styles.minWidth = that.el.outerWidth() + 'px';
            }

            $container.css(styles);
        },

        enableKillerFn: function () {
            var that = this;
            $(document).on('click.autocomplete', that.killerFn);
        },

        disableKillerFn: function () {
            var that = this;
            $(document).off('click.autocomplete', that.killerFn);
        },

        killSuggestions: function () {
            var that = this;
            that.stopKillSuggestions();
            that.intervalId = window.setInterval(function () {
                if (that.visible) {
                    that.el.val(that.currentValue);
                    that.hide();
                }
                
                that.stopKillSuggestions();
            }, 50);
        },

        stopKillSuggestions: function () {
            window.clearInterval(this.intervalId);
        },

        isCursorAtEnd: function () {
            var that = this,
                valLength = that.el.val().length,
                selectionStart = that.element.selectionStart,
                range;

            if (typeof selectionStart === 'number') {
                return selectionStart === valLength;
            }
            if (document.selection) {
                range = document.selection.createRange();
                range.moveStart('character', -valLength);
                return valLength === range.text.length;
            }
            return true;
        },

        onKeyPress: function (e) {
            var that = this;

            // If suggestions are hidden and user presses arrow down, display suggestions:
            if (!that.disabled && !that.visible && e.which === keys.DOWN && that.currentValue) {
                that.suggest();
                return;
            }

            if (that.disabled || !that.visible) {
                return;
            }

            switch (e.which) {
                case keys.ESC:
                    that.el.val(that.currentValue);
                    that.hide();
                    break;
                case keys.RIGHT:
                    if (that.hint && that.options.onHint && that.isCursorAtEnd()) {
                        that.selectHint();
                        break;
                    }
                    return;
                case keys.TAB:
                    if (that.hint && that.options.onHint) {
                        that.selectHint();
                        return;
                    }
                    if (that.selectedIndex === -1) {
                        that.hide();
                        return;
                    }
                    that.select(that.selectedIndex);
                    if (that.options.tabDisabled === false) {
                        return;
                    }
                    break;
                case keys.RETURN:
                    if (that.selectedIndex === -1) {
                        that.hide();
                        return;
                    }
                    that.select(that.selectedIndex);
                    break;
                case keys.UP:
                    that.moveUp();
                    break;
                case keys.DOWN:
                    that.moveDown();
                    break;
                default:
                    return;
            }

            // Cancel event if function did not return:
            e.stopImmediatePropagation();
            e.preventDefault();
        },

        onKeyUp: function (e) {
            var that = this;

            if (that.disabled) {
                return;
            }

            switch (e.which) {
                case keys.UP:
                case keys.DOWN:
                    return;
            }

            clearInterval(that.onChangeInterval);

            if (that.currentValue.toLowerCase() !== that.el.val().toLowerCase()) {
                that.findBestHint();
                if (that.options.deferRequestBy > 0) {
                    // Defer lookup in case when value changes very quickly:
                    that.onChangeInterval = setInterval(function () {
                        that.onValueChange();
                    }, that.options.deferRequestBy);
                } else {
                    that.onValueChange();
                }
            }
        },

        onValueChange: function () {
            var that = this,
                options = that.options,
                value = that.el.val(),
                query = that.getQuery(value);

            if (that.selection && that.currentValue !== query) {
                that.selection = null;
                (options.onInvalidateSelection || $.noop).call(that.element);
            }

            clearInterval(that.onChangeInterval);
            that.currentValue = value;
            that.selectedIndex = -1;

            // Check existing suggestion for the match before proceeding:
            if (options.triggerSelectOnValidInput && that.isExactMatch(query)) {
                that.select(0);
                return;
            }

            if (query.length < options.minChars) {
                that.hide();
            } else {
                that.getSuggestions(query);
            }
        },

        isExactMatch: function (query) {
            var suggestions = this.suggestions;

            return (suggestions.length === 1 && suggestions[0].value.toLowerCase() === query.toLowerCase());
        },

        getQuery: function (value) {
            var delimiter = this.options.delimiter,
                parts;

            if (!delimiter) {
                return value;
            }
            parts = value.split(delimiter);
            return $.trim(parts[parts.length - 1]);
        },

        getSuggestionsLocal: function (query) {
            var that = this,
                options = that.options,
                queryLowerCase = query.toLowerCase(),
                filter = options.lookupFilter,
                limit = parseInt(options.lookupLimit, 10),
                data;

            data = {
                suggestions: $.grep(options.lookup, function (suggestion) {
                    return filter(suggestion, query, queryLowerCase);
                })
            };

            if (limit && data.suggestions.length > limit) {
                data.suggestions = data.suggestions.slice(0, limit);
            }

            return data;
        },

        getSuggestions: function (q) {
            var response,
                that = this,
                options = that.options,
                serviceUrl = options.serviceUrl,
                params,
                cacheKey,
                ajaxSettings;

            options.params[options.paramName] = q;
            params = options.ignoreParams ? null : options.params;

            if (options.onSearchStart.call(that.element, options.params) === false) {
                return;
            }

            if ($.isFunction(options.lookup)){
                options.lookup(q, function (data) {
                    that.suggestions = data.suggestions;
                    that.suggest();
                    options.onSearchComplete.call(that.element, q, data.suggestions);
                });
                return;
            }

            if (that.isLocal) {
                response = that.getSuggestionsLocal(q);
            } else {
                if ($.isFunction(serviceUrl)) {
                    serviceUrl = serviceUrl.call(that.element, q);
                }
                cacheKey = serviceUrl + '?' + $.param(params || {});
                response = that.cachedResponse[cacheKey];
            }

            if (response && $.isArray(response.suggestions)) {
                that.suggestions = response.suggestions;
                that.suggest();
                options.onSearchComplete.call(that.element, q, response.suggestions);
            } else if (!that.isBadQuery(q)) {
                that.abortAjax();

                ajaxSettings = {
                    url: serviceUrl,
                    data: params,
                    type: options.type,
                    dataType: options.dataType
                };

                $.extend(ajaxSettings, options.ajaxSettings);

                that.currentRequest = $.ajax(ajaxSettings).done(function (data) {
                    var result;
                    that.currentRequest = null;
                    result = options.transformResult(data, q);
                    that.processResponse(result, q, cacheKey);
                    options.onSearchComplete.call(that.element, q, result.suggestions);
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    options.onSearchError.call(that.element, q, jqXHR, textStatus, errorThrown);
                });
            } else {
                options.onSearchComplete.call(that.element, q, []);
            }
        },

        isBadQuery: function (q) {
            if (!this.options.preventBadQueries){
                return false;
            }

            var badQueries = this.badQueries,
                i = badQueries.length;

            while (i--) {
                if (q.indexOf(badQueries[i]) === 0) {
                    return true;
                }
            }

            return false;
        },

        hide: function () {
            var that = this,
                container = $(that.suggestionsContainer);

            if ($.isFunction(that.options.onHide) && that.visible) {
                that.options.onHide.call(that.element, container);
            }

            that.visible = false;
            that.selectedIndex = -1;
            clearInterval(that.onChangeInterval);
            $(that.suggestionsContainer).hide();
            that.signalHint(null);
        },

        suggest: function () {
            if (this.suggestions.length === 0) {
                if (this.options.showNoSuggestionNotice) {
                    this.noSuggestions();
                } else {
                    this.hide();
                }
                return;
            }

            var that = this,
                options = that.options,
                groupBy = options.groupBy,
                formatResult = options.formatResult,
                value = that.getQuery(that.currentValue),
                className = that.classes.suggestion,
                classSelected = that.classes.selected,
                container = $(that.suggestionsContainer),
                noSuggestionsContainer = $(that.noSuggestionsContainer),
                beforeRender = options.beforeRender,
                html = '',
                category,
                formatGroup = function (suggestion, index) {
                        var currentCategory = suggestion.data[groupBy];

                        if (category === currentCategory){
                            return '';
                        }

                        category = currentCategory;

                        return '<div class="autocomplete-group"><strong>' + category + '</strong></div>';
                    };

            if (options.triggerSelectOnValidInput && that.isExactMatch(value)) {
                that.select(0);
                return;
            }

            // Build suggestions inner HTML:
            $.each(that.suggestions, function (i, suggestion) {
                if (groupBy){
                    html += formatGroup(suggestion, value, i);
                }

                html += '<div class="' + className + '" data-index="' + i + '">' + formatResult(suggestion, value, i) + '</div>';
            });

            this.adjustContainerWidth();

            noSuggestionsContainer.detach();
            container.html(html);

            if ($.isFunction(beforeRender)) {
                beforeRender.call(that.element, container, that.suggestions);
            }

            that.fixPosition();
            container.show();

            // Select first value by default:
            if (options.autoSelectFirst) {
                that.selectedIndex = 0;
                container.scrollTop(0);
                container.children('.' + className).first().addClass(classSelected);
            }

            that.visible = true;
            that.findBestHint();
        },

        noSuggestions: function() {
             var that = this,
                 container = $(that.suggestionsContainer),
                 noSuggestionsContainer = $(that.noSuggestionsContainer);

            this.adjustContainerWidth();

            // Some explicit steps. Be careful here as it easy to get
            // noSuggestionsContainer removed from DOM if not detached properly.
            noSuggestionsContainer.detach();
            container.empty(); // clean suggestions if any
            container.append(noSuggestionsContainer);

            that.fixPosition();

            container.show();
            that.visible = true;
        },

        adjustContainerWidth: function() {
            var that = this,
                options = that.options,
                width,
                container = $(that.suggestionsContainer);

            // If width is auto, adjust width before displaying suggestions,
            // because if instance was created before input had width, it will be zero.
            // Also it adjusts if input width has changed.
            // -2px to account for suggestions border.
            if (options.width === 'auto') {
                width = that.el.outerWidth() - 2;
                container.css({
                    minWidth: (width > 0 ? width : 300)
                });
            }
        },

        findBestHint: function () {
            var that = this,
                value = that.el.val().toLowerCase(),
                bestMatch = null;

            if (!value) {
                return;
            }

            $.each(that.suggestions, function (i, suggestion) {
                var foundMatch = suggestion.value.toLowerCase().indexOf(value) === 0;
                if (foundMatch) {
                    bestMatch = suggestion;
                }
                return !foundMatch;
            });

            that.signalHint(bestMatch);
        },

        signalHint: function (suggestion) {
            var hintValue = '',
                that = this;
            if (suggestion) {
                hintValue = that.currentValue + suggestion.value.substr(that.currentValue.length);
            }
            if (that.hintValue !== hintValue) {
                that.hintValue = hintValue;
                that.hint = suggestion;
                (this.options.onHint || $.noop)(hintValue);
            }
        },

        verifySuggestionsFormat: function (suggestions) {
            // If suggestions is string array, convert them to supported format:
            if (suggestions.length && typeof suggestions[0] === 'string') {
                return $.map(suggestions, function (value) {
                    return { value: value, data: null };
                });
            }

            return suggestions;
        },

        validateOrientation: function(orientation, fallback) {
            orientation = $.trim(orientation || '').toLowerCase();

            if($.inArray(orientation, ['auto', 'bottom', 'top']) === -1){
                orientation = fallback;
            }

            return orientation;
        },

        processResponse: function (result, originalQuery, cacheKey) {
            var that = this,
                options = that.options;

            result.suggestions = that.verifySuggestionsFormat(result.suggestions);

            // Cache results if cache is not disabled:
            if (!options.noCache) {
                that.cachedResponse[cacheKey] = result;
                if (options.preventBadQueries && result.suggestions.length === 0) {
                    that.badQueries.push(originalQuery);
                }
            }

            // Return if originalQuery is not matching current query:
            if (originalQuery !== that.getQuery(that.currentValue)) {
                return;
            }

            that.suggestions = result.suggestions;
            that.suggest();
        },

        activate: function (index) {
            var that = this,
                activeItem,
                selected = that.classes.selected,
                container = $(that.suggestionsContainer),
                children = container.find('.' + that.classes.suggestion);

            container.find('.' + selected).removeClass(selected);

            that.selectedIndex = index;

            if (that.selectedIndex !== -1 && children.length > that.selectedIndex) {
                activeItem = children.get(that.selectedIndex);
                $(activeItem).addClass(selected);
                return activeItem;
            }

            return null;
        },

        selectHint: function () {
            var that = this,
                i = $.inArray(that.hint, that.suggestions);

            that.select(i);
        },

        select: function (i) {
            var that = this;
            that.hide();
            that.onSelect(i);
        },

        moveUp: function () {
            var that = this;

            if (that.selectedIndex === -1) {
                return;
            }

            if (that.selectedIndex === 0) {
                $(that.suggestionsContainer).children().first().removeClass(that.classes.selected);
                that.selectedIndex = -1;
                that.el.val(that.currentValue);
                that.findBestHint();
                return;
            }

            that.adjustScroll(that.selectedIndex - 1);
        },

        moveDown: function () {
            var that = this;

            if (that.selectedIndex === (that.suggestions.length - 1)) {
                return;
            }

            that.adjustScroll(that.selectedIndex + 1);
        },

        adjustScroll: function (index) {
            var that = this,
                activeItem = that.activate(index);

            if (!activeItem) {
                return;
            }

            var offsetTop,
                upperBound,
                lowerBound,
                heightDelta = $(activeItem).outerHeight();

            offsetTop = activeItem.offsetTop;
            upperBound = $(that.suggestionsContainer).scrollTop();
            lowerBound = upperBound + that.options.maxHeight - heightDelta;

            if (offsetTop < upperBound) {
                $(that.suggestionsContainer).scrollTop(offsetTop);
            } else if (offsetTop > lowerBound) {
                $(that.suggestionsContainer).scrollTop(offsetTop - that.options.maxHeight + heightDelta);
            }

            if (!that.options.preserveInput) {
                that.el.val(that.getValue(that.suggestions[index].value));
            }
            that.signalHint(null);
        },

        onSelect: function (index) {
            var that = this,
                onSelectCallback = that.options.onSelect,
                suggestion = that.suggestions[index];

            that.currentValue = that.getValue(suggestion.value);

            if (that.currentValue !== that.el.val() && !that.options.preserveInput) {
                that.el.val(that.currentValue);
            }

            that.signalHint(null);
            that.suggestions = [];
            that.selection = suggestion;

            if ($.isFunction(onSelectCallback)) {
                onSelectCallback.call(that.element, suggestion);
            }
        },

        getValue: function (value) {
            var that = this,
                delimiter = that.options.delimiter,
                currentValue,
                parts;

            if (!delimiter) {
                return value;
            }

            currentValue = that.currentValue;
            parts = currentValue.split(delimiter);

            if (parts.length === 1) {
                return value;
            }

            return currentValue.substr(0, currentValue.length - parts[parts.length - 1].length) + value;
        },

        dispose: function () {
            var that = this;
            that.el.off('.autocomplete').removeData('autocomplete');
            that.disableKillerFn();
            $(window).off('resize.autocomplete', that.fixPositionCapture);
            $(that.suggestionsContainer).remove();
        }
    };

    // Create chainable jQuery plugin:
    $.fn.webSitesAutocomplete = $.fn.devbridgeAutocomplete = function (options, args) {
        var dataKey = 'autocomplete';
        // If function invoked without argument return
        // instance of the first matched element:
        if (arguments.length === 0) {
            return this.first().data(dataKey);
        }

        return this.each(function () {
            var inputElement = $(this),
                instance = inputElement.data(dataKey);

            if (typeof options === 'string') {
                if (instance && typeof instance[options] === 'function') {
                    instance[options](args);
                }
            } else {
                // If instance already exists, destroy it:
                if (instance && instance.dispose) {
                    instance.dispose();
                }
                instance = new Autocomplete(this, options);
                inputElement.data(dataKey, instance);
            }
        });
    };
}));

var Kontur = Kontur || {};

Kontur.OrganizationSuggest = function ($) {
    var innInput,
        kppInput,
        innKppContainer,
        regionSelect,
        organizationInput,
        autocompleteInput,
        options,
        focusLink,
        obtainAutocompleteWithThrottle,
        defaultParams = {
        autocompleteFunctionName: 'webSitesAutocomplete',
        suggestContainerClass: 'organization-suggest-container',
        suggestZIndex: 15001,
        suggestMaxCount: 5,
        minChars: 3,
        preloader: {},
        onOrganizationSelected: function onOrganizationSelected() {}
    },
        module = {};

    var keys = {
        ESC: 27,
        BACKSPACE: 8,
        TAB: 9,
        RETURN: 13,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40
    };

    module.initialize = function (params) {
        options = $.extend({}, defaultParams, params);

        if (!validateOptions(options)) {
            return;
        }

        obtainAutocompleteWithThrottle = throttle(obtainAutocomplete, 1000);

        bindElements(options);
        bindEvents();
    };

    module.IsInnKppFillAuto = function () {
        return innKppContainer && innKppContainer.length && innKppContainer.data('is-autocomplete-fill') === true;
    };

    function validateOptions(options) {
        return options.form && options.form.length && options.suggestUrl && options.autocompleteUrl;
    }

    function bindElements(options) {
        innInput = options.form.find('.js-inn-input');
        kppInput = options.form.find('.js-kpp-input');
        innKppContainer = options.form.find('.js-inn-kpp-container');
        regionSelect = options.form.find('.js-region-select');
        organizationInput = options.form.find('.js-organization-input');
        autocompleteInput = options.form.find('.js-organization-autocomplete-input');
        focusLink = options.form.find('.js-focus-link');
    }

    function bindEvents() {
        bindOrganizationInput();
        proxyEventsToAutocomplete();
        initSuggest(getSuggestOptions());

        innKppContainer.on('change', 'input', function () {
            innKppContainer.data('is-autocomplete-fill', false);
        });
    };

    function bindOrganizationInput() {
        organizationInput.on('keyup', function (e) {
            var autocompleteValue = autocompleteInput.val(),
                inputValue = organizationInput.val();

            if ($.inArray(e.keyCode, [keys.UP, keys.DOWN, keys.ESC, keys.RIGHT]) !== -1 && autocompleteValue) {
                copyAutoCompleteToOrganizationInput();
                return;
            }

            if (inputValue.length <= options.minChars) {
                autocompleteInput.val('');
                return;
            }

            if (isSubstring(inputValue, autocompleteValue)) {
                var value = inputValue + autocompleteValue.substring(inputValue.length);
                autocompleteInput.val(value);
                if (e.keyCode !== keys.BACKSPACE) {
                    return;
                }
            }

            obtainAutocompleteWithThrottle(inputValue);
        });
    }

    function obtainAutocomplete(inputValue) {
        autocompleteInput.val('');
        $.post(options.autocompleteUrl, { query: inputValue }, function (data) {
            if (data.OrganizationFound) {
                autocompleteInput.val(data.Organization);
            } else {
                autocompleteInput.val(inputValue);
            }
            autocompleteInput.change();
        });
    }

    function getSuggestOptions() {
        return {
            target: autocompleteInput,
            url: options.suggestUrl,
            transform: function transform(item) {
                return {
                    value: item.Title || '',
                    data: {
                        address: item.Address,
                        title: item.Title || '',
                        inn: item.Inn,
                        kpp: item.Kpp,
                        titleLong: item.TitleLong,
                        addressOriginal: item.AddressOriginal
                    }
                };
            },
            select: function select(item) {
                copyAutoCompleteToOrganizationInput();
                organizationInput.change().valid();

                innInput.val(item.inn).change().valid();

                kppInput.val(item.kpp).change().valid();

                if (typeof options.onOrganizationSelected === 'function') {
                    options.onOrganizationSelected(item);
                }

                innKppContainer.data('is-autocomplete-fill', true);
            },
            autocompleteFunctionName: options.autocompleteFunctionName,
            containerClass: options.suggestContainerClass,
            zIndex: options.suggestZIndex,
            preloader: options.preloader,
            suggestMaxCount: options.suggestMaxCount
        };
    }

    function initSuggest(options) {
        options.target[options.autocompleteFunctionName]({
            autoSelectFirst: true,
            serviceUrl: options.url,
            minChars: options.minChars,
            dataType: 'json',
            zIndex: options.zIndex,
            maxHeight: 800,
            tabDisabled: true,
            preventBadQueries: false,
            triggerSelectOnValidInput: false,
            noCache: true,
            type: 'POST',
            containerClass: options.containerClass,
            params: {
                count: options.suggestMaxCount,
                regionId: regionSelect.val()
            },
            onSearchStart: function onSearchStart(params) {
                params.regionId = regionSelect.val();
                preloaderShow(options.target);
            },
            onSearchComplete: function onSearchComplete() {
                preloaderHide(options.target);
            },
            transformResult: function transformResult(response) {
                return {
                    suggestions: $.map(response, function (item) {
                        return options.transform(item);
                    })
                };
            },
            formatResult: function formatResult(item) {
                return item.data.title + '<br><small>' + item.data.address + '</small>';
            },
            onSelect: function onSelect(item) {
                options.select(item.data);
            }
        });
    }

    function isSubstring(inputValue, autocompleteValue) {
        var inputValueLow = inputValue.toLowerCase();
        var autocompleteValueLow = autocompleteValue.toLowerCase();
        return inputValue && autocompleteValueLow.indexOf(inputValueLow) !== -1;
    }

    function proxyEventsToAutocomplete() {
        organizationInput.on("keydown keyup blur change", function (e) {
            autocompleteInput.trigger(e);
        });
    }

    function isTypedCharacter(keyCode) {
        return keyCode > 47 && keyCode < 58 || // number keys
        keyCode === 32 || keyCode === 13 || // spacebar & return key(s)
        keyCode === 46 || keyCode === 8 || // delete & backspace
        keyCode > 64 && keyCode < 91 || // letter keys
        keyCode > 95 && keyCode < 112 || // numpad keys
        keyCode > 185 && keyCode < 193 || // ;=,-./` (in order)
        keyCode > 218 && keyCode < 223; // [\]' (in order)
    }

    function copyAutoCompleteToOrganizationInput() {
        organizationInput.val(autocompleteInput.val());
    }

    function preloaderShow($el) {
        $el.closest('.organization-suggest-preloader').addClass('organization-suggest-preloader_show');
    }

    function preloaderHide($el) {
        $el.closest('.organization-suggest-preloader').removeClass('organization-suggest-preloader_show');
    }

    function throttle(func, ms) {

        var isThrottled = false,
            savedArgs,
            savedThis;

        function wrapper() {

            if (isThrottled) {
                savedArgs = arguments;
                savedThis = this;
                return;
            }

            func.apply(this, arguments);

            isThrottled = true;

            setTimeout(function () {
                isThrottled = false;
                if (savedArgs) {
                    wrapper.apply(savedThis, savedArgs);
                    savedArgs = savedThis = null;
                }
            }, ms);
        }

        return wrapper;
    }

    return module;
}(jQuery);
//# sourceMappingURL=maps/main.js.map
;
